{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1f3d45f8-bce9-48aa-a60b-c7b3a5ccb777",
        "name": "Clear Cache",
        "item": [
          {
            "id": "16aefacf-c508-4c83-b62b-c39ec31182c8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "23e6d68c-3d38-4013-90c3-7c8e3c2ca8d0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6dff6a72-5242-4b02-a5a6-81e1db7361a5"
                }
              }
            ]
          },
          {
            "id": "b857fb29-c214-440d-8dc4-141045d85f8a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "585cdcde-726b-4e7a-a4b0-026470e98fb3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "42ff608a-96e5-4882-aedf-6859684c645d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4240925e-1e68-4817-a5f1-b0af51ea1d80",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "66587a9c-a991-44a2-85c1-807cfe2fcbb5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "630bcfeb-9edc-4764-9e91-f1c8a94e142b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "172202c7-2743-4fed-b7d3-3f6dfe06d505",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "169a8710-0110-4414-89bb-0b6335b1b4b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8144baca-8c93-4549-a5e0-23d7ffea1316",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a70248a6-a342-4495-96ae-adf173fa1cf7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96546d9c-83be-4cf4-9f4c-3d6510f06393",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e503e132-2d11-4560-a2cc-5cae030bf7f3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "106932d5-33da-4215-9a8c-7f021b12d363",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "15051271-63d8-4092-ba34-fe4a7d1422aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88b9420c-88ae-4748-b107-b4f04a043adf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "166720b4-dce5-4dd7-bdde-2855eb8289e8"
            }
          }
        ]
      },
      {
        "id": "50174633-750c-4689-8704-28608876bc8d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f3cc88a2-1eaf-45c9-a0fb-40f4b3b85eb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0ee2f61-140d-4364-812c-e0b826c488b9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c562ada2-ef20-4697-9cca-ad0eb3189bd2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97be1f5-1db8-46ad-915e-003333d50844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7992e32a-59d6-4cd9-ab0e-19bc6f8f49b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537d6c26-876d-461f-a7d4-55ccec9987f8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821635fd-a562-439c-aa5f-6d29b94f4bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd7b3347-651d-4d0e-ad2f-47358e0ea1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f899117c-d1ce-4028-b349-45c384d1b264",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba67d728-47f9-488e-a203-4dbab837ee49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5725f4f-3c93-476f-826a-9ddee48934a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e6817ee2-cb0c-4970-8ed1-8423cbce1ac3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6cbb0a75-67c3-4620-a35d-32b3e877141e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5cf505-6146-4175-aaf9-85c557fc797f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63b9fb63-885c-49dd-bd4d-362eb98549c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f25974d-1e4d-40fb-997a-69d42045cad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3cfbbff-5a9b-457a-ab68-c699883e0803"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5c24d5e1-a5c0-4f8e-aff6-9ac738795cd1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0aecd82f-a924-4fab-962c-eb2ce12fe815",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce74811c-41a8-45ac-84fc-0a150120f617",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "41985823-162c-4bc6-bdab-557d5fdaca15"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76af4411-cdb2-494c-b16f-b1c29882b58a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2477f7d5-6458-4089-aa24-38b1bb96ee46"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a934337-1ecf-4678-8065-aaae7fe449b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68411617-6430-4858-992a-8b11e40d41dc"
            }
          }
        ]
      },
      {
        "id": "04688be0-5d76-4fc3-aa92-764db36ea567",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4355f828-c39f-4c27-9c7b-86a98655a0f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f605cd1f-4b9d-4b8f-93e5-8d7bfd32c407",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ef770679-fc53-4398-a99a-16f86cc3dc92",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0ebb5d-5dc2-4572-add5-82f3aab40a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba2b77a-23b3-4f24-bcbd-11c6d5585924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d90f79-d7d9-46ae-b9b8-3b9f7cd8f64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d91ed6a7-23b4-4f4a-8fe7-a33018862462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51efa576-3086-41e2-a3ad-1b3d2496b011",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32757ad6-a230-41c3-ab8c-8aac14772f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d729f5a-9c83-4a95-9b5c-fdc6a7518ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2df13e-cf04-49a3-b7a1-f543723e3f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f2f15ef-1989-4fe8-8e65-85dfc8f4e99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa9f8cb-73da-41df-8dc7-72da5dd27a75",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559d9914-234f-40d1-b395-92f0f1013753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045c7de8-7c73-49c1-bb95-d02ea528f17e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcad238-b84b-4eb5-84d6-d945e334ad9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "588b1883-3029-43f1-ba20-d94dabaea3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8693d399-c548-4b4e-8e72-6154b0e54de9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bc9b9a-7cc1-4b96-8e29-9608a1c1db26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe964b47-ca84-4015-8554-6bd58094ad95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42b2b23-e308-479c-920f-f758b31526a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ec882c5-44eb-4b29-8d50-ab1fce9d0b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1debddd6-9632-47da-b3fd-e446f9fba1ce",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac222c1-a281-4a01-934d-3feca58f61be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b257a1ec-c32f-4a52-beb0-7422707b694f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e0e160-f684-43f4-ba3e-89921b5516cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36f13692-7094-4a5a-b3c8-56ca350dde3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8631bc-6bce-4243-af3e-95c089118bcf",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf95cb3-81a5-48ae-ba8d-29a6c6d66f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c946202-d8e2-4c80-b293-408e5e8e112d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af65f783-e78b-4df9-82ee-fc545befb8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d52c2397-3a37-4c4e-83ef-187816b1c284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8740884-2992-4ddc-8a11-4e2e123451fc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7914823-567b-483c-8a97-3a9da56c4d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75bcf67c-bb7a-4784-9b16-86013c3d3e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa52a69-84c7-4451-84be-a91837aed640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f8553a2-ff14-4027-b2b4-3ca07c64bfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd4788a-25d4-4309-8e2a-cec367279d30",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573ba817-22bf-43df-b582-7f76dc2a9804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cd2316-338f-4698-a185-05afa6f2b582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873fee49-2363-4c51-9b30-4c0fbb7c3c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29c84f1c-af13-4ee4-ae29-347a501aa2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c673d3c-32dc-479a-b5d2-3999f0dd892b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37405893-38a4-4634-b4cb-ad5420116a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984a0589-f7d6-49d2-9e1a-3447c5c0a8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b074090-a940-44d5-bd79-10aa1a17da0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01bea4bf-c7b4-4145-add7-6aac4deb253b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155c3e4e-9547-4831-9cc1-e94938acae9a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8156e0e1-aa9c-4164-b824-8d36fd596b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acda33d2-7d8c-4463-85f4-c44f118aaf88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889872b9-16d8-40de-a6a0-b76e275a04fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1edfbb60-a7d3-4bb1-8adc-61e36121661b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017a3c35-40be-4bca-9815-6dc7c3ed2e08",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a3cc24-2bdd-4005-8bc4-f2f202e9210d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08319d5b-92d6-41a7-8a75-96844ce2fa64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d15c70-c78e-44ba-a33b-fd4b2e5dbc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "847b8d2d-3df8-4609-9bb2-fc1e7f4a254d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad91da8-e4ac-4719-befc-10a2d3ff102d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e57490-348f-4b71-a3a1-1fb9e0cf6b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c037d143-a724-443b-9ea0-de1b1cb14f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529c3861-c806-4cb3-ba97-ba7a868c294c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3494c566-05e8-4be2-b02d-72599ba6fca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1636ca51-dc6a-43a2-95e4-926d98f6a326",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79405a60-89e9-465c-859a-6cc54cdd7590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc62e1e-9c4b-4afe-b31f-0b1575b0e6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236412e1-03c3-4df4-a66a-51b1ff1fb78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ba16ae7-a61f-4596-88ba-06f9d9dbccde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f61a8ae-5f11-4c6b-be89-060070b0eb05",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32cdd7d-d480-405b-9436-add25a031747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866b7846-6561-455e-9202-eca1c922db5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a946ad6b-05d7-4dab-9230-2cc1c0234e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fca0af89-050d-46a3-a474-2a62822448df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85b834f-d8b4-4f51-8806-1a134a605670",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17d8ba5-a286-4deb-955c-40c92063a954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c93e87-f48a-4a4f-a4eb-79e33ee26027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5de3eff-3ed1-4659-93ca-2e1adced9497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "124f0388-45e4-4fc3-9ca0-9b9aacc88ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23dc17a5-8fda-4928-93dc-ee9e06caf51f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dde86cb-678e-4585-9d09-58b1886b65f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bf326b-329e-4477-859e-7de8f9c826af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e5f1ce-1317-48bc-bb17-b8abfde8ffa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "692c6162-65a4-44db-b7d0-ed5ace4fd83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e5a98f-a060-42df-bbb5-4c9f4fafae79",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cce1ce6-b39e-413c-bd65-10cebdabc4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2028fbd-5603-43f0-b3a0-1e8401d10c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11164b9b-8c17-4165-ad73-61adffa361e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b68e694-14d7-47e6-8c92-21550c35678a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d575398-74c4-4b34-a9fa-f9554ce0fcea",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f39654-8f63-4c4a-9a2b-79521c7ce45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0fee69-99cf-43eb-b0f9-8e11961b057a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f15739-9ef4-400d-9e96-03b6c87562c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9fbe2a-a3ae-414c-b5a6-0e8b27263e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fe93e3-9b52-4103-b335-d8dd004ea262",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f548e6-9844-445a-b478-8f9da68079ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641fea03-d282-4ebc-bc77-bf5889a7f57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be043f2e-ddc6-437d-b19d-19259e597f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70c6df26-c763-4751-a769-f002eda95577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18df7be6-3b8f-42fd-a323-464fa6616283",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5a47db-57ff-4203-9740-70fc72126ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17cad2e5-2e41-414f-98d3-06610c5d5992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a94e94-db81-49bf-83d1-ed5adc46e7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b05ab4c-77a6-48fb-b331-39243d48896a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730f1dcf-4554-4e27-a54c-0550c9f5d233",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18589e9b-c29d-4583-9a4e-cec068a2b931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78940cfb-e070-4fe5-a180-16bf22d6917e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6039f123-1d1d-498c-bd91-35f214517817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e22fcd7-0cbf-4389-b997-8ba9536dd3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b206820d-6035-429f-b9e3-036a7b394dbc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0452a99-6880-46ab-8930-b12c8140b171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b115b2a-7db5-46d9-9bf4-bde957952fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa530fc4-d3a8-44a9-a85a-190560179b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7fb9eb6-4054-40b8-a463-95bb958443be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d7dfb1-0a9e-4955-88e3-9a4e897885d9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba48012-bcda-42c0-a4ff-639670d6132d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85fc5c9a-4e55-4651-af2f-22750c7a24af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd34e2a9-0333-42d5-bb5f-dfafe8c581f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5ae1eb-d6fa-41e5-b056-5ac0caa97119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37441bcf-9f8c-40af-a108-89d25e788e01",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3712c6a-7aa2-4386-a958-db7fbc9bc06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b623cf4-b1e7-408e-97b6-2d2ed94d5355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b4d38c-8e41-492a-afe2-2169a1ad2cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "52dcc0aa-5fdf-4eeb-a1c6-4916ed98cd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06384ac-1f6f-432e-aafb-8e991c4520cf",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dd04ae-dff6-4b62-a5f8-8a05380c3601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07778068-5d0c-4bbf-955d-5eeb243c56ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688494a9-75b3-49fb-9907-2e2aa591a988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82197685-07a6-4d21-a584-91bfa1a412e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52e3a39-6573-4cfe-90dd-2b348324998e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ceaf65-ff66-4c7c-93ca-a19a6fe25c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77711ed6-c630-4917-954a-cad57929e4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5604c03c-2a66-428a-be5e-1a7073f35f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96786993-1cf4-4794-8156-a29b9b02b630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addf187c-228e-47e1-abf2-29939e57b299",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50461ea0-0ff3-4b4f-9b7d-7781092a0dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637d8d7d-01db-4b80-afde-33c04f476bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f9c0bb-61d3-4ecf-85b6-94effeab60c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7737fb67-39dd-418e-9828-33926c95b8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec390733-feaf-45a8-961c-ea62d7a8ce83",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a9dd54-48b7-4bad-8669-49247d4f4c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99bbd67b-1a01-4228-96e5-a91dc1bb18a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13863807-c5fa-46d9-856c-337b715055a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e7037a-2f60-4812-a450-c5d670803461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9becd2c-cf68-4dde-8957-16aeae8b542f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d1e959-5325-4598-929b-1f30ab7b5248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a7588b-40a9-47b1-b571-5e751a848859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbafd103-25af-4b8f-a0c0-d097b18b8c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79972a41-2493-4b2c-9d75-ad06c243cecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e0a667-ce20-43bc-aede-f2429ca6c3ef",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c181ee4-951c-4f98-8c1b-cbe31a4a5aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aded6086-facb-43fc-a0d3-b49e7dcbf8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf4726d-396d-466e-b13f-3f622ec6b50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad4c326-0db1-4b18-98c0-3d073f3a913d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1aa01a-533b-4181-a611-7e396557be8c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e30c004-3d10-47ff-ab26-0d89457b23ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d2caaf-fc3a-4804-b979-e3393c6ac332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3f03a2-c7c8-4a87-ba5a-e368d2efff5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "69fe961e-8202-41e1-8c45-7abfb6e6042e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2ab479-6322-47a8-8991-4b52943a216b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c548096-3a83-43e3-9808-20a2eac30d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd7bb2a-4795-467c-9a12-7d9cd2db5003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490477fe-2d14-404e-936d-5d693e92d3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "832b6f26-8a9c-456d-8851-598ce2a72d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259ed3f1-aef0-4d41-a0bf-50d7140ab3be",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c865f599-02cf-4750-9d7f-1bf3518973e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f96e37-e857-41da-a2e4-ed41adc67866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08006ff9-f807-44ee-8d4a-8906cf081408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b06296cc-23c4-4979-b526-cdf3098e9382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35a7a2d-4ea2-47c3-b302-67577881a5a1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6dd778-fd8e-44af-84f2-806fd9cc8683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38f3ae1-b055-4b22-b7b9-f435aab66ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebff452-1ce1-4ab2-8315-c035f745cf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e3caa1-d3e1-483e-9684-6a042da7cf7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2257e3bf-e4e1-4b61-80d3-6a042e96e200",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f549dfc-a243-4662-a01a-d23c52ec6444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60484a13-c02a-42c0-93e7-66c14aaca5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a47df9-d369-4d4b-8c21-9d4f6ef5fb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "842907d5-9cea-42f5-a924-ff153100a84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2423dcb-3202-4c9a-ae1b-156c5a89caa7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85a15f3-20fe-45ac-95d1-54da0a6f9f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41ad6646-f9f1-4f30-b181-7f74bda3805d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f7e7be-3783-4c80-96ae-a5ac068b8c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55c356b9-5a33-467b-b812-5685c7ad778b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78468bbe-9f8e-4f08-9f67-ec2907bb6d7d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c87039-35e1-49d9-a566-c66f3a88df69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d85880a-453c-41a3-a9d6-6218652dcbee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b54742d-72c9-4c5c-8f34-2fb882b15893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46efb9fd-e778-4957-8d52-5ab38b783653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facc3610-a37d-4fc5-980b-8f0cd89243aa",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac319ef-08fb-4231-a6f0-5ea294a70dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc43915-3910-4d41-b54e-c5f6f6fb349e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51384849-b147-461b-81d7-e5b54b570aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec751cb-f740-4caf-8d37-920c1fff3192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17be84ff-7c44-4d71-b140-5137a3133681",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b648d1-2dac-4b7c-aa2f-61ddd02123a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af2f500-e882-43c1-9e97-028e6a7f6cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3eb361c-a735-4de0-b137-284667b6302c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "999dd86a-dce3-42ab-8aad-9d9ce997be26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a4fe98-2b1c-4b2c-a693-d4983cee7cf9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4618827e-7251-422e-a7c7-a30393ec25f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f270ddb-483a-4a69-b32e-a6dc2a76d99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02aaff5-43e2-49d2-ac8c-7ac34a68cd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4435bf56-2930-40ea-835b-348777477428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7d874d-5232-461b-be85-f11ce7963572",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7082bb4e-7ebd-402c-a81d-a2b8ea1a5fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f677327-a1f3-4f68-a8c3-3254617f1d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933132c0-1a69-4332-8a9b-f2e5397206d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "923584d9-56d7-4903-9bae-b51eaaad9b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587689a6-2235-47fc-ab0e-0d842d48314a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622e46a2-69f0-4812-b944-cedecd9fffce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca2dd32-3744-408d-aaab-88009bda3aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60170492-c4ee-4ab7-a276-4a6ed9b960de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b23dda22-6651-4175-a333-458debba8e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843e34b1-3709-4d54-a20a-134e749a2f15",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7d04f8-8a05-4761-924d-b24e17a928fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c2250c-b6b1-42ec-8aea-f6b6eadac26f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cbdbce-ba49-4bac-96f7-fcc462d5d65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e75cb31-d891-4020-8715-feb0297fa3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef3a327-09ae-43d4-b4ab-d98bfeca459b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7a1520-5271-4046-9807-56700ace28f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dae26a5-5f31-4f4a-b116-f434a7742367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b555bd14-b322-46ce-8a8f-2669d45cb708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "df5747b8-c012-4720-b763-014ab047491a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7080dbfb-0f70-4341-babb-37c58bc1adf6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef348082-2806-4ed8-a06c-ce2ae8158b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88406bac-9aaf-41ce-a001-b203b78296c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c240568-0e1b-4f07-860d-f823f260d8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a78597-6cb0-4f5b-801e-031a2da1436a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1933ac8-d93c-49c5-9450-a0696c9aaedd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e51bfdc-29cc-4d69-8b72-c67ae4086eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06fe3556-97a7-4b47-9617-f17607fd94d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d284e58-d9de-469d-ace2-fafffd1946ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "701b84cb-7a3d-4d5e-9785-1d03379c160c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c48a50-2b48-4674-8749-926aa3dfe3df",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27adc9ef-6086-4d42-87ca-82e081267f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa313fb0-f2a4-4a2a-a499-8fe929b95f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f15bcfc-cd12-479c-9d52-b5e17dc8316f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5544dcfb-4bea-4b53-baa4-d82d99625cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c3a0ec-c16c-448b-8ee5-175529a0bb41",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b1bbb6-99e7-4cb1-9581-a3130fe4396f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e107532-dcef-428a-92e9-ea23bb2c186f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc6f4e1-ce11-4f60-88d0-a44887046abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d05fd472-9a6e-4b66-8649-3a1d5397004b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f4efe8-9b5c-4adf-80af-5aeaa5a31595",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a56b386-72a0-4cb8-ae08-c9a4b52f31e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38783ee-f464-49df-b7f3-0adfd38a5e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99be09b2-0478-48e0-9b5a-a9d714dc124f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81d26a3a-d800-478e-b003-9b7780c4a827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e76fb0-e0b8-4aad-a091-e87700f421aa",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751e13b4-06c4-4621-852d-5d542f506d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53cf7f8-7181-4f3d-b7e3-04605bd48e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee164e67-4cd1-416b-be6b-ce139c5c7270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a073e07-7cea-4dce-ac8c-f8847ab5fe22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f5fef6-9e35-4fbc-8f86-6a7718441a00",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11aa1243-cc80-4eac-be01-09a435af5f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81da4828-719c-4507-b5eb-d170cd1dd2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94e217a-6c3a-4f1f-951f-49d0fe1535e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1535de-5fea-4554-886c-1e5fb1d9ebfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95df3968-6563-407c-9c09-519cd5129a6c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b9adb3-d657-498c-8e9d-c28e10f0b42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00dd6da-7070-4f98-8782-f3e481abfe1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1962f466-4b69-4847-81e0-31b31fc7c4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eddb7088-7920-4080-8a3b-f6d818c43391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e531e22-c7a8-4131-bf40-c759df656cb1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a09fd5e-5421-45dd-808b-7445072b5611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0958e33b-3225-4883-b301-0b8deff3c844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02648bf4-f193-43f6-8735-f8ee54da73cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1e60ac-fdf2-403c-bf1c-9cb643cb5281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe5d24b-1d01-4f0c-883f-419c9e244971",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e13852-8097-4284-8078-7bee0eecf9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee7df98-9d98-4725-9ace-ded7fd17b740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e76e96-1ff6-4ae2-aaba-b5bcaa1a3fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e64efe38-dfe5-4b65-8f23-7d56b0f4b205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d84c40-d2c3-491b-a9a5-c18f62a6d6a5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d023d98a-f915-42e6-b666-3a2bd14cf637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ce6224-6f2f-4363-a2c4-dff963533889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84ffe7a-a0a1-4bc2-8da4-2c28d418acb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3d2f2d-096f-4723-9d98-19bd1a3024ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f196e3dd-70aa-410a-97f4-73e53b38d65c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c670462-1a61-4889-af48-4fbb7141cd31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f272f31-2fd5-407b-b121-233993437fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af67023c-d832-44b7-baa5-fe35c3d2cf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9202bf18-aca8-4f53-b713-295db36fc847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9155167-17ba-450a-9bbd-6fd5ec6257d0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa0c502-8b1d-4dbf-882a-fd1851537392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7fef24-6091-4294-8002-3d5e408b5dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6bdb65-d6a8-4349-8e3e-f42dea2b040f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbeffa3d-ba91-49ff-a2f6-5fe39c70ea74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a90f129-972e-4d86-a113-ccef1a74ae71",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e828f713-e7b3-47b9-8ce9-072cb0c7c34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344d1f28-d415-4d12-a691-51cda37c589c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68a94fe-4929-4dcf-af0a-8ac4ff0aed07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3ba705-571d-4efe-a6f6-f535e799d6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732388bc-2a94-467e-9de1-220407ec5baf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a7dab5-23b4-4b77-8ce8-9d4276d74d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6d7dcf-71f2-4842-b3af-0b8f52d1107f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1406926f-0341-4af3-ae98-26ec4d1d9b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3503a4e-9aad-442d-a7fd-228a1e4b8eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719d23b8-acf6-4228-ad0a-5b63d7c6205c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e562cf-7151-4237-af86-3a676c9ea3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50471568-27d3-489d-98b2-c1e869a03883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21cffcb0-cfd9-47a5-bdd7-7b9633294984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b30763d8-5494-460b-8292-afe122b7740f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d873ba-083f-4fe7-993f-bc29edcf376f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a1464c-e395-4a5b-9105-d694dedf67a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c07ac4-c03e-40c1-8ddc-0331765dbe0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da46f4b8-efe9-4838-a49e-1863fafd90e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "213ef790-10cd-4d8a-912b-3a7a23ff5e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ba9697-613e-4174-a7f1-7f2452a61b3e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697d3910-1fea-4927-841d-70ac0084afe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e7a6cb-5daf-4b90-aefe-5037ec7bc702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7b01b1-cb0e-4cbc-bf6a-0e953f0228be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7e4dfd-a020-4e1f-a69d-6dd18f8dd580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ec807f-7300-453c-8ecd-e413f0c72a09",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca491cc-5c94-4107-9460-c65f9aef647a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3731cbad-0da8-4934-bcec-3aed8243f4c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e2cfbf-001a-4291-a6ff-94e2390680a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2e2e6f-0b58-463e-8e1a-954ba5b8b565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbae9a07-0683-4301-a478-bdfd38202d1f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb67dce7-ba97-4a4d-b126-6288b046adc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5baf34-5014-4cc6-a03c-3f12c582289f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d4de70-6293-46eb-a54d-9026f7b8c611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3cddc4-429b-420a-9036-9ec3fa1ea563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84493fdb-2e0c-4d48-94a3-3b2814cf4cb7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e447c3-2149-47cc-ad69-f1ffb82bd84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6576e397-7428-4c20-b5c6-4622cf9bb854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a19089-c889-4be0-86d7-dd58f5586845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7622ba28-6f95-4ffa-b111-7ee9c6a896c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74daf662-2ec7-445f-959f-9920c215da1e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3f575b-6b63-4eea-86cf-4de8490c6761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db061ea4-08f0-44bf-a38a-570c906212c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e80ebf1-678d-4d70-a903-9fd3f2604221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d76706-b997-4941-86ab-603f4a7e50d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8a0b46-de9a-4e68-bfce-4bea9e270551",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6025e0a7-feac-455d-a153-c34c9afc4778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aee9935-3253-4a68-b1a9-575a6762b28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3402ec-941a-43fa-8fdf-75e59f7ce524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db8e2f41-197d-4d82-9d4b-460a4e678b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5a144e-8738-4bd0-b1a4-8b5a2b7bdcc6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9437ab8-5f9b-460e-8513-95ffa8a9f9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a456a7-2ee3-407c-b06f-7858942a5788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac9e623-33be-44f9-bc5f-ac4500fa3b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec63d55-5d15-49ef-ae2a-4e004a339fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff37b34d-bc28-40ec-bc30-c4ceed587170",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66f9028-f3c9-4b79-a8dd-d5c1e89cf0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3ca4da-6b9e-4912-b648-f164cc2227b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d113c62-7d27-49ed-a4ca-142ef8345e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8e8558-2843-4907-8ebb-a73fda3c0f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b2d9bf-1bfd-49b1-b851-5bbad938c47d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64769c13-c05c-498b-87ed-85641e9e7892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e0b969-37af-4322-97ba-0f364b909f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7da13b-98b4-40d8-9c88-0fe5ec78dec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c71dfedc-3b22-4fda-878d-1313328d8c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7da938-f1e0-450b-b32c-a360e0ec5257",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d2a3e7-6937-44bd-8196-ff6cc59953da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab4d5d5-47fd-4796-a311-a4c80e76c70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f688540b-f333-408d-92f6-13d092b1006c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd367ad3-f7b9-49b3-849a-e5dd5e4d0f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59cd5496-3149-43c0-a662-ea181f44f1d7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6004a2b-256e-4e51-bbb2-857caf0e685b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d5e1fe-8b30-4ea6-82f6-56383c3d0eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a7250e-6a52-4bf6-b8d6-1275e8778a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99f1a0b5-cf48-435d-af1d-e273739d32af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e8e0e5-9165-4e61-bdde-5e1eccea90ac",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f87976-eba1-4cd8-9a96-dd7859f975cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94b911f-1d83-4d82-85df-dd483fa46ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e438877b-ede7-48cb-8670-8fe30f891337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54ffe8ca-d35a-4c3c-85cc-83b46b534cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9aede2a-84f7-4215-a20b-29d3d792cba4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4cd430-df77-4750-8a38-d7cc574335c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40f5ac3-5fcb-4d79-8148-3df0cd045010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5417b1-539a-4e04-9d8d-a8f8c2703501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "378cc498-48c7-4f30-9e66-28db885a7625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6112f6-8daa-4fe0-846e-73858f438546",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb799dc-5b35-49ff-8880-9e83515e1f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392c7dd7-f5f5-49bc-b5d7-35e252412bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b060dc11-4f81-4576-8a4a-d1ad491fd9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc890b7c-bd52-4a2b-a525-a61c6462ef8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1458ba61-7fad-4e2f-82c5-4288ce54108a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5b27d5-54c9-43bb-9a9c-544ed0217123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b44abaa-016c-43fb-99b5-4d87fe6ed518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9333a0dc-c4fb-459a-a248-aee3f67f112e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4b0200-377b-4915-a9fb-17144bfad41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b067fc7-ed1b-4dbf-9fdb-5bdae5cc2a40",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4d6531-2f14-44b2-9669-f0a0a37d4181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6ae3e3-67e6-478d-b52e-26e39f0e1cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d029ffca-2568-4e91-a887-1301cf30d97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "709b01f3-7ae0-422c-bd83-509bbb1929de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a091c6-cea7-499d-a862-5c25c8d156c6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b9ebd5-75b6-44c8-9cde-fc7dfc188e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57169efe-be3b-4b62-95e0-b4041129b3b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54012b78-dd64-48df-bf2b-8f9518e20819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94843f19-66f5-4b92-9195-1713e1d9e510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cc72fa-757d-4134-b443-f7da2f9cfd0a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68d6d9d-9610-416f-9403-2eb06011b996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5dc8278-8abc-47a6-bdec-8e015bf3c23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4955333-ae5b-465e-8aa5-ac195320e58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0777e1b1-1eab-4e77-9ce2-5e210054ae19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ef405d-7d03-43e7-9ef2-79dbf26c1520",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ae9896-691a-4867-80cc-ce6385f42ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040edcee-041f-4dac-9820-79e21ac61dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386381bd-a805-45d6-a00f-93623da8761d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3ba1b7-77b3-42f2-9fec-23792de4779f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4ab64c-3636-4301-88f2-8987d1335071",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41379c3-09fc-4825-a67b-aafc2d06b39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3552399f-3e26-4713-a164-7782e352585b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c59688-c501-43c4-ab43-38306e993f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c15f11a9-ce28-4f3b-904a-6a5d94a18bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0788c1d-697a-4137-a012-ab774c290eb2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94673260-d340-4115-823f-1216f36794b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410dcef2-86be-4046-8941-772f05795707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8a39a1-9492-45c2-92d2-2970c928eb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c587ae-cce5-4b3a-a1b1-c7a0b1682eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168ee000-78a0-4025-b5a1-8011720bc65f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc45c57-9ab0-4c27-86eb-f2abc96bf2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d3f16c-eb74-481a-8a72-8354e6cc2f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123e00d5-0369-4e4c-b38e-e0e3e90a2bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c473aed-1688-495b-bffa-cfbb6b06af99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81322d8-b79b-4850-b61a-ee7175f2ebe4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35682f88-2cc1-4cc0-b225-97b78eef2fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7b8cc5-66dc-4435-99b0-cfca81463ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633ab17c-d076-4157-a8fc-65afe47cbf62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89e88800-d3c4-4715-9f10-b7a18c12c4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85245928-74fd-434d-ae08-740da8b839a1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faac453-09f3-4a1f-be62-ffbfe3cb5eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe9a45e8-ee7e-455e-98f4-918e49d84dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8259c677-1cb5-457b-a0ad-d50de5000c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb33ab0-8429-4c33-ab23-1119ba4a824c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ee27d9-7a71-4b0e-a95a-d09c6a1a0cc0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f26ef4-044a-4593-bf75-f4cebfa20606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "175dc509-8dc1-4fb2-adfc-a0104f33704d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535df7bc-6630-4810-af43-30a169e191bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "305e25f7-2bf4-4643-9d1b-6e49f6c2339a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aadfbf2-1733-4c41-8892-e52ab55cb7d1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32748c4-f172-45f2-bcc8-3b79d77065e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e2c00e-4342-4691-b5c3-869deaf99fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df187e1f-e4b0-4c8a-9dc9-c620c36ed849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f78252d3-9481-4e38-a445-eb5cd16333c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b08c042-8797-40a4-a6e9-a06b8454f23e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab5ff4c-cd82-4aab-96d5-7c5e940e6dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a005d920-f72e-48c6-b3e0-f99ae110225a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0866aa1f-0996-4d5c-9185-ce57f114eeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "96e5791c-65cf-4262-b114-c8e8fbfa2e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8233e3-9379-4b43-bda9-74d24089148a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656ca46a-1f28-4265-8153-368b0689cfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf5261a-ba6d-4aa2-b818-8d7d2dd85e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0362f26b-c366-48d0-a6a3-34791fc3f709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bdd95c1-d2cb-4709-bd58-f25de68e558c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5869d6-01d9-4fa8-99ba-5a079449e268",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3cf2f8-78b0-4afb-b052-b9833b7cf815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf46ef01-bc05-4a16-a4fb-4eec160654c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a186e7a8-6b28-44cd-bb21-2603a86b49f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c424cf2-345b-4ca7-ac65-bb1f23e7b8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f58074c-3d95-45dd-8d3e-165da0144e11",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb30186-085c-4aa9-8f0d-14f5a1e854bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b69fed-d0a8-4e4a-98c2-b10dc62953d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8542fff2-5185-4cfb-a176-6358abafe606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c608ee9e-7f4e-4010-865e-8ad9ad7d8e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86b86be-4773-4444-a433-7cb618536aad",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b94f4d-f0f8-4c3d-b83c-17b68d205b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "10094204-f6e2-4412-b360-d88f64f5a52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653fee86-024c-4735-90ac-de944b1efcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad03070-b76d-4ca2-b574-533225f61421"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4b74c8dc-8424-4de6-9846-6d1e1cc46ab0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3cd99d4a-154e-410d-af9d-215a2d69923b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323719e7-3b92-4e41-b280-7d2b4c96a58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "502b1c43-0727-4774-8de1-67b2dc0dd134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fbcf54-44db-4c48-9842-1fff383c7cd8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13fcd209-07ad-4403-99a9-57f11dc11295"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e434f701-7300-4859-a4cd-7f11507edff8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d772e152-7f10-4651-b0f4-5e7af72747ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97d67913-2cbe-43ca-b02b-1a65e5113987",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b46c07d8-ace8-4954-83c1-9503c1220857"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b7c7fa3-18c9-4c63-8ae6-eed8d0f759af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "336931ec-2f62-495f-98ef-1bdb637b203f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4c0d6cd5-5640-4cb4-bccf-a121a8781c08",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "388ef9b8-ac40-4282-aca2-d2556b932170"
                }
              }
            ]
          },
          {
            "id": "1deab9ab-af89-40a3-b003-c536c1b675b0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0bfa16d9-9b1a-41e7-a962-2952e1dfb1fa",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "739498cc-63ab-4495-84c2-cd277d8ee399",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ec0978-b213-4be2-8813-4b21f2f2cb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c115f602-d6a9-4ff6-81c7-6317bbdc7be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426f1d86-8d20-416b-90f7-e3417261a9ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd80527-6713-43ba-b86e-a2abf93b8a46"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "38642fcd-089f-42af-9a29-d0aabfa28e2d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5a9b6d9-e02a-4eed-b775-2101d5cd75a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "953d3c83-a199-41ef-9c7e-1c70dc81eda4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8615c1ad-6fea-4358-9b5c-b591f709c902",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0844ca22-1d19-4b50-add3-a2b79419592a"
                    }
                  }
                ]
              },
              {
                "id": "f010296c-8dcc-45e7-a12d-9891e6d489d7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e04068d-9310-46c4-ba9c-5de822abaf9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b78982f-0222-4de6-aa20-0d7b7157a54a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0de6a86-9d80-4e7b-8dca-930f1b548e36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "db87f8be-c085-44aa-a806-35270f2af405"
                    }
                  }
                ]
              },
              {
                "id": "095b24a6-9f05-45e3-982c-333e1187d9d9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42a70b6c-b9cb-4cbe-87f4-8faf8544df12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "754406ac-8365-4c9d-8e7d-208691cfb95b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80a880d8-2412-46dc-b42b-4820126e6fa7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2899dfac-4b9e-4b6d-a3f1-733903c86a8b"
                    }
                  }
                ]
              },
              {
                "id": "83b235cf-5be1-4acd-8af3-063133f6a747",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cda9534-0020-4e75-b41d-9a1a4c688449",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ee1f61a-263a-40b6-b526-8a5cbf7e7259"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a9186aa-376f-4a44-be15-120109bb9707",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "55dc60d8-a029-4f60-8ad7-2bcc2af0114c"
                    }
                  }
                ]
              },
              {
                "id": "017871ad-392b-4a9e-8838-4000976c89f2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1386452-1443-4471-a2e1-f8cd73cf2bb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c10cb91d-fee6-45e5-81dc-82de90cbd9fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e407fa3f-b602-4bea-921b-2f3e32f9ea69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b8043d5e-8289-4f1b-99e7-fbde856b4d0b"
                    }
                  }
                ]
              },
              {
                "id": "e887fc27-fd69-49fa-8d21-4c09c3813566",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56051134-5058-4e95-aed2-6db2ab09197a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89d951b0-f875-4fed-9d24-447723fc7bad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81fa14ad-f857-47d1-acd6-f45b0e987c52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "300a0d65-a38a-46e6-918a-9a888d80ee36"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bb589b76-25e4-4eb7-8180-ef82ce5b7140",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a09ac182-c40e-431f-affa-c74c147d4531"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eed245a7-98e4-4c55-995d-55b03de00f93",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e5b7468-2468-41b6-bf5b-9fa734b76464"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c6bf08b-3f22-4692-82e8-8f93a6fcf0a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3c7f1500-b915-4e8e-9b4b-de11af9fb71f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ad151d4-f97e-4bf3-ab48-08f1679efdb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ac7a7c5-89a6-4caa-9f6f-ba5a4f5a9a3f"
            }
          }
        ]
      },
      {
        "id": "69d5568e-8eba-4964-99fd-799520f4dcf6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1264d50c-c93b-42d4-b013-b4ee0a4fafc6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6717cbdb-228b-4b12-8458-6603ef2d2370",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9483edea-7c6f-4308-a329-7307104222b9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858bb7cd-75bb-42e4-b133-c5f0ea914598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526d8c80-9f29-4733-9aff-083f929e1449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ceef1b5-627e-4b93-9292-1baab205de3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe2de9b-bc26-4d41-8fa1-6bc069b0283c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca70db1f-7d8a-4349-b454-db40bdb42ba7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d32ebd5-bdf1-4071-a177-3ce0e9503394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce48a97b-120b-4937-b3ce-64205e57be9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ec2726-ba35-4675-b6e0-f8b6e45aa4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "431f1968-9b9b-4e20-8a56-6a0de1adf361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d88ecd7-1e2a-4f3f-9bda-71eecd736c60",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff2736c-aa63-433e-9006-31d9c49e9045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869cc79a-30d8-46a7-9977-88aac662d989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee279e9-1e5f-4b3c-8caa-afa4c155e264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3044d9-2c4e-4392-b99a-37dae4bd2c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a6a462-9bbd-404f-a4aa-d58ccfb9b2a5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5646f900-4d74-49a8-964e-36d9e9c92996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2233067-5b5e-4cf9-8dd0-9f0df7fc9ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e790f2-26d5-4ced-87ed-3a2473bbb968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d74344f-a7c6-48b8-ba28-1f0dc24b2653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f13784d-553a-4634-8900-41470e2104b9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee20ad9-9a55-4ef3-bf0d-da8d7f46a5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94cea92-3cf7-437e-9100-44597e3ae3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fcd1ea1-c1c4-4aac-bef4-721b7a0a3152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91707f17-3221-4ce6-91c2-b1f654eb6cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e336c53c-e354-4101-b515-39c832663132",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219fa49d-f0d6-4440-abed-625a36597aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d90c3bc-cd91-4d8e-b7bb-dff5e6f5dce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9175947d-d3b0-4e5c-a2b2-0494aeaba3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "474a162f-affd-4b62-a02d-d56e0f4ef6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc0dcea-ab64-42a5-8177-7083cca3fa3a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f61bcec-d7f8-4022-956f-7ea78f6775d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b2d771-6752-4f87-87ff-627bde005dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688566d2-0fff-465a-a81e-0e6db05d9640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ade4dce-f474-4973-af54-bf97f7f6bf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e74e8a4-d95b-4a72-b4b8-9621d4e79ff2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e655669-62d4-4ded-ab08-2b998c3c5981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a201096-046c-43e8-b4e5-80e3b7c977e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b23f0c-6b2d-4a03-b621-ee13cfd9221f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1d78b3-c546-48e0-bcf4-ee93deef7770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9f83ef-5a52-40bc-a361-0c42116c2c7a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9e94aa-d0f6-488b-a89a-757a8ce56e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cffbe2db-d340-4497-a946-d854f0b615db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ae54ae-4c3e-4f05-9b9f-f9733a22ad09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2036d60b-8b6b-46a4-8221-628555d2b203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7811573-9027-441a-8408-af6221d4e907",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524dee91-bafa-4037-8903-e6ac2237fd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2215934c-0cb7-426e-8f38-20073bc6de57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473c1ffe-5565-410d-9f79-6fc37369d83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d0dc82-4d98-4e91-836f-7658445292af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e57ed58-e9eb-4054-9916-895fd41fa3b0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff306374-38ff-4191-9828-8570a8cf085a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41071656-3346-43e3-934d-d7b097a3868f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a234183-8ddf-4778-8e63-3d5f98787803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ea013a34-0769-4646-abac-cc61d0a5392f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a93833-3536-4444-b3dc-b4751a46a23f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f6a3d5-0085-44b2-8d6f-0a3137fde62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6301ed54-acac-4e92-99a9-49d3873bca86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251a1dd0-1a2b-4323-bccd-00a9a8b42fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f302236-5c75-483a-b363-6fa29ecb1259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d3510e-df2d-47bd-ab7b-f9a992a04bc5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b17dbb-e1b1-4ac2-affc-e532846937fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da93f04f-70c6-4f91-ad27-55977a4b631a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9220578c-55ee-4241-a15c-e8ca8ca74c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "911945b2-04e0-463e-af01-ccb330a00860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870f8962-da56-4804-85b6-28e05844769f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63856ac7-bcdf-4230-9c89-327cb85e0869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13bc5e7e-7b07-4578-b2ca-3255607df336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6c929d-1e75-4292-8db7-43242c18ac53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d774038-fd13-44b9-818b-0bc193474d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83027d7-cc3e-4776-834c-8a2252e317e8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35318144-be6a-4519-b2d2-162a38b00e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d85b3ee-fe05-4b51-a844-ebff1e0a30f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12055b66-891d-4edf-9c63-5b6f64c7f766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "408dbf19-ec5e-4703-80f4-611b9e2df7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ab435e-8684-449e-8897-2170233f4d4e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d74176-1bd7-4d2f-a7c1-c0d4a2fa496f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b989b85-b65b-4853-ac14-d2bf54f6f10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887828db-5d08-4aed-985a-78ed33f3eb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2197cdc5-45fa-478c-a040-79e38ccb434d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090c27cd-d214-42a4-a2a3-b56837f84ead",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb9e7fa-d27a-4e9f-a0af-09e1e6bb2895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60b0f79-21bd-4d7c-a976-ba0bb85f1afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2742b333-b287-4d18-8c6b-342c8e35372c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "01fd1ae8-c867-4a6a-942b-501e94020582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccc18c5-ae2b-49ad-8af5-c59386c4eaaf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878e6388-6a73-477d-918c-d3487c32536e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e6bcee-cf2d-4844-b757-4df506f46f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed27e7f0-00fa-4e1b-b346-5278ef42663f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec681a3d-85b3-4218-94b6-52d1ecab1d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1af3b9b-9217-4c96-a60e-f2afd9635ef5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa63dbed-602a-4076-bcd3-bc4ac64bf58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c317ae28-5424-44af-a588-41ccdd84949e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd02361e-9b51-4891-a75d-5c8a97616d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65ec894b-b37f-4100-b599-142b6d2b0b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434fd478-819f-4126-97c4-fd07ec1524b4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75ee835-3488-4c67-ab5b-18274f5df633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbf87a2-17d3-4d64-b6c4-429bdd102644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670acd7b-ab5b-4853-8437-b6b9729ea57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "383437b9-6d75-478d-b5b4-c955346c1dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d990f0-8bde-470c-b4da-a7f9463c3143",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99787e27-00d3-4ff6-9303-13b382673cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c446b7-3a2b-4f32-8af6-4efcc068212b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d5f36d-1ea1-4437-abb6-e8088fac40c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59cf4d13-8d59-4b3d-a958-93becd67f377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f20fe2d-2857-43f8-a455-6754916ef8f9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee51ca2-93e6-4673-bed8-4c82ce75e40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66bf83e-0c43-4961-891e-ec3cad6fc273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34927e7f-ec06-4c08-9c9c-ae1f5cb35566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91523188-7a17-4efc-984d-29767e444bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc383f12-b89e-4487-880d-d7ed9dbb4850",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d158a8-2ed1-449e-a1c9-7712349b6039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586acc36-0b50-4a77-9a77-b965daa54720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7f3ef4-32af-4a9a-92d7-dde73359b646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b12752d-3124-4a41-a1e4-de8dafb1deb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55865885-b206-4496-9576-b0af7e2deca0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e29301-9240-4284-bd2c-6b1ba7b12339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ea9bb4-3dd0-41b1-9538-dccbc80a358d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3424b8c-7800-41a4-9ac3-40fdd5c126b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0ebcc9-e1e8-4203-976f-cac2d00fbb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7096eb-ab54-40fe-9a25-54334a273be0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8c53fb-3a94-40bb-ab08-d538a1155d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52630eab-c797-4f4e-aad8-509c25566163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30becc8-8df3-47a6-9b8a-064d305c678f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8addf22-31e5-4c92-9a95-520434e95546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862b29af-03d4-43f2-ab3e-155dd656b319",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61514710-d5db-4f4b-a6b8-4220db3b7409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def6a284-7afd-4fba-9390-48a6b16af151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f7de15-88e2-4c42-8404-f794d0f6b159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9341fe29-d540-4eb3-859c-b1fe6d3231a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b92c8a4-f833-4010-9157-37c6ffc065b2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7e46ba-4065-43bc-b739-37ed3fa03a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a6d6701-b0a4-4359-972c-ab3add2dbf68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad5bc22-1cb3-4a42-9ed1-cb60f9203ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2b31bf-3b38-4757-b817-82b0a484be49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e0025a-4eef-4dce-8242-dd40ff2e4aaa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c3f3f3-0508-4a5f-8283-eaa66d368a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17350903-0495-4710-aaab-3dd736cbf859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd3fb68-d33d-4ed4-8225-b3cc671ae7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a41ba8b9-b65b-4d35-a61e-97d58f4cd9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0619bf05-7ebb-493c-86bd-8bdbeed8dd54",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c790e376-439e-47c1-b2ca-208ddf365e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0a6c2a-e931-4487-8ce7-ffd222a16898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2deaf6-68a1-4b3a-a774-6cfaa985a860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5386bc-da2d-48ac-8407-845f94cf2d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da77235-a5c7-453c-a5d1-c34d03c3996b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdfdbdd-6599-4d73-85d1-dfc47dc5d729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "034dbc89-0d8d-41e5-8eed-c7f84dc1b78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c868087-84d4-4da1-aed7-8767e9426cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6a7d8c-1e19-4831-989a-245f4604b655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcae4d43-7ea7-4591-88e6-b56c594f1a9b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61faf4e3-a60c-4073-bbc7-c5964c8771e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0620ea-824e-4409-9ae2-58b494c940cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764eff68-4416-4e65-a686-fd3f7505bda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "953727de-3863-496c-8bae-af1dc59e6fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adccc456-ec32-4331-a79b-72f8655a9419",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0858fa5d-91b2-449f-8e6d-2f7934c45f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e48447-db7a-4764-b4f8-9b3ca3ba4306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2195aa-57a1-4a92-90a4-4bf928d32b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3334fe4b-7e99-4382-b4ef-37f60421eb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784a8852-e28c-42a8-9061-c1aa9decccbc",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f30486-2a92-48cd-b04c-f8c791ed62fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b210d7c6-2f2f-4c99-88e9-a88108f534db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf208cb8-f77d-4cb6-8a86-8f65ba45d776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e305c9a-bf1a-459c-9f5a-c368736bd9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9d4301-5e5f-4ee5-8fc7-dfad57e64aca",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6db9de-375f-4f87-aacb-d2d2cf5d4f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0fd1c9-e3a7-4918-af59-ef72e6248df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d4228d-2c04-4b3f-a3f5-007a53d868fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eabee574-3ea9-40fd-8b12-7c9353a4e5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84228245-5b80-4b03-a409-d1c182ef0bcf",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fd7f9d-22b1-4678-b6e5-3e6ce718c81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df1568a-0dbf-4182-94d9-470a8f508437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631eac97-de78-486e-9ebd-cd3d7ad68abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47f15c70-9e34-4001-a546-7e166514bed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b96435e-4612-4466-8943-bb6d553e2f77",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b2b460-02ee-4df6-9cb3-5c9d2a73dcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9858cb40-904c-40ba-af60-26f3aab352e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c870aa-f0ac-4592-a55d-fb488d432a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b764fff-6b80-48fb-af40-7f56a196199a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564cfe8a-8ae8-48f3-9522-f1b5252dbcae",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f118380f-e2a3-4213-ad16-24ea2d21ef7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69d3642-720c-4e4f-8f1b-1f448c767c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f884001-87a9-4fcf-87e1-5717a2091952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "672bf07a-5f66-4f37-b726-7f89c05a9073"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5bcdd5be-dae0-4101-8753-b8deafafe1b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f5b7e7e-a161-4eac-9d83-0fa6ba0fbce1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdae7aee-8258-464f-a967-872173346472",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf73fde-aaac-4bfa-a833-3ed263f7acb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff172879-5fe0-4724-8147-4c9b07c10859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aedd9f31-4c73-4da5-8e11-151560c6d65d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f77646b-b857-40bb-8704-6caf46a0ec24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad1b2f9d-5f69-4327-9e10-963a60d274c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3f645d2-dbbf-4ec0-af5f-b3c4e61d80b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6334acf6-6933-484a-9fc5-ce8fce18d35e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "260ea8a0-c9f7-497e-9a3d-d24b59858f31",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a355f3a9-1f13-4e22-b925-8431f41b8e7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b761b27c-5f07-405c-ba8c-2f3088830fb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6608504-4db2-4124-9307-8e28f3d7470e"
            }
          }
        ]
      },
      {
        "id": "573eaaf6-2769-4514-8cbd-d13bd64b8027",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c27c12ea-0d22-4148-95f6-da63385c8765",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53bbb3df-5202-4d76-a372-fbcf577132c4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8588e81a-7079-4636-9d97-c66097982ce0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0b85d4-c217-49d5-b992-ccf227ba697b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd52ca6-5c10-44bb-a681-c43cc9d1737b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d86682c-839a-4e9b-bc6b-b0f32896c21c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9ffeb1-802f-4467-b07d-a33ac456c842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ad00e4-f5b1-449a-aab6-b68afe9cb771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e6bbf3-9143-419f-8c8a-58444ceaf5df",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cbf5cc-35aa-454b-bc91-8c1132167cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a453f0d-ed80-409c-90d0-9c49c50b528a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43070bd9-d9d2-456a-85ae-1fc7870238b9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5e7ba3-34f7-4a8f-af87-7094519ec0e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2039eabc-bc26-4591-8953-658e80db5a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb629f10-4670-45e6-836c-84a395c3b1c3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc8078d-a130-4acb-9c82-7f1bf5cd2579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72876dfc-985e-4851-8efd-913975261bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1062b1-2e6b-42c1-8175-6714fc5b39c5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c518cc56-f102-4afd-86cd-d77a24275ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0cb7447-f42b-46c5-bf10-a82e2eadfc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11aad022-aaeb-413d-b643-b7ac6d4a7d7b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224a4a14-efe8-4329-91d9-04a254be2823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f6fef1-1050-4341-aa4a-1e9310abe649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af1861e-2211-4346-948d-d347efa74769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2bcb7e0-4f2a-431e-b04f-ba29a44f51cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec663eb-2fb9-43d3-80af-32fe291c1efa",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1f121f-d33a-463e-ba0d-a8c6d1461d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84ed3eb7-9f24-47d5-ab37-d5ad07d0ea0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fcab9f-0178-4701-bfb6-4fdb8957378b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37262d7-c5a2-43a5-85e3-1ed6101c9d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db042d35-c750-42ca-b101-e732e9db372e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03583dc8-d83e-4707-ad6f-7754ff1b9fc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f52b20a2-57af-4d5d-8af7-47d82f90ac9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688df6f1-d72b-430f-806e-22636787340a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b945aa4-44f3-4f71-a3de-4fdd2e86d2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59cbb7a6-992f-43b4-ba52-a9cef2128c71",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0581e633-47b3-4333-ad2b-970aa98fd7aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5874a15-b675-465c-aa04-c8b287897e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c48c5ae-c4f1-4f06-a98f-2c6fa3104d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e157d4d-eee1-4024-a458-b191d2755c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf28ec8-19b0-43ee-ae3c-be53fde79a41",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f1532f-914b-4d19-88a0-87407e92d185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8388b7-977b-4ebd-91c2-39b08cbbd8df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f2e803-5b94-489c-aaf8-a57b371b18d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3ba61f-603f-4f54-87c3-1b77e38ae65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b773f2-5c97-4a11-96d8-8808b034bc5f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f362b4-c630-42b0-bfca-31893f52ee5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fdae459-cb5c-4dcf-882c-7155aebeb1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95de1e0c-ecad-4118-af44-41755692e573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addeb099-2741-4bef-bd0e-3aff0119fa5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82390fce-1726-4b52-998d-fb20e4b0d7d0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991881de-3027-4060-8f81-5941d5d49aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5756905d-e64a-4a41-954b-2a39a0b358df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79837e68-324e-467a-9533-795311606f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817c151a-2e46-4824-a90f-b0ad0aee52bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2193da-f11b-4cd0-97d1-22ab1545f096",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3bcc1a-de31-4cf6-bb15-4cc670af5184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b74b9ad-10ca-430a-afb5-b9433c64ade1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1674f442-fabb-45ff-b5ef-f2ca6280ed4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a576b99-063f-4833-8019-329364ceb5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42211a18-80b5-4a53-9460-cbc6976c45ab",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040b30a7-270c-4eb8-bdd5-e65e1c916215",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1226a3f7-dcf1-4c50-a485-6e0678f55dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa307ffa-c4f8-45af-86da-71d7a3da3a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234eee56-f1d3-44d8-981c-3989d9052da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed5398d-dbab-4629-bee4-d037525a69b0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc73ef0d-3795-4ec1-b5ba-ac06834ceb63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b132b1e7-859e-4311-9c1c-a38609c81b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ac4a67-6ec5-4164-9448-03656d67fa86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673d01f5-7922-4466-a530-7ea440aa8f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f61b64-16f6-4af3-8009-a1f8e9b9c8f1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9223dc-df91-45a9-b280-5a974b743eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4d2736-5632-438f-bdd1-cc9140eecf08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a910bd-73b9-4d74-b8d4-efe0c596cf0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f11e685-7c53-4391-b852-2dacbb444421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ba1b4f-5a03-43e3-9a2a-bcd51559e73d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1bd500-6508-4501-a5d6-a66b7ec51ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7939effe-7f3b-4614-acf1-34b8c5099bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460a5601-e772-4e85-aa09-d2bb63ad3ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5ee2df-43e6-4501-9880-506fb8da1a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0798146e-910e-4969-a119-34d53f0b946a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d0b230-5f2d-43b1-9911-8efefa93933b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225cdf66-35ce-43fc-b2ad-3c6278c6d555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b7fca1-b771-4a25-87c3-f64950468e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5537c3-14bc-4a9f-878d-72a6010520a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809eb24d-bb61-4120-8cbf-a712473eee8b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24908432-0fd5-41e3-8a83-75e3dd323286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79b766d-3221-4205-b501-f473184bb86f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698f2162-d75b-4047-b3c8-a650f3bc49b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4c0610-b998-4d46-be8e-bb0068892c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8649a1-b001-4917-8f67-289311f43269",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ee90d5-2dd8-40f9-a929-9d8a95bf0584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd0f3ed-e8fe-4bb6-9e0f-bd67ad33d804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21ad41f-f963-4afd-9c41-4023275ff185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a27236-6f5d-43d4-b97c-8f72915d7897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b1be04-016c-4f19-b6b6-cb154622dfea",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067c6cd4-a4f7-4460-9ce9-cacfb617a2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715dc2b7-94a3-4514-9607-d518589decd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c1a424-da25-45a9-8a18-d2c84bb0d94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053df87b-690b-4e74-8a9f-e77f991c05aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44217243-2a2e-4cfb-94de-37bf37919f0e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2e6fc7-5f4d-4f20-a4a4-30dbe1e24016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b25e997-c57c-4944-8ec6-88229ea4d7ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0629549e-959e-4813-bcfb-5791f00f087b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d2ebdd-8e6c-482e-8f35-6565a3db5f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d51dd5-33d1-4df1-b91a-75030e2faa4f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a857db-96e7-44d8-a3f9-58b29e013ec7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cca23bf7-d470-4ea9-8c95-6beb86e09576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9015b3a-f53f-4ba8-8cf4-f5f982ee61e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473386e2-5ca9-444b-a92f-d9ee9c81f56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faccfff-1e45-4c74-81c9-8ba7fde03707",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6ff894-1829-40c6-861d-6c7908fc4d66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8d9995e-eb8d-4062-9cf6-dd79a302f2df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e18b56f-a267-496c-802a-abb775336493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8111cf2c-4cdc-431a-8da7-f88577882666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04184e4-5e5f-48c9-b8c7-c1641ec2e5c1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80c403f-876f-45bd-a69b-937a606ad6fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a04f19e-3ef6-43e1-b6e8-5ab875969c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb9d95e-3013-4644-b594-ae927fb29f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5e0e2f-e31c-4d43-9c9e-2c0943c8b99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69491481-2ef0-4a16-ac8c-2205926ad1aa",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac802bcf-9b40-44c3-9ffa-09f58a6cdf14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e7de39f-c9d3-4b2a-87e1-dcebb96064e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f79002-d362-4a98-a75e-6e89a1fc0f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74d5ba3-e41f-4d67-bee8-7afc51dddee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e095e8-95f7-4692-a773-301df65b5e19",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc096afc-ff3d-4282-8675-530b588cb584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198e8356-d8c2-44eb-ad8d-0224154a19c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf80fdb-3eb2-44b3-81ed-8902a80a751a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed8d613-ecb3-4bbe-84f0-0ed17baa745f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42948b09-c146-43c2-9992-e633dbb98481",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908baf21-c8e3-4edc-a08b-7ef5d2941da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4447f0af-d653-41fe-8245-115ac75477bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c7d89a-2c68-4756-a42e-80f95a993a8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4020a2f7-d27b-419c-b4c5-6027c8861548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196bc18e-968b-4438-a529-ab9a002e8aea",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f63bc9-74d9-42ce-9f56-00ad45b15b8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3615fce9-e99c-42d0-b800-0eee99313354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e72b22a-2a6b-483b-ba21-b4df651c2d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151d3fba-3274-449b-bb2d-0124acc2642b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cfb9bd-6c85-4a63-8dca-13e554b947b8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000c22be-8ebf-40dc-abb7-200d431c3cf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edb29066-d198-4c56-b70c-7ea264d4d304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "161f957d-85d9-4792-9706-33938241daa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e98a97-e24c-4821-ae88-48ecd34419e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b29bd0b-df22-4743-9d0e-f0ab236c13e2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28844b4f-0d2b-4eb2-9289-4f2c3b5fa80e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47dc1df3-c278-4783-8251-16fa9b3d2c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d7aa5d-2bfb-4367-9dde-f1b3c51b8a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29eefc30-4f1b-425f-8c9a-05469f1bbcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5d8ae8-3e73-4c4b-b82b-24c6678356dc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467b85ab-9b82-47e3-9d11-2c97011ee5f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10fa2750-3644-4f2f-b179-df9d73c8ae6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d7e8d4-e027-4ccb-935e-8ef0f8aa4b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5879278d-21ac-4ce8-a450-825a6a7c0976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95c9f2d-fc0a-4839-87a1-e28f0c472b3c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1368928-9398-464a-b631-5fd9f8abefad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d91d6ff-10d8-4a8e-8d4d-e6ac37272858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81f1730-136e-40c1-9568-00fc47629778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600dab3d-e368-452d-af39-03edbefc1266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598e59c9-68b8-44df-a65e-f1f204f0b27e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90dcd4c-e5a1-4524-ad8a-9f729e828494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9048e288-d7fe-42a0-adf5-4e962dc79e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03e7252-62db-4dfb-a49c-865a3b3ff44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4939d9-a4d6-4ea7-8a26-b133fd12a538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88be21d0-02d4-40eb-81eb-7b156f318586",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5ced14-f6ac-4249-b114-647cf69e3d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc85ea5-4229-4350-a526-895fc8f821c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf10ff5-bf26-4947-9303-ddea8a7a9b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a89d666-4ac0-4038-9fac-81c041eb3a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80681248-ff76-49af-bf8f-c447fa71e297",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c686bb-1a00-459b-992e-638a9f2da706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96590fd0-746b-4ea5-9068-be3cbc22afb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05986ec-15e2-4801-bc39-12c05b35634a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca1f60c-fd11-4b52-a996-af20a335340b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1628197b-325b-4da1-9215-5e476689847c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a87d4a7-42a5-4bdc-ba72-2e5546169ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f627809-5006-4d84-bc0a-8c30143e9095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebeaeb99-52f4-4af8-8c3d-30688097f394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cd8c74-bf6a-4f34-8a5a-77355f521387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d565891c-6578-4f79-94ea-d343f333c926",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbaa8c6-45b7-45b0-8513-c6fa43fc7f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdaa46b8-90f0-4bec-ba6b-52f33d6ec5f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7802740f-7d1d-43e0-9a9b-5c06ebe45e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02014990-ee15-4281-96f7-86f24cd82cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46789d1a-121e-4c05-8f95-a2226aadf19d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1137a12d-a6f0-406a-9e29-910027756d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50b4c81-14ce-4aa7-bebc-ec9d61aa76ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5d9000-d6f3-460f-a6b8-44b9fcc6e4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45019c3a-f71e-461b-891b-f0399b4451f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde4993b-6cc0-488c-a223-16cbe0302d1d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a4b5b5-6f35-434a-87eb-0d51212b5fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c873a1-5f9b-4603-bbee-c1308094f7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0dc5a7-16ba-40a8-9757-7b812a4297b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02713577-c0c8-4746-83c6-d6c4311c2ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742e3ea7-3e59-498a-bd8b-67ae327159cb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88c1717-b43d-496c-bb8c-f449ff42f1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8a05a6-65ec-469d-a635-4c7421237dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01688e72-65c6-4445-9d05-d56dbc347c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de8a129-164d-4116-b94c-08874721eb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcbfca4-70b0-4a67-83e5-b55a37465dd2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206c045c-c5a6-4100-9dbd-bfb7b3215a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9fde19-28b5-4c59-9a48-860e70edc6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "962ff1d5-ef2e-4bda-8129-050fa95e29f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87481432-9343-4bee-b08f-dbca389d2b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b625ae9b-0e76-4a6b-82c9-bcd3b4286fe4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e7662a-795f-40a2-9638-5b53d7c88671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08d76a3-4bd7-44de-b3f5-b9dddfaddfe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9821ec3-833e-4a5a-9d4f-08d6e294d0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40cb68be-d81a-413f-a13a-0ea0399d0df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55369831-938c-45ea-950b-6cf069b1a83e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a364ab-24fe-4c81-b03c-1d095e5417a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d36fe32-3548-466e-8de4-bd872047fc6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cc6fae-6851-4b80-b748-19b0ec2001c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affed182-299e-44e3-a66b-eba14a689112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7172cd-dc72-4015-a7c7-788e19d5c9f2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f809b751-3b56-4cbc-b495-c7840cc1d159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2eda03d-9a59-492a-8723-715b7a9bff61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a0b6cb-8af6-404d-8705-dafad4509d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e60b13a-3f0e-4b55-b59e-2cc6160db978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fbbbb6-1f09-403e-ad52-635b02d87461",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf0c02b-9853-4c73-96f2-3814643a64c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8953ac6-c0b6-4071-b996-b75c9458c49c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337fef3c-f5b8-4ecb-a4a0-d09b9848b9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc46768-24c4-4551-8f71-76fe02a04246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f48ffda-8171-4f53-921c-0de2d678cc13",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88963e5-ab9b-4c64-b0d6-a46f75c80931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3272881f-d28a-41b9-a815-75bafff24ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013d9a2f-635c-46c2-a54b-04342159de2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e55fad-ac64-47f2-a4a9-ee710797300a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103bce0a-62db-4338-b8ec-5d4a201b4259",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437aa18d-6e21-4f78-a4d5-b11937669149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3def8061-8cc4-4297-9c17-0561bfcc9cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616794f6-383d-499e-a9fc-9d1859e889a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874b317e-4bea-4b43-9ab5-f9be33ac3a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d59653-3893-4147-83a3-50f3c77d92e7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f639fc1-bd76-4804-85a6-2600c83a0ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10ebb37-af54-4c79-a3e6-e2422767ecc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d75a6c1-a62f-422f-aaa9-e97837a38ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68bcc52-35b2-4b1f-92e4-af28e1597381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0386d5d-d189-4629-a698-7b708e8ba29d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d204e63e-a145-47ae-923f-fa55f87df040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a7dbcc-7b34-4fbd-b457-fcf6a42ecc19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c56c241-e8dd-4751-a3ab-be5c5be5b0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceaf4818-6dfa-4c0f-b9a9-e372a5becd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19188b5-5c2b-4842-bc9d-7d01ae7989ff",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95d40ca-11d6-4552-88e0-f8c8d4a7f32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03591b0-6808-4028-b70c-145406b06232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5889cf7c-bc38-446d-8549-ba8019b80539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0dcc4e4-f8b2-40d0-8e0b-704107ea1665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c902aca1-f3df-446f-88f1-950580674a8f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1474bd2e-1465-405b-b9e3-85e3ba3eb09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ec98c8-b771-4531-8190-6abbd2cae571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f6e715-71a5-4854-832e-1d35aa06bf1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b88951b-809a-4086-89b3-e24134944e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972994c9-7911-4256-9691-66f76c7de78b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79417a5c-7ffd-46aa-8025-fe82772b1e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b20a393-e130-4c91-b273-33c5c7c0252e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4bbd1b-4bbd-4483-b4b6-234e3d79cd73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea1e6f6-9f50-486b-9e53-d063012cd0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1b3cc2-11ef-4f18-b15a-a2d3835d126f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d382d003-40dd-4cca-803b-557427438d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cddca119-1360-4100-bcdd-a1c9586045e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7909ad9f-ae3a-4991-8f17-b3d1ea6918f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65a018a-99bf-441d-a568-e038e4a89b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88bc508-aab9-483a-9002-4e9a2ddd617b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b5dec5-4a0d-493e-b29e-d00a2ddaf4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a014a26b-7124-4a95-8a3b-33d0ee0aa72e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5aa8fe-25c7-40d5-8af3-a378daf5d959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53c7f4e-2685-4c85-9a5f-44741c3a8fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ea35e2-6168-41d0-890f-cedff591d035",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c5401b-8a1e-4b03-b3b2-307eef64347b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841bc0d4-bbaf-40da-9da7-ecb3a56939e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78d57a9-00d8-4c6d-bba4-074a923cf4bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c26a1d2-cadb-43cf-aa36-b021be88138f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453f0903-d1b7-465b-8e41-d3a4c1ccb176",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e88a26-7e48-4e62-9f89-002678c2b167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b79bee-fdc1-4e26-8d15-c6369fce779c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3bd7a1-5426-4027-b240-058df1699ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5f6888-e0e9-41aa-9900-441c931d3dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87944be6-1e1f-4b6c-bb51-486c0084025b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7af4e10-de22-4a02-9fc0-312f85cacf4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9538154d-89e4-4b4e-82ab-269c30f50221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d32fb0-1d55-4b5f-afca-c02728c1e5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f93551-eb32-4bb5-a66a-48b09c12069f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9759bd19-5cf0-43f9-87a3-af11c59a81c9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016c43c0-7a11-408c-a493-d726e5b9ec0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ff4d2e-5065-4ebb-9cc3-ee4f95f3cbee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "133c4f97-d5bc-4c29-9089-27ce49883023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24a9b35-aeef-40b5-b172-8f75382e253d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a0b18e-bb2c-4450-96dd-9dc21d4a66d1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81087618-dac0-4288-ad42-871ea4657426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad70bf3-7aa2-4fd6-8f2e-29d892410c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac236919-6ea7-4259-b819-51943ffe0473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9933b83-2d1e-4fb5-99fe-20db013baefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76db0cd0-c875-4f85-be48-f19ba7111b93",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b509b2-84cc-4eec-a4c8-ba70ac2132dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e5b00d0-10b6-40de-b0f6-f88d63be2084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2449fdc4-268f-416c-86c0-39a5226b37ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f94dd26-a2c0-4297-9159-68f9a1193af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8cd222-4c46-46b1-b717-2c0db49069d0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b674d879-0fe1-4fe8-8085-80b767411a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c432e0a7-ec4f-45f3-88b4-f818f232dbbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f1742d-d26f-49ea-969a-bae5cc4580e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faadd2ac-6fd7-4f0c-8fc5-442098f95909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43491e0-1709-4fb7-aeac-6a58424cc60b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c379c93-74b5-491a-ba69-1b25e674e572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29dd543e-63a7-406a-b4af-3b551104c4a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657c0b3f-a6e2-4229-a705-9e0b7316e917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a21c7ad-92ee-4828-822d-84c9c841f4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd5db29-18b1-468d-bac0-9e9e4fbb8463",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd6dbe0-0e05-441e-9d01-bd4773599d09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f14f142-cacf-409b-a3bf-61ec342d4ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ad2945-ad45-40bc-aae5-b6cb60d63252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697cf437-6960-4ccc-864d-1e333a2da3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0629b69-c3ce-4169-8442-33c944ea9d9e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277bf108-0f6f-4979-a227-bdac24abe990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54817772-f266-4853-8760-46521a3051fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff67d7fd-ad7d-46a9-ab61-41afb3b0a9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95dc275-ace5-416c-84fc-014e81bcda86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48909bc2-9da6-4de6-bbf2-4377602690fe",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b48fef-8916-4eeb-914b-d5f5a2ef33b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "963e81f0-253d-4683-9e36-c1383b8172a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd5fcf9-8052-4cc7-8342-c4a721127d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14ce162-a36e-4789-88ad-3e58250fca63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a60564-4ce4-47b7-9cbe-346bc0c7d774",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87821bb8-c24f-4983-bcc9-2a12e4f88990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff06cf5e-99ac-49f3-91ab-3c93441930ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6177450-e641-474c-809c-e9166a8841ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9538b1fa-5486-4d63-8eab-4c03fd6cf6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc118afc-fa2c-40a0-8887-403697ad7fcb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7442dc-aec8-4819-b698-43398d7b3b04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bff85ba-b653-4f5b-86fb-1ffcbd2494f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c9249f-7c06-4ccc-a001-2ee7279e073f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6963b3e7-203c-43ef-aaf6-5f7bb0146b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe8f89e-85bf-431b-a9b3-2114901d0264",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea81a7b-81e5-4ead-a7c2-690ef2daeaa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e15dc3-84b7-4487-87b3-8810774f201b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024392b3-e2fe-4e55-b0ec-e33395367116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d0328e-2c2e-4ad8-a379-eb87032540a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4034d3a9-762c-4895-9436-e373f95ea948",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5507f664-f62b-46cd-b688-0c66cdfc2bc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a5fd8d5-0bc0-489e-9486-df7bbacb72f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25f7ab3-5db3-4116-91ca-2a61e4c0f675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0897b71-e13c-4ae2-8953-b3f4f95c1b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7979d7b7-c69e-4de4-9c44-2fa48c0eec7a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011bfd5d-6b42-4a48-bbf8-235a99df37ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "932bd0a8-05ef-4a5a-abcc-ae7a5f498dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae5a8cd-48e4-4d44-b2a1-2ca4ade6a443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41f55fe-e022-4c8e-9244-67a11092be35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d092a963-e637-48b9-b54d-0f6453388889",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5789b09c-cf55-4b24-adfc-f973bc5638c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e3d410e-c59a-4f29-978c-37b8a9b8a925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525bf9af-d721-455e-9f2d-d9ab3872685c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "118a4fed-ea3f-4696-a20a-78d593768c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc19aa90-af38-4ff6-8895-8884d36e5b20",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5266619f-e1ec-423b-b75f-3a244729ea61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "161dab7e-2e03-49ab-b29d-a53f77a576e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee16fc1-95ff-4832-b799-3a2529b5c4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30bf79f-38d0-4e49-8001-4cd39635a940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2dd043-5def-4073-acde-c91431500e44",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca296fe1-6e83-4e8b-a1ed-69d7579e4b6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16ed9976-9095-49da-9698-4a21238ffcf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e4e096-c0d3-49f2-b1bb-bd4fa2ae40c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a25b8b-87c2-4fce-988e-9cd79cd4b311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7eef69-f70d-4e53-bcc4-ea1c525cc132",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fec8744-7592-40f5-96f7-c52c83c56266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d0ce7c-482b-440a-b1ef-bd327b203117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5041c02b-a9c0-4c3e-8511-aceb12ebc70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de92141b-7c2a-45b4-8457-5a8aee7d941d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c8026e-abd0-40bf-b45a-1aba3e8cf16e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9c2eb8-b68e-4f13-8694-8b06ef807e46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0dad152-04d2-4dda-92dc-5ad0c9bd2786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb5b3b9-8cfc-42f1-8282-129d62450128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f090d3a4-ce39-4e8b-a740-6cf0498fea75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddcaf05-53e7-4d02-b780-8906a89351ff",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b6a420-c7e3-41db-bf34-062516a7fecc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a266effa-3807-461a-a605-f7e0561b1da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2a697f-f121-4d0d-b493-1c1936c5a0f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ebcebce-998a-4fa4-afa7-d94e002b6012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56631e3b-98d3-4fcb-9548-2cd961931db7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36866ace-8d76-4833-ac94-8821c0a0580e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "429d821e-2ebc-4be3-b44f-39be72d4e57c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2c6a47-a1bc-4874-90bf-cb694a6fdb90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce95240-f81a-4a1c-84f3-f9370e904e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e40ac4-f6ea-43f6-8c40-884f580d15e0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40584151-da14-4fdb-a06b-4a7343eb7ae5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ced0dbcc-db08-4fc0-9d7a-b9c6dddb11b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc17b92-fbe3-42fe-9188-1895de7f8e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4be186-1985-46bb-8c0a-fb297f16eefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1979fcb-c3c7-4e71-9dce-b2382d76d220",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3817ca-7edf-4657-b69f-38510367d667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17152d2d-311f-497c-8e36-8a5178737c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6095efb5-6043-48b3-bf14-87c8aa0443eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35c235a-1b5c-4a47-943a-977c49ca02c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a95d58-37f7-4064-9346-48d462e54428",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d32a3b7-4a83-4448-987f-4a234073962e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6545a6cb-4506-4e20-9142-38c55f530241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf77197-b7e0-4687-a7a5-031e9fc23250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca51b6ba-4341-451e-b723-5f121ce03515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761a4f96-38a9-4fe1-be71-3dc89a2536c8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a07afc-f4ce-436c-8834-c1e06b8c2e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3acd77e1-2058-44f1-9bd7-992926e852b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "022816dd-08ec-48ee-8ddf-69870b9e83e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3968fa4-6bcc-4a7d-9d5a-3ab1fee56107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf4801b-bcea-4ff5-8bb2-f917bdb7d8d8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73f2f57-3707-45d4-b31e-07a48261cbd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fa75f46-e21d-4ce7-968c-f5f32a1dc8bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2021f71-768c-4355-ad21-69423403242e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5900bbd1-4eae-455e-8011-ff2919a3a107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ab32b3-cbe1-4cf7-84ce-6cad9de5da44",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81905cdd-8fb3-4470-91d2-b7a69cb810f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4ef95c0-bdcb-4813-b04d-6a91a84f8797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e072383-2a37-4b7a-bf11-4fff42308a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff3958a1-0ddd-4ccf-9da7-ac72181b9f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5011670-acb8-43eb-a106-9c2cdef46e88",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67edb2d6-3eb0-4a0c-a294-bba6e58ca80a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c77ef5c9-4646-4ad1-b5a4-93d2e41f78a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc748740-75af-4356-b0b0-c76109a64614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e3ebd0-a529-47e6-b34b-211bb00ed057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77485bf-0163-4364-87c3-936b1c36febe",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da3f455-76bb-4fd4-b895-aa5b8269d372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "836cf8a8-f972-4c59-bd7c-87a2c6e28374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4116a63b-36c6-4dd9-a14a-ccc5094ebba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6e3bbd-4056-409d-933e-baf77191e8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372cbcbd-6d15-485a-a824-65317afadf6a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc89a7e-13ba-469d-bf37-8b573110515e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ed59e75-9ba5-44bf-9f82-2f25929d4d7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880d5528-b08e-4e5b-9e43-2936f12537be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e894d954-9e0a-48b0-aa45-0b2f9d64f383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53611959-8eaf-4880-bca4-deb4be030f8f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59297691-4a27-4aed-a899-956289342901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42eb4338-7056-4ff6-b02a-eb1560da9291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430a8d7c-d30d-412b-bb4e-088245459f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b356ff8-b207-4043-a2b6-30aa1c5d9fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b27d5e-6eae-40df-b276-690db99b8b29",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad476dc0-7036-4294-93d7-21e781d21dba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95cfb5ce-f926-462d-a321-d983bdf1562c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0cf2c2-9279-4ff9-a994-6bc10d5d38eb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f18f36-9a22-4733-8adf-8109981d67ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b80569-f076-435d-ae1a-fbf1668fc97e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed525f1-bd96-44f4-bb01-4f0b8431c616",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef024ee5-2811-4a22-b68a-c1ded0766ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccb306d-d221-447e-99cd-7c13166623cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79aa625e-4271-4181-a5e7-bf0ebfb608a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bdb390-27bc-41a9-911c-574610fd8a5a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c683e5-bf96-4207-ae66-3da6082e9a5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d288a54f-67d0-4aef-a50f-5f3056182984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa37d02-2db2-4d40-8f06-d4c156534f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904158ec-72d1-4ddf-a8ff-a9a4c9810e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c4cf21-fa9d-47d0-a3bc-f06b297e5383",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b239321b-ef5a-44a6-b7a7-ccd60edf09d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f961a54d-c5e6-474f-aae2-95807f8ecc59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dafe4a9-792d-4601-a14b-5b7ed0574838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a60d76-86e8-44bb-8976-c5508441311b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c43179b-6254-427f-94b3-5527f9b5963f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39968f8b-ed55-4456-ac06-0dd4f2bc427a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b40231c-2e22-414d-b3a2-6106e928b1b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c73364-0cde-432b-8fea-c27b97d027bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71de58b5-1f49-4b5c-880a-92c700706a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba17c99-de37-49ea-a584-dcd12ad2754e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1a6242-3ee7-4be6-8f43-7dd8a4bf277e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d82330cf-11b7-4cde-b762-dec518894d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466b4547-4526-4e15-a515-e0d307b73971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4afed14-b03f-497c-80b7-4bd8378849f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116cbe8b-768c-4ba8-b9ae-d11bfb6f9f9d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5d5034-0d3f-4f77-b011-655d58edb1bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d59955f-9b74-49de-ae50-f8f0b78e6a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ab422c-4252-4df1-bba4-7dec41eef8d2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39568113-4a65-4b81-b125-0a0555cd9dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269d2f00-d8a2-4495-817d-10657533e5b3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5ca72c-01ad-49c1-85fa-c111c673b580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "305582f6-f990-43e2-82d6-f45ece5084c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed391e4-d3a5-4ceb-b834-740c868b86fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1cbabd-99dc-4ca2-9923-118bcde3f342"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00be62f3-23da-4bbf-8046-3eb5822bc215",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3214ea7f-cff9-4b17-bfd0-a44d70b5c579"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6702292-cb03-45c1-9ac9-897be12551b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da358267-5d6f-4ea3-aa0c-26cbf23a52c7"
                    }
                  }
                ]
              },
              {
                "id": "868ec1fe-f13e-4484-9461-076698466648",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f150aa5d-9988-4c85-8898-ea205616adde",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508c6dad-10e3-4749-9b86-9865cc4c734c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f30a53f1-c81b-47dd-8446-322d78b7f1d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6f676e-0170-4b9a-b06f-95c04a595136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "645a67eb-35ad-4e5b-b4b7-e6ced5c0d31f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78d85932-d485-4158-99fd-b3574a596e0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bce88e7e-422f-4418-9223-bd8ee9c93655"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dddc383-ff96-4c9b-9482-fb6e59c7187b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "936dcbcc-bedd-4851-a15a-e79f499d3b2f"
                    }
                  }
                ]
              },
              {
                "id": "74e2fecc-6f9a-43a3-8232-5641bb0ce24c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "dfae06d7-0708-42b0-b4c3-98b045b1833b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfe5050-6afe-49d4-bb36-be593c35d63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "732c1805-3d04-4c1d-bccd-09ff032aac1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363469a7-1cc7-4d01-9664-9a1fb8f0e214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22862779-750a-4d77-b859-8d91ff26ace3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6a71168e-e6d5-4ba4-a9ec-042c4d1f2869",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0a541b6a-7747-43ac-9c82-8d0a48d1fd7d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b257bf68-c449-4e43-9026-9eff1f7ec3ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "69e8dcc4-4ba8-4bf2-85c6-8cf7c69d722e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dac04d9-3301-4ff0-b816-8a8621610518",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4b300f2-486d-4a46-917e-3e18482f0c80"
                    }
                  }
                ]
              },
              {
                "id": "85b84cfb-fb92-4da6-951a-5e879300b921",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dcc16fd-770f-48bf-8c46-475268cfbc39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7ef4265e-bccd-4910-92e2-c1acd48821a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "930e8d9e-ff21-4b2f-9423-07dbf06b1118",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "970bee4a-b7e9-44a2-b79a-8bf94a5bf150"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5a39db9-53cf-4cfc-ae81-98d222385971",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "23a1cd5d-bda6-489f-897d-c1a4ef264261"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d799e089-dbb5-40e1-8c6f-e24f573dd5e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "950713c6-4289-480b-9fe0-e176f556bd37"
            }
          }
        ]
      },
      {
        "id": "9cede144-25b6-4e92-9631-8d880b7836e4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "63536c9e-426f-4337-adac-3cda212d9fb8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a4e8cfb-b544-4438-b18b-7c06757ed12b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "176a3f65-28a5-4771-a039-0642481fa14f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecbbd36-8828-4cc9-9d85-1cb1bd448ed4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fe5c2ea2-b821-468f-b796-fc3aa16a7271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec55ed9-6b1b-4fb4-a407-ec11a7ae64fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23f6795e-e552-4af8-93d6-7820299fae31"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cea0ac63-d65f-4995-a43f-a90566baa878",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ba253af-54d9-4d25-9f78-b3483c6aa81c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "432cbad7-6bf2-4567-8230-3ce2aaac749d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9086aaf6-11cf-479d-9db1-8d4ffbe4901d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9150e7fd-2c79-4c17-935e-0e4d4d177dd8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "37fe2b56-84a4-4508-bf18-9f2ba94a8493"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4329feec-d840-4c36-98bd-b1bc536e5676",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6668f6ed-9a11-47e6-9b63-bd819e2936fe"
            }
          }
        ]
      },
      {
        "id": "c2a9be70-8a98-4dbb-9de5-9f130281d9fe",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "50032185-74ab-44e3-88d1-224b72331f2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b20eee0b-0c1f-4490-a4b5-992ef08bdcc3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ddac8c32-98a2-41c6-9265-802cd2c45675",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8f3460-1e19-4fd3-9989-fa4ce2a62d8a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df68e2b0-5cc9-4940-bdc0-fb1e6afa3026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72eeab9-d60c-4680-9a95-098f538bf9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bf52ead-38b9-4f53-9317-c68f62bd2113"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bc62708-4f29-41a7-9072-0f51a8666186",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39779932-db23-4053-aeb1-31fe8c546d7d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69665eb8-9a17-40ac-bb7c-18f847a782e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be6ea47a-b3d5-41e8-9ec3-8a70035443c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "695a4b3a-bcca-4753-afec-d331e18dc278",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "10c090f7-6a53-485e-8919-ad918e1b086e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b0ad63c-6026-4d36-a101-f3393d256a7a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ecd44a45-4c61-49cb-816f-73a147f06395"
            }
          }
        ]
      },
      {
        "id": "aaeb4a08-7bcf-490e-a7dc-675514b25004",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "921bc7c8-17bd-49d8-b0a3-ad93c04e20ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97a89178-f936-4d5d-b94d-c367df09de9f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57126ea5-3465-4934-a3db-a5f56bd316ff",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbe834b-053b-4a10-9821-4eeac498acfa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8f026fe-7df9-49a3-b28d-7308110cb332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a694c5d-a766-4e27-9ca0-a6fb41a4fb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71dd12fa-63b0-4e4c-8b69-0a327182d509"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e42b5038-4271-411d-8170-6a7f948c080a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9f48b4d-f377-4634-b8bb-593d5bc8e851"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f9d470a-e2af-4929-859c-535715f0dbbc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5954e67-d66d-4717-994c-fd2eeff5f15f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d4bb0c8-be7a-4119-a738-4d33cdf17c3f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aefc8583-4146-4de9-b4b3-20514774ac92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78691b4b-0e99-4864-a623-1f43e0bacd8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59732bab-ee0f-4016-b4bb-e405ab65de08"
            }
          }
        ]
      },
      {
        "id": "cdc79f36-b572-4e85-9ebe-a4df0626d7e1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0fed76fb-0bf7-47f4-a021-3f9dceaae2fc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5279c37e-3024-4b0a-9e37-d3401d6b7314",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ed74f4ca-defd-407e-afd6-4a3b82ab9f65",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac780509-ee2d-4c24-9d33-e0fb3f468d73",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20a4aa61-bb1c-4c0a-af6a-faf283d86e88",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 445.05555555555566,
      "responseMin": 21,
      "responseMax": 14279,
      "responseSd": 2107.278604257442,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725929008690,
      "completed": 1725929129722
    },
    "executions": [
      {
        "id": "16aefacf-c508-4c83-b62b-c39ec31182c8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "86320239-36c6-4ef3-b05b-c21fa868cab5",
          "httpRequestId": "842c86c3-bfc1-49ff-875a-21150b018ce7"
        },
        "item": {
          "id": "16aefacf-c508-4c83-b62b-c39ec31182c8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "48ca29d1-bb86-40b7-bfd6-192ab81f0570",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 0
        }
      },
      {
        "id": "b857fb29-c214-440d-8dc4-141045d85f8a",
        "cursor": {
          "ref": "6fa72475-e9ee-4215-9ff8-8141f739c18c",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d1c28647-5b58-454e-99d8-5c4e38c5dc6d"
        },
        "item": {
          "id": "b857fb29-c214-440d-8dc4-141045d85f8a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "13727379-3a49-4ce1-b33a-d9a8feb3d61c",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "630bcfeb-9edc-4764-9e91-f1c8a94e142b",
        "cursor": {
          "ref": "e8413408-5185-4fb1-8efd-b70e5676e1b5",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c015b119-1df8-456a-a9de-111a087346f9"
        },
        "item": {
          "id": "630bcfeb-9edc-4764-9e91-f1c8a94e142b",
          "name": "did_json"
        },
        "response": {
          "id": "4baf1e33-714c-41e2-9e61-14ad83168799",
          "status": "OK",
          "code": 200,
          "responseTime": 370,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c562ada2-ef20-4697-9cca-ad0eb3189bd2",
        "cursor": {
          "ref": "47cb26c4-7f4a-4567-8c66-26e772d35c06",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "14d78e30-94ff-4f28-8b90-9e86b07eca97"
        },
        "item": {
          "id": "c562ada2-ef20-4697-9cca-ad0eb3189bd2",
          "name": "did:invalid"
        },
        "response": {
          "id": "431a05a8-9b44-4963-a885-1092ec480b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2372,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c562ada2-ef20-4697-9cca-ad0eb3189bd2",
        "cursor": {
          "ref": "47cb26c4-7f4a-4567-8c66-26e772d35c06",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "14d78e30-94ff-4f28-8b90-9e86b07eca97"
        },
        "item": {
          "id": "c562ada2-ef20-4697-9cca-ad0eb3189bd2",
          "name": "did:invalid"
        },
        "response": {
          "id": "431a05a8-9b44-4963-a885-1092ec480b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2372,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537d6c26-876d-461f-a7d4-55ccec9987f8",
        "cursor": {
          "ref": "e2bd8275-a91b-4568-a127-e093d453f5cf",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "74d777cc-3986-4ad0-8ff7-b755e77de093"
        },
        "item": {
          "id": "537d6c26-876d-461f-a7d4-55ccec9987f8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "644f7f83-0351-4078-8a88-c356f8ef3777",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2584,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f899117c-d1ce-4028-b349-45c384d1b264",
        "cursor": {
          "ref": "8a93f4ab-ae75-4050-b0b2-b0c20acfc16d",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b5ba2b59-6178-4fe7-a224-294fec982f7d"
        },
        "item": {
          "id": "f899117c-d1ce-4028-b349-45c384d1b264",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "37ed5123-f2c5-4517-838b-668dea151fc7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1948,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbb0a75-67c3-4620-a35d-32b3e877141e",
        "cursor": {
          "ref": "dd3ab9d4-fa3b-43c6-af42-ac4860979bee",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e6f46332-fb48-4fc2-bc99-2bc77806f596"
        },
        "item": {
          "id": "6cbb0a75-67c3-4620-a35d-32b3e877141e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e86abbd6-1d20-4896-9dc8-ab1923dae8fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aecd82f-a924-4fab-962c-eb2ce12fe815",
        "cursor": {
          "ref": "4acbed4b-10fc-4467-93d3-866db15154f9",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d36bf99e-7788-47f6-ae9e-5ed9a2cfd72c"
        },
        "item": {
          "id": "0aecd82f-a924-4fab-962c-eb2ce12fe815",
          "name": "identifiers"
        },
        "response": {
          "id": "50033362-4630-4dc1-a306-55b2bb2d9148",
          "status": "OK",
          "code": 200,
          "responseTime": 2151,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef770679-fc53-4398-a99a-16f86cc3dc92",
        "cursor": {
          "ref": "cb5110e0-a76e-4f56-9dd8-8fb682d0d9ff",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5962d874-c487-4a40-8a05-66d00ee5eb81"
        },
        "item": {
          "id": "ef770679-fc53-4398-a99a-16f86cc3dc92",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "09169820-48de-435e-aad8-d9060aa647af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51efa576-3086-41e2-a3ad-1b3d2496b011",
        "cursor": {
          "ref": "5cf6c00d-3efc-460a-828f-646f0571dfe4",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cfeb09d9-38cb-45c6-89da-fd47900ac99f"
        },
        "item": {
          "id": "51efa576-3086-41e2-a3ad-1b3d2496b011",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f12b1659-b182-4319-a06e-8858bfbc22b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa9f8cb-73da-41df-8dc7-72da5dd27a75",
        "cursor": {
          "ref": "75b2c693-07f7-48d0-8e5f-af3a58000cbc",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4521294e-3c80-4d6b-883e-47d55cb6e0af"
        },
        "item": {
          "id": "2aa9f8cb-73da-41df-8dc7-72da5dd27a75",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "73ce24f2-95bf-49ed-a44d-231e6cfe057d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8693d399-c548-4b4e-8e72-6154b0e54de9",
        "cursor": {
          "ref": "80f2cfb8-a6af-4cec-a2fb-8dea8187ce61",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d73ecae8-4182-4690-a195-aa3c12a01563"
        },
        "item": {
          "id": "8693d399-c548-4b4e-8e72-6154b0e54de9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "82722412-cd11-411a-b9f7-bbd3b5eafb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1debddd6-9632-47da-b3fd-e446f9fba1ce",
        "cursor": {
          "ref": "1095211a-b384-4932-8bc3-e87b063c785e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2515c1b8-b534-4477-bd54-4d6bf6f136c1"
        },
        "item": {
          "id": "1debddd6-9632-47da-b3fd-e446f9fba1ce",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "eee9d6ed-b051-4d31-918f-cc574d7f7ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8631bc-6bce-4243-af3e-95c089118bcf",
        "cursor": {
          "ref": "3867368c-362c-430c-b416-5a4f2dc29176",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8d92b5d2-6507-469c-9802-355fd3e6bd51"
        },
        "item": {
          "id": "5a8631bc-6bce-4243-af3e-95c089118bcf",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0f1f151e-a5ad-44c8-822a-deb93579a198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8740884-2992-4ddc-8a11-4e2e123451fc",
        "cursor": {
          "ref": "09f7c438-affe-4ae2-86d0-080ec4c2a40c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "feedb53f-7372-4515-9ae1-294e583c9cc4"
        },
        "item": {
          "id": "b8740884-2992-4ddc-8a11-4e2e123451fc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4bf22b17-2c9c-409a-8603-78ceac4d8638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd4788a-25d4-4309-8e2a-cec367279d30",
        "cursor": {
          "ref": "177beca5-e29f-4005-8439-21fc6b1f8942",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ea055caf-4098-48b1-bf20-185beef8c1f6"
        },
        "item": {
          "id": "dcd4788a-25d4-4309-8e2a-cec367279d30",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3627c5ed-25fa-4ef6-b11e-9a2db41fa921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c673d3c-32dc-479a-b5d2-3999f0dd892b",
        "cursor": {
          "ref": "7d2c73ef-d1de-4d07-b4e6-e5d18dc128a3",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "adeca4e1-d211-47fa-be83-084d939dfd58"
        },
        "item": {
          "id": "5c673d3c-32dc-479a-b5d2-3999f0dd892b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9aba6480-947c-407c-964b-664763eff920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155c3e4e-9547-4831-9cc1-e94938acae9a",
        "cursor": {
          "ref": "adfe269a-ae47-41db-bfe4-b5fe133b75ad",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ca9779ce-49d9-4b2f-aaa0-6d214be1d3a9"
        },
        "item": {
          "id": "155c3e4e-9547-4831-9cc1-e94938acae9a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "51b9346b-f6a0-41ae-ab1d-a8727644c0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017a3c35-40be-4bca-9815-6dc7c3ed2e08",
        "cursor": {
          "ref": "7bc590f8-9adf-4b63-97c9-1d0468cc6ac9",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fe11e8bd-d21c-4f88-ad4e-262cefacd2f9"
        },
        "item": {
          "id": "017a3c35-40be-4bca-9815-6dc7c3ed2e08",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "97ad2fe5-854e-4215-a329-f4a1f7ddc52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad91da8-e4ac-4719-befc-10a2d3ff102d",
        "cursor": {
          "ref": "f17b18df-15c2-4215-9cb3-2cb408674a10",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "66fc5f58-d779-4d3d-835d-32e3d28049b3"
        },
        "item": {
          "id": "0ad91da8-e4ac-4719-befc-10a2d3ff102d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "573c0a98-0f01-447d-86b4-39eaf5465cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1636ca51-dc6a-43a2-95e4-926d98f6a326",
        "cursor": {
          "ref": "027d49f3-da41-444e-af53-a98e67df3ddc",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "367aa7d2-c924-445b-a1df-77a6014b3464"
        },
        "item": {
          "id": "1636ca51-dc6a-43a2-95e4-926d98f6a326",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c50fd942-5215-4037-81ad-9e72f395e846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f61a8ae-5f11-4c6b-be89-060070b0eb05",
        "cursor": {
          "ref": "f3c344b5-5f95-4e04-bbe4-b5421cda3c04",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9d5705bb-88b7-490e-834a-9712b875328c"
        },
        "item": {
          "id": "4f61a8ae-5f11-4c6b-be89-060070b0eb05",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0d64660a-726a-4e9e-99b7-02e59edc860d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85b834f-d8b4-4f51-8806-1a134a605670",
        "cursor": {
          "ref": "ef19e376-616e-49d7-9186-a9cb223d9d25",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "759a2ad2-9b75-47a9-9ade-270c868490bf"
        },
        "item": {
          "id": "b85b834f-d8b4-4f51-8806-1a134a605670",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "361ed9c9-b05c-4caa-a0c5-50771167e41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23dc17a5-8fda-4928-93dc-ee9e06caf51f",
        "cursor": {
          "ref": "67ca718b-433a-4a4d-826a-9a7c9a45b82b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e8c82c17-d335-4e9f-900a-efccff3483f1"
        },
        "item": {
          "id": "23dc17a5-8fda-4928-93dc-ee9e06caf51f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0f546530-52e6-48f9-a1b9-3dda88dfacb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e5a98f-a060-42df-bbb5-4c9f4fafae79",
        "cursor": {
          "ref": "494792c1-da3f-4585-af99-fd48ab73ad7e",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9689c632-1f3f-4003-a445-637696dc1425"
        },
        "item": {
          "id": "46e5a98f-a060-42df-bbb5-4c9f4fafae79",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "159e40aa-3412-4307-aef0-9f361f0f39ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d575398-74c4-4b34-a9fa-f9554ce0fcea",
        "cursor": {
          "ref": "ff1744ac-a44b-47dc-aa90-6f01490bdc65",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fd5cabf4-b4d1-4a9a-8f75-5371102b43af"
        },
        "item": {
          "id": "6d575398-74c4-4b34-a9fa-f9554ce0fcea",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6f43cafb-759c-4f69-aea0-988eec4fb290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fe93e3-9b52-4103-b335-d8dd004ea262",
        "cursor": {
          "ref": "3860b17b-2edf-4a65-acd8-d0f8259f009d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2e7a9caf-bd1e-436b-b19a-2d5ebac03a5b"
        },
        "item": {
          "id": "61fe93e3-9b52-4103-b335-d8dd004ea262",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b86891ef-b619-42f8-b069-c5acf70fd561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18df7be6-3b8f-42fd-a323-464fa6616283",
        "cursor": {
          "ref": "f22f4c61-76ff-4c27-ad20-0e3302ec7ea3",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6e276bdc-7f20-4b65-8fbe-c3502817f8d8"
        },
        "item": {
          "id": "18df7be6-3b8f-42fd-a323-464fa6616283",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f61d6aaf-c0cb-4439-9eb7-ef1c5cd3fb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730f1dcf-4554-4e27-a54c-0550c9f5d233",
        "cursor": {
          "ref": "d99758c9-5918-4717-8541-f161acfcccff",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5dcacda3-a9ef-434b-a87e-5e01bca27a4e"
        },
        "item": {
          "id": "730f1dcf-4554-4e27-a54c-0550c9f5d233",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "211975df-5784-4870-aa3d-89f77ccb5bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b206820d-6035-429f-b9e3-036a7b394dbc",
        "cursor": {
          "ref": "354de3ec-825c-47f1-b282-06ebfa7bfd92",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1411eb4a-2b7f-47ed-888d-ef21025cbdbd"
        },
        "item": {
          "id": "b206820d-6035-429f-b9e3-036a7b394dbc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "166695ef-6692-474b-b16f-c236cb64792f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d7dfb1-0a9e-4955-88e3-9a4e897885d9",
        "cursor": {
          "ref": "a26bf36f-3108-4583-af5d-e50bc2b04367",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "91f0496f-74c8-471d-8fc3-b24c57b55455"
        },
        "item": {
          "id": "13d7dfb1-0a9e-4955-88e3-9a4e897885d9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2013a29f-2b26-4d44-8dad-4d0c77bf7a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37441bcf-9f8c-40af-a108-89d25e788e01",
        "cursor": {
          "ref": "24ea04a4-fd20-430d-ba4c-4107e66d5e28",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3dbfc737-4bce-4846-b4f8-e7b1fcb08394"
        },
        "item": {
          "id": "37441bcf-9f8c-40af-a108-89d25e788e01",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "77c8305b-e1b1-4596-9668-af645a4f1470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06384ac-1f6f-432e-aafb-8e991c4520cf",
        "cursor": {
          "ref": "f9ed0cf0-13ca-4ed6-9146-b37ce22197be",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a8a1742e-b16a-46ee-ab6b-2b9e2420fad0"
        },
        "item": {
          "id": "b06384ac-1f6f-432e-aafb-8e991c4520cf",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e2a63332-c4b3-43ac-860e-c1a4830e1e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52e3a39-6573-4cfe-90dd-2b348324998e",
        "cursor": {
          "ref": "4d998441-2905-43d1-876b-e52a32ca704d",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a7ef21c4-cfe0-42d8-8df3-3bdaf0d9a2c9"
        },
        "item": {
          "id": "e52e3a39-6573-4cfe-90dd-2b348324998e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "16f9c4c5-7f7b-4289-9ea8-c0a7a22e4dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addf187c-228e-47e1-abf2-29939e57b299",
        "cursor": {
          "ref": "ce76306b-14c5-4b31-bc98-9bc673676ad3",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9c4b1116-aafe-4b56-87a6-da9d0b267db9"
        },
        "item": {
          "id": "addf187c-228e-47e1-abf2-29939e57b299",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "02173008-81ec-4245-8bcb-6d21e1b33313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec390733-feaf-45a8-961c-ea62d7a8ce83",
        "cursor": {
          "ref": "7d2f60a4-db09-4941-8066-21200df7240d",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1c192e12-c26f-4b45-b07e-ccf6f6ff4a09"
        },
        "item": {
          "id": "ec390733-feaf-45a8-961c-ea62d7a8ce83",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f01867c2-8ee9-42c8-a952-216d7b4716f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9becd2c-cf68-4dde-8957-16aeae8b542f",
        "cursor": {
          "ref": "38ad8aa3-2704-4cc5-9051-0ed9b0c50b3d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5372f268-4b7f-4d76-8724-a7acfc2a3c5a"
        },
        "item": {
          "id": "e9becd2c-cf68-4dde-8957-16aeae8b542f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2d0c7acf-5a04-41e1-8ed9-ad03f76e37e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e0a667-ce20-43bc-aede-f2429ca6c3ef",
        "cursor": {
          "ref": "d3ff8545-4953-4c1f-9b17-2313e53f6613",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9325a0fe-2e1e-47b8-9370-226354337d9a"
        },
        "item": {
          "id": "68e0a667-ce20-43bc-aede-f2429ca6c3ef",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fb69595f-6c5b-4f35-9631-fb52314df823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1aa01a-533b-4181-a611-7e396557be8c",
        "cursor": {
          "ref": "51071c83-4f16-4bc6-b391-f1318f99ef96",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "be19c9b1-4522-4c8b-867d-f0d2ea4eff50"
        },
        "item": {
          "id": "7c1aa01a-533b-4181-a611-7e396557be8c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dc8bc301-42e3-42cf-8472-2d17f5d63673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2ab479-6322-47a8-8991-4b52943a216b",
        "cursor": {
          "ref": "4f09ebb6-4a89-4628-adca-3a3e8a4e2c0c",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e57efb7d-acbd-4172-b777-b844eb0e2c33"
        },
        "item": {
          "id": "4f2ab479-6322-47a8-8991-4b52943a216b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "24571ba9-05e7-4ee8-a82f-803c9b2e34d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259ed3f1-aef0-4d41-a0bf-50d7140ab3be",
        "cursor": {
          "ref": "5ddf1b68-1203-4ec3-a15e-8462147bbb9c",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1c0aca1c-326d-450d-a971-c22560822cd8"
        },
        "item": {
          "id": "259ed3f1-aef0-4d41-a0bf-50d7140ab3be",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8338c693-39d7-41a3-9c5a-fd5585b8fab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35a7a2d-4ea2-47c3-b302-67577881a5a1",
        "cursor": {
          "ref": "57e55efb-ac69-4066-9b33-57719c035c77",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b44e426b-902b-4f10-a4cb-86e88b842745"
        },
        "item": {
          "id": "e35a7a2d-4ea2-47c3-b302-67577881a5a1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d04307cc-e404-4835-8b89-4b78e99bf62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2257e3bf-e4e1-4b61-80d3-6a042e96e200",
        "cursor": {
          "ref": "21977e59-3cb7-4c71-8333-946ac6a3aa02",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4ce72aeb-082e-4e49-8c13-2c85b8b608ca"
        },
        "item": {
          "id": "2257e3bf-e4e1-4b61-80d3-6a042e96e200",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "18280fb9-4fe8-42f5-8a03-f1a5d49d7d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2423dcb-3202-4c9a-ae1b-156c5a89caa7",
        "cursor": {
          "ref": "bedd82c4-e5ef-443e-9007-bb1aaf4d95e4",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9cbeba37-0227-4d40-9dbb-5203284bd0bc"
        },
        "item": {
          "id": "f2423dcb-3202-4c9a-ae1b-156c5a89caa7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "be5b6c76-1932-4de7-9f45-0d3d76df0a6b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 53,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78468bbe-9f8e-4f08-9f67-ec2907bb6d7d",
        "cursor": {
          "ref": "6b738f6c-65d8-46f2-8ca9-1f72653e0bad",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bbeac54b-2e7e-42b3-8356-d16086c3dc6a"
        },
        "item": {
          "id": "78468bbe-9f8e-4f08-9f67-ec2907bb6d7d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d2c85488-d15d-451a-b1e5-62a21b829b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facc3610-a37d-4fc5-980b-8f0cd89243aa",
        "cursor": {
          "ref": "8407aa6e-1eef-4672-9d6c-ce6c1de85db9",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0b98cd89-4743-42fc-a2e2-ca871b883e38"
        },
        "item": {
          "id": "facc3610-a37d-4fc5-980b-8f0cd89243aa",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b80cd413-1fea-4996-85ff-9964dc9f0956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17be84ff-7c44-4d71-b140-5137a3133681",
        "cursor": {
          "ref": "b088c1fb-2f38-4e45-a718-c7f08b3b8c19",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "335037ad-e996-47fd-b400-4b318b331979"
        },
        "item": {
          "id": "17be84ff-7c44-4d71-b140-5137a3133681",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "959b9771-ac35-465a-8551-3be35f25146a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a4fe98-2b1c-4b2c-a693-d4983cee7cf9",
        "cursor": {
          "ref": "cd7b7475-dc82-49c6-af90-380b1d40be5f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "066b84fb-f061-4cbb-aff4-5db175b10a71"
        },
        "item": {
          "id": "25a4fe98-2b1c-4b2c-a693-d4983cee7cf9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "435d0164-c561-4b40-9c66-a102fdc66cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7d874d-5232-461b-be85-f11ce7963572",
        "cursor": {
          "ref": "131b47e4-cfc5-4fec-a9e6-f64d09f68473",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6e32daaf-678a-4ca2-bc0f-c89b973e2fcd"
        },
        "item": {
          "id": "7a7d874d-5232-461b-be85-f11ce7963572",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7dc6d019-b2d7-42a8-8fe1-ababb4576f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587689a6-2235-47fc-ab0e-0d842d48314a",
        "cursor": {
          "ref": "89a4e647-0651-492c-825c-2b9a18f3df6c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9083a91d-4434-4861-8711-ef06fb0f6693"
        },
        "item": {
          "id": "587689a6-2235-47fc-ab0e-0d842d48314a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d1390ffa-eddc-49c5-b205-0d2543f29663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843e34b1-3709-4d54-a20a-134e749a2f15",
        "cursor": {
          "ref": "e0da3394-28a8-4c34-a98b-6c00bce0951d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7a3c7f8d-b17f-4203-a293-95d8ccf7e026"
        },
        "item": {
          "id": "843e34b1-3709-4d54-a20a-134e749a2f15",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0778eeda-836c-4a43-935c-e67195412230",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 48,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef3a327-09ae-43d4-b4ab-d98bfeca459b",
        "cursor": {
          "ref": "f99e263c-74c1-4043-acf0-613ab5d58d74",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8c7445ab-8cf3-4242-8cbf-37abf5cf5c29"
        },
        "item": {
          "id": "eef3a327-09ae-43d4-b4ab-d98bfeca459b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e0ca1a49-1679-4db2-97e1-bf07118c9864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7080dbfb-0f70-4341-babb-37c58bc1adf6",
        "cursor": {
          "ref": "c8f1fff6-e38f-444a-a229-11d8ad6e4289",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4805ab52-e8b6-493e-ab59-5db1f85658d3"
        },
        "item": {
          "id": "7080dbfb-0f70-4341-babb-37c58bc1adf6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "87ea45f5-369b-4aa0-9dc1-0b2a092e4718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1933ac8-d93c-49c5-9450-a0696c9aaedd",
        "cursor": {
          "ref": "53cfda7a-7117-420b-88ec-da2f2aa7f658",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "48e280be-9c24-4625-8de6-1f8994ee9cca"
        },
        "item": {
          "id": "b1933ac8-d93c-49c5-9450-a0696c9aaedd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8ca517e9-cbf2-4801-868e-88a177549b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c48a50-2b48-4674-8749-926aa3dfe3df",
        "cursor": {
          "ref": "f9d30fe5-82fc-446d-abd3-44244128c85e",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f32d7e8a-c358-4721-928f-cfcb5369b83a"
        },
        "item": {
          "id": "39c48a50-2b48-4674-8749-926aa3dfe3df",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "013d5fc2-a5c1-4206-b265-6c9e0dfe7e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c3a0ec-c16c-448b-8ee5-175529a0bb41",
        "cursor": {
          "ref": "59c928c6-bc85-4e71-88b4-120e11cc4e87",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8b55be6e-cf3b-49ca-8122-b8712ea018a3"
        },
        "item": {
          "id": "b2c3a0ec-c16c-448b-8ee5-175529a0bb41",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c4f8e066-c8ab-4f99-8611-e98504d3c061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f4efe8-9b5c-4adf-80af-5aeaa5a31595",
        "cursor": {
          "ref": "5a53fd64-2500-4556-bed2-cc2bd3ee1733",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d4c411c1-1186-48f0-8672-e0c4943ead4a"
        },
        "item": {
          "id": "e5f4efe8-9b5c-4adf-80af-5aeaa5a31595",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "01d0dd21-e04a-4d29-b088-745fbfcb2289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e76fb0-e0b8-4aad-a091-e87700f421aa",
        "cursor": {
          "ref": "436ee0d4-5adf-42ca-acb4-7383a00d76d6",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bd72c239-8e3f-4eaf-bdd8-70d854f7ea30"
        },
        "item": {
          "id": "37e76fb0-e0b8-4aad-a091-e87700f421aa",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7f99d470-960f-4c8b-851a-270e1a8293a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f5fef6-9e35-4fbc-8f86-6a7718441a00",
        "cursor": {
          "ref": "c9b5b6b9-d7f4-4edd-a8c3-847347a62caa",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4c0e137e-f734-4cd8-9e1d-0284989c1c9a"
        },
        "item": {
          "id": "16f5fef6-9e35-4fbc-8f86-6a7718441a00",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c0c6cc89-2d6e-4ba7-8bf1-66b9c7cb12e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95df3968-6563-407c-9c09-519cd5129a6c",
        "cursor": {
          "ref": "37edd639-62fa-41d9-b79b-bbccf7a46ad0",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9eb57878-0049-47ce-8b77-537dff534e79"
        },
        "item": {
          "id": "95df3968-6563-407c-9c09-519cd5129a6c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "973dcdfd-7257-4fc8-ad61-207f247cbbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e531e22-c7a8-4131-bf40-c759df656cb1",
        "cursor": {
          "ref": "933b109b-9b93-44ba-bf02-c965b32bd99d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "440540c0-bd91-406e-abc6-090a5f0b15c5"
        },
        "item": {
          "id": "6e531e22-c7a8-4131-bf40-c759df656cb1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2bf76cea-0632-4eac-a361-8cc17a0464a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe5d24b-1d01-4f0c-883f-419c9e244971",
        "cursor": {
          "ref": "138aeb37-cce6-48f3-a8fd-5eb8ad005413",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5489b1d7-036a-444d-960a-2a7267e66c10"
        },
        "item": {
          "id": "0fe5d24b-1d01-4f0c-883f-419c9e244971",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "511f7a43-17b8-4466-b2b5-3abe232017db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d84c40-d2c3-491b-a9a5-c18f62a6d6a5",
        "cursor": {
          "ref": "41cfa9bb-a617-4015-8902-9e974212a104",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8edca5c3-90a5-4b13-a497-a1be868ac25a"
        },
        "item": {
          "id": "88d84c40-d2c3-491b-a9a5-c18f62a6d6a5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "245fd7d5-3204-4e61-a700-e8f3ef68fcdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f196e3dd-70aa-410a-97f4-73e53b38d65c",
        "cursor": {
          "ref": "0401baf3-4ce5-442c-8b13-18e33108f116",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "23ce1522-c343-46cb-96a0-f4dc28b4fa6a"
        },
        "item": {
          "id": "f196e3dd-70aa-410a-97f4-73e53b38d65c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4824db54-e19d-4d25-a792-cd6f79989da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9155167-17ba-450a-9bbd-6fd5ec6257d0",
        "cursor": {
          "ref": "c46f8dd7-9dcf-4317-bdf0-961e5594ed4e",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b7781c1b-4033-4105-baeb-5bc9d64f6361"
        },
        "item": {
          "id": "a9155167-17ba-450a-9bbd-6fd5ec6257d0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4167bb85-331b-421c-92a2-be886df58c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a90f129-972e-4d86-a113-ccef1a74ae71",
        "cursor": {
          "ref": "c6c33ef8-f2ed-45e8-87e2-927c1b7956db",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5d1ba44d-f104-497e-92f9-87ed7613f756"
        },
        "item": {
          "id": "5a90f129-972e-4d86-a113-ccef1a74ae71",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "99bd28de-cf78-432b-b33c-8d46f6b61515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732388bc-2a94-467e-9de1-220407ec5baf",
        "cursor": {
          "ref": "1cb4a916-e47e-4e83-b70b-d1b96519b644",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f42c7e6f-ea8d-46a7-adf0-a2b3355b6420"
        },
        "item": {
          "id": "732388bc-2a94-467e-9de1-220407ec5baf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8790c88a-a5ce-446d-947b-72e14c2f0357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719d23b8-acf6-4228-ad0a-5b63d7c6205c",
        "cursor": {
          "ref": "2f063879-8048-46b2-b454-76a6a04f69b8",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8d875e84-3dce-44c9-87da-efaf78eba82d"
        },
        "item": {
          "id": "719d23b8-acf6-4228-ad0a-5b63d7c6205c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "56651858-4fe1-4306-8a9f-0f8fbd8d9c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d873ba-083f-4fe7-993f-bc29edcf376f",
        "cursor": {
          "ref": "8a7c7c33-88dc-47fd-bae5-7f612f211265",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bd775bdc-8a95-4fe5-b088-7da3e8dbd504"
        },
        "item": {
          "id": "e6d873ba-083f-4fe7-993f-bc29edcf376f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2be44bf6-6109-4955-8117-e33076057264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ba9697-613e-4174-a7f1-7f2452a61b3e",
        "cursor": {
          "ref": "c9a6bcbb-66a9-4fc7-a604-ffbb199038e9",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d5e106cb-6335-48fd-9d15-0cb84290755f"
        },
        "item": {
          "id": "f9ba9697-613e-4174-a7f1-7f2452a61b3e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "926e53a4-eef7-44be-b360-e9248832a446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ec807f-7300-453c-8ecd-e413f0c72a09",
        "cursor": {
          "ref": "7452711a-352f-4930-a129-8eb584c19344",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2d54b88d-c340-4ba2-982d-4bbe02b8ce0f"
        },
        "item": {
          "id": "38ec807f-7300-453c-8ecd-e413f0c72a09",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "52ff8f23-3d3a-4ba4-976b-8623c498212d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbae9a07-0683-4301-a478-bdfd38202d1f",
        "cursor": {
          "ref": "513471e3-3527-4cbf-9f56-d50dc61ee6ff",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "229c5ef7-bba8-470a-97b8-5cc70a26d3be"
        },
        "item": {
          "id": "cbae9a07-0683-4301-a478-bdfd38202d1f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bd9f69af-5ebf-473d-94c2-e3667a256582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84493fdb-2e0c-4d48-94a3-3b2814cf4cb7",
        "cursor": {
          "ref": "9fc7f5e6-b102-4609-bfa6-42b9d7bbb22e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a2ce619e-2f40-4008-a9a0-186d83fd77b1"
        },
        "item": {
          "id": "84493fdb-2e0c-4d48-94a3-3b2814cf4cb7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d7a4017a-a1f9-423f-bd7e-9342a435468a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74daf662-2ec7-445f-959f-9920c215da1e",
        "cursor": {
          "ref": "d02f36c3-7fee-45f2-9a3f-3f6c3f5bfc47",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "609942d6-10eb-4e60-a437-27dc832010ff"
        },
        "item": {
          "id": "74daf662-2ec7-445f-959f-9920c215da1e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "103d0ef6-82c0-4ce8-bdae-c36c18feb382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8a0b46-de9a-4e68-bfce-4bea9e270551",
        "cursor": {
          "ref": "171f77b5-8772-4729-ac1e-d191130edd3a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "34033540-ac1b-4af2-a51d-db4bfbbc8f66"
        },
        "item": {
          "id": "5a8a0b46-de9a-4e68-bfce-4bea9e270551",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e3454561-0424-42ff-99d0-5d3db0929387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5a144e-8738-4bd0-b1a4-8b5a2b7bdcc6",
        "cursor": {
          "ref": "25ca27c5-b333-4a5d-b8ad-bac09a5b54e1",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "122b098f-c553-4bd6-80cc-a81f5a908914"
        },
        "item": {
          "id": "9d5a144e-8738-4bd0-b1a4-8b5a2b7bdcc6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b4a6b782-629e-4f49-8a77-01c6f143cdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff37b34d-bc28-40ec-bc30-c4ceed587170",
        "cursor": {
          "ref": "bee7a1a4-8069-48ec-aef2-cca4ae40eede",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "566fbd74-107c-4aa5-b90b-f6d12a36c936"
        },
        "item": {
          "id": "ff37b34d-bc28-40ec-bc30-c4ceed587170",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "69662ef4-dbb5-4aba-888d-69a164662f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b2d9bf-1bfd-49b1-b851-5bbad938c47d",
        "cursor": {
          "ref": "1e85d776-51e6-428f-a1a3-550f31747a27",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "76c4d29c-d954-4d7c-970d-454ff9c09dd0"
        },
        "item": {
          "id": "21b2d9bf-1bfd-49b1-b851-5bbad938c47d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8313dddd-2c1d-4493-85ab-da59ae3b8a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7da938-f1e0-450b-b32c-a360e0ec5257",
        "cursor": {
          "ref": "f98dcc00-2ed5-44a1-8db1-e52986019f0d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "162ee627-9457-46c0-a195-1405bf8ed2ac"
        },
        "item": {
          "id": "db7da938-f1e0-450b-b32c-a360e0ec5257",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "403422bd-924f-4cfa-b543-65cd869e4c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59cd5496-3149-43c0-a662-ea181f44f1d7",
        "cursor": {
          "ref": "97e7b655-1753-4b98-b731-da0be76750f9",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7e2ae18d-6f27-4ca0-b182-44a18d5c05f0"
        },
        "item": {
          "id": "59cd5496-3149-43c0-a662-ea181f44f1d7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "af2a98ba-3a34-454f-a5f0-d9567e3a4f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e8e0e5-9165-4e61-bdde-5e1eccea90ac",
        "cursor": {
          "ref": "8a0e4d74-f93b-4fbc-ad07-fd12199c5fa3",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "23dbfbbb-c224-4566-b3db-434ebfb2bba3"
        },
        "item": {
          "id": "a3e8e0e5-9165-4e61-bdde-5e1eccea90ac",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "513a2104-8a33-447b-9a2a-0af4ca05eaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9aede2a-84f7-4215-a20b-29d3d792cba4",
        "cursor": {
          "ref": "4c3163d0-5109-4d6d-8d01-dc9b30aa35e2",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "624d590c-d552-4c3a-9d4a-8816fc0a635b"
        },
        "item": {
          "id": "c9aede2a-84f7-4215-a20b-29d3d792cba4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "07c0ff76-c7d9-4562-8220-36303921e1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6112f6-8daa-4fe0-846e-73858f438546",
        "cursor": {
          "ref": "a088fd3c-b9c1-4008-8d1a-53ee18df6ffc",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "79d3dd33-16e3-4aed-b5f8-730caf71ca38"
        },
        "item": {
          "id": "cc6112f6-8daa-4fe0-846e-73858f438546",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "45c04f70-98d1-4e90-b47d-a4c17aa8e547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1458ba61-7fad-4e2f-82c5-4288ce54108a",
        "cursor": {
          "ref": "aa8c4c03-df7b-4562-9447-aaac2b07cfcb",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "99f51200-4707-40dd-a9df-183480f25e9b"
        },
        "item": {
          "id": "1458ba61-7fad-4e2f-82c5-4288ce54108a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a3a215e0-2203-464b-8a3b-e8faa0c314a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b067fc7-ed1b-4dbf-9fdb-5bdae5cc2a40",
        "cursor": {
          "ref": "fca959fa-32bb-4724-b490-ab15ce838de1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0a058d99-5b4b-42f2-aba5-b7d2dfc2fb01"
        },
        "item": {
          "id": "3b067fc7-ed1b-4dbf-9fdb-5bdae5cc2a40",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fb25aa50-313c-404c-91ba-3868fe5f6a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a091c6-cea7-499d-a862-5c25c8d156c6",
        "cursor": {
          "ref": "ccd304bd-8c72-42a0-b958-48131ceee46f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "91ca37b2-fe98-4194-9fb6-4d66347490f1"
        },
        "item": {
          "id": "c1a091c6-cea7-499d-a862-5c25c8d156c6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7fd8ca6b-2be5-48e9-91db-bd4a991b7245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cc72fa-757d-4134-b443-f7da2f9cfd0a",
        "cursor": {
          "ref": "bb5c5f1f-ce58-4f71-abe1-a4a7657605f9",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8b64ee19-9534-4b5b-872d-e8976298b0dd"
        },
        "item": {
          "id": "c9cc72fa-757d-4134-b443-f7da2f9cfd0a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "94173403-4e07-4567-8ea0-062003b889e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ef405d-7d03-43e7-9ef2-79dbf26c1520",
        "cursor": {
          "ref": "342ac7f0-1fc6-4f93-a042-0cce796d1a2a",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8ee7a0fb-a029-4ed5-8930-fbd825b09231"
        },
        "item": {
          "id": "11ef405d-7d03-43e7-9ef2-79dbf26c1520",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "05967117-3a36-4cac-ab5c-1af3566b40e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4ab64c-3636-4301-88f2-8987d1335071",
        "cursor": {
          "ref": "ccda99f9-f937-4fa5-a700-263c38892523",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6d8f1005-d083-4054-bcf2-ba024ce64544"
        },
        "item": {
          "id": "5d4ab64c-3636-4301-88f2-8987d1335071",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8f55fc4f-ade3-49db-ad74-994d819bc9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0788c1d-697a-4137-a012-ab774c290eb2",
        "cursor": {
          "ref": "eeeb4a7d-0300-4260-94e2-1da500e6da2b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9408f1f1-b387-427b-8a24-4f4b7eb012e3"
        },
        "item": {
          "id": "a0788c1d-697a-4137-a012-ab774c290eb2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "46c8af11-6aed-4d62-96dc-a6f1ece536d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168ee000-78a0-4025-b5a1-8011720bc65f",
        "cursor": {
          "ref": "627a265a-8fb1-463d-8b82-ccce4bd0f2e3",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3fcf8bf9-2dce-41f8-bfe6-05e7e7e5378a"
        },
        "item": {
          "id": "168ee000-78a0-4025-b5a1-8011720bc65f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b9b73b59-8b94-4a7a-9e0e-b98e4d844055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81322d8-b79b-4850-b61a-ee7175f2ebe4",
        "cursor": {
          "ref": "8009b26e-9799-4f54-b2c1-a8246b0c2a21",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "29c25c14-42b4-4610-b52a-791498b769f0"
        },
        "item": {
          "id": "f81322d8-b79b-4850-b61a-ee7175f2ebe4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e9be208f-0b35-4e95-a6d9-3c38a8f00928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85245928-74fd-434d-ae08-740da8b839a1",
        "cursor": {
          "ref": "49644040-5169-453f-be75-5644e70421c1",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fbe328de-a566-4270-a277-99e1e6b5a9da"
        },
        "item": {
          "id": "85245928-74fd-434d-ae08-740da8b839a1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b43e637f-00cb-4ad2-aa62-ae31eae192ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ee27d9-7a71-4b0e-a95a-d09c6a1a0cc0",
        "cursor": {
          "ref": "8a4139d9-f560-4f7e-8756-7f0d8c9e8fba",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "abd751e6-532f-439c-9099-cad369add064"
        },
        "item": {
          "id": "a3ee27d9-7a71-4b0e-a95a-d09c6a1a0cc0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "22fce31a-efa6-40f0-9a4e-983b75e1a2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aadfbf2-1733-4c41-8892-e52ab55cb7d1",
        "cursor": {
          "ref": "04b269fc-dca6-4243-8146-cbc605d113ab",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a22613a0-dc88-4fb1-b5a5-b22a8fff0aee"
        },
        "item": {
          "id": "5aadfbf2-1733-4c41-8892-e52ab55cb7d1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1fbfea1d-e77f-4b12-8f6f-da6bad3f198e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b08c042-8797-40a4-a6e9-a06b8454f23e",
        "cursor": {
          "ref": "f7e36e0f-8622-4131-a6ab-dc3ddd371d4a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "94c63b06-8110-4fc2-ad60-df8a14b0560e"
        },
        "item": {
          "id": "8b08c042-8797-40a4-a6e9-a06b8454f23e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0170917e-1645-49e5-b36b-4d3631cb2020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8233e3-9379-4b43-bda9-74d24089148a",
        "cursor": {
          "ref": "c5539282-bcfa-479b-a075-89b8e2597c77",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "95b5e988-4db2-4dd3-a406-b62b9226bf2b"
        },
        "item": {
          "id": "ef8233e3-9379-4b43-bda9-74d24089148a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2320c70f-874e-4a0c-a864-4b6b2773843c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5869d6-01d9-4fa8-99ba-5a079449e268",
        "cursor": {
          "ref": "03b849ab-7ee7-47b3-8eda-16ae8eddf6db",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6ec42c61-af09-4f0e-b19e-d06c0fa18b8b"
        },
        "item": {
          "id": "2f5869d6-01d9-4fa8-99ba-5a079449e268",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d734c776-2578-43fd-9411-b7b3d9ec9ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f58074c-3d95-45dd-8d3e-165da0144e11",
        "cursor": {
          "ref": "9fa0fd43-2089-4dc7-9501-77d5488bae71",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a4fc484e-d122-4f0d-922f-1bc84df865dd"
        },
        "item": {
          "id": "4f58074c-3d95-45dd-8d3e-165da0144e11",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a03a6cf1-718d-4cc3-ba28-51b807f91c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86b86be-4773-4444-a433-7cb618536aad",
        "cursor": {
          "ref": "b72329d9-723c-4ace-92e9-de799a8630b1",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4cb6be30-10f0-4629-a259-2b5403d835f9"
        },
        "item": {
          "id": "d86b86be-4773-4444-a433-7cb618536aad",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e148b11f-34b8-4624-b298-ec5759c8394d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd99d4a-154e-410d-af9d-215a2d69923b",
        "cursor": {
          "ref": "901a652c-f6ee-4053-810e-78e8c3b69cba",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2481c3ca-243f-4b94-bf6d-2dbd20a891d6"
        },
        "item": {
          "id": "3cd99d4a-154e-410d-af9d-215a2d69923b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d72eb071-7c1b-4483-86cc-ef2b27857d94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739498cc-63ab-4495-84c2-cd277d8ee399",
        "cursor": {
          "ref": "1ee425bb-60f0-4b6a-9b06-deb41bd123b3",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f214f417-4119-437d-a03b-56fb0da861a9"
        },
        "item": {
          "id": "739498cc-63ab-4495-84c2-cd277d8ee399",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "bdca6ba7-0183-4e7e-a15c-5c09494a479e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "38642fcd-089f-42af-9a29-d0aabfa28e2d",
        "cursor": {
          "ref": "45971f86-6c25-4ce1-b73d-6a3ae38d4846",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "03aa6288-9576-4bfc-8034-d709112cd3c6"
        },
        "item": {
          "id": "38642fcd-089f-42af-9a29-d0aabfa28e2d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ee461426-b183-471b-b197-5c6f942113e3",
          "status": "Created",
          "code": 201,
          "responseTime": 14279,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f010296c-8dcc-45e7-a12d-9891e6d489d7",
        "cursor": {
          "ref": "214aeab1-340a-490a-83fd-99982b3707d1",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "92824ce9-5c7b-4eb9-adbe-669f9177bb0c"
        },
        "item": {
          "id": "f010296c-8dcc-45e7-a12d-9891e6d489d7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b116fc2b-5844-4654-8703-ed85edbf7507",
          "status": "Created",
          "code": 201,
          "responseTime": 13576,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "095b24a6-9f05-45e3-982c-333e1187d9d9",
        "cursor": {
          "ref": "624ecf17-5aaf-41f8-8fec-3dea5e504cec",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a7d7ea9c-5bde-415d-8e4f-818ed1dae09e"
        },
        "item": {
          "id": "095b24a6-9f05-45e3-982c-333e1187d9d9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d52cfe84-f752-4e82-aa96-ad7ed3ccaf01",
          "status": "Created",
          "code": 201,
          "responseTime": 13742,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b235cf-5be1-4acd-8af3-063133f6a747",
        "cursor": {
          "ref": "ac95674d-b185-4afd-b323-bb014dcba752",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "000323aa-5d99-458e-a77e-ec52863a3e8f"
        },
        "item": {
          "id": "83b235cf-5be1-4acd-8af3-063133f6a747",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "832adb51-4434-4889-9a77-0331f2f1844a",
          "status": "Created",
          "code": 201,
          "responseTime": 13069,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "017871ad-392b-4a9e-8838-4000976c89f2",
        "cursor": {
          "ref": "3e6952a9-aaea-4ab7-90a9-ee14094c4cb4",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9a546b5a-ea77-4708-98d4-e53a6e9d606c"
        },
        "item": {
          "id": "017871ad-392b-4a9e-8838-4000976c89f2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e137ba43-94f5-44a0-be7e-19d8e7a38689",
          "status": "Created",
          "code": 201,
          "responseTime": 13504,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-10T00:44:54Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-10T00:44:54Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e887fc27-fd69-49fa-8d21-4c09c3813566",
        "cursor": {
          "ref": "861349ca-ff0f-43d4-aeeb-7737afc44c83",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1594f038-6024-470e-9ad4-ca57ceff52fc"
        },
        "item": {
          "id": "e887fc27-fd69-49fa-8d21-4c09c3813566",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cfa4dc38-3453-42f4-95e1-6a550f57d1a1",
          "status": "Created",
          "code": 201,
          "responseTime": 13799,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9483edea-7c6f-4308-a329-7307104222b9",
        "cursor": {
          "ref": "a4a0b192-6ebf-4c53-8c51-a0a7aea8eed2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ea3c9399-fe7a-43f9-bab5-dad23bfa59a7"
        },
        "item": {
          "id": "9483edea-7c6f-4308-a329-7307104222b9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8edc655b-a872-4c63-8478-19607269d466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca70db1f-7d8a-4349-b454-db40bdb42ba7",
        "cursor": {
          "ref": "becd1d9f-b510-433b-9589-ca64e3d04a58",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3d9d2c29-064a-4da5-83e1-b0b00b9ec1b8"
        },
        "item": {
          "id": "ca70db1f-7d8a-4349-b454-db40bdb42ba7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "64338ab8-febe-44d3-a5a1-52f84f7fc288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d88ecd7-1e2a-4f3f-9bda-71eecd736c60",
        "cursor": {
          "ref": "a2624e7d-d37a-4ef4-a103-7353034aa55e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5d896b8c-e62a-4df2-874a-8455145259f2"
        },
        "item": {
          "id": "4d88ecd7-1e2a-4f3f-9bda-71eecd736c60",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1b6734f0-3691-45a9-a635-0a30998cdf05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a6a462-9bbd-404f-a4aa-d58ccfb9b2a5",
        "cursor": {
          "ref": "a6d5b803-2515-4b98-a4f6-ca99a63eafdc",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "40baa73e-024d-4b03-be60-47dab4304481"
        },
        "item": {
          "id": "e5a6a462-9bbd-404f-a4aa-d58ccfb9b2a5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5b4217c8-92f1-4371-898e-5c2c6c107654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f13784d-553a-4634-8900-41470e2104b9",
        "cursor": {
          "ref": "26b5a98e-1c41-4761-a0c4-f3a750da0971",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f766c767-7bf1-4b2b-8f33-e846f5b05287"
        },
        "item": {
          "id": "9f13784d-553a-4634-8900-41470e2104b9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f8e73054-e281-41e7-8a0e-dc0e8c78bc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e336c53c-e354-4101-b515-39c832663132",
        "cursor": {
          "ref": "b19e17dd-d99c-44e5-b390-776242622929",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5368e9ee-2a12-4a8a-9c75-8cc4190770ce"
        },
        "item": {
          "id": "e336c53c-e354-4101-b515-39c832663132",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5ab5bd6b-8a14-49ab-89da-99f23b27896e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc0dcea-ab64-42a5-8177-7083cca3fa3a",
        "cursor": {
          "ref": "d0df60d3-b262-41ed-9cec-8e0bc2ef254d",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cc5cda2c-9ec7-41dc-aeae-0fbde0dc324f"
        },
        "item": {
          "id": "bcc0dcea-ab64-42a5-8177-7083cca3fa3a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0950922a-71de-4327-9ecf-029ab42215aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e74e8a4-d95b-4a72-b4b8-9621d4e79ff2",
        "cursor": {
          "ref": "c1ca5cd2-97db-4edd-ae4a-60148206e7a8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8317924c-f058-43a7-80f7-dc92f97ce5b6"
        },
        "item": {
          "id": "9e74e8a4-d95b-4a72-b4b8-9621d4e79ff2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "05b1505a-4acf-4881-b520-f5f3f2f52349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9f83ef-5a52-40bc-a361-0c42116c2c7a",
        "cursor": {
          "ref": "368cb1a1-7721-4551-a981-de033245b983",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9f62db95-4a4d-4c6f-aeaf-606ba5b6942e"
        },
        "item": {
          "id": "bd9f83ef-5a52-40bc-a361-0c42116c2c7a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "11c001fc-aa7d-4d83-a2a6-4a9789296666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7811573-9027-441a-8408-af6221d4e907",
        "cursor": {
          "ref": "cd5e9f16-aec2-4c85-b7f0-e65ae4f8167d",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "73e0f73b-31d9-420d-adcc-6d6c50ad2fb9"
        },
        "item": {
          "id": "c7811573-9027-441a-8408-af6221d4e907",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6593b9dd-0689-4686-ac8b-59973e120700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e57ed58-e9eb-4054-9916-895fd41fa3b0",
        "cursor": {
          "ref": "faea7b23-55b8-4559-9e3c-6a42c5f17835",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c67659e2-00a5-481e-b47c-8277c2257442"
        },
        "item": {
          "id": "8e57ed58-e9eb-4054-9916-895fd41fa3b0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8e3b84c4-711a-4a5b-abb1-98ac2f781e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a93833-3536-4444-b3dc-b4751a46a23f",
        "cursor": {
          "ref": "70ef21df-e598-4617-a514-372a041d003e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b562976d-dd6f-4fea-8f02-16293fd1e5b9"
        },
        "item": {
          "id": "f7a93833-3536-4444-b3dc-b4751a46a23f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d228d13b-eee4-4379-aa9f-46c7c27a0a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d3510e-df2d-47bd-ab7b-f9a992a04bc5",
        "cursor": {
          "ref": "17b6a374-b76e-41af-8140-ae67c27122a2",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3e6f13e6-7c06-4757-bd6a-8b6eed9bf8a3"
        },
        "item": {
          "id": "d3d3510e-df2d-47bd-ab7b-f9a992a04bc5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "397595e4-d427-4bc3-b6b8-02e4abe258cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870f8962-da56-4804-85b6-28e05844769f",
        "cursor": {
          "ref": "1756a976-a596-4e44-8e48-6e83be7bd495",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "58f4ffc7-be51-45ae-bded-7ac3dcc811ea"
        },
        "item": {
          "id": "870f8962-da56-4804-85b6-28e05844769f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "99849541-c641-40f0-8f33-c56e16edd448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83027d7-cc3e-4776-834c-8a2252e317e8",
        "cursor": {
          "ref": "09a0747a-48ea-4f0e-9734-7a6ada64eab3",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2ae38b08-db0f-477d-8cc5-3934ee8d569f"
        },
        "item": {
          "id": "a83027d7-cc3e-4776-834c-8a2252e317e8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9c274862-1975-4189-bb6d-06d56b5fb457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ab435e-8684-449e-8897-2170233f4d4e",
        "cursor": {
          "ref": "a86bddd3-b693-48df-b1d9-03f735199ea1",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "46fd97f1-c3cc-4cb7-b97c-2337ef3808ab"
        },
        "item": {
          "id": "d5ab435e-8684-449e-8897-2170233f4d4e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9ca3d941-3c85-4733-b47a-dd27575a21c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090c27cd-d214-42a4-a2a3-b56837f84ead",
        "cursor": {
          "ref": "0417ddde-a4d4-4f16-a7db-2e12317875f2",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e34c45f6-7252-4e4b-ac90-64dd6aef1d49"
        },
        "item": {
          "id": "090c27cd-d214-42a4-a2a3-b56837f84ead",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "49512849-f97b-45d6-a2f6-772a9aa715cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccc18c5-ae2b-49ad-8af5-c59386c4eaaf",
        "cursor": {
          "ref": "73e4d119-614b-4891-8d6a-5ffb4ad07cfd",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ef6f9ace-ee40-4eea-99ae-83e8a10ebe5a"
        },
        "item": {
          "id": "3ccc18c5-ae2b-49ad-8af5-c59386c4eaaf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ce1a9d79-a999-47d9-8646-c5a1cc5de35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1af3b9b-9217-4c96-a60e-f2afd9635ef5",
        "cursor": {
          "ref": "ee3a5dbb-9b42-4348-9716-4293f3fee2c5",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "35376685-fdc1-422a-9b4d-3c347d79ced3"
        },
        "item": {
          "id": "d1af3b9b-9217-4c96-a60e-f2afd9635ef5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "35762671-55ee-4a75-94d6-d105e205e7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434fd478-819f-4126-97c4-fd07ec1524b4",
        "cursor": {
          "ref": "742557f9-b134-458c-b4d3-34154f96eee7",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a2d19e85-6596-4b02-be04-4a5a122015d4"
        },
        "item": {
          "id": "434fd478-819f-4126-97c4-fd07ec1524b4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e6efb85b-3858-4c01-83b8-4a8e53b86cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d990f0-8bde-470c-b4da-a7f9463c3143",
        "cursor": {
          "ref": "7605ed49-d250-411b-8bd6-edb6d84ad993",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "90571a76-bd63-4004-b995-820cc83b76c6"
        },
        "item": {
          "id": "e5d990f0-8bde-470c-b4da-a7f9463c3143",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "26ed9d09-8c42-48f7-936c-cda66155d399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f20fe2d-2857-43f8-a455-6754916ef8f9",
        "cursor": {
          "ref": "f7a1ec13-a377-4ff7-8016-9ff10a6c1132",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3edf0621-1c9e-44bd-b6e1-fd47d99d394f"
        },
        "item": {
          "id": "2f20fe2d-2857-43f8-a455-6754916ef8f9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a9171ffa-ca2a-4c93-afb3-ef8f15cdea4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc383f12-b89e-4487-880d-d7ed9dbb4850",
        "cursor": {
          "ref": "a4ecc776-0fa9-4fda-9621-3162250c7bf3",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3d015c7d-da3a-46b0-a7a2-6a7b5470a552"
        },
        "item": {
          "id": "fc383f12-b89e-4487-880d-d7ed9dbb4850",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ba29d3bc-347d-40ab-80ba-c3ed4e20bfb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55865885-b206-4496-9576-b0af7e2deca0",
        "cursor": {
          "ref": "82cce962-77ba-4e7a-94f3-51d7d1fef4d6",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a85107ca-5237-4d0d-9092-f3f20988f450"
        },
        "item": {
          "id": "55865885-b206-4496-9576-b0af7e2deca0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "14fafb13-92a1-4d36-a8df-20e82160a668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7096eb-ab54-40fe-9a25-54334a273be0",
        "cursor": {
          "ref": "dab45f0e-eed0-4e0b-b27f-5b18786083d7",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2487d14d-8fb8-4a2e-a893-9460067fe512"
        },
        "item": {
          "id": "cd7096eb-ab54-40fe-9a25-54334a273be0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "67160014-0768-4a32-a074-d9d06aaeff9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862b29af-03d4-43f2-ab3e-155dd656b319",
        "cursor": {
          "ref": "6a8c9d6e-1b10-4cdc-8c1c-80889f134166",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "797c54ce-c52d-4a3b-9296-096891177f19"
        },
        "item": {
          "id": "862b29af-03d4-43f2-ab3e-155dd656b319",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4f0cd135-f675-4dd5-9d6a-66858a114f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b92c8a4-f833-4010-9157-37c6ffc065b2",
        "cursor": {
          "ref": "7de17745-02cd-45f4-b4d8-8fe386e661a7",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c9d08280-81ae-427e-b760-07e5a5cefe27"
        },
        "item": {
          "id": "4b92c8a4-f833-4010-9157-37c6ffc065b2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6635b924-c788-45f6-bc00-256cd0edd5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e0025a-4eef-4dce-8242-dd40ff2e4aaa",
        "cursor": {
          "ref": "e9bebe9b-ef7b-40d8-8a0e-b271ccf9eba7",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c95a6e4c-e285-48cb-aa4e-219774b5d7b2"
        },
        "item": {
          "id": "e2e0025a-4eef-4dce-8242-dd40ff2e4aaa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d2c6a1e8-cb29-44b7-a9bd-4052dbea9e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0619bf05-7ebb-493c-86bd-8bdbeed8dd54",
        "cursor": {
          "ref": "b7af9d46-409a-47ac-8a0e-a94a818c7fc9",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "76a3451d-9842-4fe3-8c18-fa706aa05917"
        },
        "item": {
          "id": "0619bf05-7ebb-493c-86bd-8bdbeed8dd54",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8f887cbc-3416-4013-8eda-d7e40926df7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da77235-a5c7-453c-a5d1-c34d03c3996b",
        "cursor": {
          "ref": "1afcb3f4-d477-4cd7-9f3f-e0f84105f381",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "96c5ae61-cf16-4ba2-9457-5e097670afd6"
        },
        "item": {
          "id": "1da77235-a5c7-453c-a5d1-c34d03c3996b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4417b89d-0876-4a00-bd18-174d31eb794e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcae4d43-7ea7-4591-88e6-b56c594f1a9b",
        "cursor": {
          "ref": "5dcb1a7a-b220-4f9f-bd7d-c7a64a603e2b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "36bc79d0-0700-4e97-a90c-1e683be3602f"
        },
        "item": {
          "id": "dcae4d43-7ea7-4591-88e6-b56c594f1a9b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f6b98b25-37ed-41bb-a66a-4a12b26e345d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adccc456-ec32-4331-a79b-72f8655a9419",
        "cursor": {
          "ref": "4cbdbc68-6df0-45a3-82d0-2d54b995abee",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fee16676-f6ba-4053-841a-fb2175f9db14"
        },
        "item": {
          "id": "adccc456-ec32-4331-a79b-72f8655a9419",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1adcfeba-dbae-47d2-974d-d573b35c9670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784a8852-e28c-42a8-9061-c1aa9decccbc",
        "cursor": {
          "ref": "5cbf9f44-6b3a-4e58-b9d1-3e497db932cc",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "167aeaa4-3fce-49e3-b58e-f62d53c1d8f8"
        },
        "item": {
          "id": "784a8852-e28c-42a8-9061-c1aa9decccbc",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bec387b5-4ec7-4c57-81dd-0d4ce30f7856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9d4301-5e5f-4ee5-8fc7-dfad57e64aca",
        "cursor": {
          "ref": "d68c39f2-e2f9-4afe-949c-aa3bf93012cf",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f9ceca48-9fdc-42f0-87c3-2d5851115d34"
        },
        "item": {
          "id": "2b9d4301-5e5f-4ee5-8fc7-dfad57e64aca",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "857dd893-21fb-458f-b18e-58a839df1b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84228245-5b80-4b03-a409-d1c182ef0bcf",
        "cursor": {
          "ref": "7c61e30d-d86e-422a-9fe5-f283184cd957",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "579182fa-84c2-4e03-9ce4-0767923a1742"
        },
        "item": {
          "id": "84228245-5b80-4b03-a409-d1c182ef0bcf",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "dc7dadc6-b205-4596-81ce-7732aa52eed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b96435e-4612-4466-8943-bb6d553e2f77",
        "cursor": {
          "ref": "20ac80be-9f43-4c0c-b804-6df1f3b8d4ec",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0df49ccf-15b5-432a-9ee1-c7b02ccdd22b"
        },
        "item": {
          "id": "8b96435e-4612-4466-8943-bb6d553e2f77",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "611ad378-9f1a-4879-8899-88a5b29a731a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564cfe8a-8ae8-48f3-9522-f1b5252dbcae",
        "cursor": {
          "ref": "2aacbea9-bba9-4710-abad-d58159970b4a",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "dcc85a72-9188-4087-9333-173e443a5e70"
        },
        "item": {
          "id": "564cfe8a-8ae8-48f3-9522-f1b5252dbcae",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c97c0c85-0f92-44a0-a2b6-4262e3054920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5b7e7e-a161-4eac-9d83-0fa6ba0fbce1",
        "cursor": {
          "ref": "6f0239c7-db4f-442a-940a-1fe22bbd173c",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "588bbdbf-5f4c-4e2e-8080-3b42149dc2b3"
        },
        "item": {
          "id": "6f5b7e7e-a161-4eac-9d83-0fa6ba0fbce1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0649b88b-9448-4cf1-a464-45f96686ab27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8588e81a-7079-4636-9d97-c66097982ce0",
        "cursor": {
          "ref": "60bb585f-0783-4353-b799-fb57e4c2dbee",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8023c03d-26a1-4d7c-a08b-640316f4836f"
        },
        "item": {
          "id": "8588e81a-7079-4636-9d97-c66097982ce0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "19874807-8ae0-4442-9a53-d860a6fd45fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d86682c-839a-4e9b-bc6b-b0f32896c21c",
        "cursor": {
          "ref": "1e2aad21-9c35-4b8d-9c19-7cff31da5649",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "54719d8d-0cb8-439c-bb1e-da79b1e5e095"
        },
        "item": {
          "id": "2d86682c-839a-4e9b-bc6b-b0f32896c21c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0e759f37-a34d-422e-a33a-a207a693ae63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e6bbf3-9143-419f-8c8a-58444ceaf5df",
        "cursor": {
          "ref": "1c21ab13-7d98-4917-a7d3-0e89d4c3acdf",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9fce37ba-2d07-48fd-b6f0-cf01123c8234"
        },
        "item": {
          "id": "50e6bbf3-9143-419f-8c8a-58444ceaf5df",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5c854ebf-f7aa-4716-a4fa-d0c8fc9a0483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43070bd9-d9d2-456a-85ae-1fc7870238b9",
        "cursor": {
          "ref": "f4eaea08-b991-4771-937b-0590673b09bf",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "34ab00e9-345b-4f8d-a6f2-675b0e1ce57f"
        },
        "item": {
          "id": "43070bd9-d9d2-456a-85ae-1fc7870238b9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a4e9e26a-5678-4c90-a567-804d481b3cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb629f10-4670-45e6-836c-84a395c3b1c3",
        "cursor": {
          "ref": "3bef75fa-b503-4f8e-b3f9-9c3c5a385d55",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "825f4900-0e6f-4d9e-9406-526e41c0b92e"
        },
        "item": {
          "id": "fb629f10-4670-45e6-836c-84a395c3b1c3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7d571fb7-e4ca-40cb-958c-d34f74a89096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1062b1-2e6b-42c1-8175-6714fc5b39c5",
        "cursor": {
          "ref": "a0ad5424-d0f5-4057-b7cf-fc21215f3ed6",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b5c27496-8c71-4edf-99da-6b65b4226ca5"
        },
        "item": {
          "id": "3b1062b1-2e6b-42c1-8175-6714fc5b39c5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "569a891f-bec8-4a7b-8585-f5e713cd4966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11aad022-aaeb-413d-b643-b7ac6d4a7d7b",
        "cursor": {
          "ref": "e45d8e20-654d-41df-8328-6231346b690f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "86bd5a9e-a751-4b53-99e3-c03be02b18ac"
        },
        "item": {
          "id": "11aad022-aaeb-413d-b643-b7ac6d4a7d7b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f7a8e560-f4b0-4561-bc0b-58230855d527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec663eb-2fb9-43d3-80af-32fe291c1efa",
        "cursor": {
          "ref": "413580af-ff3f-46f2-895f-a6916b5f4933",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0ce633f5-dd4e-4dd2-ad62-530f7378dc7f"
        },
        "item": {
          "id": "7ec663eb-2fb9-43d3-80af-32fe291c1efa",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "df119cde-93c8-4e16-9266-f123b973dd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db042d35-c750-42ca-b101-e732e9db372e",
        "cursor": {
          "ref": "edb00fe0-c337-435d-82d7-727157250b5b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "83cae7b5-fa86-489e-a205-fc6f583a9521"
        },
        "item": {
          "id": "db042d35-c750-42ca-b101-e732e9db372e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "47c9b39d-eace-4666-99e6-e0b117592ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59cbb7a6-992f-43b4-ba52-a9cef2128c71",
        "cursor": {
          "ref": "952d4af1-96aa-4a16-b64d-f14b218f8657",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4809e5d7-432c-4cda-80f3-231c2bed362b"
        },
        "item": {
          "id": "59cbb7a6-992f-43b4-ba52-a9cef2128c71",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "aa4e45a1-de4f-442f-9b64-8e59841ba1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf28ec8-19b0-43ee-ae3c-be53fde79a41",
        "cursor": {
          "ref": "2259d8c6-1513-462b-b5bc-32d34dded04f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9fe9b83e-bd33-4777-9f0d-98e332f480ec"
        },
        "item": {
          "id": "fdf28ec8-19b0-43ee-ae3c-be53fde79a41",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ac9c85bd-a210-4ed0-bc13-ba0559737b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b773f2-5c97-4a11-96d8-8808b034bc5f",
        "cursor": {
          "ref": "82ec46da-9b65-4b15-9a90-6a98f9080e70",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8c4c29b5-531e-4496-bfe1-3c536ed9de26"
        },
        "item": {
          "id": "d0b773f2-5c97-4a11-96d8-8808b034bc5f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a90bbc6d-a4aa-4910-b4ab-fe9e64896893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82390fce-1726-4b52-998d-fb20e4b0d7d0",
        "cursor": {
          "ref": "1e2a296c-1be9-422a-a0c6-adee7cc060bd",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "96b12df4-a1ac-40fe-b12e-40c2562e1e0e"
        },
        "item": {
          "id": "82390fce-1726-4b52-998d-fb20e4b0d7d0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6bfdf824-3e16-4a4a-8d2e-dcc52eff5501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2193da-f11b-4cd0-97d1-22ab1545f096",
        "cursor": {
          "ref": "543beed4-7c16-49c8-8f79-bea00f1e3b79",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6fbea324-4633-4d7d-ad07-4366b68e2ac2"
        },
        "item": {
          "id": "eb2193da-f11b-4cd0-97d1-22ab1545f096",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8b332852-dad3-473d-bac3-49619889cac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42211a18-80b5-4a53-9460-cbc6976c45ab",
        "cursor": {
          "ref": "4d6fe49b-1c6e-44b3-8c6a-27513f2f8237",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fa9e3d02-6f88-439c-b2b9-23572207e81c"
        },
        "item": {
          "id": "42211a18-80b5-4a53-9460-cbc6976c45ab",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e59e0b5c-f9db-4339-9f98-da0c4cf00cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed5398d-dbab-4629-bee4-d037525a69b0",
        "cursor": {
          "ref": "339d53be-1ad0-43cd-8059-0cbc0a1c25cf",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "be526c77-8a89-4e91-a40a-8bf7f6a13d54"
        },
        "item": {
          "id": "9ed5398d-dbab-4629-bee4-d037525a69b0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5e34f12f-1d02-4516-a264-a2c1af122ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f61b64-16f6-4af3-8009-a1f8e9b9c8f1",
        "cursor": {
          "ref": "718e35fa-cd33-4795-9343-3ea86f93f98d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "589580b9-58d9-4e75-ad29-c1875b53270b"
        },
        "item": {
          "id": "e5f61b64-16f6-4af3-8009-a1f8e9b9c8f1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bddde870-d3fb-4427-bfd0-a607cf3026ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ba1b4f-5a03-43e3-9a2a-bcd51559e73d",
        "cursor": {
          "ref": "96076a50-3434-4ca1-ba06-b8f507acbd0e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "abca3cdf-f7bb-4a34-8643-98636dfc3e41"
        },
        "item": {
          "id": "b3ba1b4f-5a03-43e3-9a2a-bcd51559e73d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b22c8ccf-129d-461a-85fe-05fadbc5f428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0798146e-910e-4969-a119-34d53f0b946a",
        "cursor": {
          "ref": "4474f8d6-bbdc-47f8-90b3-487f8b6b9dd1",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "52205620-9696-4597-8dbf-22516bac149e"
        },
        "item": {
          "id": "0798146e-910e-4969-a119-34d53f0b946a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "897bd9fc-a7e4-4509-9e43-2abe0bdba7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809eb24d-bb61-4120-8cbf-a712473eee8b",
        "cursor": {
          "ref": "120a3782-92b4-402a-8946-b396660ddc0a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "55ae01f9-4006-47ac-8456-d9eeb5912ab2"
        },
        "item": {
          "id": "809eb24d-bb61-4120-8cbf-a712473eee8b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7d3fce05-a1fd-4c97-8fd1-54208a0f0e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8649a1-b001-4917-8f67-289311f43269",
        "cursor": {
          "ref": "e7698fb3-5ea7-4049-81bd-b66c9ddb573c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fca26f1a-b95a-437f-ab27-b28f72271c96"
        },
        "item": {
          "id": "9c8649a1-b001-4917-8f67-289311f43269",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f797de8c-bd46-463c-9d7a-18b7b0e56d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b1be04-016c-4f19-b6b6-cb154622dfea",
        "cursor": {
          "ref": "c33424ce-14cb-4563-98d9-c4db5a43a24c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4fd2003f-5256-4f0c-b9c1-11c9a0ab3d49"
        },
        "item": {
          "id": "a8b1be04-016c-4f19-b6b6-cb154622dfea",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "64089d4a-4ad0-41ca-8d96-fcd0208c39ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44217243-2a2e-4cfb-94de-37bf37919f0e",
        "cursor": {
          "ref": "047b2c66-c328-423b-a4bd-a6b0a6ce62b8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "db12641e-724e-4337-b65d-1ea25fda146c"
        },
        "item": {
          "id": "44217243-2a2e-4cfb-94de-37bf37919f0e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7bb91234-e47b-429d-9f94-a33830fc63d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d51dd5-33d1-4df1-b91a-75030e2faa4f",
        "cursor": {
          "ref": "67b8632f-7d09-4e51-9e31-bd9b43eb2687",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4621d00d-a0bf-41a5-9f8a-5506258062f2"
        },
        "item": {
          "id": "b2d51dd5-33d1-4df1-b91a-75030e2faa4f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f571db44-1d67-48d3-8589-fdc8c1528957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faccfff-1e45-4c74-81c9-8ba7fde03707",
        "cursor": {
          "ref": "5ee39176-4fbc-4205-a66c-a9393c2fec96",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a661f664-49c9-4bb5-a7ad-5ae29c397f19"
        },
        "item": {
          "id": "8faccfff-1e45-4c74-81c9-8ba7fde03707",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2bbe976c-7f1e-466c-a23f-78c49ff0f9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04184e4-5e5f-48c9-b8c7-c1641ec2e5c1",
        "cursor": {
          "ref": "3ac8c8fa-8ef8-48a4-ad72-3535278519c4",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "70ab07ce-c6b5-4ff7-86a8-fdf7219b5d4b"
        },
        "item": {
          "id": "a04184e4-5e5f-48c9-b8c7-c1641ec2e5c1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8fbaf6ee-ddcb-48dd-b664-09a80bf099c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69491481-2ef0-4a16-ac8c-2205926ad1aa",
        "cursor": {
          "ref": "0b4f85cd-36c2-456d-a653-149b6f363a62",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "817d6a0a-1f40-49f5-b79b-8d7227e0893a"
        },
        "item": {
          "id": "69491481-2ef0-4a16-ac8c-2205926ad1aa",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "280f68ca-40ae-41b7-98c9-54abff92dfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e095e8-95f7-4692-a773-301df65b5e19",
        "cursor": {
          "ref": "586b9703-c25c-4c98-aaa8-d7101f04de08",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ffb0f49c-cfb8-416d-8df7-8db470b5e730"
        },
        "item": {
          "id": "c4e095e8-95f7-4692-a773-301df65b5e19",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d9e7c7ce-0535-402f-b229-bf6393971d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42948b09-c146-43c2-9992-e633dbb98481",
        "cursor": {
          "ref": "95e4ad9d-eeb6-4c93-bdac-9b32fbeb0a46",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6627e033-7f54-480a-a8b3-b0bc29f32801"
        },
        "item": {
          "id": "42948b09-c146-43c2-9992-e633dbb98481",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1fe40b21-abf1-4acd-93c0-8b58417bf1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196bc18e-968b-4438-a529-ab9a002e8aea",
        "cursor": {
          "ref": "16e60f84-42df-415a-a703-5012cac30d0f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "225a8404-8b9b-485d-a7d9-77933093f890"
        },
        "item": {
          "id": "196bc18e-968b-4438-a529-ab9a002e8aea",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7a829f05-f27a-47ed-8a69-191976ef48f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cfb9bd-6c85-4a63-8dca-13e554b947b8",
        "cursor": {
          "ref": "b947f849-8a1a-4136-8f29-9d0fd0f4741d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "98e926bd-43af-4142-8535-863aac614203"
        },
        "item": {
          "id": "98cfb9bd-6c85-4a63-8dca-13e554b947b8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b782e455-3646-4b70-879f-52eccddebb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b29bd0b-df22-4743-9d0e-f0ab236c13e2",
        "cursor": {
          "ref": "828201c6-328d-4ed7-8f29-70d24c9b52b6",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "de4b564c-c2ac-4aa7-8601-11df121a25cc"
        },
        "item": {
          "id": "7b29bd0b-df22-4743-9d0e-f0ab236c13e2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b2979fa7-c35b-40a9-a45e-e61d9044ea4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5d8ae8-3e73-4c4b-b82b-24c6678356dc",
        "cursor": {
          "ref": "75c64eaa-553c-458f-b8b8-4c2f1d0a58a8",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a72082b8-b2f7-4173-9d05-6187e9fc60ed"
        },
        "item": {
          "id": "4c5d8ae8-3e73-4c4b-b82b-24c6678356dc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "502bc72f-0483-4ba4-a299-51253c7b9458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95c9f2d-fc0a-4839-87a1-e28f0c472b3c",
        "cursor": {
          "ref": "5b76e408-915f-4da2-a049-6287068bb1ae",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f6260360-ed41-4376-a2ee-1bfaf886d17e"
        },
        "item": {
          "id": "e95c9f2d-fc0a-4839-87a1-e28f0c472b3c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0c0997f4-f7bc-444c-abd7-d4eb15cf1e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598e59c9-68b8-44df-a65e-f1f204f0b27e",
        "cursor": {
          "ref": "85b6eded-df51-4693-8247-14642ef68acd",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "40fc354f-d42a-4d28-a49c-0f9b526ef398"
        },
        "item": {
          "id": "598e59c9-68b8-44df-a65e-f1f204f0b27e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b1c61e15-45d4-4839-8a77-99b2b43789a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88be21d0-02d4-40eb-81eb-7b156f318586",
        "cursor": {
          "ref": "402811ce-95b8-4be5-a697-ed8926ceb2b8",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "30b26c0d-9cea-4df0-a777-bc5a125375a8"
        },
        "item": {
          "id": "88be21d0-02d4-40eb-81eb-7b156f318586",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4d6336bb-c03d-471a-bb76-8ffe2a4ac06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80681248-ff76-49af-bf8f-c447fa71e297",
        "cursor": {
          "ref": "1b99bf5d-d354-4565-b63f-926ca63ca5e2",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "68384bd0-b1d4-4cde-8f5b-41a27b4710a3"
        },
        "item": {
          "id": "80681248-ff76-49af-bf8f-c447fa71e297",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "557f3057-deca-411e-afa8-bff7c13fc557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1628197b-325b-4da1-9215-5e476689847c",
        "cursor": {
          "ref": "014c618f-2913-4e5f-bf94-10edba5371b0",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "51cbffb1-360d-4732-bbc7-2302410fb5d5"
        },
        "item": {
          "id": "1628197b-325b-4da1-9215-5e476689847c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "da9df004-fada-4bfc-af2a-449c66a4ea1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d565891c-6578-4f79-94ea-d343f333c926",
        "cursor": {
          "ref": "e86eb0af-0f6a-47ed-972e-3898618c2667",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ec81661b-daeb-4c2a-8264-8cdf8f7df59a"
        },
        "item": {
          "id": "d565891c-6578-4f79-94ea-d343f333c926",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a502c440-142c-4915-82c6-93c161439e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46789d1a-121e-4c05-8f95-a2226aadf19d",
        "cursor": {
          "ref": "8279cae0-542a-4893-ac5e-ce0e96b74912",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5a9f1bab-c075-4925-939c-f3f9204e11a0"
        },
        "item": {
          "id": "46789d1a-121e-4c05-8f95-a2226aadf19d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "08ab3675-6e14-48a5-b814-2a49adbf8e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde4993b-6cc0-488c-a223-16cbe0302d1d",
        "cursor": {
          "ref": "b04cce8d-9bce-4030-874e-798b4a7b9db9",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6b5fc495-10e5-4699-8e1b-51290874e17b"
        },
        "item": {
          "id": "dde4993b-6cc0-488c-a223-16cbe0302d1d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b88f81d7-5672-4518-99af-3bb3cd325429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742e3ea7-3e59-498a-bd8b-67ae327159cb",
        "cursor": {
          "ref": "6343fd36-0e1d-43d0-9dd2-581fb6a52fdc",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0b444c8b-da8b-4408-8665-960901e102bd"
        },
        "item": {
          "id": "742e3ea7-3e59-498a-bd8b-67ae327159cb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ae92ba5f-75ba-4e5d-951e-fbc683f943ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcbfca4-70b0-4a67-83e5-b55a37465dd2",
        "cursor": {
          "ref": "93409253-0921-4eff-b442-b2c4157adbfa",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8f22abaa-fdb8-47c5-bf24-ce28f4d4fd08"
        },
        "item": {
          "id": "afcbfca4-70b0-4a67-83e5-b55a37465dd2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5e466fc5-3cc6-40ca-9268-93cc91c63883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b625ae9b-0e76-4a6b-82c9-bcd3b4286fe4",
        "cursor": {
          "ref": "8794d243-cc6f-4fa9-81fc-0123efbe1dc9",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b1e1fcf0-8849-4157-ba75-3149542a1f13"
        },
        "item": {
          "id": "b625ae9b-0e76-4a6b-82c9-bcd3b4286fe4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "58d90351-2cd6-4710-86e8-cdc319b0ac9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55369831-938c-45ea-950b-6cf069b1a83e",
        "cursor": {
          "ref": "b8db64fb-480f-4141-a078-2d032ea0d9fc",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "81d4410c-6316-4264-8f58-59fe40ad378b"
        },
        "item": {
          "id": "55369831-938c-45ea-950b-6cf069b1a83e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2bcfeb43-5600-4991-b6af-9ae8210aba66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7172cd-dc72-4015-a7c7-788e19d5c9f2",
        "cursor": {
          "ref": "f427609e-678b-45c2-86d4-27946d294319",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "55fe1a13-1b8d-4caa-aaa4-2a12fa0c8d3b"
        },
        "item": {
          "id": "ac7172cd-dc72-4015-a7c7-788e19d5c9f2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2cc4e807-2c9e-4921-9845-62348cd30435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fbbbb6-1f09-403e-ad52-635b02d87461",
        "cursor": {
          "ref": "3245b949-0063-443f-9f91-b3b40128ef1a",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4ce8aa6e-22b4-437f-b2a4-8f68411d1604"
        },
        "item": {
          "id": "68fbbbb6-1f09-403e-ad52-635b02d87461",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ce9f0a7d-6440-47f4-8f28-c489d41d13c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f48ffda-8171-4f53-921c-0de2d678cc13",
        "cursor": {
          "ref": "3bb4ce1c-4d6c-47fe-b7da-d834614ecb40",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "815cafbd-17da-4993-899c-298a495e22ec"
        },
        "item": {
          "id": "6f48ffda-8171-4f53-921c-0de2d678cc13",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2d0e684b-11a4-4faa-82a7-654a2c25ef81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103bce0a-62db-4338-b8ec-5d4a201b4259",
        "cursor": {
          "ref": "c8eef2d7-4210-498c-a2a6-6a916da4de8e",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c2cb9056-41a2-4ffe-9b10-d58a17f0ed2f"
        },
        "item": {
          "id": "103bce0a-62db-4338-b8ec-5d4a201b4259",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d49eafd1-9858-4a9f-83b6-9dbe82e52d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d59653-3893-4147-83a3-50f3c77d92e7",
        "cursor": {
          "ref": "382597ef-3032-4545-9c96-d75a9ef59a5a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "93fddb46-1db1-4908-98de-5bf09293d525"
        },
        "item": {
          "id": "39d59653-3893-4147-83a3-50f3c77d92e7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "38957980-b1ff-4c39-9207-4f63ee27a254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0386d5d-d189-4629-a698-7b708e8ba29d",
        "cursor": {
          "ref": "728e4350-f851-405f-8ba6-77467a498b4c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "68c2df50-0997-4f09-9fe8-567080d6a2c2"
        },
        "item": {
          "id": "a0386d5d-d189-4629-a698-7b708e8ba29d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e053c5ca-c80d-4aa5-81ac-a2957e013f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19188b5-5c2b-4842-bc9d-7d01ae7989ff",
        "cursor": {
          "ref": "2c2748c8-f83a-45bc-8eba-a7991b30a6ce",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "befc6ccf-beb2-476f-9035-b6ab71261ae1"
        },
        "item": {
          "id": "c19188b5-5c2b-4842-bc9d-7d01ae7989ff",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c249e1bf-6ba8-4e13-b733-a6136b60f1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c902aca1-f3df-446f-88f1-950580674a8f",
        "cursor": {
          "ref": "d8da1627-6fb7-486f-a186-44c1e4c20238",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d032dc27-cc92-49b8-a352-13500d4fa574"
        },
        "item": {
          "id": "c902aca1-f3df-446f-88f1-950580674a8f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f3447b78-858c-4a56-b8a1-2c1b0d32c782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972994c9-7911-4256-9691-66f76c7de78b",
        "cursor": {
          "ref": "4ca07624-217f-403e-bfe1-903adf9d9db2",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1b4354bc-4781-4458-9a18-db62e8e92e69"
        },
        "item": {
          "id": "972994c9-7911-4256-9691-66f76c7de78b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7726d3dd-8d7e-4025-ab7c-7737e4a8f4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1b3cc2-11ef-4f18-b15a-a2d3835d126f",
        "cursor": {
          "ref": "b0162934-3bf7-45f6-b1c7-17b92b1d54b1",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0c0471aa-a925-494b-9b69-44bd249ec795"
        },
        "item": {
          "id": "dd1b3cc2-11ef-4f18-b15a-a2d3835d126f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c2cfe362-00e0-4d3a-9c75-91ce4cee81f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88bc508-aab9-483a-9002-4e9a2ddd617b",
        "cursor": {
          "ref": "5bf658a7-2d4f-460c-83fd-4ee47c999764",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5cde38c8-29b2-4669-85cd-0c4f4d43ca80"
        },
        "item": {
          "id": "b88bc508-aab9-483a-9002-4e9a2ddd617b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3d2bd622-fd9d-4a8c-a158-7b99cb558a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ea35e2-6168-41d0-890f-cedff591d035",
        "cursor": {
          "ref": "41efa53b-9f41-401d-b846-82ada8f04971",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "37d9e6fd-6fe0-428f-9924-22b19a8106d7"
        },
        "item": {
          "id": "e2ea35e2-6168-41d0-890f-cedff591d035",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "21c82611-5189-4fa9-b440-419dc2ca94ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453f0903-d1b7-465b-8e41-d3a4c1ccb176",
        "cursor": {
          "ref": "27bfa209-d1ba-41eb-a073-a342328e2f6c",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "01e0de84-66b7-4521-864f-6f4e197fa3c8"
        },
        "item": {
          "id": "453f0903-d1b7-465b-8e41-d3a4c1ccb176",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d6851509-525c-4c76-949f-18fda0138485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87944be6-1e1f-4b6c-bb51-486c0084025b",
        "cursor": {
          "ref": "b06a981b-1526-448e-bee4-966d54152445",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "35e9e40d-ff0a-424f-a2d1-8c9660fbdac0"
        },
        "item": {
          "id": "87944be6-1e1f-4b6c-bb51-486c0084025b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1bfa8b3d-9291-4e74-a14d-d421c7d4e98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9759bd19-5cf0-43f9-87a3-af11c59a81c9",
        "cursor": {
          "ref": "3b597a60-bb69-4a23-b5b7-6fc6328319dd",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9d6c089a-4472-4d8a-9d49-ddc2be59cb8b"
        },
        "item": {
          "id": "9759bd19-5cf0-43f9-87a3-af11c59a81c9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "94d2fcb1-e1d5-41f7-8c6d-a9a8dd2447df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a0b18e-bb2c-4450-96dd-9dc21d4a66d1",
        "cursor": {
          "ref": "a57cb30e-8199-4d12-a97f-e4ffc9df2446",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3bb3cecc-ae5c-495e-a44c-8d53e31a4a9b"
        },
        "item": {
          "id": "a4a0b18e-bb2c-4450-96dd-9dc21d4a66d1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "be1f8aad-600d-48da-b08b-1c85f3a66423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76db0cd0-c875-4f85-be48-f19ba7111b93",
        "cursor": {
          "ref": "60c11ddd-a0f1-4f5e-b5ef-beb5a3c19a56",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1b4e3d64-977c-46e1-9d3d-80c90961acaf"
        },
        "item": {
          "id": "76db0cd0-c875-4f85-be48-f19ba7111b93",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5cecb8e8-5a22-4eea-aa77-82a83c75ee6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8cd222-4c46-46b1-b717-2c0db49069d0",
        "cursor": {
          "ref": "4699109e-5745-41f6-8155-937b3d8de80d",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6b0cde13-08c3-473d-a273-04cde3ded594"
        },
        "item": {
          "id": "cd8cd222-4c46-46b1-b717-2c0db49069d0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b9b87e48-48dc-4412-a5f2-7dca498bd901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43491e0-1709-4fb7-aeac-6a58424cc60b",
        "cursor": {
          "ref": "aeb74b47-2b35-406d-b83f-9b6771189f2a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2008bfa7-daa3-4500-ac9b-59fa117d8c21"
        },
        "item": {
          "id": "a43491e0-1709-4fb7-aeac-6a58424cc60b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1f62ce0a-28d7-4eff-9409-7bd694dfe9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd5db29-18b1-468d-bac0-9e9e4fbb8463",
        "cursor": {
          "ref": "efb3d605-bbab-4ed8-86a6-bfb6d8dfb1f7",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "50c4634e-0f81-4411-9ad1-ed2824efdb42"
        },
        "item": {
          "id": "3cd5db29-18b1-468d-bac0-9e9e4fbb8463",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "772e692c-c31d-4a34-879c-3a639045b684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0629b69-c3ce-4169-8442-33c944ea9d9e",
        "cursor": {
          "ref": "649df1c1-dd4c-4f22-8130-45b31dcf7992",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7e0f4083-b70a-4884-8f52-fb603d84d8be"
        },
        "item": {
          "id": "f0629b69-c3ce-4169-8442-33c944ea9d9e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4125b365-06cb-4e8d-ba4e-88c7d574c404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48909bc2-9da6-4de6-bbf2-4377602690fe",
        "cursor": {
          "ref": "ed80b939-1e1d-40be-a3fb-dc920ced4579",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0554454a-3d8c-4b08-a579-76c1f2e287f2"
        },
        "item": {
          "id": "48909bc2-9da6-4de6-bbf2-4377602690fe",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7aa99b53-dd52-4770-ad6a-77532eab498f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a60564-4ce4-47b7-9cbe-346bc0c7d774",
        "cursor": {
          "ref": "38ca804e-1ba2-4d15-b45c-172f355a78d7",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "81ab0ad7-a21d-43cd-a5b1-2ced16ee45b6"
        },
        "item": {
          "id": "72a60564-4ce4-47b7-9cbe-346bc0c7d774",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "38e83586-db3c-400d-b137-b1fb6f67f9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc118afc-fa2c-40a0-8887-403697ad7fcb",
        "cursor": {
          "ref": "34f73759-ab0f-45d3-a7cc-fc956c36d625",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1a2a7bb7-4cef-4231-bb7f-52ea4169ddb6"
        },
        "item": {
          "id": "bc118afc-fa2c-40a0-8887-403697ad7fcb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ba40b018-7e7e-49cf-b6a8-8e5b54d19fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe8f89e-85bf-431b-a9b3-2114901d0264",
        "cursor": {
          "ref": "95a7efb5-2fe5-4ef3-bd75-cb1a9b791349",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "42c2c6c2-3e3c-444e-b8b3-c9a33fb963a5"
        },
        "item": {
          "id": "9fe8f89e-85bf-431b-a9b3-2114901d0264",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b1caab23-0cd3-49a3-8a81-a3de6f6e8826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4034d3a9-762c-4895-9436-e373f95ea948",
        "cursor": {
          "ref": "36c6c29f-4426-4d34-a3f2-ba56c1f0c0bf",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1a1aa276-6d33-4ade-b241-cf2cb8daf456"
        },
        "item": {
          "id": "4034d3a9-762c-4895-9436-e373f95ea948",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "504510cb-5715-455d-b9c4-8473496750ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7979d7b7-c69e-4de4-9c44-2fa48c0eec7a",
        "cursor": {
          "ref": "4f02fc9b-e18d-43e8-b3fd-5f1a403db4ba",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5dc548b6-3530-4a8f-b8f3-404c372a9782"
        },
        "item": {
          "id": "7979d7b7-c69e-4de4-9c44-2fa48c0eec7a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "089d31f3-9d6b-4db1-9a01-1b206f2e9822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d092a963-e637-48b9-b54d-0f6453388889",
        "cursor": {
          "ref": "5caad006-adc2-4339-86ff-7b5bb7e1a159",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f3f3e777-ef3d-40a1-9888-214bc7fe6b63"
        },
        "item": {
          "id": "d092a963-e637-48b9-b54d-0f6453388889",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d5d7f204-2a5e-473e-8179-8a1b964ced57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc19aa90-af38-4ff6-8895-8884d36e5b20",
        "cursor": {
          "ref": "75c658ec-32f1-4cc6-a26b-946de26cddf5",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d3bc88f9-334f-4de9-9bc0-2c8528ed0377"
        },
        "item": {
          "id": "fc19aa90-af38-4ff6-8895-8884d36e5b20",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "64ca81bd-b0c5-4c15-935b-bb8138b24b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2dd043-5def-4073-acde-c91431500e44",
        "cursor": {
          "ref": "e801ed53-afb6-4409-95a4-7417283430b8",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c8a1ae14-80f2-4343-8b9e-e54854b18fad"
        },
        "item": {
          "id": "4d2dd043-5def-4073-acde-c91431500e44",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1d222dbe-c8d5-46c5-a77d-2ea0a634a93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7eef69-f70d-4e53-bcc4-ea1c525cc132",
        "cursor": {
          "ref": "a43f4028-1960-4446-8f2e-ed3b3614e86a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "59e9f38f-ad61-4e5d-a671-3f21e16db4e0"
        },
        "item": {
          "id": "3e7eef69-f70d-4e53-bcc4-ea1c525cc132",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "18a5ec5b-fd85-4415-b44f-e206fb6c43a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c8026e-abd0-40bf-b45a-1aba3e8cf16e",
        "cursor": {
          "ref": "c10b34d5-93bf-44f7-85bf-a7a2808de3dd",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9d7ad19d-59bb-4ed3-930f-bfdbdd32259d"
        },
        "item": {
          "id": "c6c8026e-abd0-40bf-b45a-1aba3e8cf16e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3bd54016-dbf6-45e6-ace7-b92f255d4652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddcaf05-53e7-4d02-b780-8906a89351ff",
        "cursor": {
          "ref": "77ca59aa-f3c9-4629-a00a-31a2658ee00e",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "11588d18-0c43-48cd-a8ae-1fe6dbbe98d1"
        },
        "item": {
          "id": "cddcaf05-53e7-4d02-b780-8906a89351ff",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1c57ef6a-d814-4e47-9953-dd109337d9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56631e3b-98d3-4fcb-9548-2cd961931db7",
        "cursor": {
          "ref": "c06fb110-a08e-434c-8414-2d3178139124",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ea7429aa-7f72-4b65-99db-6790fa2abdda"
        },
        "item": {
          "id": "56631e3b-98d3-4fcb-9548-2cd961931db7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a3842389-1689-4e4a-bd6f-203543f03b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e40ac4-f6ea-43f6-8c40-884f580d15e0",
        "cursor": {
          "ref": "f66cc5c3-4895-4de8-85cf-437b010bcd3d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "40ed6488-8e7b-46df-bb95-d826a3ca7cd9"
        },
        "item": {
          "id": "23e40ac4-f6ea-43f6-8c40-884f580d15e0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b3f16960-81a1-4af6-99d7-971ed315eddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1979fcb-c3c7-4e71-9dce-b2382d76d220",
        "cursor": {
          "ref": "0e9548ae-9d93-47ff-907e-a0e1906311f7",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "afd5ed3e-cf5e-45e4-9b0d-2602c4160773"
        },
        "item": {
          "id": "f1979fcb-c3c7-4e71-9dce-b2382d76d220",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ab5eadc3-fb21-48b3-b875-a9e2a7c490b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a95d58-37f7-4064-9346-48d462e54428",
        "cursor": {
          "ref": "334f172d-c4d3-4289-ad47-65bfa3b22048",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "626cd19c-661a-49a3-b8a5-b94e78f68776"
        },
        "item": {
          "id": "40a95d58-37f7-4064-9346-48d462e54428",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "522bc64c-8f32-44fd-aac8-d7f65e64d3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761a4f96-38a9-4fe1-be71-3dc89a2536c8",
        "cursor": {
          "ref": "a1dfef45-5ce2-46b6-a056-21d1dfe4c185",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6b9fc493-ed27-4756-b2fa-af36c9eaf871"
        },
        "item": {
          "id": "761a4f96-38a9-4fe1-be71-3dc89a2536c8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6c834838-d0be-42c9-821c-de942e933e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf4801b-bcea-4ff5-8bb2-f917bdb7d8d8",
        "cursor": {
          "ref": "fa9e8a76-7ba5-4f92-96ba-3a4533483e5c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d21bcb14-5978-41d3-8e35-d4e1da156462"
        },
        "item": {
          "id": "faf4801b-bcea-4ff5-8bb2-f917bdb7d8d8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6fc589ad-f1b5-41f9-be93-c098b7e68aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ab32b3-cbe1-4cf7-84ce-6cad9de5da44",
        "cursor": {
          "ref": "15380ba9-c5a7-474d-bf8d-767c3a2ad335",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "345d34c9-cc21-4314-9957-2f5d710c3eaa"
        },
        "item": {
          "id": "50ab32b3-cbe1-4cf7-84ce-6cad9de5da44",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "26a27565-b0c9-4ace-9147-d86295cc56be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5011670-acb8-43eb-a106-9c2cdef46e88",
        "cursor": {
          "ref": "520ed81a-186f-4d64-ac33-619efa55ca15",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7b189bda-9e6a-4ec7-9c8a-844091beb2f0"
        },
        "item": {
          "id": "b5011670-acb8-43eb-a106-9c2cdef46e88",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "59827efb-da5a-406c-8531-6b57a5c6b181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77485bf-0163-4364-87c3-936b1c36febe",
        "cursor": {
          "ref": "7b8b4442-09d8-474f-ae9b-6151ed7e0d51",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d053696f-bd90-4300-8c0e-bd7915832352"
        },
        "item": {
          "id": "e77485bf-0163-4364-87c3-936b1c36febe",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2392a7a1-896d-4537-aa1b-d5cbd1530ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372cbcbd-6d15-485a-a824-65317afadf6a",
        "cursor": {
          "ref": "421bda34-c5e4-484d-a180-2ee518721e9d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "41993a29-aee9-4afc-80e7-91fceb613383"
        },
        "item": {
          "id": "372cbcbd-6d15-485a-a824-65317afadf6a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9c471c19-47a6-45c5-8719-8648291d3ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53611959-8eaf-4880-bca4-deb4be030f8f",
        "cursor": {
          "ref": "22f5cc5a-7e38-4f87-875e-8c226a877b9e",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4eb60294-c375-4d87-be72-2c87b24927dc"
        },
        "item": {
          "id": "53611959-8eaf-4880-bca4-deb4be030f8f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3e5f05b4-1754-4832-9a96-8ddb3a779235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b27d5e-6eae-40df-b276-690db99b8b29",
        "cursor": {
          "ref": "913bd2af-c4a1-4083-a665-b3374b1fcc5b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3c250470-16a4-4c06-a175-3bc838c86745"
        },
        "item": {
          "id": "80b27d5e-6eae-40df-b276-690db99b8b29",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0a04fe40-7d7a-4095-9156-4346bc2373e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b80569-f076-435d-ae1a-fbf1668fc97e",
        "cursor": {
          "ref": "b0c6d521-a13a-4a07-8f27-27f3087e745b",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "710a2e38-e726-437f-8d80-60e145eed7ca"
        },
        "item": {
          "id": "b8b80569-f076-435d-ae1a-fbf1668fc97e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "37094d2d-116b-4933-982b-8113251a9ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bdb390-27bc-41a9-911c-574610fd8a5a",
        "cursor": {
          "ref": "2d981f50-2a79-42d2-8496-433abc68d627",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "294fb21e-8722-4814-83c0-3c5f5f7e146c"
        },
        "item": {
          "id": "10bdb390-27bc-41a9-911c-574610fd8a5a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "92747ac7-4e83-4893-abd3-7fc84810191d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c4cf21-fa9d-47d0-a3bc-f06b297e5383",
        "cursor": {
          "ref": "1a0d0790-13de-4e7e-8e0e-7e92502ffe5f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a2cd963c-ec29-439a-aad9-d17ccedaed3e"
        },
        "item": {
          "id": "97c4cf21-fa9d-47d0-a3bc-f06b297e5383",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "86df03a2-047e-44b6-83ea-7de96dec0311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c43179b-6254-427f-94b3-5527f9b5963f",
        "cursor": {
          "ref": "bebcb9c6-3755-4a77-a8e6-c6775b8f3720",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "42fa3841-6209-4103-9c82-d6d3fcfcb54a"
        },
        "item": {
          "id": "3c43179b-6254-427f-94b3-5527f9b5963f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1dc24ec8-7724-4ae4-94aa-587f2ed425e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba17c99-de37-49ea-a584-dcd12ad2754e",
        "cursor": {
          "ref": "7b522823-625a-42c4-8fbc-cb2bef8459f1",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "88d569c2-c71a-4111-82d2-9b058aa098b4"
        },
        "item": {
          "id": "0ba17c99-de37-49ea-a584-dcd12ad2754e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c89c4898-d721-4265-a5ed-23ac11a70251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116cbe8b-768c-4ba8-b9ae-d11bfb6f9f9d",
        "cursor": {
          "ref": "ef0fc2b0-0842-4ef6-9bfe-6d829cf792b8",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2536d814-1fbd-42e0-ae04-9c221a0c88cd"
        },
        "item": {
          "id": "116cbe8b-768c-4ba8-b9ae-d11bfb6f9f9d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "81ee665c-41b7-45a0-ba6e-15eaaba93cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269d2f00-d8a2-4495-817d-10657533e5b3",
        "cursor": {
          "ref": "ff5baff4-5034-46ce-9e4a-44a83923bb1d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "85b7067d-4af6-4dc5-a5ce-cbf35b1432c0"
        },
        "item": {
          "id": "269d2f00-d8a2-4495-817d-10657533e5b3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b7c3a620-491a-4949-8399-fbbae0a7d664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f150aa5d-9988-4c85-8898-ea205616adde",
        "cursor": {
          "ref": "bc02949d-7397-4057-b656-116eb27cf236",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "59dcdec4-e5a1-48eb-b2fa-9eaa177ebc0f"
        },
        "item": {
          "id": "f150aa5d-9988-4c85-8898-ea205616adde",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e6f116e3-ff4d-4fa8-b04c-fd80e0ceb3d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfae06d7-0708-42b0-b4c3-98b045b1833b",
        "cursor": {
          "ref": "93437cb3-74d6-47b7-b95e-51327e3ae224",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d0ea3b3c-8428-42e4-9814-7c4eddfaffda"
        },
        "item": {
          "id": "dfae06d7-0708-42b0-b4c3-98b045b1833b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6071f151-eaee-4fc5-8890-54a1b4942e0b",
          "status": "OK",
          "code": 200,
          "responseTime": 2303,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a541b6a-7747-43ac-9c82-8d0a48d1fd7d",
        "cursor": {
          "ref": "d99fba4a-fc97-4e65-a665-c7ed694c711b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "75d1708d-7a08-42bd-bc8f-442d7c83c035"
        },
        "item": {
          "id": "0a541b6a-7747-43ac-9c82-8d0a48d1fd7d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ac90beb1-c8ad-4b88-bcc6-68ce004416ef",
          "status": "OK",
          "code": 200,
          "responseTime": 3572,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b84cfb-fb92-4da6-951a-5e879300b921",
        "cursor": {
          "ref": "ea614714-9832-4748-8c4c-0545fe9a9e93",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "378660b2-10e3-473a-bd50-d301d7025608"
        },
        "item": {
          "id": "85b84cfb-fb92-4da6-951a-5e879300b921",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d0ebb503-cff0-4236-8494-dafd111e485d",
          "status": "OK",
          "code": 200,
          "responseTime": 2968,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "176a3f65-28a5-4771-a039-0642481fa14f",
        "cursor": {
          "ref": "97b8dea3-05f3-4f7f-a41e-b428a9fb01e3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e686accf-b1e7-497c-90b6-35eb122720ea"
        },
        "item": {
          "id": "176a3f65-28a5-4771-a039-0642481fa14f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a09a0516-c4b5-4ebb-971e-968cd46d13ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176a3f65-28a5-4771-a039-0642481fa14f",
        "cursor": {
          "ref": "97b8dea3-05f3-4f7f-a41e-b428a9fb01e3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e686accf-b1e7-497c-90b6-35eb122720ea"
        },
        "item": {
          "id": "176a3f65-28a5-4771-a039-0642481fa14f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a09a0516-c4b5-4ebb-971e-968cd46d13ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddac8c32-98a2-41c6-9265-802cd2c45675",
        "cursor": {
          "ref": "a83abc7e-093f-4376-b7f7-beec88b46fe7",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0069536b-50d2-4c43-acb4-3a542d14e884"
        },
        "item": {
          "id": "ddac8c32-98a2-41c6-9265-802cd2c45675",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e0c59feb-41c4-4932-b24c-a995d7ce1bc0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57126ea5-3465-4934-a3db-a5f56bd316ff",
        "cursor": {
          "ref": "3a9cdebb-7bdd-4394-b2c2-5d81cc4a2994",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "33318d26-1948-4b7e-afc7-555cb7dc1830"
        },
        "item": {
          "id": "57126ea5-3465-4934-a3db-a5f56bd316ff",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c81d3233-4f95-4699-b357-773fb9937c55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}