{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "aafa25f4-201c-423c-9f26-5d09e1eab074",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fcd0da2a-ff54-4949-8dfd-9fdb418e2e19",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "39702605-30c9-492f-8df1-ce9f21f6585d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a41ec66c-f79a-4bea-b28f-8c7225b6e4dd"
                }
              }
            ]
          },
          {
            "id": "f70c8d00-ca49-4b45-9bf7-8a67b2bf3fc9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "43e93764-6141-4c4a-a79a-41e9a594e67e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2ba2d462-0303-4940-92ed-4647cd8c612d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "72922a0d-bbaf-4a91-9661-7ce2d751f4fb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e9701625-6166-4449-b100-6a73565b666a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9077e2fc-a23f-4dab-89c3-7428b7effadd",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4977195d-79b3-4787-b8eb-5b90d3455952",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac941d77-6f02-4932-a4de-8b5d3a2b6600"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7fb32913-7052-49e6-9906-c60242714283",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ab63bc4-5da3-4be0-9260-a26fa23c0bdc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96e7c191-14ed-4eb8-84e0-c14af59c976b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d15d167b-9219-42b5-a5e3-d1c014306815"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "637b16c0-263d-4151-8e5d-f1fc1bf97676",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d4aed1b1-2c91-49e2-a736-0d45c211a5e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6958134-5173-474f-a1a9-74f505bb73f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "384766a0-94d5-48f7-aad2-a12181d39024"
            }
          }
        ]
      },
      {
        "id": "638b67ae-0d60-4bd6-8ff0-aaaae4ba24a7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1744ee0e-c6ba-4bb2-9906-095cf820ddf7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de6d8b87-0dbe-4adb-ad8d-0b1510c114e7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c7cede6f-7c59-458c-b2c2-ffa57b03c4f3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4c77fe-7515-4875-96fb-552e949e9036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32a16a93-b855-4a4d-bc99-0932d27c9497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaade6b-8c03-46c2-a99e-33e3fda21521",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225ff1a2-0365-45a2-92ca-fdfe250acc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a975f0b-ce24-4831-aad6-e81ddf5cd394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9ef34d-0fe5-4e97-b609-f95df9e788f6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e19ba42-599b-4c41-a72b-a07bd5d702ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "178db63d-380b-45f0-974e-2621ddf0f827"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4a302c38-0a7b-4f09-9e22-b3e96d039ad0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71ee01ce-7fda-40fa-b1bb-8a3c6aad3869",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c47d18-c965-42e1-b01c-eb363268bb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7657ce9f-c7b8-4cea-9cba-618bd9370d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff4d22c-e5eb-4603-9218-2a13edfc5ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4499af-27b9-4a99-a685-59d2077bbafe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "547ed9ca-25a5-41bb-a94b-2d92cb6a455c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73a7de56-f101-41ad-97d6-c34ee519c1ea",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d011ace0-12d4-48b2-85e9-fe3bea83b9b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c5dcc821-e141-4ca5-8dda-84d7b0f475b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29daf507-1015-44ca-be5c-3687b48d209d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c015b50e-156b-4ec9-a6ea-c018b5f1626f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac8c36f8-9e65-4a3b-8a86-33e3ffbf6145",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aff0d22a-c97d-4aa4-8a0d-f3d4bb8ad585"
            }
          }
        ]
      },
      {
        "id": "52821b72-49c9-43f9-ae3a-0b02daf42252",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c08872ba-0f99-43d4-9cce-a291807d86be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0498c768-7dd3-475a-84eb-2b26f7721130",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1d5ca72c-6307-4f41-bc18-89e786d39c7b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885f97c2-a525-4c09-a8dd-69abc14dbaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0844d32-3ced-4300-b183-025f1737ee0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fa57d3-4b13-44d9-b6e8-559163cb0039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45f73501-4b23-4c36-84da-902af21642a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f63dd4-a232-4081-8488-1801078a7245",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6b69f4-ce83-4527-ae4f-5019f95ecbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4b034c-6649-4a6b-89bc-fd8a57001990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0a8182-cc90-4961-bf0c-1527d95da421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccf87c8d-a37f-43b3-9fb7-17b736d1f71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2084f5f-5112-4009-96c5-bb3cdb7b74bb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cf6254-2e7b-4b48-8973-d20acbfb6f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f455afa2-039d-4140-b0e2-2ceff49d7552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5795062-84d8-488d-8f9f-bd14399376a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a60a4b47-31f4-49d7-ae10-90e27c8e92db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140d15a4-89d3-4860-a98b-ecb882c39979",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcf9ee9-7647-4887-ab18-035feaf6d554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be35f2b-f050-4b10-91aa-f37773977b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d7ba50-daa0-478a-9fc6-8930098301b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf253d26-faf4-49fa-821d-8b8277031d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fd8d23-4e77-4a4d-a807-d6dcf773cfd9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b8a3dc-3695-4cba-b29e-5d0edc251d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ad5cae-9195-4f75-b429-432ec5cecaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535c9af6-d457-4e71-8930-83667f7f1a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d09e8739-a548-465f-b1a1-0c1aa6672c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97def31-63c1-417e-8d21-86dc1834bafb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60808759-434c-49c0-911a-3952b9e6b499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57dfeb00-63ad-4fe3-857d-5fa084556cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802b18f0-131d-4594-84f4-7f3e8d74769f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba0a4d8c-4f0d-4c22-a883-ddf59353c7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f334d428-f925-44fd-ab8b-1da6cbf1fd40",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2c1f26-c821-46aa-8966-f70c9defdb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d16923-e580-49b4-9d09-a3aed29dcecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf38e98-5a4b-4162-8e0c-e1b910b6f371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "205cfa50-3dd6-4af1-a668-d2653517bbe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735ed1fc-91e1-4114-81d4-107f836c7f2f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4f42fd-0a7c-4b74-845b-2bbcb8c20d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e068fbcc-71d9-4fa2-a0ec-27907168034a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d4d1b9-0697-42a5-8c4b-c3df9a51c32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b96130a-ea6e-4e33-8127-d236362910f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61182e0b-a7a8-41d4-8484-dd50e4e929ea",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d321df60-3e6d-400d-9345-21eeffb7c14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5285686f-ed89-4a75-9ddb-70541508e074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4057b28c-03a8-439b-8058-5ec5d68b8040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6d0729c-544f-478d-a5f5-c2bd0e0be847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1239d599-95bf-49d4-8281-7a2c756a9d0b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de884a32-8710-4ed4-b19f-dd37b2d6c2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efba283-eeb1-4236-b609-2c07d8853351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0589a974-4c40-44e1-84c8-e4143eea111c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd13929e-b3c3-4753-9f38-ab7fa2ff7d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c1d615-08e3-42ee-8a03-a5a6e47109d1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee4cc52-2b16-45b4-a442-8a61d097e239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4bab69e-26e8-47c5-9b18-0a8e2153d2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbab7af-0cb7-455b-afaf-15d1cd64465a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5140e05-1072-4439-8534-2631d5f5429e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a330a1-b561-48c4-a16d-e55b5e42201a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1579a202-2390-4dc6-839c-6894977c5d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cdca4e3-25ae-4103-b6d7-3c00a22a1af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c315e1-ce61-4848-b095-932e206ed5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef882869-f930-40fe-a84c-2d2121157e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21582788-832b-4b08-98f3-0f63f5443176",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb18de0-5829-4bc1-8ccf-36907acffb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a5f36e-5044-44df-b660-5e888c97efa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dcca55-0622-4ca1-90b5-59a3e912a903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f27dec3c-0c94-48ca-9bb1-fa4073ed3d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9671f6-5554-4077-9d94-b9338651700d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61693f35-0456-42cc-a870-1bebf29fa3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc2d70af-cc0f-41cc-98dd-1c17cb0508d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f29542-891b-4c61-8dc9-caa61bfb1aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68b64b8e-b5b6-4a7f-908e-04b3ea895c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c878c98-bbb0-4eb8-a26e-238e183d0fff",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d7b255-a26e-446c-ade4-734b30d1934e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a69348-b2ea-422c-9bac-11b47dbc97fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7208a2fe-cb59-4728-a608-b9694b10af37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c13efcf-0246-44db-afa9-849ebd82ec72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148ca6f0-a193-40f8-ba7a-20a30739e996",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1caa18bb-9956-4e8a-aed7-a66506884bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878ccc90-50a6-4ebd-8cca-2b98eb28dac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c807184-251e-40c2-804b-d3436f76af23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6bc50c2-c20b-479e-9f97-3841538a6e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed50d334-b1d2-4069-bc69-3849a9b137c6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb5ddf6-78d6-4a58-a2ea-d85b3160e8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5532a61d-a643-408f-99bc-c500cfe8f685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b361f3a-1e2a-4245-8460-0dd1dd617d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12af46f6-330a-402d-abad-5b4dd03174b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21dbb319-e972-4ce8-aac8-cbf33bf42fe7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a697fc-d250-4d8e-9883-1c6368f4aed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9960e502-7d6e-4ba0-8677-957bdca9bead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276e0b75-9c8d-43de-abb9-6f3acef17f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a0f8f8-5c78-47ca-9fd0-fe9099ad4bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0efb2c1-3c12-4dd2-9404-aa4912a49b45",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0492589-f2bb-42da-994a-3a5a4469cfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eabb621-3748-49a4-9fe8-fbde8278eb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16f0712-45dd-485e-8492-e25f8bcebccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae2f529-3c9b-491a-921d-de3a15fdaf94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807d26cf-59b8-4fc4-af20-cf7083eb4f57",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd5af10-9eee-44c3-ac25-a5d451522c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07be413-5b1a-4f14-bd79-ec88e11eb80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e63d1d-14ba-4d08-ae9d-88a4fb733ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b98fc157-ab3f-4d39-a04a-97272919ee1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d764c03-c9b2-4680-be4c-37c18a62a5e1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87c056a-a38c-41e0-b7b7-ef461e6e732b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1319a0c0-acce-4af9-9255-4df3e71bfb86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4fd69c-88c4-4bba-92b3-512cd3b2307a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c13476e-1e0c-44d8-9608-1faa862f25fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec00d357-e19a-4b3b-b733-f5643d14acac",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11580f7-4b39-491e-ab22-6af9d54afacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa7f0e4-54ec-4715-a56c-dc814395f5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfe5e5f-77c9-489e-bb39-0d492fcc8e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb705a8-2f32-4493-93ec-f362dfc246ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6cb217d-be62-4985-8118-fff75cd835e1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddbe9ba-9e17-4fdb-9280-d868dc37dd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4847aac9-e782-44b0-8c88-3054d5ed6709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5462d9b7-c9a5-46db-ad4f-b0d39a06740c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9363d3-e361-416b-b592-fafdf7c576ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fb65b4-7884-484a-b29d-f85b36596f60",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc670012-3112-494d-ab3e-832254bbd984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69354ed-92f7-49fb-8f8a-0e71bfbe3cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61916b55-670d-412b-a93e-73c01526dde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf24ca9-3744-4032-a1aa-f69c9ba2426a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2168431f-8ace-457d-a5ea-5d1ec429d597",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c59fc4d-6bcc-4289-a074-b8aa750f05de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f44056-29e5-4ab7-be89-19a8ec4683ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765675b8-f076-4454-8ee5-aa2a80cb25f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9a5e14-6886-4b1a-9bbb-31faa68bbae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee5b4c9-e660-4ffc-b079-7567df8286f6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfa3aa9-1d01-4bac-b43a-887b4aa8e471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cee9677-6c61-42c6-acbc-bff7c13473d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b778f286-1b45-499a-bd87-6a5f74e46148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc180cbf-3755-45c3-a2da-67e8e21856e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e81a2f-827f-45b9-a0ce-65643b5851fb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18327ce3-c4f7-4ba3-bee7-6d0f0b4ae0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34a2a50-de9d-4101-be0e-71700921c111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d455104-53c6-4f4f-93ba-dcae9f84b343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79e45b2c-ba17-43b7-827a-64a223dfc384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d37954a-45b0-4927-8d87-e893997a99e8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69255294-35d4-4f96-aec2-5da453b16a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863e4277-d45e-4a4a-a4fb-82b75990663a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d399ab-a8a0-4651-ac94-16f8c83f7d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1ea1c0-7c5e-4092-8d70-7e47264e8bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bddd56c8-4549-49bc-91c2-6120b05c9c46",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2078386a-2267-4d0d-bc18-45b2cdd9c7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b819b2-11ce-48c8-b464-82ac474e4e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316032c6-0a8b-48c5-863a-6d50f0d93739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8225681-638e-407b-8d09-888c85088535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367ef237-68d0-4d14-8a78-95b69da0f716",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2bdf0f-5b8a-4283-8329-10b09e8bf15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0a979c-845e-4cb2-b170-fab599bb5afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066798b0-64ba-4a61-a216-be02acbfb738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "74e15571-aa38-44b9-b41a-e5078d22841a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f1e2c8-3c66-4374-af80-859e50834da3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f492e6-6341-4ce7-80c8-80cb99bf7ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38ad5ec-3c61-471b-9c73-9acc332e448e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b515f9a1-f209-4398-b665-8c6420db0c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11de90dd-23b6-4b63-8476-4aff84e1848a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7635bf29-88e4-4b7e-a3c7-aa91af0b23ec",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c9a28d-496c-471b-abb4-05ceeaa80707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0912881e-3f5f-409d-a880-0c73282176df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7558462-c8e6-40b0-8cd1-8ac152cddad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9b0b5e7-34b0-44c4-bf4d-a38aed4ecc88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d35e3a-983b-4a8d-bacc-072ac804044c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c851608-7acd-4434-9887-edf8ad0d49b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736c7197-d2bf-4986-9384-50e26e0468be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d84a75-3ca5-4bb4-a600-b7a708257f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aae09f0-6838-4bfd-9e20-fe231e2dd4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ac68ee-a567-41d6-8236-82b8dade3adf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c32a88-0c1a-4218-8760-93b1b0aa22bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3da4839-b9f8-46d5-9b02-80dc5b0e0ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0fb509-02b6-4ad1-a7d0-4266384410ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec26284f-2d17-4e69-a7cb-34a73a561a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb82bb8-2f8c-42ff-96ec-ab27f8f0e851",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bdebc8-8c68-4a0d-9267-38c47327abae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b058e567-78e1-4d9a-b87d-330048568173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4ed3b4-9693-479f-b10a-9542b5405623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4949e316-fb82-4440-b6af-c6fd2f211cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca25770-e50b-4371-baf5-80251f51459a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfba5d17-8c04-4cd8-806c-d9e62a75d8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1aca226-c04f-434c-9522-ac28003ce41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efac0a44-74a5-4b0f-8a27-825893b14b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c3cc13-f188-4315-beb3-96c435eed342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a448815d-a4de-4c06-8f19-d03e2a8e7280",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc27c093-da1a-4a67-bd50-ce839858b1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3addc8f-c020-4de4-b448-72291e69ea88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc699c83-cf0d-4cb9-b174-801c60bd5d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae3d21f-ba51-456f-a63e-df3eca1fe48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4291f90-70b6-4a59-a483-dc2cd0a6506a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5212c4-b83c-4268-a3d4-00999bd02f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e530ce-3aae-48f0-b0ca-e9191c5798c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1463c8db-28c2-4e0f-a450-0826db2fb5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "963c1d0e-d789-4143-81e0-e5a571dfe215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543b0585-7b72-4424-b408-20e52d88526e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83139f5e-b413-439f-ba55-1958e916cb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48bb1f4-a873-4fa8-8944-d4d3029a0841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49a45e6-a869-4db9-a7e4-7b5048421c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "09e2af39-6cb5-486d-be7b-ce424b138c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d934908-9c3a-454d-b387-1c8aa8c25337",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa4054a-9a25-456a-bf7c-eb6b93169722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f951611d-12b2-418c-9f39-978272018119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6875ae8-f51c-46b5-a706-c28c9d7f0573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec46579-e174-4fa7-9d55-341a69a8ecb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1378ddf-6491-461c-a2a7-cf0e5d29bac8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317c7b4b-b548-46da-8448-06848ea454a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e2d629-f6c2-4ea3-bf81-078b217f73e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907bb939-c118-406c-a701-320e0e0312f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "77a5a924-5947-4cdc-a46e-a312895abb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ac635b-a8be-48ca-b38d-6cd56848caa2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa65e3c3-670a-4b49-b290-2e215f14b4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e895c1-7ff5-4d11-bf6a-ca4f1ffd5973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6888f0c-10ab-4561-b8a0-1c7a760090bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a7762bf5-e8f2-459e-a965-50b790e7e9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcaa595e-a4f7-4956-840c-3de49669ea0d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5096e0e5-2843-4757-8860-e02f9ba57178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78fd6b73-bbc1-43c1-b147-330c74846ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a719973d-e046-4f80-a04b-21f1f5ddffcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac3378d-9d6c-41c8-80a0-1ee05829cd4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60906ab-536e-4464-89bc-1600f0b2a5f7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed576c5-b917-4b15-9b1f-c3ea57e834d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9815c289-f94e-4089-9280-2e96389b2bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fe7fe2-3df9-4796-8e4c-73a5e08b96a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "73e04af9-aed0-4b93-875c-e7ed2ceb54bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cb07fe-a679-4932-9ac0-de9fe546b068",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6072146-663a-410d-acc3-e5e572248b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30f8354-aa40-4001-a3e8-e2dc1285f2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ab7f05-2258-45fd-82cd-b8dfe1c80b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "76689252-4511-4c2d-b1fc-ae8ab6309e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf392d7-def6-470f-8af5-48d7a32d1e61",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedb1d80-5954-4367-97fa-c1e8132e8934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2dd87a4-db31-4030-9235-ca26af576353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cd59e7-7523-42da-ba5a-a102de6f0330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30f6b734-0973-40e8-b8d5-6cc40c0bb6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00c14d4-a107-40bc-983a-4ec5de906943",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e510ce-cb63-4e08-bf4b-ba192e13cab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750c58a9-eb60-4073-aed8-d6bd7e83a122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac10879-ecf6-4eb3-91cb-71fa41ec4b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3f108c-67aa-4d2b-b553-74d7c9b573e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68205db9-e033-43f0-9f40-8c92ffbf9a05",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80853e1-2a25-4646-88d4-c6dff81e692f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3c0d19-66bb-40ac-a5d4-c327c865c02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f7110d-0296-451d-94f7-0cd7aafa9270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abd93813-6305-4f4d-943b-bd7000b58180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc237150-7f4b-41f0-9f94-c2996d4948c9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3353ea9e-38ca-4a37-9adc-c83334bceacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8994807-b5ec-42c7-ad08-4c15a750fa15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3607ccb4-f302-4f9e-b4a9-f06a43a6b41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4248ef87-9232-4858-99e6-f162697b70b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900f1425-a5f5-45be-8222-d4b5993c1727",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d215de-b65b-4a0e-b011-734d8c14119f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108cc1a5-e30d-4925-81df-a5909338bfcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bff1a8-1a98-43ef-a249-627496c998e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1e9062-37da-41c8-aadd-5f61b4f439c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82dc511-ef0d-488f-8dae-e574f64c2a16",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1181dc81-b2c7-4341-aca1-f9a05c8591d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd88ac8-cb27-4f5f-a2b9-ce2d5ed0b03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378e85cf-20e5-4ff4-9ce5-f6488740b111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c083115-1e4c-475f-bcb3-6a78602c46a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39aa73eb-6bb8-4c18-92bd-ade295a15a4a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f99f763-0c36-4275-845a-7cf3fd9ff34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c16fe6d-9c81-4cd7-b6a8-d9508017add3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bfd7f9-2c37-4c07-ae57-7f8d66e11256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5554943-b869-4763-9283-caefea452586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faff2cef-172d-4020-b025-93623dc14515",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2d2e27-6d29-434c-bf7a-222f1d646b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f187ac0a-ff26-4347-a7fa-6bd639a5cbcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7614c6ec-e11e-428b-920d-ff1322936646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53aab211-7f46-4cbd-808e-a84c8a9b4a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df55a96-b8a3-43ca-bd38-d92bae2264c2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fb05df-c8e7-40b0-a32a-e7083292e1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d75bb27-d371-455f-9052-c550ab3fa209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5243dec-5b35-4151-9557-bbc35354a1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "258bbb4a-d7de-406c-bc04-2b2188d6c1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d12a525-8919-447a-8872-0af413b95cf8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec92590f-7edb-4ad6-99fa-97d67e92c19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81b7ca5-e492-42a7-aa28-5667da7bab51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff643a7-54a3-42e5-9b05-3c7b6c64d19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc92d2e-c682-4b7b-aeb0-139211f03a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2628530e-0cbb-486b-860a-e83314efc0a8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c898dd36-79a8-4bd3-8650-f6da42437f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7374dd80-1ded-415c-967a-735d51dc51e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdfcb90-2b6e-4c9f-9f44-5ba0b6b2f1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "addf6174-2b19-4ece-b516-3c1daf93dcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f88b9f-931d-4738-afe6-4975bd2db654",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4301c0d9-c342-48e2-9c80-e5a74075fa62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be60957-3f73-4de0-9593-71ca8060706d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45747166-db98-42c4-89a0-b9fdf72e5232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "04d7eb82-7705-46d3-a516-4827b7102faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d21907d-92be-46b7-b892-8d9b86cea582",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfcee0a-cf8c-477b-b2ac-f0337ce2a8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f35075-fab8-4548-99b3-95ff057acf39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede4b471-1cd4-4d18-8bde-eb06dc388a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5412b19c-a687-49d3-bdba-fddf64be2f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea11394a-3052-4a2c-bb75-94770467df5b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9567b7-c0ac-472a-a098-45a961a88e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9840aeb5-3638-407b-b09e-963809a44c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef052365-8cae-4e8c-99b3-ed3261caa123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e09d82-c1ad-4f6b-9589-b7f31dd9b0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6f791c-d03f-454a-b80d-944450406d2d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58050c41-6baf-4936-bb23-07105e05a304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947117fa-c389-454a-993c-e9db3135b75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918773ce-b197-420e-b0a4-4a6c0bcdfa7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8182d62-c993-4045-96f8-6d3d9d784c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8243b07b-b4bd-4319-a4b0-7672c5a1c94c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79aa1b2-d09a-4666-b724-34d8b585ce99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2f260b-bfe9-46b7-9482-56f3fc2f43fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08c979e-d9f3-4ead-ba52-6d6c73b8565b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6527fddc-bc8b-4f92-868d-2210809373ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284067a9-d47a-47db-9616-83a923ccddd3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6a36d0-db7a-4740-a25e-bbc607b9acba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda6b75b-9c36-43e8-8b2a-cb6d4f100d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cfbb80-9d9f-4c9d-a6b3-6be54e7777ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "70f50926-e71c-4d3b-b783-c5c75fcc8d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe8dd5d-1926-4f2d-9dee-705c5fb50c9b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e2b3d7-5318-4ac4-af20-d3c6eee0b7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f0fe16-7a7d-427f-9a24-7f1f296a723c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946202cb-deab-4146-b6cb-88c537035762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d425a7ff-0415-4296-93bb-0f7c2d9a5205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11afbe6-fe30-4365-bfae-640d2ad203de",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e7f990-5b3b-4dfe-ada3-a15f24cc11b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201165e4-25ef-4484-a3f7-a6290d33af1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fbfdcb-b631-45d8-888c-7a3bbabbe848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8782b719-0adc-472c-b7c9-5043185ec1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb0fed0-80f6-40e4-aafd-0974b881e996",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9274fc0-26bf-4209-af43-39afd026b77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fa8f03-0604-4e45-a608-db7b011f0884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9759202b-4b03-45f9-b2aa-b6f24bc73ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2a5acb-93cb-483a-93b7-77bdb01ae09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f2cbae-2b1a-4f20-ba2a-d589eed48889",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826d97b5-3370-4032-8e0b-e6c420b4921b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5754309b-1056-4211-a22d-39f66a51ec29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b09d16-258a-4d9c-ba70-68d24fd4d448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3528d62e-b85f-49af-b651-b540c394cee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03f3c43-cb97-47c6-86f0-87dc73affd75",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7923e7ef-4dee-40e7-98a5-885e4a05f09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47412803-f7b3-49cb-86d1-a92394bf1a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8664fd11-0179-41ce-bae0-585a8c5d3eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56152aa4-8905-4777-acc6-f95b7fb5cad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf0339a-afc0-4ad3-851b-73dd9d4ca080",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714d4fbd-18e8-46b0-bf81-5dfd0ad2f9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de477502-1bf4-4a87-849c-70aae9470a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73262e6c-6e3b-4eff-b4f2-8d2339eab517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "10197c92-e13e-411f-bda7-9fcde94b254e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93790690-aac6-43aa-831f-b7ed6fecb7d2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26520f8-d03d-4055-8918-36e2b012e40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a43abf2-b1fa-4fd1-bb85-28d6dfc5e137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9918e5d9-7d84-485a-81fc-12a077dbb562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "199a7aad-2da6-46d7-8a17-4218b413a68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c3821c-0841-462b-a1ff-5c3cba60b602",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33be064-64b0-4e73-a732-ee8dd812a335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d254061b-0830-41f1-9dc9-5c3dfb239d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3412c7c-79c0-486a-b7de-23919e9761d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a35bf73-8851-4483-8c2d-178f40f9a9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bca6131-8986-4800-835c-f120a6e8d0eb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69c3542-0966-4907-988c-1b809c952fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc281ada-629c-4ac2-9616-41fe60bc0644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453b376e-3baa-43d0-9575-6c68a00b7dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4add995-1823-4f31-a4b1-d024795581b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58a7042-26cd-4d89-aeb7-e133e4bce542",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4842525-3451-4c1a-9353-bfc0f1e927b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58478f92-1568-4018-898a-774f06c33520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc33603-b209-40dc-8285-64690536ba6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af3961c0-332c-4615-b346-da60f97f82eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545dd9d7-065a-4853-ac9e-e7ad03698877",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7d3207-e27e-43e0-95c7-827f5540c196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8de4b7-115f-4d88-904f-9afb8f0490f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce999cd9-bbb0-46a0-a3e2-ee7838e559eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7e2be6-b8d2-4693-a7f4-5dbc57a47868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ec5153-4eee-4d66-9ccc-563ce2866df7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f06e588-5058-48f2-9b00-127283d9f207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953162e6-6834-46ab-bdbc-561c34e25f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a27303-9fab-4911-9d58-b2d80af979a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6e1aa2-dfa1-4bca-be5a-accbd3e24329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0706f8ab-0d78-49e4-9479-f75925a98e4c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ba2d04-de9b-4b28-8f67-60c4bbf10e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a85e3a8-7580-47c9-aaf0-1d2ac5ebf0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7ecce5-1e37-4cbc-af61-b7897250623d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6453592a-b5ce-4ecf-9c69-9b3bd731bdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc90eb2-27d8-4c39-8ac6-b792f1fcbdaf",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41875a8a-1917-47e0-9fb9-c52e0ddf729c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443b7bb7-9325-4b4b-ab25-f1692f071b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632c7cf1-bf72-4b7f-8dfb-3bfd7b84420a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75d5a1e6-74dd-4a31-8931-2815e7c45ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b22ee42-c84e-435c-bdd2-8fd6c83e0f63",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722192c5-82a2-48a4-b9b3-f2a0c313f757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bcb26b-a5a2-4b43-af85-a0f9c7645264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0768b5-aa7d-446a-bb43-8bbe74ffde1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc01c45-e1ac-42f1-8cbb-f24ead843c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bce28e8-b832-48dc-9ef1-d9d03e505373",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0ddc4b-0697-41c5-be4a-7010e2a354ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b7999c-3279-4229-92e1-a34edc428aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8605f2c-f72f-4ef3-bf3f-87fae5dd9201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30f1f44f-2db5-4270-a98f-8d64281feba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef85144-c26c-4a67-a403-5337b2f79af7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de5fed5-7a07-4e0b-ae1e-092c40c3ed38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a5ab0e-33fd-4399-8a5d-bbc932409ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40449faa-afbf-4329-aa25-03ff17fabf6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14e83271-5e9a-4e5d-aeed-1543267f603f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02405d52-35e2-46db-b0b8-c309dd88dce8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2727e284-cdcb-467f-a00e-f0f399f8c2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab797553-fb05-4bc1-a88c-7a9144dddc52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56dddef-435c-4c76-87ea-feee75787bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc19ac9-d7de-41a7-bce7-ba62589d9337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b323e894-ec3d-49e0-8c93-e3ac9be0a6a9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dae26e9-66f4-4f48-850c-a86bf4f7f08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e879b8b-ca8a-4038-a281-0a2e992fc371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87dd378-4e2b-424f-9cea-ef1db10cd872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcc1d82-4cac-4ee5-9cae-4023076bd632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6d8499-98b3-4dd7-8d94-eece0f90b445",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb853f9-2e09-446b-a99e-1845f2e39098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e6bcff-d186-40d4-b2da-086cc2032e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a89a2cb-2d97-413c-b3db-07b4d07b697e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c156cfd-7971-4824-a0fc-be02b535d454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ede1253-cb1e-4082-9eb8-9e3e5840ccff",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcbd10d-9e06-46d9-b023-dd77d99386b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ea5be0-bdf0-4c7f-b30d-6d433511a8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826f8451-d92b-4129-b7e5-f81ac37e63ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64b17d7d-e026-40f7-8ecc-24bb5c02b310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d63c43-268e-44cc-967b-00b3c5fc9e3f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c572e1-8109-47a3-b7fe-f9a2b4bdb9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eca2317-ba8a-4f78-ac21-531ca2ab3700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2d8d27-9c84-4eb9-ba51-eabac6e88100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "630d9143-5d0c-4580-99e5-3be5999c9e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a53a82-19d8-4b6c-9df4-ce988d936b8f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53867ab9-7555-498b-8862-3aba5f66fd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39bb9a8a-983d-43fc-b5fe-dc54e8c00736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa340ab-cce8-4118-981b-977417138246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb17f44c-4500-4204-a7e3-e9052b086b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0103eb5a-d9e1-4836-8284-5a33afd70fdf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d393788a-2084-4532-b51a-7c4009e3b39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7690e12-3e19-48d9-a108-6d96d15bb126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e88b69d-ec4a-4f22-8cd7-5ad22cecbb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "90078b38-a8a7-4f52-997c-279bb7af661e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247b1574-dfc6-40cd-9e03-b4f04af568c2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d5fd70-8c92-428e-b377-321055c0fae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cde610f-0572-47f1-bb6c-e8aa5cd794fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7696644-5d59-4618-afbd-8552eccb684a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "80db70f6-ebf8-4f4c-98e8-117980b490b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec40300-1a05-444d-bfeb-2075534541dc",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7eaa224-a2fd-4b72-b048-8e99834b1d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc0f4bf-3b11-4799-b8cc-a1a9c286ee6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e560fafe-27d7-4793-9d40-3b810c75188d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4091510-34f5-4723-82a5-c4f914bfa1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3005fc89-bad2-4d10-ae1a-24f0fb56d269",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9440d64f-21b3-4218-8315-b8d7277717d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1ec5f3-e3ef-40eb-995c-3a5e509a70e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2b875f-b966-4e26-bc6f-95ba94e966b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f9bfc1-94cb-4e8b-a595-86a2c240bf1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0d997c-fc63-428d-886c-a1ef76f7564f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bb1314-7347-4127-8c33-10ad3c670fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4652ef50-bc31-4f0a-abca-44e7b04b297b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bcba1e-6156-48c7-b508-251bc2e3759e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2159a9-ddb6-462b-b24c-c69901760586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40165dcf-dd0c-4135-9d14-3458228a1780",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a693e5-47d4-4af4-bb17-efe089ba1226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92237425-531d-4281-9c69-ae2b64f1a877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea83db3-c92e-4dc0-8ae9-1685bf790bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "28bba76f-a1fb-4849-947f-6a2ff2653118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c5b9cb-89af-49d7-b6c4-e51545528578",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75f1499-e156-4f50-a7f5-09303b02d899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "85d71566-4a4c-42b4-b360-9e2d33a61ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d0f1a2-1c48-4764-ae84-2c2b0b1f934b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb51e960-4213-4c73-abdc-b1371c6cf8a3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9754c8a1-982c-45b5-bcdf-2181cb54d361",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb82d79c-9b2f-43f9-b8c1-73f1fcad648f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adadcd8-cd7b-4ba0-b573-cf439945dd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15d68cf1-1b7d-4524-9112-ec5c7583547e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b9bcc7-e15d-4db5-a13a-05532084c836",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a04a867-269d-4344-8842-d9213e299d3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "931f9413-3f8f-4d52-968d-e04f00bc354a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35903963-c5be-433a-9a27-83dfe078a92e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fc2472d-2458-409c-ba05-aabb323b942b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14fc7dc6-187c-4733-9547-34e22c10fa27"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3859464b-641a-4c70-aac2-b5c5e2f2c7ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02952a4f-5d80-4365-b09f-f0ccf591bd13"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "53bc7fdc-6115-4391-8ec3-a970089b553e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1662f9e1-a6d7-4ece-8db3-f30e08343f91"
                }
              }
            ]
          },
          {
            "id": "89e039ce-a61d-4405-a97f-f409dc242466",
            "name": "Positive Testing",
            "item": [
              {
                "id": "687f63a0-8be1-4f68-a706-321c69e87fe2",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "522e59a7-cc8b-4d70-aa49-8613c96f0eb8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df0b56d-708c-4a82-abde-d11f5d4cf0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f69a0ca8-d7d8-49a4-80ec-299208b96365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea75cd45-8537-440e-9e0d-647a4690831c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16699889-d249-4d59-8250-0af52f17811d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1b6ff84d-7d0f-49aa-bb33-179a81063800",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f82fcc5-8cda-4876-86a2-b69b3080ae58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "234e7cc3-ff74-4364-bc21-1240051a42ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f269fea-822c-4bd8-bb55-af63499bad84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5e5fdf70-e077-4439-95cc-814b27f49eee"
                    }
                  }
                ]
              },
              {
                "id": "7858a111-a9fc-4c0f-ac4a-3c798b075e3b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b1aab42-64c6-4fe0-9750-12a6834f4892",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f39ef63a-c0de-4d1c-813c-e17910519f40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43b1c7c6-868a-4aab-8021-2e0a299198c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cf2a0b36-b86f-4407-80db-06e4b76c5cf7"
                    }
                  }
                ]
              },
              {
                "id": "910d833b-2044-4745-ac15-4aa8bdf7596a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ce70dc9-14eb-42b6-8556-f2a3e952aca8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ae8ad66-4b47-4083-a489-9b17d452472c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "885a17a8-7e85-477b-8deb-789f139eb905",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8bd28cce-017a-4e9d-802a-866ae6885e8f"
                    }
                  }
                ]
              },
              {
                "id": "c50f6354-514d-48a8-b51f-b2e14ccee08b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51530db8-3f55-46e1-9e4e-a0d9561e1ef1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1020ce6-0b95-4b85-8428-50ff0da01a64"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6cb332e-259e-4924-8f88-4373d004f81e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a474d9f0-e153-4c82-8d55-40a9d5e41f0e"
                    }
                  }
                ]
              },
              {
                "id": "040c1d69-2801-44b1-a63e-453ac34e7e75",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e019f616-febe-4351-8b9b-a88993f3aab7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa1dec68-5290-4b43-9b4a-108a3a7e77d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea3b7932-a10c-42df-a1cc-d62adc3bc0c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fff7693d-3fae-45ed-8521-a606b91adf11"
                    }
                  }
                ]
              },
              {
                "id": "2ad26206-8c06-42c3-ba9d-efadc813a686",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9aa6e83e-fa39-4a7c-b08d-a7060e19f338",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4e6dc22-5e6b-4a10-8b1b-0aa3df5dbc07"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4736e998-7fa5-4310-b539-77c7c88a6c87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bdcb70cf-df76-4287-8a54-8234f88e3789"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d607ed2e-1c27-4670-95f1-0630856cf410",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8cfbd7f-b398-4b5e-abcf-dd2790cdfda0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "84592dd5-7f32-4a25-955b-bbba82e7aec5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "340bba95-8a20-4498-8049-bbf47b01c306"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2a79f95-32ed-4290-8f9a-8df85dc9f1c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2248a7e1-506d-407b-8569-419bf732c611"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52b0bb7d-0283-4a32-ba4f-94904cf55711",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "513e7800-6bdd-4910-afd1-debb2465fc89"
            }
          }
        ]
      },
      {
        "id": "e4e1333d-c323-4ce0-b785-311432729740",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "92ac9fd2-0e1d-49b3-b697-1d31bff4263c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "425feaec-1b98-4591-b7df-948821f7de52",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dce69c50-98f8-42e2-a35b-48cb9b2493a5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c730b8f3-bfa3-456f-847e-8bbf51d8b954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0532f9-daf2-4063-9218-eba66091e854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b548c55c-06bd-4cd0-8c4d-f9ac5267c163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6249a5-887b-4648-a83f-dafbd97924dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8360e672-2dd5-497b-b536-ba907530f5a3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb364f7-5486-4e62-b6d4-535cc7a3e40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7d130b-3a29-450e-ad5d-42264dc4794e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3742e1eb-4241-47eb-9db4-5d26cd86fead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39ee6721-4cf6-4667-bc7b-d4c55cf29c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb880ef-df81-4259-b473-30671be7b655",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2bf371-3d8c-45e7-8209-053b313fdaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32766f3-2790-4909-8dca-f25305daa3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12372e1-e2cd-4f06-be36-776660f9bd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fef34406-f400-4e1d-8c38-654a58cc3204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33050b6c-5340-4875-9f0b-e43ac0b61f2e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16c304a-0acb-4afd-9d60-c2e040246e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5efbf17-5db4-445f-b9fc-22c83244b75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca230e16-3db3-44b9-810e-39ee0c8c7e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4eb784-dd6b-4584-835a-1a05c348445a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb80709-264a-4ee9-89b4-a935239dc6b1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d76bc9-b246-4839-8c95-e0ebe0a322d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85347e0-533d-42c0-9338-cda0e6a8971f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa1dbe0-96ce-4275-9082-a3d3a95fa139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af336eb0-74ee-4fa4-9641-cc2f632c3b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07670ae4-96d8-420d-ba66-e85291594c4e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643c757f-408a-425c-9f61-f70b0d86e5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e2a774-903a-4d67-a20a-994e3dd3f15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18610bb-5c43-40b5-9900-923d524b9a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46575c90-1b56-4c85-ab5e-c3b3b2f8ce1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aef5a25-d637-452b-bcb5-b56df475d6f8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300b874c-762b-4896-a869-fe3507be945d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9231abe-b328-431b-b9b8-84e88e08fcce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ce6dff-de18-451e-9729-052d64727757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "30411f7d-162d-4b9c-aa5c-455d0d9aee79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc6c3b7-dc15-4682-8ce4-e77bc4aa0916",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f00e79b-f49a-4b35-bd1a-78f3a0401b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40979f2d-9085-4e65-97e8-e69edeee6884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94534c4f-7887-4033-adb7-ec0f2a52744c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da2e2ef0-f373-445e-964d-07b6682174fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64997c9-ee42-4f99-826b-227caed77f15",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d261a1-d59c-4514-a78f-821bf440cdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a69f111-ef21-411f-8d40-dc5cc5eceff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb38a68e-58c1-40ca-ba6e-464399e8b39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc004b75-3da6-4a8d-b33f-214f64cf9b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef94e786-5ec9-4065-a13d-7b23cf2b52bf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5a4222-bcf4-41a0-a831-24054ddf0c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99a06f1-0af9-4b51-923f-beb65d6b7165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b67a19-c328-4bba-972a-4ca1e1cfc887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6622da7d-f54c-4a25-a855-f57bb5b0dd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a17951-725e-47dc-ac5d-379612220eaf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722661bf-ef27-4891-8068-8bb7cb947284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9b03fc-4e95-4e5b-b015-aebb7b168e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5634db-7a67-4bc3-9f25-3cf125391e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "09dfe4db-e2d3-402e-8809-b5f97f69bfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26e7ce1-ab07-4342-b175-9d75b8008ea9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004ed462-9332-409a-b2be-cff2bbed7edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617cc62f-b016-40e9-9d1e-e404161e3fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b036220-4ea0-4ba3-9144-884548b9b139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "855b2a71-992b-48e7-b301-30e9c890d4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf14bb5-575f-473a-9e9b-d0c8aa3da04b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339fdb65-14d9-454f-b2e6-e1981262c874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d623c6-9225-4e7e-aace-057faa04286a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4dd0ef-800a-477c-b000-efb690931a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a802ee8-d6cc-4b65-ad71-1ae932a8933e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0eb27c5-4c89-4599-b9de-28dc454038d0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2b6e94-8f68-47cb-9b2f-6e1c4d979ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8366cdd0-ed50-4165-adfa-8253dce18f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce33beb2-4c97-4004-bdaa-20c116491a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "698531ce-5048-4c76-a73b-7db32ffab8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a647238-814c-4f18-9e50-ecd622f05f6f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad5cd29-c1f3-46e6-8fdf-3b57d31cc565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666a4416-d026-4e13-b58a-020023e4ebcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb98f0a-2974-438e-a68e-cc027b9304ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f02820e5-178f-434e-9f9d-f6e62d4b919c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a69195-e4ab-48ed-9a5e-c798512d54ba",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a926b60-8b89-4526-9e06-a67584b35331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b322fe43-15fe-439f-8587-c988b36b8ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a17ed9a-79e2-454d-a997-d861fac26a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cadeb8ed-414e-4cf8-8826-6f64a8c12fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b323bb45-3e7f-4239-9102-31b140f8cdf6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5511ec5-ac74-43a0-a3c7-f7e5a914f625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a3a707-8615-4089-b1be-c7b5438ee786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afd83da-25d4-4daa-9efb-dea885bc2e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "05da33b3-fb97-47ba-b04d-595c3ed88d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e471e8-206b-48ba-abe2-ed77b4395e5d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6617ea-747e-4005-81b0-81c483c8c3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4495230-acbb-4109-b197-8e2b8c596a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63858756-7253-4f71-849a-2e27b5acae39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fcf9c18-96c0-4cd6-8b1d-68931ccb1aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5060527b-ca6d-4713-a354-2ff23b9a5511",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb53eb92-c4a2-49b4-8a19-ef1b415cca83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7acbbd-3d1a-4fed-b647-acf18ab63224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbbe517-f0cd-4e2d-835b-78d1febc4af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4ab0ed-9ee6-404c-986b-6bb45e61593c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e9493f-7844-4a43-8043-4c81254827cd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f8eeb4-b2a2-455e-b954-81f55af6b1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec62bf5-9227-4893-8623-c566982e2fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f043ee27-83ae-4b72-b90d-35685ddd1f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b813910-8fc0-4a10-b2f8-7f88673c1ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3734c40c-2434-469b-8588-9eba5108ddb9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb55ba9-f093-4703-80a6-b8798df8269c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3ac775-0e4f-4fba-90e2-f6b443630447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce46889f-f83e-4543-9a7b-3f7484f3e5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5daee880-a118-408a-820a-3ede08c26f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94944e65-3f0d-4031-9a58-62ab4542edb2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb119e9c-7a1d-4d7c-8230-853db7b260ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799adac0-b13b-45ff-afe5-98b906215bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06dcacb-15cd-4259-b37a-6359d6e5f76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6f7444-a9d7-49be-97d6-c061a8a30805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f5e48f-db57-49d8-8ad7-6316a6d45415",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8133974-0fdb-401a-8d14-31e3d41b3ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a423e20-2732-49b9-a79e-eb595c7d049b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4408b8b-714e-4c90-babf-1556e99cf9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50bae5d-4817-4581-9e8d-b2a7901fd157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7b100f-3976-4512-af30-fcea686d31c4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb5b331-3236-4cb1-9847-6d765c0e474c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972b9fe4-e566-420c-9e38-f157bb6d14e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b524dfc4-86c1-4496-a2aa-02e5777ef214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cfd1321-fccd-4412-b8fd-f3a030fd0288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde0ad79-4359-4e5b-9fb4-5dde4bdd9a9f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1140f1dc-8260-41a9-95dc-ed83263aaea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65bdd90e-dc40-4b8e-8b58-f45f25ea0f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb3a4de-54f0-4623-a06e-89ccec201b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1abeab2e-c9a2-4196-a168-ed5c756a5803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75250217-1eda-47e2-830a-5855ebe675c9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7329f883-cdb8-49f8-921c-8af0830a49f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c489f06f-a09e-4236-9c57-b0b24f2a0890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec4b032-70f6-4bf7-a6f0-edfadc8baf27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbdde986-b4fc-418b-8540-24df0f26e00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1802a04-2567-4b6c-aa07-e9f2d68e1c7d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e912bd48-9f73-4682-a6fa-5f87f1c97bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50246ec-cef0-4c13-9be6-03c78af2c274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22de8464-d1c5-4418-af20-665cb4e83f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50e46807-9879-4236-be75-bed00387c18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c019a9-12c4-40e4-acd0-3e328067b45c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d48a49-1716-4bf8-8b62-2c56b751e529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d3603c-4163-4ebf-a21a-2747632783b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7846836f-5e11-4ea8-9d0c-75213cc9fb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ebd276-bb0a-45f2-986c-b8ad05d9b9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370aacce-ba0d-4bde-8d55-b2f77c7168e0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0292d8a6-6922-46c0-aab8-46fa1af99c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076034bb-3d8d-4cfb-891c-ed579c681807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d98ad29-9373-413e-91db-3c7eea2e9371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af5f3f0-34be-4080-b04a-18f4a7aa0839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea49d57-70dc-46ef-839d-78384b277039",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2628835a-2019-4adc-a550-22e65c0da912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a1f486-02b1-429e-9755-e847d0234e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2a1040-abb1-4604-bfd8-e762f9bb0990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed09192-aedc-4259-8462-76d1010caec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa4e750-2832-4abc-bd8c-8c30fe91c4cf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99185f7-3369-456a-907b-e0898f01bdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c58c17-c849-4793-843e-ae280106e931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96322d95-976d-4bdb-8b13-eb18a7755ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa110cb-0fc5-4143-b9b4-67ba74b05818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d9649e-1f53-4574-8e55-5e4aeb796263",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4880dbdf-a240-4097-bc14-304f29e842eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67fe55ed-edd0-40f9-9bc4-c141537e4e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b852ab-a1cf-4f31-8263-6a1eff64d7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f146af5-c6c1-41e2-8007-7ee12967aa1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e35d0cb-1d14-4f1c-9a34-339e1b06c0d2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd56ed4c-f355-4e71-83fe-9ef5787f6c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9593a8b-64fa-4720-b831-b8d4cc77ccf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b421c7e4-0df2-4620-9ff5-9f8c822b01ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c98ddc9-3250-4e94-a248-71dc04da1a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20c097c-8ce2-47c4-8d63-4bff142c606a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ab1747-9056-4742-91ba-5e307615e40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a3ada6c-d0af-4644-874c-3ac7829cb57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e857d27e-c30b-46f7-b56d-a5603fa5f5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4750eafe-486c-4576-8b80-5cd872334738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69350b1c-290f-4f74-b714-d048055b0804",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4483d333-dcf0-4fcd-be43-af6353ff6b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6989aa19-a6ef-45e1-9c2c-9c71b2ccfd54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bde863-0489-44bf-aa99-c3ecac1a9770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5180c7-e81f-4515-aa01-c692fc5963b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ef3cde-7488-4e67-a3b1-077e9d608140",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1924562f-ae77-4f43-8382-b9fa09aaf9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb75e1c2-1c46-4e69-9a43-388374bfe444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def65cb8-bc3e-46cc-871e-e1af527d33d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72a3abf2-aca7-465b-b1dc-0cd54dd49463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35b0a7c-1114-45aa-a6fa-88f9094d149d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4eb5d94-dc0a-4f76-946e-b37f1fa287a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba46004-8a44-4fb0-97b0-db066dfaeccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f04040-3fbe-445d-8469-9cd8123e2cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81c1040b-848c-4e06-b6cf-56c7ff029d8c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c9adccc2-56b6-4aa8-b3fa-da8b2c9e0a93",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9dfc9cba-1484-411a-9f55-d47126df725a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9351faa-472c-4688-b60f-6cb62a6559a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4952e4d3-d687-41a6-9f37-26ec47f1ecdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2045da-1139-49f0-9562-a8c0224baa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af99af07-62e2-4c8b-9196-bb8bf2a7a57b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3aa3f6fa-f26a-43ea-8ca9-6c34e1202350",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "915b957e-c84f-4ba0-9071-81c602f6dd5d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3576821c-438e-473a-850a-c0f6ebd7abd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2cac295-cbc8-4dcc-99bc-1020b17bcec9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6d996b8-b712-42f8-8900-3681d98eb2cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eed3c532-517c-4844-9d9a-0f659f9c658a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de220a88-2d40-4a12-af4c-6621dda3ff90",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a66f6bb-f35c-441b-bd17-43c93a3fb631"
            }
          }
        ]
      },
      {
        "id": "58a1946a-974e-4db9-b5a3-8bf4839db46a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "54e846d8-c163-4c4b-8a07-349084d7eb08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e894b1f-bd8b-4688-a531-7ab262d2f8bb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13fd563c-6153-44b6-aa4d-7fef692140a3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af66f502-276e-4c7e-8d89-987f5761e9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d899d1-fedc-49cb-8615-770cc33bdfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879539c2-eeee-482f-a395-d0f8330219f2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a91a0e-5f4b-4b88-81f1-de18f0ad3a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bbb845a-2e1d-4777-9102-03d015a52871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa4392b-5310-4628-9ef5-af9386ad176f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a466e4-90d9-4037-8266-d20f18025b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c148a4f9-f320-4652-880e-fae7416a5069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af466421-ecbd-46a9-9922-cb1e7293919d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce812d0e-ffb7-4777-a324-5ee990c3b2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652218db-8b3d-479b-8bfa-f66b9ba89caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c650a3d-8e9e-41d9-9793-51da4ce34d8a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5049b379-7956-4548-85ab-29aaf1eb66cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6baf6a-8006-4170-8288-910aa91ce04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea46a1b-69cb-470e-8b1d-1a626ced9d71",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb13302e-aff5-400f-b6b8-f82b9260cf06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50ca108-cd1e-4a9e-9c3c-8e6a2b8fb005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d52fa8e-ed3f-40c3-a571-abae66e687e5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d6a977-93ff-4aa4-a02b-934c277c6654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300328af-da7e-4bed-b0b3-b8dadfe36783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b4b973-57e8-42c9-96ee-2d118f3d05ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107a9a28-bdb8-4d58-9943-81b15599181e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e65a46-071b-4413-9185-2119176a7a9c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f39c5ca-dbf6-4a78-be6c-3b34b9db73c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b584da9-0700-4243-aba9-a0d4a84c9e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0eeb622-3694-4836-8d17-d6db9eafc09d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9192ef4c-04a7-4f15-a44a-3caeb1ab9d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbf799c-b32f-4447-80c5-131b01e99117",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c84e099-a481-442b-8422-4718c4a37ef4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd79f07f-083f-4409-8db9-9d29d2c168eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5b673f-2bb1-4b93-bbdd-271e59ede282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b37bc41-2721-48fc-9e50-61af4010ee60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cec4d44-00ba-4a59-a204-1e62810a2f91",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd3c040-ba64-41dc-a098-7b93f9dfee63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61c32738-b846-4f04-9adc-5c68354e46d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6df2a7-e4b1-4318-bdaf-e687a7433677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e45b7f0-9ea8-44dc-bfec-51f4aac1d7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641a7870-2044-4b88-8855-95757973cb78",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8c57ab-ec4c-43bb-9be2-b30cb85a4cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5970a982-ace8-4b21-af9e-1b1189514077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74212b5c-d7ff-49c0-85c9-3afd5d262233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535c2713-5b7c-49dc-9c4a-0c55a3b09fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a820f8e-a5e5-4202-bd44-7687111627bd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32018fc4-076a-4663-81dc-34c6fb40e23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d66752-9f3e-4966-8a6b-d29fb0e2c4e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ec7cf7-689d-44cc-9561-36a2fa28a128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845d7803-9ab8-4215-858e-d8b1ac9e160f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e16a38-3b2f-4983-b7cd-7d5a440916c2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b52051-3063-4be0-b097-569788cfde46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e1a134a-57cb-4d90-8f84-607f697e1622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3ad7a7-1883-4985-aa43-b11e521936d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0c5929-b619-430b-a44c-11f7d6943c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907971ab-4521-4ca5-bcc0-8ed27a55820d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116459dd-bdc6-4ba0-b74a-72d67d756313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd2239d8-4d4b-417a-94fc-a2a897541bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "020d5892-3b0b-41cc-a8ff-f0f8bf5eb76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c9a686-b56c-4f62-acbb-014128a5e431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cc0541-4454-48bd-8418-41ab04c36822",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4222740c-4983-4307-a691-ed0d350c7f7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3f5cfd1-a132-43bf-8b88-c05c0fb9ae21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e013124-c7d2-45be-814c-4f8768f6ad04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04e15ca-bc9a-42f5-8fb7-98b262a4c261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dff25e1-446a-46a6-bbe8-02e6ca49b1a2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06520637-732c-4f5a-a2cd-dba994190597",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edf7f450-f38d-4322-96ea-a421c2c22fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f229a71-4a50-46a6-a4a0-6ae9680c86d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0146c3a-ac1a-4029-b492-5fa3ec4f41b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b43d7e1-d3fa-4a73-bc5d-0ef4337269f2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b0ba04-620b-411d-8f42-7618286d08f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6810e6-3c88-4d07-8ebc-c0d7e5d5688a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af0ef71-2fca-4bf9-a08d-e9ca4e2b0c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4462004-e371-403e-9215-fa3bed1b4dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf32ba6-50a5-4709-bdf2-abff6414bd6c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545fc4ea-2dbe-4c08-9451-629528bfc168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fece14b2-5735-4cc8-88c6-329f62d280fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b1085a-2724-470a-9f9b-9a5749da5c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f0e2a4-437a-4d58-ad31-927457f0fb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570b002b-425b-402a-a92e-da864f337f39",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bf10cd-1f55-4278-8b79-845b5f6caefa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e4dcac-6478-4995-9923-d098a307b009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4986c55-4935-49e6-8fa7-381a99bdac7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f529b6-ae3f-4d19-9f25-9422cf4d2fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe546e77-fdfb-47d1-9949-ea1753a8ed22",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3f58a1-46ad-48f5-a123-d69c465ac66c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3894e957-f579-431d-be5d-f420246c0aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da00c298-277f-4caf-aff2-f41ea458a451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350f9901-9144-49fb-93f9-6ab68fd97e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62743094-9174-4474-baea-e37687dac800",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97dd1e56-0ce5-4ee3-b403-0fe63535398c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1647bc-0fe3-47db-9d2c-5974b96c352d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47587130-5858-4a16-a9a8-de114f7ad839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca0aa3d-502c-4773-b58f-9839bdaa5b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d680f874-12a9-454c-accf-9fd6a12b3faa",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6515b1fb-6a51-40e4-9dd8-ae09035bfdfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733915ff-12c6-4380-8c1d-d6fa0a43fcf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c2dace-9807-41ae-a192-eef5b433672f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de82b39-41ad-4ccd-ac7f-6c05dcffacff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cab1c7-7904-4fc6-8188-a3d15ff18ade",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b327fd79-b8f3-4ea7-bc2e-e463f708068d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efacbe62-a720-4a67-93a1-a5b376243a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6635da5b-0a90-47e9-8505-9666dca413a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abe1c4d-21dd-4306-9b8e-860462d5d123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69804f46-7a4f-4967-bbd5-4505d23453c5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6660f072-3331-4e12-9b43-1eaf309ce0ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ba732eb-6631-4780-b501-2f19baa60845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c516ea36-4179-49a2-bffd-464cf163321c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725e768c-a2da-4447-81a0-fc1ea99d2ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86dc4a4-e817-45c4-be63-8a4fda0309ee",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f8981b-7fc0-45fb-b3aa-dc52bd9d9f35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfe725c2-bc34-479c-80ae-7517bdb5750f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061a458d-19da-482e-84c9-0170fab98077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859374b4-ad7d-48cf-b6f9-7e7dcfba6743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b954dc1-fd0b-4c33-a8a9-c13b9b8ba73a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428ea52d-46b9-447a-89e0-026259fb61c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e4be020-0f9e-4b5a-a2f7-50fd1e4cb692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a83742f-76ca-4b4a-ba09-a8793896256a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d75736f9-38f9-4fdb-83a1-1544b1cd90df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6ad38f-d4b8-48d2-b37d-e1674ab89347",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ab6f8a-5d81-4b1a-b287-0a9a007aa614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd9c80b7-d576-47db-bc04-22c956f510db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82364b69-e48b-4948-bf75-38c32458ed90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e361b155-402e-4cdc-a6d0-28a5d1f55efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4471a7-512b-43f2-be9c-51173ff3426e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f778c046-6f1a-49ef-a4d7-732b339e9274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f95569-31c7-439a-9d50-ca2b9e42db80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d5e4d0-a9a5-420f-9f1f-9e130e1c81a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45ff028-878d-4603-906c-58598431239f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fe6fd0-e2cd-4740-9547-cf215b9acbed",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f521f6d-4063-45ef-9d2f-d3f27e556805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21bee156-1c43-4796-9f7e-8fd26d4bec97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b250ee6-58c0-4355-89ed-1b459835fb7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4f3ebd-29c2-42f4-970b-869705a81a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582a7274-02bd-4cbd-864f-52a1aa761de3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c39513a-4ce2-4b70-8425-6ecc84938bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbacca96-57aa-4c52-b7b6-35e4f28e330a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5c21ff-8a64-46ec-a2d5-df5924bfa8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca02d40-1e7c-489c-8239-35ec6e49380c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fc3295-7a43-47e7-b56d-40a0ad105a14",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d06c03f-c8ff-4e51-be2b-435b8107f5b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "342ec06c-1f6c-4f1b-8aef-8757179a2950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c31c32b-8eeb-4bd5-88a1-2c6baef87ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7578dee-7bc7-4dcb-9dc3-8141d97729a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c6ca84-9966-4d36-8740-80f75696c48f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a79630-ba93-4b6d-97b5-8f41af950b96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aa101a2-de6b-462d-b3f5-dcdf81322085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cdda7f-1c27-477a-a409-b5d1b750c164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c06d202-4d4c-453a-bb5f-d625c7de8c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d81a9a0-4afc-4149-b2a7-fbb29ab33848",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab0ef14-609a-4e56-9c15-e90ec82f366a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "921e64df-5940-4aac-95f2-2b426e452970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "720d06a5-c442-4cd2-9971-8341d071a49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1ad327-417c-4dd8-99f5-f85408811abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c84799-99c0-4f18-a46e-fb24658590d9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fff680-de4e-43ac-9b75-9673a2de8b9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a2032b-9f98-424a-adb1-b4a6f6dc95f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03094b89-f2ea-44b0-b1fa-9d96b9506dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8075401d-4094-4bd8-8fa4-d9376402f985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cf21f5-de42-4457-86ca-be8e138aa428",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d7d1eb-9cd8-4ff4-88a6-7692316d8223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbeef89-27b2-47cd-b7e5-441ed8631046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "118dbac2-5765-4c20-935a-13c9ac0e996b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62905cce-d495-4101-88d5-39e16fa0cb7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c114ce55-b3b7-4752-800c-f5ba1be3aa12",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629ccfc2-7c28-43be-91d6-0c5b891c012a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0650a13-cc45-4aa6-9e00-31e4f1a03c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f20980-33cd-42af-8e70-e8f98a019a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de93d00-36ce-450c-ad15-f52d7f4d5df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f797a0-cd39-4807-9d61-77719468e87b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36399d51-e792-468d-a7f8-aa8ccd2e6440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e314227-2efe-4fb0-9169-e600457d23f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f31fc4-8ea0-4912-ab5c-260c9eb2760b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6577fe56-5623-4fd1-8b7f-56a8e4be855b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0f0a1c-184e-48ec-b24d-0022c90b7002",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048463c8-1fa3-46f9-815e-31eed7610d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5392fee5-6602-4b6b-899c-2e5c0c12a0ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e830be-6950-4789-8893-af3ba104fe6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648fd79d-16ef-4618-9b36-724526ac120d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c8bfc8-d090-4e69-adf9-2d920e4a7161",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e9dce2-2f2f-4801-bcb2-3b4da4093865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9684f4a-39a1-4164-9822-2dcf687d1dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "086b6303-91f7-4367-ac37-428f10b161f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b79ac2f-d533-4d1f-a18b-ef3dc7b00ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1ecfa2-90b7-401c-95de-eb2de1ee4acc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5ce60f-3eb4-4975-8d57-fc790fde0f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eec2cbd-cc8a-4c9a-ad16-5c649fc2172a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07be48b5-00e6-4371-88ae-ab6c6192c08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c77817d-3906-4c3e-9c65-6b046ef66ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257858fe-38e0-4444-9040-d2cf5a756315",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e387fc57-d9f5-4e4e-ae45-3fe56847e30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69826d8-bd26-46f7-a809-9799a6419575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80c30a5-ebd0-49df-9a19-5a5498d791de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5df948b-4626-4e8a-b3ec-8c5bc841e23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4314342-9a21-47de-8268-7881a39f9738",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de05625c-9f09-4b7d-984d-f83672c887b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c56792-1ea2-4d10-b4aa-325322609986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441b6096-ec5d-4113-b4b5-5264d64f389b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b4c857-fee4-4463-9431-d2d9be9f63fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dda8a23-f3ab-4bc1-8269-a477378c4088",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0262bb19-e1cd-4a61-bda3-702815c7c6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b356d00b-f455-4267-8258-a046b21e6126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dddca07-76b8-4fa8-8ae2-88cc4ff88a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de10b95e-9a4e-4923-9587-a09c5c1772c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3951c0-c534-49d8-bbb1-90d1138f0073",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06695d45-c555-4a3b-b79f-e06d5a1302a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f27d829-f257-4f38-a6ae-be5faa771a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f672eb-c7c2-4b5e-885e-bccfedb50e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64574d77-2df6-47ce-ba10-4d83663b0921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5b91e1-0f54-4ac5-899c-055f224d56ae",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1777c9f0-8ee7-44f8-9b94-3c917e05aac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8054dd0-b1a0-420c-992b-fd30656621a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4d8fae-21c2-45f9-846f-77fd98608b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0a0bb5-abcf-412f-81fe-740a5c3221d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdf2b05-71b3-4c00-9ad4-64c2523332d0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cedd48-0f2d-480e-a360-6c3da715616d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33f6802-f78e-400d-aeb0-be8dd1f913c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b00ea77-d6bd-4bf0-8153-291c0b6f34da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc48a56-624e-4928-936f-05b1b4dabf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7987a68-b525-4619-9254-649f083cd2b9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c81cfcd-433b-4e13-8157-5e7fbcb0e0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c955d213-613b-41ab-ae2e-b75a31e72577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230186ec-52c6-4ade-996d-a443628724ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f8034d-3998-4dab-a94d-a86c19fc7c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2fb30f-f205-4dff-b4cb-239bb14442b6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b09d7a-023f-462f-9e79-678a669ce4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3ea78c-5d87-4e59-9cfb-f310011a1363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f884eb8-9006-4407-806f-249b7c186544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167153a5-7411-483d-a7b1-8b105a0b9341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc939ce9-dc9e-4b57-8508-97e883c52f02",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561d80ec-93a0-45bc-8092-3aa19446dd7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c2729e-814f-4940-ac0e-95228f92de3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b11492e-26fd-4bb0-8bd2-3fd0e4b51afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a12f1c5-1b19-4526-98cd-761aaa993c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d09d5c-7262-4537-83db-f59f6ec267dd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0406926d-cc10-442c-922e-79dc657fcbc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2322c1ba-bb8d-4fce-8e4a-8d5b98e4425b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd0dd22-7672-41bb-b761-a7d57d36b1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad59c19b-1ecb-422d-b9fd-b16b50944f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b177c53-0c8b-48ac-855e-f698b5092308",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa3334a-33bf-47ad-9d35-32b6273c2d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2017e201-1ec9-4086-bcdb-fc53a346e1dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3c3f8d-0c5f-44cb-b689-9d16a3c92a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a482ff-2dd4-4649-923d-8dc045bbd5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7caeef7-8176-4ad4-87ea-6342590ccf9d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a780501-66a2-438f-a83c-958f1fabaf3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674c9184-ccc2-4d4d-b798-f57d96ef390e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "599d0274-d72e-47e1-a3e3-3eb9c545d9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da85e2f4-200d-46d0-ac04-b67146097d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fab216-2e90-4492-95c9-c4cf522ef336",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c6a089-2dd9-4955-abdb-f8800a96dcc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4280ae-2963-4590-83cf-c17680b9d669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63df8ca-c465-4b34-ab76-a36976035061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b0ee5d-d5d7-4e4a-806a-186591d50227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63817ae7-1035-4e67-86fc-0fd74116e403",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b56f84-2e9c-419e-ab47-7b4c5aefbf5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d19bcd9-643d-40c8-ab77-ff2ec1c672e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497b1bc2-cdc7-4715-a998-0eb3af4321da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93aebcbd-f292-4486-8278-2d05f773aa62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a21ab83-a743-4ea3-821f-21deeb605213",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8867524-2727-4148-adb0-6c9602e92cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3eb22b6-de4b-45cd-95be-f337527c1508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "275cc47b-f162-49f4-8925-382d0a6e0b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c69a30-a1b6-43a7-9e66-69c5a490d145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3eb2bc-b4d4-4985-a825-3b220cb0e177",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52bfdee-fcdf-4f75-9b8d-c3e3b8da0cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39942c5-be3a-418d-beb2-465aa8350071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b237bce0-6e20-4425-8aa2-97227d7f40f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c139d149-5487-41c0-b551-ac2764787d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f89946-8c4a-4899-bf13-d39b8facacf9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7288c682-ec8e-4aa5-88d8-ebff8670db37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83b519c-993a-42d8-a681-cb0e40524fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72dc989-6d5d-43a1-905b-a8dfa95fdb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31c785b-06fa-49bc-9b31-43affbcb8cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5d86bb-f851-4258-8c48-a69550997138",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19903590-ad51-48fb-81b7-1a4e56781bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ac9f3a-b3da-4ded-a21e-145aaa9ed44d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1ad16b-4d4e-4428-96bf-c85a3aa94a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a254de-0153-46b7-b9f7-abbb202560bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b68b719-db94-40b2-9f41-508e9e152eaa",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1686058b-4185-4d0f-9488-ba54d1a46398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9699fa-faa3-4b60-b6be-06560d1ceb03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97561af2-78e5-45f6-852e-d871d8624bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c64754-1d7a-40b8-a910-502330687202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba943922-12d8-465d-a331-8388682925d0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041e1f21-1369-4cde-80e7-ca362850da5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a033044-0db1-4a9b-8558-c758219d5f01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b002ace-4cb3-47ec-86dd-bc6abebb608b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623312f8-9e13-464b-bdda-a15eea1be29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5756a88-7757-4c86-af5e-af3fd705fb31",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06b545a-4071-4dd6-a690-fa49b8c01029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540382d5-df06-49b3-9d7a-028f86201cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b763bc-10fc-4e80-8740-2c2bcc139b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36232519-20af-45d7-a4e1-7f17a051c084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4a584c-507f-4398-ac0e-38a1545761a5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a24c9c-cb5a-47ed-8ca0-e84e2417edc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4511f835-1031-41a5-989e-48bd0222866f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f9d198-6bbb-4830-a04b-863618550128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a7dcf78-2d5c-4b37-89ec-79e0ef0f3593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7a5fbf-babd-45cf-aa07-f20e6ee637ab",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89cbee0-6b73-4872-9924-1476d012d5f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c29b5e-3a44-4624-b01a-10bf89871588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9adc289-5c11-46a1-9f9e-51a404a6966e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290fb914-5d20-4165-bfbb-e96756c1424d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46122db-7a9b-4d1d-b47a-1c27705d5880",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05160157-4510-4679-aec5-687703804ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "797dfc64-2543-48f8-911d-1abe35a9dfc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48ddc13-5a81-4c2d-bd09-d9e93e30efed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7fe4a0-260a-4cc9-8e56-5b201abd186d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bec7d7-c1ac-4e29-a143-c2668a70827d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6483b058-42a1-48ec-95df-27a029513454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba6f62b5-9c15-4a13-b32c-7a0dfc5229e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f96c2f-284c-468e-8721-171471402f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b224be1e-c300-45de-92ee-918917c717bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cc621d-f628-4889-8068-382e1e097a66",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e473f5d-1afc-41bb-8c89-e45fd641154e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "385b452a-ce3a-434d-aa3e-0f02d64d4a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ba5cf3-9562-4dda-8ada-dff54da75695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f640849-0876-494c-b2fc-e5cb20e374a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66aa585e-3b38-4215-a6c8-9e6aba889c88",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f99aafc-e912-40ad-a91f-de373e188649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c1d6ed9-5db6-4095-8182-2940fcb1e262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87e38ff-34d6-42c5-a9b9-21c0b44afe87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062994ac-d165-4f45-9821-68e4710eeb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f3e4e3-8d43-4b10-ae23-a42e75c1bc9b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98571412-0207-41c4-ab18-81b067445df8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33317405-5114-40af-95c8-b2f3f3527d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1abe9c2-c140-47ff-997d-05d752bc7fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee641e4-9415-4432-9684-eea013f89732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a32d7e8-a7ca-472a-903e-1bbe4eaaf794",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31b4577-da55-4400-8a49-3cc6b14d37f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b0bda2-9c59-4932-9dfc-d04b4fe21227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "875ecb17-cc88-491a-9810-441083d6a14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0edd84-e3e4-4346-8a5e-baef83015f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5b598b-fb5c-4c10-afee-6a3d1604af81",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783698f6-69b6-44e2-b50f-3d7a5ce271a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc856b5c-b1da-4714-b023-614a51d25f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d16c0b-80ca-49f1-a2ad-f867fac6b2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb17661f-9560-4171-9ca4-7792470fe771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff8b366-bbb6-479f-bfcb-fa59de618f23",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32cf4ef-cfea-4778-b256-59488d04c5e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18b861a5-8e90-4373-a720-3c834041172d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab73cd6d-2449-4833-bfbd-6245ef76bfe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4710d1d1-ce81-4eac-bd03-382a808dc9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcc8aeb-ec82-465c-89fd-e2dc18b5e531",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fd6c5e-1559-449b-a63e-5c8f6c46f4fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e412610-83da-4346-a5d6-e4fc24384ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd82b0fa-a8ff-4656-a3e8-0bbf013924b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4d4226-0410-471a-8fcd-b9275abbbd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c741eb87-bd5a-4058-8e8b-21e4978415f0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386065a5-3146-4b91-9f6f-f56294572d06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "831d5d87-5eee-4124-9df9-e78c3566340c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f64c730-e2aa-4607-bf9f-0b6eaff053a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95fba6c8-ac26-409b-a775-ab031f139b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e7f955-7775-486b-ae71-e71c8706cf47",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82573422-134b-452c-8428-2763f93e8151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea0a28c9-c9e2-477c-9a8f-d50b8ec7fbfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fb3b02-f915-484c-97aa-381ca40c56e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e6b25e-38b8-41e8-9297-2f59bc72c0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c846f0e6-6c67-4a1f-9378-413dd46427b4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67473c6d-0c3f-4827-8fdb-75e169f5b7ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81eda81d-13d9-4ac2-b6ba-2dcdd4d54c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd71733-96ff-49c1-b694-dbe3c7e7a64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f545313-d04b-4fea-9dba-ea4d9e4708a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afabfdd4-f52f-424d-9afd-58f303b35f13",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21325c2-b888-4358-a5f2-e886e0116435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16fe2636-7d72-4d5a-87a5-fd780aa22f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d27fb3a-865a-4363-9341-5daf503b2846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756f7d03-59c4-45c0-a501-43eebdd54290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f522f8-fbc8-42ab-98c6-af50d9d25891",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7024349-0ee2-42ff-bc77-c3c31c6bb93f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31a20da0-6d98-418f-881f-55072d25dd18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0349a456-5645-4438-bd29-103f5481bb6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "601ae187-57d3-4dd6-ac77-81f140c802ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1468f9de-4aa5-445e-8c29-d2aece267a08",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04cb072-6938-4163-89b4-1d6fc7012df8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b0065a1-101e-4086-afc2-2c66410ffb24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30725c9a-2c47-4896-9604-6eb51c5a77a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b834b8f-1b31-4ac7-8b88-4233a1207d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923d5d66-8413-43d1-8dc5-a0d84102db09",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcba7d40-dddd-47b6-819c-22445fb1bff6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "553d2062-6b11-4968-918b-325a729619b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971b6522-0fcd-42bc-ba75-9ae071a2561a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5caa7a8f-550c-4fa7-92ba-fc2062df2380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b25e3a-810f-41d8-abd0-de555b580df7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72fbf60-60b4-49a3-a204-800734ac386a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44c290de-f518-433a-b75e-e88dc317ae63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3ded56-00b3-454a-a70c-912b85e92e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a338032-2e13-49e3-9035-1440fd4687fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cef1780-1e91-4274-94a8-71b6b4e6a849",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05374765-16d3-40c7-a724-754d636d4539",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2a53d78-bb1e-43f1-a54a-7723198f627b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62b58cb-6e77-4deb-85a0-8e53da097158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa77e653-d7bd-425d-89b0-5efd06f34a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf0c021-40ed-4598-b202-299bb7611bcb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0eed1f8-6f35-4607-9de5-72b620c2f733",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1bdc1b1-c272-4b9f-9e45-9bfbc96a4efd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c48e4a-2431-4ec6-a1fe-0640ac63cc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1abc26d-6287-4f60-95bd-22f30841bce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162b9dd5-d8c3-4582-8788-fcd5d8e7c41d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc86a1e1-6d7a-49b4-b04f-cba6deb1a671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0318d04-71b1-4f29-a207-0a39f3ec07b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5d72a2-efc3-407b-ad61-d62c57dd59b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238960a8-709a-49d9-8637-7926d2edf114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f043f319-0d68-47b6-b1aa-26a24e8687e0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ca0422-2eaf-458d-bdbe-92bd91621c5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9142b327-9ecf-41e5-ad00-e3c86d192f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df1bff8-082e-49fe-adfc-325507cf46cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9bf0c1-98d8-4612-b9bf-5a399034a946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7985c780-1f87-4408-b15f-6e24e352be2b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b07bd4c-b3a4-4e45-91a8-6f0124055bba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "284323e6-e94f-44ba-a9d7-fce275b37259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77900f6a-e80a-4f99-8d30-38c7ef5fa4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37fc4c5-cd6f-4560-a45a-9957855dd1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9699ce10-15a2-4210-a07f-de12214c5633",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc2bb70-a16d-44cf-a53b-79e7fc6e84cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddb7a01a-d37d-46c4-931f-9c5362ea8301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b0a0b6-2f81-46ed-b029-1b707ab9e9c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99546c7-fa34-4280-bdc2-4faac02b24f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb27c8f-4cac-446a-a3cd-a40921ca41a6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e53978-11ee-424a-bb65-4520ffb6918a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "605624a6-6042-4dab-ad9e-4209b72a5753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1099a538-d27a-4056-80ba-5ea710af8672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ea5ea9-f3aa-4762-824c-1b2763d98d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ee79dc-a3f8-423b-ae41-79ab6924f1a1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355c3afa-45c6-4a11-8faf-36856edd41bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4798e173-4a35-47c2-bc8e-925cc82487e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7068c569-01ff-4415-9140-a74fb8665661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1cc4f2-46f3-493d-8c48-6ec306f21438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b970fe-b09e-499e-b1f1-524881e27e1b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b66695b-93b7-4047-aefe-9a5bace175c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7112025b-f3f3-4f17-85c8-9ef66c9d92b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccda8c16-85cf-45d2-ad59-b24e2ab396c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce95aa08-1102-4e18-8f5f-59a20754b636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434b5448-6ffd-4579-8ca9-9b4a2ce4c48e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218d193b-c3ec-49a3-a80b-c09443f2b4cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bffb4def-b207-4a93-9f6b-888f131891b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6dcbc3-2170-4787-ab57-5785ebe51a3d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0426c9ce-4492-48a8-9ea5-8930ddeb0f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa1c802-3fd6-4411-9e4b-e06eaeeabb19",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcffe30f-d22e-4a67-82ea-c3fc40b6c64e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7365e6f-b4a9-4041-b327-bf80e0d518bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337339a4-c3b6-4b3a-8ddb-d070652f322a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65caeb9-0ba0-465c-8c6a-302fdca3d5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c9b7c1-5416-4529-8bd9-d8e6d1a9ecc8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0061414e-48c2-485c-a9fa-bc67ebfad4ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c559f0d-b4f0-4819-b91a-e98a2f2fe1c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c233de75-2ecd-43d0-8b17-0be6e9707436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046e44b2-7ebe-4c63-a9e9-bedf3efd63ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da7e2c3-793d-4554-abbd-f16b322233e1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7baa25c5-281a-450c-9d2f-ea84e9df0188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ea19cf-864b-41ad-82b8-402419c348e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cd39ee-5637-4282-afe6-475676d07fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f07c3c-265e-479b-836f-48da44c86bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abac6a0-77c9-4b9e-b82d-f905f192f05c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4a047b-2ad1-4b84-8bcf-a7b2ba57223c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "673de443-567b-410f-abb7-d717c266de5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac9298e-ed44-45d4-9db0-e3bf7706d6fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4641ead-b1f8-4bf3-9a6b-6599a5d01100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15bab82-788c-48d6-89fc-3fcefc50e43f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d25a17-ddb5-48d9-b532-fb84858918ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f8c2e3c-71b3-4e98-b00a-e60d5af06353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e35ea7-f26e-40ba-a868-89f21cbcddc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a529892-a2b0-4ad0-94e4-bdb94184be49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f965fc24-d5fb-490f-be87-1fad08636e03",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efde94c8-477e-417a-af19-d5518d5c8c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07054aba-7a46-4f9c-9898-6f3767192405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5ceeab-e195-4498-bdb0-26c11d8f1a42",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c03708-56f5-4105-ae6a-ad216d77d265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84f1e3e-d368-4876-adee-759078221146",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d94cb5-fb26-4261-989e-79a3f701e7d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba20a6f6-2d6a-478b-9093-2e1dc00c678e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15338d7-cf71-490f-9eb9-89c4153f78e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd508b6-88e0-44ec-8a89-6d42a1d48c2a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b20a5b99-7e86-4ff1-8006-027a1c49968e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c445e86a-ac5c-403b-b9a1-39ff6fa73f35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "795a1e25-1a74-4bbb-adfe-7e860541aaa4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "429a55e0-4919-41d8-941b-6c7476a3be0b"
                    }
                  }
                ]
              },
              {
                "id": "8c9eaa84-e3ff-4ccf-9019-15175372f88b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "034660d6-45e2-4ac5-8d20-73afa3218605",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8d909e-478b-44e7-8fe9-a8249e796542",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0666b97b-f592-43d4-82e7-eeb4b3dc639e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "795a65bd-a23a-461c-8c0e-cacc7e8f1e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b2b974b-0970-4274-b675-1c617364ffe5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c8643ed-46cb-4e47-959f-39e17b86265f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7b5b125-36fe-4cc9-8fb4-a851c7408636"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5620d10f-b84e-4f1b-8b87-df0965863252",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85085c3e-560e-4874-8063-2e5124f9212a"
                    }
                  }
                ]
              },
              {
                "id": "7fa04723-0754-43fe-87e2-d4fb2f017fbd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6137f7b9-c786-4bd9-835c-100451ebba90",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5f065f-b5c6-44ed-9910-1c71313cf304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "437143e6-bf78-4f85-96d5-0e40477a63df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99f06e5-9826-4928-ab13-5d5161b52c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e62e55a-3816-4eef-9967-8665595144a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7502a3d3-34d9-4ce7-b229-cb012f327fd5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d600ba7-5ad9-4134-a73a-8b5639f16b3d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7c39720-6d8f-46ed-8960-5a088f9fa7a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3df0bd84-3292-4355-9d5c-57ba5035930c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9611ae04-a43f-4901-85e8-8df9dc7061c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e71acf3-3716-4a82-aff1-af8a4fa162d0"
                    }
                  }
                ]
              },
              {
                "id": "701f986a-49e9-4e85-a398-c46b1c15798a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ec44409-db45-4823-a863-0fcbb634f669",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bdf8ee79-9813-4957-abee-c4a59fea59f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8b472ee-3950-4262-bb1c-8bc04af6f490",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d781bd3d-885a-4336-8d3a-abc43730b07d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e739ba4-c29e-4e1f-9e35-940e3ec7895b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "11cd70de-b95e-4eb2-959b-f6c9cc9912c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a87d429a-18a7-4b39-8802-bf20612c3095",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75d8ddfd-59f3-4a0d-bc62-2e8b4fa215cc"
            }
          }
        ]
      },
      {
        "id": "293ed3ba-1e64-429d-b9c2-5f86acb3b334",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cfb913c9-3d98-4509-9b45-dd1644cd0f97",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a19e7dde-0f7c-4ab7-9c55-1d508240fc6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32d79c77-934f-444b-8359-30c33fc6d612",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1661a1e-83a2-40c1-88fb-cd69a29dc3b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7d8faf24-99e5-4143-9c34-cccfc5430b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fb3017-a3d2-4abb-aa08-c72bee3b94fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "310764bc-c022-430e-8fba-aa93e7919e79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a80cfbc2-bc27-4f8a-9171-9ef61f1e3c0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d5e687d-8263-4116-971d-65d2fed9cd98"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29f01190-bd17-41cc-bbdf-0090246c3fab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ae6b0fe-4378-4635-aff9-d988aadab459"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c8a0fe2-9a9a-45c4-bc68-ddd35119da49",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6b887d85-582e-49ec-b5e3-542b4b80f66d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7647f3fc-7504-4970-989d-cd1d0fee59df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5539142a-f194-469a-9afb-09f009a25572"
            }
          }
        ]
      },
      {
        "id": "8a92ace8-6a78-4962-8e74-ba1ba44eaa0e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9172496e-cd85-4228-94e5-14512239b6fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb790fd7-f0dc-4939-8093-b8ae0163c80e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf8df5f5-597b-468c-9a07-f54bb761ab19",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab48393d-fdd4-4411-be74-e7f56cd3924f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b00954dd-44f3-48aa-9c88-953ad0ce58bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c566ac-2724-4197-8758-07898fe17d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb6c8247-41f2-48ee-a042-801e80880521"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdf1ef16-4472-46ee-ad37-5bdfd9130293",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "faec8223-c292-4b4f-8b84-0fe2d12479a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e96a7b10-2f27-4ae0-9390-fdd825a2f969",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c710f5d-1462-418e-a4b0-65bcfef535fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61cd384e-08a3-4880-bd39-6590fe437f96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8aad2800-1961-4012-b492-d46544f3fc94"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40bf8d19-05af-41af-8932-0eb6585b42dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2557b263-4da2-4982-b481-20ed84334dd5"
            }
          }
        ]
      },
      {
        "id": "f1c22ac9-15b2-4c5c-9757-e94ddf6529d3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "85f78805-1512-409a-8c2e-e02fd78d7618",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17296931-5539-4267-b2f7-3c0208d606d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57c090fb-c0a9-4e5c-b7b1-53abfc9a069a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912b15a1-4136-4bee-a58a-8de2cd009a28",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fdf3bb4-c62c-4745-b1c8-57a759554809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487cd7c3-f535-404f-b0e9-0806c193e591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7728f772-477c-4779-b1d0-78ed44828678"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e119ad8-1db4-4f01-982a-23f7b73150ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b99d6ff7-3e42-40ca-9167-779c3285af4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a68daf07-8ad9-467b-82c2-359ef5dc345a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20798885-9b65-4f2f-aa2b-719f5da1ca4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c876300-ea78-4720-a653-a34c0dd9e745",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6224f060-5eff-4d6b-86b0-2c77de97e2fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ea6bea8-3a6b-4793-bb12-b0b4054221b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2854df8d-4167-46f3-bb5d-635dcbff4b20"
            }
          }
        ]
      },
      {
        "id": "ce4ce4da-130b-4f8f-977d-380d24d65eb5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49680541-8d48-4cbd-bcd9-49105f7a3017",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3661d7a3-82e6-474d-a6ba-ae3cbedc53e4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "473283e3-29f4-49fd-a74c-8391016e8e9b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e024ebf8-7573-420d-ae3a-e504c6b67063",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de229c98-c238-4171-ba89-fecfd20c368d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 111.76190476190476,
      "responseMin": 10,
      "responseMax": 11386,
      "responseSd": 752.5854529191884,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723164047581,
      "completed": 1723164083551
    },
    "executions": [
      {
        "id": "fcd0da2a-ff54-4949-8dfd-9fdb418e2e19",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "85e902c4-bbaa-4330-9fc7-f96b9e331052",
          "httpRequestId": "aff37a41-d240-4ebb-8aca-f9863532bdcb"
        },
        "item": {
          "id": "fcd0da2a-ff54-4949-8dfd-9fdb418e2e19",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8ce2c9df-1e84-4fee-80ae-f4c6a9b1a7fb",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "f70c8d00-ca49-4b45-9bf7-8a67b2bf3fc9",
        "cursor": {
          "ref": "f70090ec-5a98-4354-8f91-b7298bff6199",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1f8e0310-a413-42d4-979e-300dd5372093"
        },
        "item": {
          "id": "f70c8d00-ca49-4b45-9bf7-8a67b2bf3fc9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "15afbca5-7b93-4ce8-ac59-0cb85f779865",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "9077e2fc-a23f-4dab-89c3-7428b7effadd",
        "cursor": {
          "ref": "da15687d-66ff-4935-a95a-533c11d3acf9",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f85e4b73-52f9-41e7-8448-7d6250cc9311"
        },
        "item": {
          "id": "9077e2fc-a23f-4dab-89c3-7428b7effadd",
          "name": "did_json"
        },
        "response": {
          "id": "d602f792-993a-4bf1-80c9-fcf7adb7a76b",
          "status": "OK",
          "code": 200,
          "responseTime": 199,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cede6f-7c59-458c-b2c2-ffa57b03c4f3",
        "cursor": {
          "ref": "7a058058-8769-4344-85d8-0a0c0f10221e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5928637c-f963-43d6-acb7-37f6515d445d"
        },
        "item": {
          "id": "c7cede6f-7c59-458c-b2c2-ffa57b03c4f3",
          "name": "did:invalid"
        },
        "response": {
          "id": "355e2254-a214-49c4-ba52-3265cc1a039e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 451,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cede6f-7c59-458c-b2c2-ffa57b03c4f3",
        "cursor": {
          "ref": "7a058058-8769-4344-85d8-0a0c0f10221e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5928637c-f963-43d6-acb7-37f6515d445d"
        },
        "item": {
          "id": "c7cede6f-7c59-458c-b2c2-ffa57b03c4f3",
          "name": "did:invalid"
        },
        "response": {
          "id": "355e2254-a214-49c4-ba52-3265cc1a039e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 451,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acaade6b-8c03-46c2-a99e-33e3fda21521",
        "cursor": {
          "ref": "0f76769e-3176-4e5c-9d9c-63f9cb72eb79",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1ac26be3-044e-4649-b2af-1ef55d9891e1"
        },
        "item": {
          "id": "acaade6b-8c03-46c2-a99e-33e3fda21521",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a8516d6b-4ded-43b3-8369-fd9b3db9954a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9ef34d-0fe5-4e97-b609-f95df9e788f6",
        "cursor": {
          "ref": "616bf020-6d7b-46cc-aa02-537660b59938",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e84824ae-485d-4350-b8a8-e09c3505efeb"
        },
        "item": {
          "id": "9c9ef34d-0fe5-4e97-b609-f95df9e788f6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3085b4ec-6419-4aba-a0af-2de3ddd10a51",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ee01ce-7fda-40fa-b1bb-8a3c6aad3869",
        "cursor": {
          "ref": "990a4985-8920-43ac-9c67-d7bd9e7fde39",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a5d456a4-597b-4dd9-b400-ba4c02faf886"
        },
        "item": {
          "id": "71ee01ce-7fda-40fa-b1bb-8a3c6aad3869",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0a6fe2de-8347-49ed-9054-f0e195b76642",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a7de56-f101-41ad-97d6-c34ee519c1ea",
        "cursor": {
          "ref": "b6f57e95-51f0-45ba-8f2e-8818ecff9066",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "55f1809d-f0d8-4601-841c-abafea2756be"
        },
        "item": {
          "id": "73a7de56-f101-41ad-97d6-c34ee519c1ea",
          "name": "identifiers"
        },
        "response": {
          "id": "bdad8f67-028d-41cb-aaec-6fa85d3a5890",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5ca72c-6307-4f41-bc18-89e786d39c7b",
        "cursor": {
          "ref": "c766a127-05ad-42a2-9fa5-9d51178ae665",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "66038b48-f46f-4c9c-97a2-706371e558cd"
        },
        "item": {
          "id": "1d5ca72c-6307-4f41-bc18-89e786d39c7b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f88b343a-48b8-4c5d-b125-37f12b6e6567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f63dd4-a232-4081-8488-1801078a7245",
        "cursor": {
          "ref": "45a4b563-7675-4264-b5bf-7ce03c42d572",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f7488d5e-85ad-4f57-9b96-ae188e3ec71e"
        },
        "item": {
          "id": "34f63dd4-a232-4081-8488-1801078a7245",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b45a45b7-5ba2-4d2c-85af-ec0f565a057d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2084f5f-5112-4009-96c5-bb3cdb7b74bb",
        "cursor": {
          "ref": "b06be590-29d1-4e50-9607-61b9de6dddd3",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b7e81851-bd49-45c1-9839-83a88dc281ae"
        },
        "item": {
          "id": "e2084f5f-5112-4009-96c5-bb3cdb7b74bb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d1fde756-bbe1-42ca-b1c5-47c18da81088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140d15a4-89d3-4860-a98b-ecb882c39979",
        "cursor": {
          "ref": "6fdf1148-8cbe-40ad-840a-c36e25adce62",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c3a4f7e7-c3b2-4fae-8bb0-ed4d93b11ed4"
        },
        "item": {
          "id": "140d15a4-89d3-4860-a98b-ecb882c39979",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1669d3d8-dc71-43b5-8643-fc533ca0a99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fd8d23-4e77-4a4d-a807-d6dcf773cfd9",
        "cursor": {
          "ref": "7d98e396-ac56-46b5-82f3-1a214ca3a2e6",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f4fe7dbd-20ff-44f0-ba17-efab4f3b6d54"
        },
        "item": {
          "id": "e0fd8d23-4e77-4a4d-a807-d6dcf773cfd9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ad5e2312-d6fa-41ba-8aa3-1b542d8f34b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97def31-63c1-417e-8d21-86dc1834bafb",
        "cursor": {
          "ref": "05d39007-8075-4106-aeda-4a352bb4a04f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d2dd48d0-0ae7-4803-b739-9f23b84fc7e4"
        },
        "item": {
          "id": "f97def31-63c1-417e-8d21-86dc1834bafb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d3e2850e-0aa7-4580-bd98-a396bd513109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f334d428-f925-44fd-ab8b-1da6cbf1fd40",
        "cursor": {
          "ref": "28e53fea-ac41-40b9-951d-3e65234952a0",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ec3e8312-98cc-48e7-9639-056cb1c90ae1"
        },
        "item": {
          "id": "f334d428-f925-44fd-ab8b-1da6cbf1fd40",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b5cdf99d-a85d-4cec-bd54-a3be1e88b37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735ed1fc-91e1-4114-81d4-107f836c7f2f",
        "cursor": {
          "ref": "b35b6158-2a5d-4da6-be42-05c56ebf75d4",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1702d706-1710-4ed1-9908-81e7e4d30309"
        },
        "item": {
          "id": "735ed1fc-91e1-4114-81d4-107f836c7f2f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "482dde0c-e2e8-42b2-9a44-9c38fb245522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61182e0b-a7a8-41d4-8484-dd50e4e929ea",
        "cursor": {
          "ref": "231a33cd-5610-4442-9267-3de10f838e23",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b49427af-4495-42f8-ba10-6ff97bfbab67"
        },
        "item": {
          "id": "61182e0b-a7a8-41d4-8484-dd50e4e929ea",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5063c801-e7d3-4121-8217-3e03b4c0d465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1239d599-95bf-49d4-8281-7a2c756a9d0b",
        "cursor": {
          "ref": "d39b0913-7d0a-4d5e-8b36-e34071f9b50b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "19367842-93dc-4518-84e8-88f8917b24b5"
        },
        "item": {
          "id": "1239d599-95bf-49d4-8281-7a2c756a9d0b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "186d3317-fdeb-4a5c-899f-a03795665708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c1d615-08e3-42ee-8a03-a5a6e47109d1",
        "cursor": {
          "ref": "19785e9f-92e2-4146-b6bd-bb57cda4619e",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fcaf6f96-97bc-4ecf-83bf-44464a9c724c"
        },
        "item": {
          "id": "06c1d615-08e3-42ee-8a03-a5a6e47109d1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "151dee2f-474f-47a5-b07f-9db08d6c2e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a330a1-b561-48c4-a16d-e55b5e42201a",
        "cursor": {
          "ref": "c9c5fadf-8408-4eec-a2f8-a407aa1e47e9",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c063c72b-56f7-433c-922f-2bfad08f3add"
        },
        "item": {
          "id": "b9a330a1-b561-48c4-a16d-e55b5e42201a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1fefd2c3-265c-481d-87bf-52deab8bebfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21582788-832b-4b08-98f3-0f63f5443176",
        "cursor": {
          "ref": "7625b7c5-6936-4b99-8c24-80acca666313",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2be03f77-36eb-42d1-b7cd-f2678a5b8495"
        },
        "item": {
          "id": "21582788-832b-4b08-98f3-0f63f5443176",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c9c7983b-f24a-43f1-946a-317eb4349e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9671f6-5554-4077-9d94-b9338651700d",
        "cursor": {
          "ref": "030a3b19-919d-4786-9cec-6317353d9c97",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d0363a86-c5b7-4d08-b8af-c432b1bd9576"
        },
        "item": {
          "id": "9b9671f6-5554-4077-9d94-b9338651700d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "50f7e065-4d29-4a69-a1fb-518e7f1407c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c878c98-bbb0-4eb8-a26e-238e183d0fff",
        "cursor": {
          "ref": "18bc7d73-f163-4e4b-8bfd-53e37df442f9",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dba42e2c-b260-4f86-8276-20d1640dca25"
        },
        "item": {
          "id": "6c878c98-bbb0-4eb8-a26e-238e183d0fff",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b1d5ab4a-4f98-4a07-a568-98d4b94fa43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148ca6f0-a193-40f8-ba7a-20a30739e996",
        "cursor": {
          "ref": "2c0117ec-6308-4764-9530-96fb62beb286",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "10040816-6b2e-4e39-bd63-2a5eddd0354b"
        },
        "item": {
          "id": "148ca6f0-a193-40f8-ba7a-20a30739e996",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2f8a3403-386d-4911-be3d-52fded0b761f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed50d334-b1d2-4069-bc69-3849a9b137c6",
        "cursor": {
          "ref": "b65b82bb-56c0-4555-841c-ead3dd1f59eb",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c153011a-369b-471b-9f35-afc6563c8b45"
        },
        "item": {
          "id": "ed50d334-b1d2-4069-bc69-3849a9b137c6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1fbf32fc-b51f-4aac-9c3b-96e3d998763b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21dbb319-e972-4ce8-aac8-cbf33bf42fe7",
        "cursor": {
          "ref": "7e3c8364-a757-44ac-a6cf-1eb1034d4de5",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "dca5aee7-cd69-4b8c-a097-09dd40909cd8"
        },
        "item": {
          "id": "21dbb319-e972-4ce8-aac8-cbf33bf42fe7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "91db7a85-c7c7-4c75-b093-872afac34cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0efb2c1-3c12-4dd2-9404-aa4912a49b45",
        "cursor": {
          "ref": "f919ecd9-7c0c-431b-9075-c553139ce9ae",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "712c4c92-bfe7-44f7-b138-17ed2d87883b"
        },
        "item": {
          "id": "b0efb2c1-3c12-4dd2-9404-aa4912a49b45",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "06bea912-a897-44aa-a518-8a3808d84a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807d26cf-59b8-4fc4-af20-cf7083eb4f57",
        "cursor": {
          "ref": "c2bf78b4-84da-477d-9f0e-1ee97f4dbe66",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a6778ac2-1e69-40d1-a392-6b8d3a82fdec"
        },
        "item": {
          "id": "807d26cf-59b8-4fc4-af20-cf7083eb4f57",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "61589756-ea08-413d-9b63-c52f1b1f852a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d764c03-c9b2-4680-be4c-37c18a62a5e1",
        "cursor": {
          "ref": "1599e468-e608-4ec7-9b7f-e0d6650a9696",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "13a7d109-01f3-48e9-a72c-b8fdd47d297e"
        },
        "item": {
          "id": "0d764c03-c9b2-4680-be4c-37c18a62a5e1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "32341d33-494f-48ad-8b72-cc28570d4f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec00d357-e19a-4b3b-b733-f5643d14acac",
        "cursor": {
          "ref": "bcb62f6e-e0a4-4ebb-ba96-0d819c17d4ef",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "03910efe-3090-4589-b483-e5ac7df87b01"
        },
        "item": {
          "id": "ec00d357-e19a-4b3b-b733-f5643d14acac",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f8399148-21c2-461c-bd74-0c4b49e0cf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6cb217d-be62-4985-8118-fff75cd835e1",
        "cursor": {
          "ref": "3cb8ccb4-df40-4263-8bca-f29509026dec",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "11badaf9-c61c-4025-b67e-fa3465d9cb52"
        },
        "item": {
          "id": "b6cb217d-be62-4985-8118-fff75cd835e1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "06961a45-aa3f-4d48-9142-d3184f48f0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fb65b4-7884-484a-b29d-f85b36596f60",
        "cursor": {
          "ref": "e0a0614b-8702-422a-9912-9d7db8e1e4b3",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a0d15a81-d7e4-4559-946e-1353d9d35689"
        },
        "item": {
          "id": "72fb65b4-7884-484a-b29d-f85b36596f60",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d3e9eebb-381b-4ee5-963a-4954bf145dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2168431f-8ace-457d-a5ea-5d1ec429d597",
        "cursor": {
          "ref": "5e61e8e9-cc4a-4ee4-9dfd-d9e2605535a3",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2619f375-25c8-42eb-b873-d04b668bcd59"
        },
        "item": {
          "id": "2168431f-8ace-457d-a5ea-5d1ec429d597",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "80813d7a-f6cb-4c43-87cd-fa3e511ad165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee5b4c9-e660-4ffc-b079-7567df8286f6",
        "cursor": {
          "ref": "a47b5abb-060f-40b4-a27c-5e9c87f4d4a5",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "14235640-1cee-4375-991f-c0eb53980d77"
        },
        "item": {
          "id": "fee5b4c9-e660-4ffc-b079-7567df8286f6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "641294e0-c1dd-40f5-a29e-5e6e560c80b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e81a2f-827f-45b9-a0ce-65643b5851fb",
        "cursor": {
          "ref": "dae90411-7f5d-41fb-a52c-3ac67f928cc6",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ab920a3b-efb5-4e82-a3d6-4c940868f330"
        },
        "item": {
          "id": "22e81a2f-827f-45b9-a0ce-65643b5851fb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1f833b69-f94c-4daa-8f00-540820743f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d37954a-45b0-4927-8d87-e893997a99e8",
        "cursor": {
          "ref": "ad469104-ad67-4704-9711-466ffbd6c8d9",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d048ab2c-d19f-46d2-abd2-c525453897dd"
        },
        "item": {
          "id": "9d37954a-45b0-4927-8d87-e893997a99e8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0c4cab39-29d3-441a-81c5-fab0a8d648e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddd56c8-4549-49bc-91c2-6120b05c9c46",
        "cursor": {
          "ref": "b7c7aae9-2230-4742-b737-00668a0d497d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0403f3b5-9ab1-4141-a5a1-70e7de04d8da"
        },
        "item": {
          "id": "bddd56c8-4549-49bc-91c2-6120b05c9c46",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6b0030e3-0fe8-442e-97f2-fcd63e6b1913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367ef237-68d0-4d14-8a78-95b69da0f716",
        "cursor": {
          "ref": "0e078d2d-5792-4e30-8c16-6d985182d3c8",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9f2f9bdd-f61d-4242-b547-e15230688893"
        },
        "item": {
          "id": "367ef237-68d0-4d14-8a78-95b69da0f716",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f63f64f9-4501-41db-8a65-ef0b690c17cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f1e2c8-3c66-4374-af80-859e50834da3",
        "cursor": {
          "ref": "50c60a44-f4ec-40dd-bf98-688f78d03502",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "eae8907e-102a-4e83-af58-6fe8d9cb0209"
        },
        "item": {
          "id": "42f1e2c8-3c66-4374-af80-859e50834da3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7c8b10e7-0d74-4dc9-bdd9-0451afbcc39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7635bf29-88e4-4b7e-a3c7-aa91af0b23ec",
        "cursor": {
          "ref": "22d905e6-ec69-45bc-87a0-eca94cd668bd",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "555f2426-2efe-44e4-8026-d322b7cd1c9b"
        },
        "item": {
          "id": "7635bf29-88e4-4b7e-a3c7-aa91af0b23ec",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "82dfbbd5-d851-4a66-b5e5-8eff992901f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d35e3a-983b-4a8d-bacc-072ac804044c",
        "cursor": {
          "ref": "fa580259-a7b3-4046-bd3a-505e883aa234",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b97b40e4-79ea-4969-87fd-a8bc5c04d8d4"
        },
        "item": {
          "id": "b6d35e3a-983b-4a8d-bacc-072ac804044c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9aa5bcbe-4429-440c-85d7-e1e220a75db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ac68ee-a567-41d6-8236-82b8dade3adf",
        "cursor": {
          "ref": "6eaa8ea7-46c2-4416-afad-cb9a01b6b79b",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1b4263cc-43ef-458e-b7fd-a2d207079944"
        },
        "item": {
          "id": "77ac68ee-a567-41d6-8236-82b8dade3adf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "67983a03-14c3-41ef-b031-52674c8f942a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb82bb8-2f8c-42ff-96ec-ab27f8f0e851",
        "cursor": {
          "ref": "604070bb-8e1f-4c8e-a807-a4d0afe45380",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7572c724-acbf-4ecd-9624-1565756d8d6c"
        },
        "item": {
          "id": "acb82bb8-2f8c-42ff-96ec-ab27f8f0e851",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fc508ed0-9380-4e73-8849-5d769dd1bd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca25770-e50b-4371-baf5-80251f51459a",
        "cursor": {
          "ref": "bf1615aa-cac3-4b00-91f2-efc2cccf69c4",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cc49c029-f4dd-4aad-966d-3dc2643131d1"
        },
        "item": {
          "id": "cca25770-e50b-4371-baf5-80251f51459a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b8343276-ce4e-42c6-bc8d-1f81d3632929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a448815d-a4de-4c06-8f19-d03e2a8e7280",
        "cursor": {
          "ref": "100c20a9-860a-492b-8dc3-26c60cfedd60",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f9e6b83b-fadf-4cab-b767-4648d4744e7a"
        },
        "item": {
          "id": "a448815d-a4de-4c06-8f19-d03e2a8e7280",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a282092b-8722-454c-bc6e-d09a2d9f7581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4291f90-70b6-4a59-a483-dc2cd0a6506a",
        "cursor": {
          "ref": "2fc0cab4-85ea-4b2c-b6d4-03ff32ae2736",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d42b47e7-50ef-43b7-baf0-f776afe73fac"
        },
        "item": {
          "id": "d4291f90-70b6-4a59-a483-dc2cd0a6506a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "505cf72a-42d7-424a-80eb-74aac25b2bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543b0585-7b72-4424-b408-20e52d88526e",
        "cursor": {
          "ref": "5b3a7423-2198-4b4b-b9d9-0218250a1adf",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3ceac579-b4b9-4aad-bd23-73a46be2f249"
        },
        "item": {
          "id": "543b0585-7b72-4424-b408-20e52d88526e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9b60ed7c-cd1f-4a5c-8a56-0b09d0118748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d934908-9c3a-454d-b387-1c8aa8c25337",
        "cursor": {
          "ref": "69c6dfb3-8040-4128-9485-4ef8fc94c5f8",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b167b508-1f9b-40fb-b3d9-02fb156e004d"
        },
        "item": {
          "id": "3d934908-9c3a-454d-b387-1c8aa8c25337",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "85e95fbc-58fd-4bb0-b58e-bb28f883ba32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1378ddf-6491-461c-a2a7-cf0e5d29bac8",
        "cursor": {
          "ref": "dab51026-e6d0-417f-ad3b-0890251081c5",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0e9d35f1-a82b-4f83-85d1-b31e35dad843"
        },
        "item": {
          "id": "f1378ddf-6491-461c-a2a7-cf0e5d29bac8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a6d31d3c-8a53-4d88-a675-6b2b084e21ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ac635b-a8be-48ca-b38d-6cd56848caa2",
        "cursor": {
          "ref": "365496bf-ac3b-46a8-808b-5089788cb7b7",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d506b5a2-4cc9-4ce0-a8e0-237d25f09de5"
        },
        "item": {
          "id": "94ac635b-a8be-48ca-b38d-6cd56848caa2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "737e873c-8108-4fa9-9b9f-9014da5987b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcaa595e-a4f7-4956-840c-3de49669ea0d",
        "cursor": {
          "ref": "0567fdef-5fef-4d18-bc69-e49b4b281c15",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b1f4c4c9-bf95-494f-a3df-4a60d88f78c5"
        },
        "item": {
          "id": "dcaa595e-a4f7-4956-840c-3de49669ea0d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "33d01152-d0b0-4b12-8370-f739217242d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60906ab-536e-4464-89bc-1600f0b2a5f7",
        "cursor": {
          "ref": "f44bd230-14a1-4eb4-88e1-3002f5fcc52a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e495fa02-a08b-467f-9718-5800d01c62a5"
        },
        "item": {
          "id": "f60906ab-536e-4464-89bc-1600f0b2a5f7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a76ff297-01eb-43c9-bc76-7f034022d321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cb07fe-a679-4932-9ac0-de9fe546b068",
        "cursor": {
          "ref": "eac706df-94b7-45a0-96d9-3bbb2531789e",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3bf93733-e3f5-42cd-ba95-dbb9f27f1d67"
        },
        "item": {
          "id": "19cb07fe-a679-4932-9ac0-de9fe546b068",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ffc3c58e-3216-43c4-97f8-39515866a25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf392d7-def6-470f-8af5-48d7a32d1e61",
        "cursor": {
          "ref": "dcef6c48-52b2-4763-aecf-d8a36f1eb6e9",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9e2f843a-5902-4678-93ae-dc0a46abb9ac"
        },
        "item": {
          "id": "dbf392d7-def6-470f-8af5-48d7a32d1e61",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c0117372-43dc-481a-8d66-93d2a92f9b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00c14d4-a107-40bc-983a-4ec5de906943",
        "cursor": {
          "ref": "be1510bb-dff4-418f-abc0-f53a17b8b544",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "cc667b09-ef42-4348-a9f3-99758b52308a"
        },
        "item": {
          "id": "b00c14d4-a107-40bc-983a-4ec5de906943",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "26981069-227d-4cc9-8a6f-ecae41397039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68205db9-e033-43f0-9f40-8c92ffbf9a05",
        "cursor": {
          "ref": "4677087d-788c-49bd-bbb7-cbe901f4c72b",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8836cd5e-2fff-4723-b988-bbecd58fbe4b"
        },
        "item": {
          "id": "68205db9-e033-43f0-9f40-8c92ffbf9a05",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "aea40a1a-c0b4-4c6c-9d7c-5cac6cf3a00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc237150-7f4b-41f0-9f94-c2996d4948c9",
        "cursor": {
          "ref": "ae36c7d1-898d-4e49-835f-2b3fb2988df3",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9967ad15-1788-4c05-939f-4de4bdc48825"
        },
        "item": {
          "id": "cc237150-7f4b-41f0-9f94-c2996d4948c9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e2f50df7-427b-463d-8127-b101450a4e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900f1425-a5f5-45be-8222-d4b5993c1727",
        "cursor": {
          "ref": "32714ec5-3fd8-4495-9d2e-98832f8c0427",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b6cb76ef-bf14-4f9b-aba5-61f2914270d5"
        },
        "item": {
          "id": "900f1425-a5f5-45be-8222-d4b5993c1727",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "91c6d69a-0c8e-4e60-81bc-5f81f33c2dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82dc511-ef0d-488f-8dae-e574f64c2a16",
        "cursor": {
          "ref": "e442d4e0-0164-487b-b06e-1adf23b0438f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "db331773-962d-4408-8fb8-1b26a4bde960"
        },
        "item": {
          "id": "f82dc511-ef0d-488f-8dae-e574f64c2a16",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e8e51336-4f4d-46be-89fc-5e6b9b9b86f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39aa73eb-6bb8-4c18-92bd-ade295a15a4a",
        "cursor": {
          "ref": "9d17c2d5-6655-45f5-9636-c387deddb48d",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "28c96508-c016-4558-b1ae-3d7efdfd62a2"
        },
        "item": {
          "id": "39aa73eb-6bb8-4c18-92bd-ade295a15a4a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "13b80220-2ecc-45a1-ad83-aa8d1bc3e551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faff2cef-172d-4020-b025-93623dc14515",
        "cursor": {
          "ref": "0258b1c4-414b-438b-b5cc-6cb885018e1a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "358e97fb-57c5-43b8-9dca-a3c492cceaed"
        },
        "item": {
          "id": "faff2cef-172d-4020-b025-93623dc14515",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2fcbf6c4-d316-4eec-baa8-d41a6888991d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df55a96-b8a3-43ca-bd38-d92bae2264c2",
        "cursor": {
          "ref": "923047b3-91d2-42c5-9924-50e6b1bcda30",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5e461800-e423-4f28-a257-22cf9b1f3e86"
        },
        "item": {
          "id": "3df55a96-b8a3-43ca-bd38-d92bae2264c2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "42a6d0f2-9690-4e48-9145-701aab9b3fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d12a525-8919-447a-8872-0af413b95cf8",
        "cursor": {
          "ref": "3f289625-1b0f-4558-ab2f-903da1221f8a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "58cb8072-6306-4d14-823f-542ec96ea6c1"
        },
        "item": {
          "id": "2d12a525-8919-447a-8872-0af413b95cf8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "98d5f58f-ac80-4f8f-a11a-dd8810db5046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2628530e-0cbb-486b-860a-e83314efc0a8",
        "cursor": {
          "ref": "e0236882-792c-42af-9f63-f4e675cbdfd1",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bd9756e0-91a9-4e77-8583-2ba9516b8f44"
        },
        "item": {
          "id": "2628530e-0cbb-486b-860a-e83314efc0a8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b28946b2-a0b3-4465-a2f8-71763292e1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f88b9f-931d-4738-afe6-4975bd2db654",
        "cursor": {
          "ref": "38bd65c3-dcd6-4705-ba3f-f2de385f2465",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "214b8613-ede8-4fa1-b564-6b76c5e789f3"
        },
        "item": {
          "id": "10f88b9f-931d-4738-afe6-4975bd2db654",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "48829195-8a3d-45be-bf97-e9ceddf75471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d21907d-92be-46b7-b892-8d9b86cea582",
        "cursor": {
          "ref": "9febc711-8031-41a3-9dc4-649761eef2fe",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c1e51a88-984d-4d84-8327-95aa96b4faf4"
        },
        "item": {
          "id": "3d21907d-92be-46b7-b892-8d9b86cea582",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "92f22bff-de5a-4b16-8a47-9cdc1d6d6d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea11394a-3052-4a2c-bb75-94770467df5b",
        "cursor": {
          "ref": "28b891c1-d132-46d9-b8bf-a643491e563a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3feea4c9-71ff-4da6-9d65-bdba1c8e63d8"
        },
        "item": {
          "id": "ea11394a-3052-4a2c-bb75-94770467df5b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7b022db6-9f0b-441c-8fce-6b5f3839d4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6f791c-d03f-454a-b80d-944450406d2d",
        "cursor": {
          "ref": "f78175c3-c527-4583-b289-038485491d72",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f7b4b037-cb13-4236-a748-156e3ea3d8c1"
        },
        "item": {
          "id": "5a6f791c-d03f-454a-b80d-944450406d2d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a2a6290e-3330-4cb6-8afe-18d089610cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8243b07b-b4bd-4319-a4b0-7672c5a1c94c",
        "cursor": {
          "ref": "c4daedaa-7742-41f1-9daf-9cea5a2cac2b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "706e000e-4b1c-4eea-b5dc-e0ae317669fa"
        },
        "item": {
          "id": "8243b07b-b4bd-4319-a4b0-7672c5a1c94c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3c9217df-06d0-40eb-a7f3-d4c9ad3397d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284067a9-d47a-47db-9616-83a923ccddd3",
        "cursor": {
          "ref": "fea42a70-1764-4034-8624-731061eafb80",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "277b1f56-05b7-4cce-98ca-29007e75409a"
        },
        "item": {
          "id": "284067a9-d47a-47db-9616-83a923ccddd3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fc60fbed-8a8f-465d-90b0-754de9a9630f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe8dd5d-1926-4f2d-9dee-705c5fb50c9b",
        "cursor": {
          "ref": "6d16bb9f-3b2d-4ec5-971d-32a128ecc076",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1c98a507-fcc9-4910-83e2-5b87dba6e7a7"
        },
        "item": {
          "id": "1fe8dd5d-1926-4f2d-9dee-705c5fb50c9b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "28cd6751-7bb9-40b2-a3ee-f6f7cb365e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11afbe6-fe30-4365-bfae-640d2ad203de",
        "cursor": {
          "ref": "13c23a99-7d28-40cc-a176-3b12449b0a27",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5b7ac6a1-dab0-4e2d-8ef3-633cd819f9dc"
        },
        "item": {
          "id": "e11afbe6-fe30-4365-bfae-640d2ad203de",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9d0d13c5-3cb4-421e-aa0c-a928c130f69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb0fed0-80f6-40e4-aafd-0974b881e996",
        "cursor": {
          "ref": "3bdbe960-42c9-4ede-96eb-3b8b24be899a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bb9ea4e6-63db-4808-9899-e9d1e5a6f3ce"
        },
        "item": {
          "id": "7cb0fed0-80f6-40e4-aafd-0974b881e996",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "116cb7a7-764a-46aa-ab5b-f3b9fdac6544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f2cbae-2b1a-4f20-ba2a-d589eed48889",
        "cursor": {
          "ref": "833738f2-8f6c-45e1-95ef-796b2c064e81",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d18a8423-b706-44b7-8ac6-49487a422980"
        },
        "item": {
          "id": "58f2cbae-2b1a-4f20-ba2a-d589eed48889",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d54422d1-5a86-4eab-a077-d15627be11de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03f3c43-cb97-47c6-86f0-87dc73affd75",
        "cursor": {
          "ref": "c420379f-da3d-44bc-9f81-73dcfbd3c4fe",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "57dbb840-ea43-4422-acfc-4dd4ae123f3b"
        },
        "item": {
          "id": "c03f3c43-cb97-47c6-86f0-87dc73affd75",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ac9ad6c8-5336-4739-90fb-812651d05aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf0339a-afc0-4ad3-851b-73dd9d4ca080",
        "cursor": {
          "ref": "5ff69a8f-e0a6-44ea-bdfb-f76c6c1230cc",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8fec570c-df0d-4ebb-a60d-8acfbf3cff3b"
        },
        "item": {
          "id": "ebf0339a-afc0-4ad3-851b-73dd9d4ca080",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ebba9c31-4a21-48b8-8c29-81f3a10639b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93790690-aac6-43aa-831f-b7ed6fecb7d2",
        "cursor": {
          "ref": "6b6b0d9e-8ed2-4e17-8f8d-c7bfb2726411",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "eed7e417-85fb-4dfd-a608-4fdfad4ade61"
        },
        "item": {
          "id": "93790690-aac6-43aa-831f-b7ed6fecb7d2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0ae59150-1a45-417b-aeac-23822719dc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c3821c-0841-462b-a1ff-5c3cba60b602",
        "cursor": {
          "ref": "d7efd74a-f2e4-40f4-83f9-8dd2dd7bb5a7",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f9f14852-4e6d-4c6d-a5e9-d563a7fee3cb"
        },
        "item": {
          "id": "f5c3821c-0841-462b-a1ff-5c3cba60b602",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e6ac7ced-3d5d-444c-aac2-19e347dae6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bca6131-8986-4800-835c-f120a6e8d0eb",
        "cursor": {
          "ref": "c377d273-5c1c-48fc-a929-892ac26bbd1e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4b2bbd1b-00c7-4089-b0c7-4d9a9c9bb64b"
        },
        "item": {
          "id": "7bca6131-8986-4800-835c-f120a6e8d0eb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "620cc08f-6764-4394-81fd-a05a4c1a83d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58a7042-26cd-4d89-aeb7-e133e4bce542",
        "cursor": {
          "ref": "38799c94-075d-4a58-9e0e-334f8870a002",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ccbcebf4-2dd7-4269-bb8a-98e913d60bde"
        },
        "item": {
          "id": "c58a7042-26cd-4d89-aeb7-e133e4bce542",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "540ecab9-865a-4e62-80b0-7b7fa3421da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545dd9d7-065a-4853-ac9e-e7ad03698877",
        "cursor": {
          "ref": "60144a6b-ff19-44f6-aa69-6f849003b1da",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7a95038b-67ef-4f98-b4dd-ef22d99aec53"
        },
        "item": {
          "id": "545dd9d7-065a-4853-ac9e-e7ad03698877",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "588fac90-ce6f-4be0-b4c8-5271568762cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ec5153-4eee-4d66-9ccc-563ce2866df7",
        "cursor": {
          "ref": "5fd14c92-54b9-4a47-95e9-9a996f83e09c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d37bc8fb-7f8f-4c92-8fd6-35b8eee9c1af"
        },
        "item": {
          "id": "d9ec5153-4eee-4d66-9ccc-563ce2866df7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "654df565-4b8c-4d16-9ba1-3453c655180b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0706f8ab-0d78-49e4-9479-f75925a98e4c",
        "cursor": {
          "ref": "313d79e2-d918-4132-a8c8-410b14ec8543",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6fed8a55-6126-42fa-86c0-52b29b839a9c"
        },
        "item": {
          "id": "0706f8ab-0d78-49e4-9479-f75925a98e4c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6b4e9a5a-1c06-4059-a05c-56c1e677ed79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc90eb2-27d8-4c39-8ac6-b792f1fcbdaf",
        "cursor": {
          "ref": "afb6f0ec-9172-4705-9f95-1d037bd73ff7",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2fb4ec93-6acb-4502-9c69-bc2df70b6d17"
        },
        "item": {
          "id": "ffc90eb2-27d8-4c39-8ac6-b792f1fcbdaf",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "876c6009-cb75-4e44-ba8a-72abcd1f3a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b22ee42-c84e-435c-bdd2-8fd6c83e0f63",
        "cursor": {
          "ref": "8de4343e-af23-426e-9ffe-362a02b6211e",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bbf3999e-6b3b-4e52-b7e9-30e26ca3965d"
        },
        "item": {
          "id": "2b22ee42-c84e-435c-bdd2-8fd6c83e0f63",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fa52c50a-d405-4db0-9a1c-98cce365c596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bce28e8-b832-48dc-9ef1-d9d03e505373",
        "cursor": {
          "ref": "a7cc9b62-a1c6-4b46-81ad-97c543924bd2",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c82c6385-c0ec-48da-86f5-7cae4b6d008a"
        },
        "item": {
          "id": "1bce28e8-b832-48dc-9ef1-d9d03e505373",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f73781cd-5378-4556-a773-8a38b200b51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef85144-c26c-4a67-a403-5337b2f79af7",
        "cursor": {
          "ref": "476560dc-1138-48df-890a-95ada4aeb470",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4182cb27-fe53-488b-8534-95c9a5a46660"
        },
        "item": {
          "id": "3ef85144-c26c-4a67-a403-5337b2f79af7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b401564b-977e-4673-b8d4-2e42c9a2cb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02405d52-35e2-46db-b0b8-c309dd88dce8",
        "cursor": {
          "ref": "5469822c-4a61-4e28-82e3-f80b1574295a",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2edb1cf0-8ccf-443e-a5f1-f81f0c5b64ba"
        },
        "item": {
          "id": "02405d52-35e2-46db-b0b8-c309dd88dce8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1ef85730-b273-4eb9-961b-f56d61f5578e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b323e894-ec3d-49e0-8c93-e3ac9be0a6a9",
        "cursor": {
          "ref": "f614fe7a-0f66-4df3-b288-fd68af03112a",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6ab07b36-9eed-44b5-ad4a-03496ff72d78"
        },
        "item": {
          "id": "b323e894-ec3d-49e0-8c93-e3ac9be0a6a9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "40960247-7708-4294-878e-440734f8fc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6d8499-98b3-4dd7-8d94-eece0f90b445",
        "cursor": {
          "ref": "efcdd858-c1bb-4d76-b873-724fdd1cd59e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ee0ec561-fe31-4c62-a229-97475d456fde"
        },
        "item": {
          "id": "0c6d8499-98b3-4dd7-8d94-eece0f90b445",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "22da441c-b4ce-43ab-87f1-354ec11b5347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ede1253-cb1e-4082-9eb8-9e3e5840ccff",
        "cursor": {
          "ref": "a3167853-4bcb-4e92-b532-cd7292fed25f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b8778bc6-2970-4614-a678-b6770f613e85"
        },
        "item": {
          "id": "9ede1253-cb1e-4082-9eb8-9e3e5840ccff",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f2118553-217a-462e-87ee-8d4cd91fb5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d63c43-268e-44cc-967b-00b3c5fc9e3f",
        "cursor": {
          "ref": "79646eff-d554-4f7a-83a9-7e00f71f952c",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9e93234b-f5d3-49ef-aff7-9597a578c22d"
        },
        "item": {
          "id": "14d63c43-268e-44cc-967b-00b3c5fc9e3f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8cc37aac-2de3-48d6-976f-be0fa981f172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a53a82-19d8-4b6c-9df4-ce988d936b8f",
        "cursor": {
          "ref": "260e2c46-e5a8-4427-b80b-3e74d3c2839c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "85f9e35d-5ac9-4855-81c4-eadd133702c4"
        },
        "item": {
          "id": "20a53a82-19d8-4b6c-9df4-ce988d936b8f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3cfb2d55-1640-4a80-b5e8-d4361f83fed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0103eb5a-d9e1-4836-8284-5a33afd70fdf",
        "cursor": {
          "ref": "bdc726a2-b958-45b2-8ae1-4541ce48af32",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7b4a2c15-2e50-4e73-aa8a-cb275baa9547"
        },
        "item": {
          "id": "0103eb5a-d9e1-4836-8284-5a33afd70fdf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a22ae1fa-0d41-44e1-82bc-a8aa67315b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247b1574-dfc6-40cd-9e03-b4f04af568c2",
        "cursor": {
          "ref": "7d928e6c-befa-4e3c-a52c-0d256e1f2647",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e794ead7-e0e1-4cce-841f-c5466a4719d5"
        },
        "item": {
          "id": "247b1574-dfc6-40cd-9e03-b4f04af568c2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e25c31c3-06ab-4772-b668-3608ccf3e400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec40300-1a05-444d-bfeb-2075534541dc",
        "cursor": {
          "ref": "827a73aa-3346-4849-8c3b-8361c27ceb09",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b609a001-bc15-4465-9de4-414fe51bcc6b"
        },
        "item": {
          "id": "4ec40300-1a05-444d-bfeb-2075534541dc",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "676c12ba-7960-4328-ab12-8932c7f523d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3005fc89-bad2-4d10-ae1a-24f0fb56d269",
        "cursor": {
          "ref": "94e26398-c245-43d8-820c-af74de033315",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8bfa1308-7cdf-4f9b-9788-b2747156ce9b"
        },
        "item": {
          "id": "3005fc89-bad2-4d10-ae1a-24f0fb56d269",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "60b835c1-d3b6-4c15-9ff7-967bdd998b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0d997c-fc63-428d-886c-a1ef76f7564f",
        "cursor": {
          "ref": "3352e809-8618-470a-8e6c-2e8531d066c2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a690f412-f7ec-41b9-83fb-0b41b1dcf07b"
        },
        "item": {
          "id": "ae0d997c-fc63-428d-886c-a1ef76f7564f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0f69202b-8a0a-4845-808a-2084043cac3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40165dcf-dd0c-4135-9d14-3458228a1780",
        "cursor": {
          "ref": "50be9f5b-9baf-4e65-8f1a-7c2d0b371fc9",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b02931a7-3c84-47eb-94db-7fe20d196a92"
        },
        "item": {
          "id": "40165dcf-dd0c-4135-9d14-3458228a1780",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "24312cbc-e244-4272-a752-3d4fe5367101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c5b9cb-89af-49d7-b6c4-e51545528578",
        "cursor": {
          "ref": "bcdabd11-6282-4174-a8f9-179f23db8af3",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a392e149-f4c5-45a0-b602-4669e639e97a"
        },
        "item": {
          "id": "d5c5b9cb-89af-49d7-b6c4-e51545528578",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "18a4954d-04ae-49d8-83b8-fce594119f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb82d79c-9b2f-43f9-b8c1-73f1fcad648f",
        "cursor": {
          "ref": "c6f3d686-a604-46c1-b221-1143f04d1f3d",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "00d60e98-01bd-47c7-b78d-55261431a038"
        },
        "item": {
          "id": "fb82d79c-9b2f-43f9-b8c1-73f1fcad648f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b56cafc0-65ae-4fe3-a578-a2ab5c8ae9bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522e59a7-cc8b-4d70-aa49-8613c96f0eb8",
        "cursor": {
          "ref": "b1c86f16-78a4-4a4c-8c79-09ed40396334",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "12df90ec-8ce4-4b48-a7bb-6de76ddd38e7"
        },
        "item": {
          "id": "522e59a7-cc8b-4d70-aa49-8613c96f0eb8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "352b8152-0744-47e7-940b-7069e38b5a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1b6ff84d-7d0f-49aa-bb33-179a81063800",
        "cursor": {
          "ref": "011550b2-d482-4fac-9a96-7bbc4b6f1686",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "57dfa461-407d-4337-a2d1-43de8a64ca82"
        },
        "item": {
          "id": "1b6ff84d-7d0f-49aa-bb33-179a81063800",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5774ae27-f49e-43cc-b206-d36df8028c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7858a111-a9fc-4c0f-ac4a-3c798b075e3b",
        "cursor": {
          "ref": "326f8bc2-6a87-4bc6-bc49-047dd0791e11",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a4964b37-7cc5-4c23-ada8-1ee21334b807"
        },
        "item": {
          "id": "7858a111-a9fc-4c0f-ac4a-3c798b075e3b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "10485ff6-4173-410a-8b40-7b74c32c1152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "910d833b-2044-4745-ac15-4aa8bdf7596a",
        "cursor": {
          "ref": "4733fceb-6596-4cca-aabf-37073befd483",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8783e15e-184b-47c8-bd83-ac52c08ad7c5"
        },
        "item": {
          "id": "910d833b-2044-4745-ac15-4aa8bdf7596a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9f7e46ff-1a9e-4d9a-a3b9-53a9f6273934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c50f6354-514d-48a8-b51f-b2e14ccee08b",
        "cursor": {
          "ref": "6b3847ce-a58d-4fd9-8081-8629c47b967e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8fbb132d-2a98-4fdc-88b6-985399f2b890"
        },
        "item": {
          "id": "c50f6354-514d-48a8-b51f-b2e14ccee08b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4b922d2b-9ef1-46f8-b5c2-162544813b02",
          "status": "Created",
          "code": 201,
          "responseTime": 11386,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "040c1d69-2801-44b1-a63e-453ac34e7e75",
        "cursor": {
          "ref": "a07b6fd5-461b-4b1d-8821-2ecd3e2e9d65",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2229f374-d60c-4c4b-92a9-332e047b2c7d"
        },
        "item": {
          "id": "040c1d69-2801-44b1-a63e-453ac34e7e75",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ed5058c6-f694-4364-8b4d-fb91f0bf15a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2ad26206-8c06-42c3-ba9d-efadc813a686",
        "cursor": {
          "ref": "08c3ff6e-d811-4f70-97d2-87787d1d4442",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "575e98cb-2c70-4494-ab68-4ad389a9c080"
        },
        "item": {
          "id": "2ad26206-8c06-42c3-ba9d-efadc813a686",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "af19dec9-3bd9-4712-948f-1c26ec684f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "dce69c50-98f8-42e2-a35b-48cb9b2493a5",
        "cursor": {
          "ref": "bcd787ad-ce68-4b86-b8fc-79562af91179",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d289d005-4976-4575-8176-41cf7093dcc7"
        },
        "item": {
          "id": "dce69c50-98f8-42e2-a35b-48cb9b2493a5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "258c678b-034a-42d2-bb83-52cb66eb4d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8360e672-2dd5-497b-b536-ba907530f5a3",
        "cursor": {
          "ref": "156579f2-2030-416e-8bcb-9ef0d25a6bd0",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f5948fb9-73dc-456f-a882-116777321a46"
        },
        "item": {
          "id": "8360e672-2dd5-497b-b536-ba907530f5a3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5019ccea-7028-473d-9e94-3f94b401b434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb880ef-df81-4259-b473-30671be7b655",
        "cursor": {
          "ref": "2c67d113-3042-4fcc-aa06-80c4dc658214",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "06b49704-ae82-425a-ae86-53ebb1a6b307"
        },
        "item": {
          "id": "3cb880ef-df81-4259-b473-30671be7b655",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "03c466dd-4856-47d2-ab17-5f27a11d031e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33050b6c-5340-4875-9f0b-e43ac0b61f2e",
        "cursor": {
          "ref": "4b6d8b94-8ea6-4f2e-afe5-ef6949a5ab65",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7208f128-fd1d-4971-b6c6-2e84bbb152bf"
        },
        "item": {
          "id": "33050b6c-5340-4875-9f0b-e43ac0b61f2e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0d28e4d3-c39c-4b69-b3fc-21d43ceec5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb80709-264a-4ee9-89b4-a935239dc6b1",
        "cursor": {
          "ref": "3af121a8-7fc1-4d1e-a2ae-809c1046d6e6",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9a3fa455-c7da-4c63-b540-4c2c55aa8ebd"
        },
        "item": {
          "id": "fdb80709-264a-4ee9-89b4-a935239dc6b1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e4a8f7f3-db34-4f1c-a639-ce082102dcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07670ae4-96d8-420d-ba66-e85291594c4e",
        "cursor": {
          "ref": "a1715755-8e41-4c22-90c3-8ce31217b038",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ddd8e49e-e291-46fb-8a19-c286d0599b77"
        },
        "item": {
          "id": "07670ae4-96d8-420d-ba66-e85291594c4e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d71947cf-d173-41fc-835f-7208889c03ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aef5a25-d637-452b-bcb5-b56df475d6f8",
        "cursor": {
          "ref": "b318d53a-6cf3-4419-a265-030e1b547d3a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9b5b3365-0851-4b98-988e-54d873e31e5a"
        },
        "item": {
          "id": "7aef5a25-d637-452b-bcb5-b56df475d6f8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a6dba795-6151-4dc2-a8bb-f898f826235b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc6c3b7-dc15-4682-8ce4-e77bc4aa0916",
        "cursor": {
          "ref": "e9bc6fc1-6fdd-4a8b-820f-af15d9e029b5",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "43b4825d-5598-41af-a6e4-f7671edec55b"
        },
        "item": {
          "id": "dfc6c3b7-dc15-4682-8ce4-e77bc4aa0916",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8ac09023-dea6-47e9-b578-defe5e50e210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64997c9-ee42-4f99-826b-227caed77f15",
        "cursor": {
          "ref": "6b8c1aaa-5702-4ef1-b499-0837737e7e3b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "60fd6c58-8944-453e-9853-53d1db6fc1bf"
        },
        "item": {
          "id": "e64997c9-ee42-4f99-826b-227caed77f15",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f80c3dc2-571a-49fa-acf8-aa9ff0d43481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef94e786-5ec9-4065-a13d-7b23cf2b52bf",
        "cursor": {
          "ref": "88d24557-d073-468f-8391-42539f8766c2",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "164b13a6-37e9-410a-92e3-1b3b59795dad"
        },
        "item": {
          "id": "ef94e786-5ec9-4065-a13d-7b23cf2b52bf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "39f1ec51-422d-40e7-acd2-c65849c1c530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a17951-725e-47dc-ac5d-379612220eaf",
        "cursor": {
          "ref": "b8866785-23da-49f9-9796-111bc506f57c",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5e91600d-8c89-4222-96ce-36be5a5c088e"
        },
        "item": {
          "id": "a6a17951-725e-47dc-ac5d-379612220eaf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "316127b1-ab77-45b8-b9ee-30197a2c7702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26e7ce1-ab07-4342-b175-9d75b8008ea9",
        "cursor": {
          "ref": "a98690cb-7fa0-49ee-9e90-33e9ca81b9ce",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "30993173-0e60-41ca-8a34-29037fdee631"
        },
        "item": {
          "id": "a26e7ce1-ab07-4342-b175-9d75b8008ea9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "63ffab0b-2ad3-42d2-a650-25f6d605b10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf14bb5-575f-473a-9e9b-d0c8aa3da04b",
        "cursor": {
          "ref": "81f7195c-e979-4a78-bd66-a5279e5e1a80",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bc23e355-6262-4393-8069-8c198241a96d"
        },
        "item": {
          "id": "ecf14bb5-575f-473a-9e9b-d0c8aa3da04b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6bc834f6-0b68-42a2-8d41-e895e1a04832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0eb27c5-4c89-4599-b9de-28dc454038d0",
        "cursor": {
          "ref": "1715e2fa-5c70-4069-8e87-07288ec8646b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "197fa5aa-a5dd-4b1d-9d3e-afd2bc6e5192"
        },
        "item": {
          "id": "e0eb27c5-4c89-4599-b9de-28dc454038d0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c1062d0a-35cb-4640-b90e-f9891fc4d296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a647238-814c-4f18-9e50-ecd622f05f6f",
        "cursor": {
          "ref": "cdea051b-ba4f-4cc7-a8d0-5645e48d7ef8",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f8edcbcf-6231-44d0-a8a0-053c46027adf"
        },
        "item": {
          "id": "1a647238-814c-4f18-9e50-ecd622f05f6f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f4619707-2c16-463f-905a-e24b111dd557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a69195-e4ab-48ed-9a5e-c798512d54ba",
        "cursor": {
          "ref": "78c32c27-516c-42e2-9b5e-b837f575b36f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b91e42ae-42af-4b99-a270-2c3787ed13df"
        },
        "item": {
          "id": "79a69195-e4ab-48ed-9a5e-c798512d54ba",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cb888a3b-dd66-40cb-8076-a3668e4602d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b323bb45-3e7f-4239-9102-31b140f8cdf6",
        "cursor": {
          "ref": "110fc555-8d6f-4e43-ad8c-be99e4c65035",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fa6a195c-1cfc-4a2b-b054-3a20c9d99f16"
        },
        "item": {
          "id": "b323bb45-3e7f-4239-9102-31b140f8cdf6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "18c3faac-46bc-4815-a1e1-a8a42127df76",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "e7e471e8-206b-48ba-abe2-ed77b4395e5d",
        "cursor": {
          "ref": "e2959577-14ca-4f1f-aa1a-66b4e3958d64",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "52aa67ad-44af-41bc-987c-ca80f20da8d0"
        },
        "item": {
          "id": "e7e471e8-206b-48ba-abe2-ed77b4395e5d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f636dd16-c83a-4872-beea-d807f3cfb5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5060527b-ca6d-4713-a354-2ff23b9a5511",
        "cursor": {
          "ref": "e3b6e5cf-77cb-4cf6-9aa0-5574a082047e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7d2787b9-f93d-4734-b92d-06988281b9fb"
        },
        "item": {
          "id": "5060527b-ca6d-4713-a354-2ff23b9a5511",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d3f1f150-29f9-4ddb-8228-cd9b6d3936b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e9493f-7844-4a43-8043-4c81254827cd",
        "cursor": {
          "ref": "cc1feeb5-b72e-4640-8476-5285e7c94efe",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "10b8aa5f-be26-4fd7-a1a6-332f657e0baa"
        },
        "item": {
          "id": "42e9493f-7844-4a43-8043-4c81254827cd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ca46ca3b-a3d0-4126-95a4-9ee437dd1a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3734c40c-2434-469b-8588-9eba5108ddb9",
        "cursor": {
          "ref": "02f42bb4-1fe3-4d5d-b781-424429a21356",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f24aea3d-2753-4ede-9fe5-0650bd2cf24c"
        },
        "item": {
          "id": "3734c40c-2434-469b-8588-9eba5108ddb9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "396852c1-a753-4d7b-ad79-8b2997aa766e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94944e65-3f0d-4031-9a58-62ab4542edb2",
        "cursor": {
          "ref": "227897b0-d07f-4340-b4a2-51ac356f3c40",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d24b5d02-f032-465f-9c11-3a519d287d7e"
        },
        "item": {
          "id": "94944e65-3f0d-4031-9a58-62ab4542edb2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fde38601-15a7-48b6-890a-0b691d35817c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f5e48f-db57-49d8-8ad7-6316a6d45415",
        "cursor": {
          "ref": "dfb6eeec-723d-446d-8e4a-9635f3ea039a",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "31067e09-99d5-4915-aa1d-a4581904b518"
        },
        "item": {
          "id": "a5f5e48f-db57-49d8-8ad7-6316a6d45415",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "869b6fe9-c206-4d38-8911-e3e53e36f33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7b100f-3976-4512-af30-fcea686d31c4",
        "cursor": {
          "ref": "0c88d0f9-de50-4d46-b1df-f0eab9c93f2c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9430ed03-862a-470e-94f9-b4c80d9e17aa"
        },
        "item": {
          "id": "ee7b100f-3976-4512-af30-fcea686d31c4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "75b20f0d-246f-4798-b6f7-aea7220a4025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde0ad79-4359-4e5b-9fb4-5dde4bdd9a9f",
        "cursor": {
          "ref": "821b0d22-59d7-4776-b086-bcfef3187533",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "79ee54d2-0ea4-460c-9c20-5f83fe71ec88"
        },
        "item": {
          "id": "cde0ad79-4359-4e5b-9fb4-5dde4bdd9a9f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ba0349c7-33c6-4a96-bcda-1efa3050efcb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "75250217-1eda-47e2-830a-5855ebe675c9",
        "cursor": {
          "ref": "2b52dedc-24a2-45f1-859c-f6837d4b3b73",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f74bc62d-4df0-4365-83d3-ecf740a2695a"
        },
        "item": {
          "id": "75250217-1eda-47e2-830a-5855ebe675c9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e185e9c1-68f8-4909-b624-dbf7c3000da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1802a04-2567-4b6c-aa07-e9f2d68e1c7d",
        "cursor": {
          "ref": "70e92650-84ef-4094-b7e3-e04ebd979997",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "90bcaa2b-82ff-45bb-a08f-3138f9ec014e"
        },
        "item": {
          "id": "f1802a04-2567-4b6c-aa07-e9f2d68e1c7d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "de1b0612-3ace-461a-aeaa-c394c95b5490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c019a9-12c4-40e4-acd0-3e328067b45c",
        "cursor": {
          "ref": "7ef0cfaf-7570-4edb-8673-33fde9076475",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d678a830-89ee-4f24-9ce4-e1ae3689543b"
        },
        "item": {
          "id": "e2c019a9-12c4-40e4-acd0-3e328067b45c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9f761b76-27ae-4821-9107-53885225ae92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370aacce-ba0d-4bde-8d55-b2f77c7168e0",
        "cursor": {
          "ref": "8477696a-206d-4539-a173-642b8efdc4de",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4b0e1eb6-a08f-47f8-9da5-4dc726a91fe4"
        },
        "item": {
          "id": "370aacce-ba0d-4bde-8d55-b2f77c7168e0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "91efb134-0c8d-44fd-92ed-79cb95196f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea49d57-70dc-46ef-839d-78384b277039",
        "cursor": {
          "ref": "bc120a16-e9d6-4621-a6c3-8979b2611f64",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3fa59432-e92e-47b1-a849-b8a11d7abce1"
        },
        "item": {
          "id": "9ea49d57-70dc-46ef-839d-78384b277039",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6f156fa8-f258-411c-b7bd-52585f7d7dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa4e750-2832-4abc-bd8c-8c30fe91c4cf",
        "cursor": {
          "ref": "8447ab52-7722-4b51-9ec8-0bdf84e7cde3",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "696e1919-d429-4ef3-8b78-f369c9328e46"
        },
        "item": {
          "id": "bfa4e750-2832-4abc-bd8c-8c30fe91c4cf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "27c71bb0-b40b-4dbe-9361-cba80412d2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d9649e-1f53-4574-8e55-5e4aeb796263",
        "cursor": {
          "ref": "e00204a7-bff7-413b-a265-0c0235ef6be7",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "be581e8b-4ca0-4d0d-87d9-b637941f85b3"
        },
        "item": {
          "id": "03d9649e-1f53-4574-8e55-5e4aeb796263",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f50b1b97-88ca-4cc9-ba51-886b85a21eae",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "6e35d0cb-1d14-4f1c-9a34-339e1b06c0d2",
        "cursor": {
          "ref": "0a28c986-f5e9-438b-8526-3edc1f8f4327",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a4b951f3-1d51-4930-9ee8-526304885a15"
        },
        "item": {
          "id": "6e35d0cb-1d14-4f1c-9a34-339e1b06c0d2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5e73ae13-d018-47e7-a3cb-7c49491923b7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "f20c097c-8ce2-47c4-8d63-4bff142c606a",
        "cursor": {
          "ref": "dc11b509-9cd0-4d2e-8c95-21faa51f16ea",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "df735244-43e2-4bb5-893b-a69f47e4c8c1"
        },
        "item": {
          "id": "f20c097c-8ce2-47c4-8d63-4bff142c606a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2f69fea2-dd0f-46fa-9ef2-fca3c6cd0db1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "69350b1c-290f-4f74-b714-d048055b0804",
        "cursor": {
          "ref": "ceeb790c-65e7-42ab-871c-b1d80ed87257",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f9ccb90e-b70c-4584-9071-ec4169cbc729"
        },
        "item": {
          "id": "69350b1c-290f-4f74-b714-d048055b0804",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b5a6f0da-02bb-4066-9936-ce9a0b6b4a84",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "95ef3cde-7488-4e67-a3b1-077e9d608140",
        "cursor": {
          "ref": "582bb0bf-c3e4-4f1a-bfdf-ad228128f76f",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "86120bf4-4aed-4b2d-b1cf-7b4090ba4050"
        },
        "item": {
          "id": "95ef3cde-7488-4e67-a3b1-077e9d608140",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0f376ed6-af13-43ae-93a7-252a4ca0fd49",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "e35b0a7c-1114-45aa-a6fa-88f9094d149d",
        "cursor": {
          "ref": "e5143898-7f11-46b1-a91c-480f60bb3a5e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "738b9d19-9c98-43fa-8b98-1adee6d4a0b3"
        },
        "item": {
          "id": "e35b0a7c-1114-45aa-a6fa-88f9094d149d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a1e43a74-86fb-41d3-a67f-24edee4ec93f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "9dfc9cba-1484-411a-9f55-d47126df725a",
        "cursor": {
          "ref": "b3cad5a4-efd6-4853-858d-128758efdee5",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b8b0fd9d-1667-4bd0-87b5-8b1f6869c890"
        },
        "item": {
          "id": "9dfc9cba-1484-411a-9f55-d47126df725a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6c71a103-723c-4087-af73-65459e4887bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fd563c-6153-44b6-aa4d-7fef692140a3",
        "cursor": {
          "ref": "a5d35f55-f674-4df5-bfdf-b6d508068e06",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "66991bcc-3861-412f-95ce-f3fed00c8638"
        },
        "item": {
          "id": "13fd563c-6153-44b6-aa4d-7fef692140a3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "571fbc88-2cb7-482d-92ef-b5a65c2228e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879539c2-eeee-482f-a395-d0f8330219f2",
        "cursor": {
          "ref": "12ba9f2b-2d9b-4c93-8a1c-55e9a099e99a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d76f33f9-9ef1-4b34-b4b1-eb201884270d"
        },
        "item": {
          "id": "879539c2-eeee-482f-a395-d0f8330219f2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7c4e71cb-fb1f-4d32-8705-bb7779f80bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa4392b-5310-4628-9ef5-af9386ad176f",
        "cursor": {
          "ref": "51b5e4c5-4963-4c99-87af-65b21c5cfe86",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a80de791-7c1e-4571-94c4-f28c78a974b7"
        },
        "item": {
          "id": "5aa4392b-5310-4628-9ef5-af9386ad176f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "80e29f57-1cd0-4e82-b6e6-fa3e7cba3b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af466421-ecbd-46a9-9922-cb1e7293919d",
        "cursor": {
          "ref": "040537a5-5502-4e5d-8c8f-a31f20df20a6",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a8f988a6-2aa0-43a4-b61e-6ce7e648f800"
        },
        "item": {
          "id": "af466421-ecbd-46a9-9922-cb1e7293919d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bca62838-5bb3-47d7-8f7c-f93d293ae161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c650a3d-8e9e-41d9-9793-51da4ce34d8a",
        "cursor": {
          "ref": "92a30165-0323-4288-9b20-e42578ffe061",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c02b14c7-3451-4530-bda8-0f486e52cbfc"
        },
        "item": {
          "id": "6c650a3d-8e9e-41d9-9793-51da4ce34d8a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d391b248-f441-4d65-bf3d-9e212d8c6fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea46a1b-69cb-470e-8b1d-1a626ced9d71",
        "cursor": {
          "ref": "dffd331e-f81a-41b5-a9aa-b303d0590b6a",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ba4267a1-40c5-4931-9dce-5f143f56c2b3"
        },
        "item": {
          "id": "fea46a1b-69cb-470e-8b1d-1a626ced9d71",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "744ab9da-b7c2-4567-9ba8-95b00c833b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d52fa8e-ed3f-40c3-a571-abae66e687e5",
        "cursor": {
          "ref": "a8d7d5ad-ecd7-43cd-9d3e-ba2ed68391aa",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "68fe1c2e-036b-49cb-86cc-2fec360533f3"
        },
        "item": {
          "id": "8d52fa8e-ed3f-40c3-a571-abae66e687e5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a4473e15-ea2b-4d73-bb8c-c993cde09cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e65a46-071b-4413-9185-2119176a7a9c",
        "cursor": {
          "ref": "49c22ab5-0740-49ac-a13a-e13fedc46731",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "12786b2d-5a4b-4ea9-96cb-0b1e23c2f541"
        },
        "item": {
          "id": "76e65a46-071b-4413-9185-2119176a7a9c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "826da237-e8f9-41ed-ad05-262593cb1a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbf799c-b32f-4447-80c5-131b01e99117",
        "cursor": {
          "ref": "54f7f59d-9ae7-4a46-b21c-54ecb25f9790",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5412f053-f5d5-47ab-9993-c04c0793e763"
        },
        "item": {
          "id": "dfbf799c-b32f-4447-80c5-131b01e99117",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4fcf71dd-32d8-481b-89b3-04d139a9ed5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cec4d44-00ba-4a59-a204-1e62810a2f91",
        "cursor": {
          "ref": "08a1f19a-7d57-48ae-8eac-c9311b3bf115",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "eb541af0-c656-458c-9dbd-11995b0f28ca"
        },
        "item": {
          "id": "9cec4d44-00ba-4a59-a204-1e62810a2f91",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fcc0b40b-5b22-44c0-bb3d-35e7ed0184ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641a7870-2044-4b88-8855-95757973cb78",
        "cursor": {
          "ref": "4dc9ea02-239d-454c-8ab0-d242864dea8d",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5a845aee-4e91-48ff-b280-24999bb84d4d"
        },
        "item": {
          "id": "641a7870-2044-4b88-8855-95757973cb78",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b6d8cadf-1088-4dac-a4c1-3fb3525849d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a820f8e-a5e5-4202-bd44-7687111627bd",
        "cursor": {
          "ref": "f9e4a4b4-d31e-4097-a6f6-354ef97f3745",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c0bc5d74-f446-4750-a36d-142b6cf62e16"
        },
        "item": {
          "id": "2a820f8e-a5e5-4202-bd44-7687111627bd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9f82ba80-1455-4be1-92e9-16c742f6e6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e16a38-3b2f-4983-b7cd-7d5a440916c2",
        "cursor": {
          "ref": "6cad4875-385d-45d0-a34b-003c8733b1bc",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "801943c7-468a-46d3-be74-882a730c4875"
        },
        "item": {
          "id": "f1e16a38-3b2f-4983-b7cd-7d5a440916c2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "90a5a0e4-dd67-43e6-87be-35c4a0cbafd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907971ab-4521-4ca5-bcc0-8ed27a55820d",
        "cursor": {
          "ref": "68a8cadd-439a-4a08-bc88-c6c566672e18",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ffa7055d-512d-40f5-b4e5-cabcd5464a64"
        },
        "item": {
          "id": "907971ab-4521-4ca5-bcc0-8ed27a55820d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2227c6c0-8e9f-402a-826b-1240e90caa50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cc0541-4454-48bd-8418-41ab04c36822",
        "cursor": {
          "ref": "8d6798df-c4b8-47eb-aa16-0949cc3f39b4",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "44e0fa82-2332-4735-96fd-4588b959102c"
        },
        "item": {
          "id": "86cc0541-4454-48bd-8418-41ab04c36822",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "50204d43-54af-43aa-9778-47390f75c541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dff25e1-446a-46a6-bbe8-02e6ca49b1a2",
        "cursor": {
          "ref": "e8d81cd4-dfe5-4377-ba00-87fd69c2c941",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3b9228c2-b531-48d4-9be3-c4ec6ff0dda7"
        },
        "item": {
          "id": "3dff25e1-446a-46a6-bbe8-02e6ca49b1a2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f28ea69d-fcda-495e-ba0a-8f8402d7f6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b43d7e1-d3fa-4a73-bc5d-0ef4337269f2",
        "cursor": {
          "ref": "e7f5a1bc-7609-48e6-9389-83b339f03179",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d9f0565e-c122-4e99-aa47-7012fd8b3249"
        },
        "item": {
          "id": "1b43d7e1-d3fa-4a73-bc5d-0ef4337269f2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5a4a6c63-d869-4367-ade0-e5af54f7dccc",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "abf32ba6-50a5-4709-bdf2-abff6414bd6c",
        "cursor": {
          "ref": "75072f45-ee30-46ad-9939-71f0db2dae12",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c444be10-3b64-4b44-bb5e-ed527734d122"
        },
        "item": {
          "id": "abf32ba6-50a5-4709-bdf2-abff6414bd6c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f0eef8a6-0d9e-45a6-9ddb-c8b5d10eede9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570b002b-425b-402a-a92e-da864f337f39",
        "cursor": {
          "ref": "0ccdd1df-0ae5-442a-8032-e6ed2607cc21",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a94d152f-742c-4d12-9273-20c9b7650045"
        },
        "item": {
          "id": "570b002b-425b-402a-a92e-da864f337f39",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8836d6d6-39d9-4cde-ae37-4da1f93b9b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe546e77-fdfb-47d1-9949-ea1753a8ed22",
        "cursor": {
          "ref": "2a06fc5d-67e3-473a-83e0-86f3d7539d42",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ce61b118-cad7-4c05-8399-429f0b45f8ef"
        },
        "item": {
          "id": "fe546e77-fdfb-47d1-9949-ea1753a8ed22",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fb36d775-2fa2-4f75-a016-ec3ba983223c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62743094-9174-4474-baea-e37687dac800",
        "cursor": {
          "ref": "31432acb-db9f-4530-87a8-782d205cf73d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fc2a6a19-0d20-4e7b-aeee-92b523fdc17e"
        },
        "item": {
          "id": "62743094-9174-4474-baea-e37687dac800",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "31135039-ce25-4490-9146-a25df6f835da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d680f874-12a9-454c-accf-9fd6a12b3faa",
        "cursor": {
          "ref": "782cac71-9f7e-4eb9-a9a3-6c6eeb502669",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "49893142-97bc-433f-88e8-5b6370e6d6a6"
        },
        "item": {
          "id": "d680f874-12a9-454c-accf-9fd6a12b3faa",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9beefc0a-6577-45cc-9c27-38d66542cbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cab1c7-7904-4fc6-8188-a3d15ff18ade",
        "cursor": {
          "ref": "4b1d21bd-25dd-49da-9b19-65087cdbffe4",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f6c49bbb-ad92-4872-b29c-fa6e38f0888b"
        },
        "item": {
          "id": "d9cab1c7-7904-4fc6-8188-a3d15ff18ade",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d7f7785a-7ec7-4f62-97de-e95c44293d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69804f46-7a4f-4967-bbd5-4505d23453c5",
        "cursor": {
          "ref": "f98b2486-aeb7-4afc-ad80-81b664b18e10",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "335b06f6-c8bd-40a5-811d-9b73c1f7a732"
        },
        "item": {
          "id": "69804f46-7a4f-4967-bbd5-4505d23453c5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8d7d5570-0cac-4599-96e4-77bebaf71a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86dc4a4-e817-45c4-be63-8a4fda0309ee",
        "cursor": {
          "ref": "705c4023-3867-4bb4-9a36-c004888bbd43",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ea0322c8-cb13-46ba-b489-1cf5bb52b6ff"
        },
        "item": {
          "id": "e86dc4a4-e817-45c4-be63-8a4fda0309ee",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c0b7fc5f-66e4-4c08-a63a-c59272fccbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b954dc1-fd0b-4c33-a8a9-c13b9b8ba73a",
        "cursor": {
          "ref": "51ec01c8-bb9e-4922-b517-57054bf50f51",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "60773c70-f63d-4b14-88bf-7a4e36c6d113"
        },
        "item": {
          "id": "2b954dc1-fd0b-4c33-a8a9-c13b9b8ba73a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "64e10286-286d-4a3a-bf44-dfcdde09ea4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6ad38f-d4b8-48d2-b37d-e1674ab89347",
        "cursor": {
          "ref": "c77b90ce-cc06-4889-9e4d-7a949609379d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5289463f-b99a-4e91-94c1-48e2ae02b01a"
        },
        "item": {
          "id": "0b6ad38f-d4b8-48d2-b37d-e1674ab89347",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "39cd0acd-b776-425e-b34b-9825c18dfe47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4471a7-512b-43f2-be9c-51173ff3426e",
        "cursor": {
          "ref": "b9f2425a-948f-4ac4-aa5c-ea098e4715d7",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b77c7b0c-c171-4e71-ba0b-d365768850c6"
        },
        "item": {
          "id": "cd4471a7-512b-43f2-be9c-51173ff3426e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "27a37745-334e-41da-88ef-1b9c884770d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fe6fd0-e2cd-4740-9547-cf215b9acbed",
        "cursor": {
          "ref": "ae0e8507-16ea-4354-b2c0-27a4f92b6ee3",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7c3b62e5-88fc-4386-8487-ee7df70ad58f"
        },
        "item": {
          "id": "53fe6fd0-e2cd-4740-9547-cf215b9acbed",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "21292cb5-be2c-4564-a79a-643920386279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582a7274-02bd-4cbd-864f-52a1aa761de3",
        "cursor": {
          "ref": "48bc4a94-f15a-4dc1-a1ef-e046fc0b6bcd",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e6b6ffa7-be3e-4436-a320-267628d13fbf"
        },
        "item": {
          "id": "582a7274-02bd-4cbd-864f-52a1aa761de3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "880ce34b-65e9-4983-876e-e01b9da63a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fc3295-7a43-47e7-b56d-40a0ad105a14",
        "cursor": {
          "ref": "a4de7354-0714-4664-b0af-596f059dc7c6",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "603c0a11-d964-4170-8d32-b269d18a6374"
        },
        "item": {
          "id": "17fc3295-7a43-47e7-b56d-40a0ad105a14",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "99db9b83-e06b-42ec-8378-4ce6e082fc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c6ca84-9966-4d36-8740-80f75696c48f",
        "cursor": {
          "ref": "094f7647-eb8a-4b97-a42a-54edacad2f8d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c0bf0a8d-a281-48e7-b44f-40ab6ce8d36d"
        },
        "item": {
          "id": "76c6ca84-9966-4d36-8740-80f75696c48f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a96678a6-be6a-47de-9086-47c265f547eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d81a9a0-4afc-4149-b2a7-fbb29ab33848",
        "cursor": {
          "ref": "17e3eca5-05ec-4dce-8846-7a80deec212b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "643c44e0-b584-4102-b786-6575f40c8cd8"
        },
        "item": {
          "id": "7d81a9a0-4afc-4149-b2a7-fbb29ab33848",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d72a12e8-a61d-43dd-bde3-d265610d5b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c84799-99c0-4f18-a46e-fb24658590d9",
        "cursor": {
          "ref": "3ec11aef-42f1-4e92-8871-54efbcbe3f5a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1501b3f0-51be-4f6c-894b-2c542f48dd16"
        },
        "item": {
          "id": "a8c84799-99c0-4f18-a46e-fb24658590d9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ea015a68-28ef-419c-ac50-92821338df41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cf21f5-de42-4457-86ca-be8e138aa428",
        "cursor": {
          "ref": "f52eedd3-f891-40c1-bf77-d999a9d17696",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d4a9dee7-85dc-4596-a4b6-11e368d7c2bf"
        },
        "item": {
          "id": "b2cf21f5-de42-4457-86ca-be8e138aa428",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bc641538-33c2-4ce3-b5a0-9949c06ae45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c114ce55-b3b7-4752-800c-f5ba1be3aa12",
        "cursor": {
          "ref": "088d88a7-06d3-4d49-8cfc-f0950345d94d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8e1bcaf2-73e8-41f9-9d4a-832b397dc483"
        },
        "item": {
          "id": "c114ce55-b3b7-4752-800c-f5ba1be3aa12",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b9aba4ec-7132-4fe6-9a4f-b74c425bb679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f797a0-cd39-4807-9d61-77719468e87b",
        "cursor": {
          "ref": "f61685f7-f6b5-45a4-bcac-d92fd691b6be",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ba252221-69ae-45e8-aef8-895cd3a4ec81"
        },
        "item": {
          "id": "10f797a0-cd39-4807-9d61-77719468e87b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "77539cac-c82c-4d6b-9e56-3cb34e5a0d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0f0a1c-184e-48ec-b24d-0022c90b7002",
        "cursor": {
          "ref": "6e0c7352-53db-4313-8c1d-e30baa09dc60",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "467de709-fa3e-4f9c-aa20-6945b16f8a00"
        },
        "item": {
          "id": "ee0f0a1c-184e-48ec-b24d-0022c90b7002",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "42a71b47-3a52-4502-9092-f8f5052f51e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c8bfc8-d090-4e69-adf9-2d920e4a7161",
        "cursor": {
          "ref": "9d7583b5-26f3-40d0-b899-b514f6ff9871",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "655b69d3-c7fb-4bf2-8012-25da259b018c"
        },
        "item": {
          "id": "46c8bfc8-d090-4e69-adf9-2d920e4a7161",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "675825f1-5f6e-4d93-9921-12438406e4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1ecfa2-90b7-401c-95de-eb2de1ee4acc",
        "cursor": {
          "ref": "49073cc9-8139-4c3a-8c97-82dbc931041d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0336b90b-a455-4564-b5ef-e143ccf1fd85"
        },
        "item": {
          "id": "ea1ecfa2-90b7-401c-95de-eb2de1ee4acc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5a41ab5e-9508-41ef-ac7d-dedb17f7cd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257858fe-38e0-4444-9040-d2cf5a756315",
        "cursor": {
          "ref": "e29815fe-d331-423a-9932-3a7f408ba3cd",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "186caa67-00ef-40e2-a462-a140bea1611a"
        },
        "item": {
          "id": "257858fe-38e0-4444-9040-d2cf5a756315",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5a9ed9c0-6b8f-4b85-9347-c4fcafab735b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4314342-9a21-47de-8268-7881a39f9738",
        "cursor": {
          "ref": "02dae7cf-2e1b-440a-95f5-3c41beb2814a",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4a9222b9-958a-40e5-8504-957d3cf175c5"
        },
        "item": {
          "id": "d4314342-9a21-47de-8268-7881a39f9738",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b86283ce-ce80-4230-b21e-96b36cbcb5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dda8a23-f3ab-4bc1-8269-a477378c4088",
        "cursor": {
          "ref": "ce579fcc-c9ff-492e-96c4-8d0c665471d6",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8c3af4da-fa61-4452-96e9-0b72301ac41f"
        },
        "item": {
          "id": "2dda8a23-f3ab-4bc1-8269-a477378c4088",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "832c5887-ed5f-4efd-8066-55d4e0ed4578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3951c0-c534-49d8-bbb1-90d1138f0073",
        "cursor": {
          "ref": "845b7518-5c23-4ed9-b9d6-e7458dc51c4b",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "43d75a71-cc14-4fbb-a4a6-1fa47e4834af"
        },
        "item": {
          "id": "cc3951c0-c534-49d8-bbb1-90d1138f0073",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b76b0081-c5cf-4231-bba4-ca4edc8d1492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5b91e1-0f54-4ac5-899c-055f224d56ae",
        "cursor": {
          "ref": "e463094f-84f2-4d92-8acb-35ef2ee744f3",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ed9e1cf3-f2dd-4bfc-91e8-907083805d90"
        },
        "item": {
          "id": "ad5b91e1-0f54-4ac5-899c-055f224d56ae",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "05d5a92c-8068-4769-b833-c49d93724af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdf2b05-71b3-4c00-9ad4-64c2523332d0",
        "cursor": {
          "ref": "379a3ef6-8f23-46ff-877e-d875be67ba73",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e7c26897-09d2-4d12-971c-34daeb5c368c"
        },
        "item": {
          "id": "0fdf2b05-71b3-4c00-9ad4-64c2523332d0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0af4feba-4e3a-4799-92ab-703f3005c0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7987a68-b525-4619-9254-649f083cd2b9",
        "cursor": {
          "ref": "e3205590-8948-4d51-9f4e-ab2fded51b70",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6c6fe492-ecd1-4c86-ac12-9527f0b33167"
        },
        "item": {
          "id": "a7987a68-b525-4619-9254-649f083cd2b9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5311a643-52c0-40a5-bae8-e10c33985492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2fb30f-f205-4dff-b4cb-239bb14442b6",
        "cursor": {
          "ref": "f988605b-f35b-41b8-8e42-fe8c6e6402b7",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a89be2d5-1edd-4da8-a230-6aeca8e47951"
        },
        "item": {
          "id": "fe2fb30f-f205-4dff-b4cb-239bb14442b6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0e7ca57f-c3b8-4472-94bb-27c14c614e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc939ce9-dc9e-4b57-8508-97e883c52f02",
        "cursor": {
          "ref": "d6ad183d-03f8-41ed-81fb-b46f9548eb8a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d2cfc8b6-688b-4cd6-a122-a745e805f2c5"
        },
        "item": {
          "id": "fc939ce9-dc9e-4b57-8508-97e883c52f02",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c21dad75-530b-4f42-8b3d-2b464c489734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d09d5c-7262-4537-83db-f59f6ec267dd",
        "cursor": {
          "ref": "06e8af27-a77f-443b-8768-33e83d2cf08d",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "451094be-832e-4160-a37a-49cb8d8e3ebe"
        },
        "item": {
          "id": "01d09d5c-7262-4537-83db-f59f6ec267dd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8cce7329-8bde-454c-b9fe-7fd695a194fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b177c53-0c8b-48ac-855e-f698b5092308",
        "cursor": {
          "ref": "03ef4f85-b507-4079-901f-e3ef1b119a50",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6dc2a985-6524-42df-9225-b2d8988452af"
        },
        "item": {
          "id": "1b177c53-0c8b-48ac-855e-f698b5092308",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "94075ea4-0a02-4ac8-b23b-c6f7aaf68218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7caeef7-8176-4ad4-87ea-6342590ccf9d",
        "cursor": {
          "ref": "2d4bc222-853e-4f63-afcc-d99bb0c10b98",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e8d53b61-0ee7-4d1c-9f8c-6d670212191b"
        },
        "item": {
          "id": "c7caeef7-8176-4ad4-87ea-6342590ccf9d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6f06bd46-8f35-4339-9b72-0862bf35afbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fab216-2e90-4492-95c9-c4cf522ef336",
        "cursor": {
          "ref": "d3bc4eef-e2d9-4377-9e1e-8d137f090272",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1719d42d-97b5-44fe-aaa4-172f4357abc2"
        },
        "item": {
          "id": "b9fab216-2e90-4492-95c9-c4cf522ef336",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6729e64b-dc62-45a3-a551-54b6459b6104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63817ae7-1035-4e67-86fc-0fd74116e403",
        "cursor": {
          "ref": "f07f9819-eef6-4021-9f67-85e0ee3e9dff",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e41626cf-5fe3-4436-99c3-d975d94e3cd8"
        },
        "item": {
          "id": "63817ae7-1035-4e67-86fc-0fd74116e403",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "65fab19d-5c87-4724-bdd1-6dd0178ba474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a21ab83-a743-4ea3-821f-21deeb605213",
        "cursor": {
          "ref": "bfd48c18-0234-4791-9074-a5095d0c4ab9",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8b1f00bb-11d6-443b-be48-5374235d761f"
        },
        "item": {
          "id": "6a21ab83-a743-4ea3-821f-21deeb605213",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cbc144f4-4467-460b-ae5e-708114c08cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3eb2bc-b4d4-4985-a825-3b220cb0e177",
        "cursor": {
          "ref": "88e586b8-cb24-4705-aef6-96577e10866d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "14d1d92e-b4d7-4c0d-bdd8-bdd711bcc665"
        },
        "item": {
          "id": "4d3eb2bc-b4d4-4985-a825-3b220cb0e177",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0d7c0869-3bf3-4a7a-a825-ea0856de23c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f89946-8c4a-4899-bf13-d39b8facacf9",
        "cursor": {
          "ref": "c5c318a3-68f9-4598-91df-43c616af2825",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "29024dca-feef-48d1-8ed6-328c4ec7ba52"
        },
        "item": {
          "id": "59f89946-8c4a-4899-bf13-d39b8facacf9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "297f10a2-ec98-4d65-8389-42a692340ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5d86bb-f851-4258-8c48-a69550997138",
        "cursor": {
          "ref": "25e3005c-af23-4fc5-959e-a020607f7f2b",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e3186364-7906-4d78-b729-979df44b8b50"
        },
        "item": {
          "id": "ca5d86bb-f851-4258-8c48-a69550997138",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "92042adb-4076-4906-9ecb-b09f5cd37cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b68b719-db94-40b2-9f41-508e9e152eaa",
        "cursor": {
          "ref": "3fb7d101-cd1e-4b7a-a860-24cc087d7065",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7ffe7351-e1c2-474a-907b-ac02fe83bfd9"
        },
        "item": {
          "id": "0b68b719-db94-40b2-9f41-508e9e152eaa",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "cb596d7d-6060-4bb5-8b87-e0726ff4367c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba943922-12d8-465d-a331-8388682925d0",
        "cursor": {
          "ref": "0f84fcc7-c336-410e-867b-bdfd83a891cd",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6b4340a1-46d4-47ab-b693-cd28d2a8cdcb"
        },
        "item": {
          "id": "ba943922-12d8-465d-a331-8388682925d0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "afe2a994-f25c-4a52-82b9-f1154aad3e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5756a88-7757-4c86-af5e-af3fd705fb31",
        "cursor": {
          "ref": "60014fc6-e22c-4752-8c94-b457003fc79e",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "802e9418-8b75-449b-b2a5-1a9a439f0334"
        },
        "item": {
          "id": "e5756a88-7757-4c86-af5e-af3fd705fb31",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e1c34716-2317-491c-996e-103a651b1d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4a584c-507f-4398-ac0e-38a1545761a5",
        "cursor": {
          "ref": "67fa5cab-b0de-4de8-9201-198962fafeab",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "68cc3c45-fbcf-421e-a123-5e6ec37e505b"
        },
        "item": {
          "id": "8e4a584c-507f-4398-ac0e-38a1545761a5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7145d4b0-e413-41cf-9fd7-e6eb715b0e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7a5fbf-babd-45cf-aa07-f20e6ee637ab",
        "cursor": {
          "ref": "3e3cce6e-3267-4ff7-ad25-7b168f46d497",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5a135fa4-fbea-4e1d-8340-547e74c5c76f"
        },
        "item": {
          "id": "af7a5fbf-babd-45cf-aa07-f20e6ee637ab",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9d5179bf-f4de-4dd9-9608-99a18857f8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46122db-7a9b-4d1d-b47a-1c27705d5880",
        "cursor": {
          "ref": "2878644d-3f69-4c2b-a454-7be51d8bfacf",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7aa37f2e-4853-4db1-80bd-d7bffafb142d"
        },
        "item": {
          "id": "b46122db-7a9b-4d1d-b47a-1c27705d5880",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0d79d3a7-5e62-424d-a000-4d9e0446fc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bec7d7-c1ac-4e29-a143-c2668a70827d",
        "cursor": {
          "ref": "a9953248-be8c-4e50-ade7-b50c7bb49efc",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "62d253c4-d7e4-4c95-9693-6ad1bcf47dcb"
        },
        "item": {
          "id": "98bec7d7-c1ac-4e29-a143-c2668a70827d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f637e1e5-b4c3-4f64-89ea-b1bb32a6f7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cc621d-f628-4889-8068-382e1e097a66",
        "cursor": {
          "ref": "3ac139be-b3ef-44eb-a49d-87aeb8a38510",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6ee4add5-5d8a-4ac7-b9d5-21a60596cd62"
        },
        "item": {
          "id": "73cc621d-f628-4889-8068-382e1e097a66",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e84579c9-a61d-43d0-a5d5-ba61b6aab411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66aa585e-3b38-4215-a6c8-9e6aba889c88",
        "cursor": {
          "ref": "d9f1c03e-5bba-4dd6-829a-4ef41fd6230b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "04b0bd79-c91f-4b0b-bb07-275a0f29de72"
        },
        "item": {
          "id": "66aa585e-3b38-4215-a6c8-9e6aba889c88",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ee83a952-6494-4a1b-8894-2906014f061a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f3e4e3-8d43-4b10-ae23-a42e75c1bc9b",
        "cursor": {
          "ref": "fcfa380b-02df-443d-97b1-5ac5106ea902",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5ebb7af5-9965-4f9c-a49b-69d28886f838"
        },
        "item": {
          "id": "81f3e4e3-8d43-4b10-ae23-a42e75c1bc9b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "05c497cc-0e3c-46df-bcfb-a155c40e25f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a32d7e8-a7ca-472a-903e-1bbe4eaaf794",
        "cursor": {
          "ref": "7eb58477-b7f9-48db-868c-8b3a9dac562e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "edb7c1e2-4150-4cd3-961e-ae6f575c2036"
        },
        "item": {
          "id": "6a32d7e8-a7ca-472a-903e-1bbe4eaaf794",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "923622e9-be4d-4613-8fcc-577e31f11f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5b598b-fb5c-4c10-afee-6a3d1604af81",
        "cursor": {
          "ref": "21291a20-ce90-4425-8d8b-4f4a07ade38a",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "75f983b8-b02f-4bcd-85c9-27c727b1999c"
        },
        "item": {
          "id": "ed5b598b-fb5c-4c10-afee-6a3d1604af81",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "67ca0784-a119-4d4f-ba37-950bfacecb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff8b366-bbb6-479f-bfcb-fa59de618f23",
        "cursor": {
          "ref": "59de733d-6af3-40b1-b02c-679e89c4dbed",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "79a239f1-6ab2-4350-adca-8cb4d9fbafa2"
        },
        "item": {
          "id": "4ff8b366-bbb6-479f-bfcb-fa59de618f23",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bdb62887-432d-43b3-b080-2b71ee297c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcc8aeb-ec82-465c-89fd-e2dc18b5e531",
        "cursor": {
          "ref": "865fd87e-650e-40e8-ba54-0a79beccf9d6",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "13887c34-e60d-4f75-b816-a2d1aa395fe5"
        },
        "item": {
          "id": "ebcc8aeb-ec82-465c-89fd-e2dc18b5e531",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "01f21280-1395-46ce-9de5-a45c0db47613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c741eb87-bd5a-4058-8e8b-21e4978415f0",
        "cursor": {
          "ref": "d6c2e1bb-1a59-4120-b900-39ea768fcbe1",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5f1e46bc-b2d0-41e7-9934-3627902e2acb"
        },
        "item": {
          "id": "c741eb87-bd5a-4058-8e8b-21e4978415f0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d9a55a49-56f9-416c-978e-7c50ca87b593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e7f955-7775-486b-ae71-e71c8706cf47",
        "cursor": {
          "ref": "fd91511a-b693-44ce-9875-a5df33eca89d",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0bd0cb71-dbe3-460a-8f0b-dff462b51c8c"
        },
        "item": {
          "id": "53e7f955-7775-486b-ae71-e71c8706cf47",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f51fd620-7e9c-4e84-90b0-4a50e0c0c149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c846f0e6-6c67-4a1f-9378-413dd46427b4",
        "cursor": {
          "ref": "e3e2115b-239d-47cf-a6e5-8840345bb119",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4bdb9f09-9844-48ea-ade2-0c10ac081e41"
        },
        "item": {
          "id": "c846f0e6-6c67-4a1f-9378-413dd46427b4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5b92909a-3942-45d3-a8f1-8278b2665adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afabfdd4-f52f-424d-9afd-58f303b35f13",
        "cursor": {
          "ref": "f41237ca-92e5-429a-ba56-3575a7b2919a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9738aee9-6b0d-43d6-a27c-62e11c0774a8"
        },
        "item": {
          "id": "afabfdd4-f52f-424d-9afd-58f303b35f13",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e20b5e90-8faf-4241-8cf1-8ed8b3668833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f522f8-fbc8-42ab-98c6-af50d9d25891",
        "cursor": {
          "ref": "e2ace66c-0c92-4d7e-8618-fff19628920d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7f88c0d9-f78c-4869-bc5b-9b30532e30d3"
        },
        "item": {
          "id": "d9f522f8-fbc8-42ab-98c6-af50d9d25891",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4d7096cb-ef77-47f6-8e24-13ae6f16a531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1468f9de-4aa5-445e-8c29-d2aece267a08",
        "cursor": {
          "ref": "fe83cf64-3bb8-486d-ba2c-8af1cad690ce",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e909c04e-885d-4164-9b55-cb5e015cef6e"
        },
        "item": {
          "id": "1468f9de-4aa5-445e-8c29-d2aece267a08",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "65966b79-e0bf-4855-85c0-3a2767d25293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923d5d66-8413-43d1-8dc5-a0d84102db09",
        "cursor": {
          "ref": "dd062e1b-b502-4447-acdd-756cb6371bc0",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "52faba7a-75e1-4d4e-9bc2-00da2b734c6f"
        },
        "item": {
          "id": "923d5d66-8413-43d1-8dc5-a0d84102db09",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "51d68fc6-e149-447b-bbdd-bd41666fcd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b25e3a-810f-41d8-abd0-de555b580df7",
        "cursor": {
          "ref": "86b9d93c-4c21-415b-a074-d06085800c27",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dd170063-2ba3-41e6-a61d-2bf8e5d19932"
        },
        "item": {
          "id": "a4b25e3a-810f-41d8-abd0-de555b580df7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9fa4fe70-e1b5-44dd-be3b-41e5c8e5030a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cef1780-1e91-4274-94a8-71b6b4e6a849",
        "cursor": {
          "ref": "418f8d4d-efdb-4017-896b-6eb82b1fbe17",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "19e1b532-522e-46da-8b04-837642cf5dce"
        },
        "item": {
          "id": "6cef1780-1e91-4274-94a8-71b6b4e6a849",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b2eb05bc-5bd9-46ab-bca9-d2018f4f414c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf0c021-40ed-4598-b202-299bb7611bcb",
        "cursor": {
          "ref": "6df3f4cf-5336-468f-b5b3-f47d8e15c9f7",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "424401a4-ed59-42fe-b0d8-70f5b62ddd90"
        },
        "item": {
          "id": "0bf0c021-40ed-4598-b202-299bb7611bcb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "83d5485f-6090-4ccc-9579-769409d5f974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162b9dd5-d8c3-4582-8788-fcd5d8e7c41d",
        "cursor": {
          "ref": "febb931e-cf99-4264-a1ea-1b00716c64a3",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9cd054e5-74c3-4ac9-8468-3148fe4484d0"
        },
        "item": {
          "id": "162b9dd5-d8c3-4582-8788-fcd5d8e7c41d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e71f1218-d54a-4620-933a-2b7b65571456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f043f319-0d68-47b6-b1aa-26a24e8687e0",
        "cursor": {
          "ref": "96e1474d-04e8-4e28-aec8-b0a285f28e85",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1948011a-5c59-4621-a85d-5d7132b4cb1a"
        },
        "item": {
          "id": "f043f319-0d68-47b6-b1aa-26a24e8687e0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "72a9acc0-f7da-45b7-b6a3-659ddef0f2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7985c780-1f87-4408-b15f-6e24e352be2b",
        "cursor": {
          "ref": "25f61f81-bc90-436c-9382-cdf70a2d3dcc",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1ef95c31-cf53-442b-aa49-755ea1f86abe"
        },
        "item": {
          "id": "7985c780-1f87-4408-b15f-6e24e352be2b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a982f4b5-3fe3-489e-9ed8-b9760ed133ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9699ce10-15a2-4210-a07f-de12214c5633",
        "cursor": {
          "ref": "a7d40013-c581-4eca-92ed-72bb82bd4a98",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d6c2de2c-8aaa-419b-8a7f-c9c5c1ea0cfe"
        },
        "item": {
          "id": "9699ce10-15a2-4210-a07f-de12214c5633",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9bec8843-e2b0-464b-9a1a-e395c747473a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb27c8f-4cac-446a-a3cd-a40921ca41a6",
        "cursor": {
          "ref": "4fc6e0c7-aa63-4100-a586-6618141f8665",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f62d147c-5628-40c8-91d0-0d32e65205d6"
        },
        "item": {
          "id": "1cb27c8f-4cac-446a-a3cd-a40921ca41a6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e832ce37-65ea-42e5-90ef-60406c952466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ee79dc-a3f8-423b-ae41-79ab6924f1a1",
        "cursor": {
          "ref": "694ce462-a4f4-438b-a39b-92c62946dedb",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "10acf69b-c698-4e6d-9ff3-880d701521fc"
        },
        "item": {
          "id": "73ee79dc-a3f8-423b-ae41-79ab6924f1a1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9dfb9263-271c-45f3-a3e5-3fafc8b765d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b970fe-b09e-499e-b1f1-524881e27e1b",
        "cursor": {
          "ref": "994054fe-fd4b-4cdc-946c-242543253d5a",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "02cfbdcc-a194-434b-903e-07cd768db647"
        },
        "item": {
          "id": "74b970fe-b09e-499e-b1f1-524881e27e1b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8fe6622c-974a-4152-8918-da4afc2be74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434b5448-6ffd-4579-8ca9-9b4a2ce4c48e",
        "cursor": {
          "ref": "9e382cd3-8ae4-4167-82c1-794860f667d3",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "037776eb-5715-417c-b015-c9a124c110e0"
        },
        "item": {
          "id": "434b5448-6ffd-4579-8ca9-9b4a2ce4c48e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cac057ae-fb0a-45bb-97a4-fe5fcf06aeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa1c802-3fd6-4411-9e4b-e06eaeeabb19",
        "cursor": {
          "ref": "043ccd2c-43b1-4b89-a26e-5cb2a1a79573",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "49eda5bc-8498-413f-81a4-7a66f9d90657"
        },
        "item": {
          "id": "bfa1c802-3fd6-4411-9e4b-e06eaeeabb19",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e1fdc417-798e-48b7-9c00-3b1cfa59cd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c9b7c1-5416-4529-8bd9-d8e6d1a9ecc8",
        "cursor": {
          "ref": "209a9a25-d7c4-4264-818c-7d3bf56a6949",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "df25ac0a-83a9-409e-a167-22ea12c83e40"
        },
        "item": {
          "id": "d3c9b7c1-5416-4529-8bd9-d8e6d1a9ecc8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "98c7cf39-e42e-439d-8699-60a1245bc865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da7e2c3-793d-4554-abbd-f16b322233e1",
        "cursor": {
          "ref": "c3df27b6-c930-43a0-86b5-ab48354b3c22",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "11a5efe3-04c4-46f2-a48d-14738571339e"
        },
        "item": {
          "id": "2da7e2c3-793d-4554-abbd-f16b322233e1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5fb64986-ef57-4fe8-857d-94df67ec9aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abac6a0-77c9-4b9e-b82d-f905f192f05c",
        "cursor": {
          "ref": "e50d1287-365c-4451-bc21-02e2f930aabd",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fc4d71af-749c-490d-a8ac-0d32b3d50488"
        },
        "item": {
          "id": "0abac6a0-77c9-4b9e-b82d-f905f192f05c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5f0938ed-6afa-43b9-a0fd-0a83ca6d5e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15bab82-788c-48d6-89fc-3fcefc50e43f",
        "cursor": {
          "ref": "a6ba64d1-f106-4346-bffa-a3cf9b1b67ad",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5b97d808-7e35-4850-9e7c-aa35b16c572c"
        },
        "item": {
          "id": "f15bab82-788c-48d6-89fc-3fcefc50e43f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b14ad4ff-761e-46b7-a086-77491d212aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f965fc24-d5fb-490f-be87-1fad08636e03",
        "cursor": {
          "ref": "1ed9aa4c-0721-4ffe-bec2-4c354feb183e",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4602156c-14aa-4786-9013-ffc0f5efca9c"
        },
        "item": {
          "id": "f965fc24-d5fb-490f-be87-1fad08636e03",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "138c1822-fd5a-4cea-a219-496463267033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84f1e3e-d368-4876-adee-759078221146",
        "cursor": {
          "ref": "632ab50d-c101-488e-8ae8-cb1d24412585",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b00115e8-fa2b-4e98-afd6-104012de642f"
        },
        "item": {
          "id": "c84f1e3e-d368-4876-adee-759078221146",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "03e8b680-d0d2-4b61-b378-dea99c60ca92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034660d6-45e2-4ac5-8d20-73afa3218605",
        "cursor": {
          "ref": "5af19fbe-1f05-4215-8ff0-f17a2586271a",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0e36ea75-d914-4a3b-82ac-acfaa6b94c9a"
        },
        "item": {
          "id": "034660d6-45e2-4ac5-8d20-73afa3218605",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "926fa24f-a805-4dc8-a10a-eeb28e3a34bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6137f7b9-c786-4bd9-835c-100451ebba90",
        "cursor": {
          "ref": "66f5bea3-671d-48a0-a0fa-a83c06700069",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ba747ab9-9333-48f3-919a-d82cd290cad8"
        },
        "item": {
          "id": "6137f7b9-c786-4bd9-835c-100451ebba90",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ea07f592-718e-4e63-aacf-6a1280f7fd9e",
          "status": "OK",
          "code": 200,
          "responseTime": 168,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d600ba7-5ad9-4134-a73a-8b5639f16b3d",
        "cursor": {
          "ref": "e4f80ac7-6684-41a0-a13e-e077d40b5c23",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "43df905b-bb67-4495-a5ff-8dd268436807"
        },
        "item": {
          "id": "6d600ba7-5ad9-4134-a73a-8b5639f16b3d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2aa031ce-599a-4894-8d4b-038d28da2699",
          "status": "OK",
          "code": 200,
          "responseTime": 2533,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "701f986a-49e9-4e85-a398-c46b1c15798a",
        "cursor": {
          "ref": "e29c7300-f505-4581-83de-232553c1ecaf",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1f43ca01-f58c-4b2f-a9c5-2a597a6876f8"
        },
        "item": {
          "id": "701f986a-49e9-4e85-a398-c46b1c15798a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "06114bbf-2725-406a-99e4-427985e4f1a8",
          "status": "OK",
          "code": 200,
          "responseTime": 2555,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d79c77-934f-444b-8359-30c33fc6d612",
        "cursor": {
          "ref": "90a38c5d-78c6-461f-8c56-6b9ff95a76f9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4e4df203-6b3e-435f-bbbe-93a03aa3a164"
        },
        "item": {
          "id": "32d79c77-934f-444b-8359-30c33fc6d612",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8afa3bbb-a6e7-48c1-b64a-c6096534853f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d79c77-934f-444b-8359-30c33fc6d612",
        "cursor": {
          "ref": "90a38c5d-78c6-461f-8c56-6b9ff95a76f9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4e4df203-6b3e-435f-bbbe-93a03aa3a164"
        },
        "item": {
          "id": "32d79c77-934f-444b-8359-30c33fc6d612",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8afa3bbb-a6e7-48c1-b64a-c6096534853f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8df5f5-597b-468c-9a07-f54bb761ab19",
        "cursor": {
          "ref": "e033a79c-6e43-4053-b9cc-7d2b69387b8b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "73b0c283-39c0-4948-ad33-44b636bb29d8"
        },
        "item": {
          "id": "bf8df5f5-597b-468c-9a07-f54bb761ab19",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ba0d9435-7491-4368-8f14-cc36ad4128a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 335,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c090fb-c0a9-4e5c-b7b1-53abfc9a069a",
        "cursor": {
          "ref": "3a210a34-c824-45a7-9f7b-2d36dd0e7eaa",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ef440c73-d989-44fc-9e68-87ac6edb6db3"
        },
        "item": {
          "id": "57c090fb-c0a9-4e5c-b7b1-53abfc9a069a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "98ae9136-09cf-4409-a7e3-340d6a8b8318",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}