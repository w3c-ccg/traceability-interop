{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b33b53f7-0f6c-480c-a44a-6110e49902a5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d3082008-6d14-4622-8643-97ce4df35267",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a94692f-9cc5-4ba8-9124-422184649733",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "27de3ea8-208f-495d-924e-ce8890172312"
                }
              }
            ]
          },
          {
            "id": "536a0db8-1bc2-4b28-9151-ded6dec3a709",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce4976b6-9894-43f4-9b19-5877af3d8111",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ae99d077-adc0-4dc3-9783-a85a3ef0694b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "20f92146-fdda-49b4-9fa6-77e9576d9e8a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "84f9a369-2e67-43de-9ce4-5acfe383e0e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0b9942af-5080-4261-a1ad-051d9e1b8c56",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e89510ef-6e06-4e84-a59b-4e5ced3af43a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "239576fa-efd7-4287-903c-a1e66405a2c9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3d2ae5e-0c07-49ed-a69e-79a15538b67b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c226912c-aef0-46da-bfb7-1ab859085eae"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "57d779d7-a9c7-4e5d-a2b5-6cd220c51162",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12c0cb7e-82c9-470c-890a-3e0257f569d4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f30e391-f155-40e8-bcc8-eac6a8e2a9b1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a8825979-ba0a-4b24-99a4-231c11fe00d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "922a3681-0d6f-411f-b2e8-89beeec0c45b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a97a26e-dc49-4c1d-bec6-de069ce051d2"
            }
          }
        ]
      },
      {
        "id": "4686a970-80f3-4193-a4e2-3bade50f0264",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f9cf0a36-3b89-4200-90fd-66d1ccfb56de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3ec32cd-9899-438b-8a5e-5f272acab521",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fa44b292-703f-4582-8b9e-2a95480df994",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2f26d0-16e2-4611-ad9d-5c4a7c9fed7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2636e81f-f280-4326-95b8-09b2ac8d400b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5d2189-09f5-4333-af3c-ec32a687b100",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e579c7c1-b915-4769-b6fb-7d7400599271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf202e1a-5206-49af-a773-fb713b61d9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6664a194-857c-4480-9988-8e5fb44877b7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84879c6f-d20a-4e16-8bcc-d3ec5bfb62d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "939281fb-278b-4b84-af24-54c5e8550de9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cf8b0aa2-bf62-496a-897e-292716a2ea58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1851ea1d-323c-40a0-93b0-4707951e2581",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e5c153-d78f-44b8-ba38-0e99f74e3ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06f46d51-b517-44a8-8c07-2c6101e50df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1a0e0b-1933-431c-ab38-91128ccf0de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cefb511e-4b4f-468e-84cb-339c76ebb45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b190681-01bf-4b1f-b377-02c14bcc7a02",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a730df-1de4-47bf-90f6-3d1878544183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "497c4434-2b94-4cdb-8738-e76ba6db2a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee6a1d3-a8d1-45a2-b1a0-5972a4bb2b69",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "0fd8448a-4ea4-4326-b4ed-a5cfc0dad14d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "036471a0-dae7-45d9-88ff-8ffd95d75b6e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "362baf09-86e6-4a3f-a053-6e0a9add6553",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87cf4bce-5c7d-49c6-b4b4-ee24afabe04c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fa469881-0a51-49f0-b36f-da0e87d9d692"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f44dd507-ea83-4e4b-b837-0d34a9cad50a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "e05bdab9-0ac2-462d-a83c-fa2654ca3f24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "571bc205-a4b6-4c74-a269-bcc4328f9cd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "25aee340-6bf0-4eba-9583-995a2c47af2e"
            }
          }
        ]
      },
      {
        "id": "2a5966d7-b6aa-4bef-a674-a4970efce0f5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f375526b-136c-4787-858c-37a24631bda3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "798992d6-5c43-4971-b743-dfe8dbf9a767",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7d4b2a94-0255-4ba8-8219-3e689d614602",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb09cb89-c2cb-4887-9b43-92e5d01cdeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b4fc96-e620-4db8-afa8-a17489d7d96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85b84fc-5fad-4e58-bc96-6aeb34b133cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01867dc0-b8ba-487a-b3c5-753471b4fffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4a070a-29b8-48aa-bd65-0e92df89bc07",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd747e5c-6e19-4d77-b630-2c082a5f5d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a7b110-32d6-4d0c-a106-a081616516f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d2b127-4f92-404a-98d1-be39e7173e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d48ae24b-c11c-4110-9d8f-1c2a0d249783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd16cf9-a37c-414f-b9f4-443a09a568c8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3495063c-7ac7-4320-bde2-3e217fbad2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722cddf3-0907-4848-9652-be9cbc29f7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fc2c5b-ffe8-4520-b779-12e002277ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e48937e-cfcc-46f8-a49d-803b48ff0ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54d6f9e-b615-434c-adfd-94c8e2ddb993",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bd3d31-42bc-4976-8a68-bd1cb707b7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52912b3-0e3a-4468-b0f0-09a872fd997e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a5c9b8-4c0f-4a7c-bceb-55e9883ce13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62f21101-c6c8-450b-8c08-2db453220219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08e8bb8-9798-4a13-bd29-297e4e788200",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053d0719-84fc-46d5-9329-cd7b53056887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b405da74-793c-43a1-b921-c9c4a3a93229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d60ca54-bc44-4172-b5b2-fa440aea4eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b6fa966-f453-4e2b-8363-5a52a8dbba22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96426f2-2ff2-4f61-8e75-00120307990b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc4a0cf-f9bd-4f87-b13a-a89096c3a7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa70b184-93bb-4f10-814e-d625b378f914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91214a06-63d9-48da-8589-1ef60621f88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45145dab-50d9-4b90-afe9-5a2161cef342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec0db46-815f-468a-9e74-268b6bc20ba3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36992cd-757a-435e-be62-25233bc0c303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e978106b-066d-41f3-9f97-bfe45b6f8dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af5f045-d29a-430c-9449-94f484d16f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9ce9e94-4ce9-4a99-942e-6893b9f80431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9e20c8-d565-42fc-9816-19b340060bd9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548d2a8a-2249-44ea-8884-175eb3f3b836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ced8197-d8a7-4a0c-a20f-e02f574aaf3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1970804-dc03-489f-8595-3a7688877467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b001cdba-c38a-4ec4-b810-89a6d5328ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d240dc0d-f12b-4e61-9145-53e516e696df",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d552f0-ba7e-41f5-b4bf-ac5bf49799ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2963993b-6e29-4501-9262-71ae32710702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f93287a-5e28-43de-9969-ae436328366d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aecc6110-2f99-4414-bcf4-f07cb27b4a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c6d2e8-4320-4f9c-9883-74e0355ed7f4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6330271-75da-40ab-ae99-9b54557b122d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145f1791-f198-489b-9d83-89a6cc3b5f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86afe45c-ba4f-4969-a58d-eab8f5e6c50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6b89507-9e4f-4b69-bc7a-b9f4b1935e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08f95cc-02cc-4327-b695-a886c00feaab",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ff7983-1363-48fb-bd88-b53a444f2f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770e6bb7-8a35-42de-a5a3-3c18ed360b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8e24ce-6706-44bb-8654-3a32977849d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe71284d-d73e-4e09-85d5-010b43b5e901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b26a5cd-124a-407c-9c4d-a484759ffe36",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb54e1d-ac6e-4eb9-a7d6-31d87caab143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0073a643-d8d3-4038-a679-4a8a6606198b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528b56bb-a034-400c-bb77-da41be4d95be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46cd2beb-c7cc-431a-b2b7-30bfdb6ccf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f894ef-65c3-4809-be98-25c7198d1eee",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e018df5-9fad-480e-b1df-6b7322a32403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565b576f-e4f5-432f-93c7-b4007c14625c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725d99c5-e543-4d87-b8ef-9c0a61089218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cf4bc89-b53c-4270-963f-645dfeddf9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db4c3a4-78a8-4b52-af08-e62b50cd46ae",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a9fdbd-2ba8-4c40-b2af-dd310a064b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf7adbc-1f5d-4116-8074-b27b7186bf08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3fa2e4-1ef4-4c82-9530-e4304b1eeb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a884e266-793e-4d3c-b853-8acd62aded87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e1dc89-4dea-48e3-a717-8ba27bea4e3a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147c9553-778d-4bc9-9c2f-36558efc3afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20168a43-ff09-4a99-9f43-3a7dc3943652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaba31ae-1d2e-452b-926d-708a52645813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f040bc44-9c29-47dc-9d19-60b4b32285ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364062cc-00d8-4f1c-891c-8f641184345f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9a5db9-b6b1-4193-9854-e76cf4c9b699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753d7d04-1221-4ee2-ad79-baef6fa98cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d65e9f-8a89-4f7b-a53d-00e8632a6a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "458f9f82-d6c3-4cf9-8d72-40b9bfc71231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d10337-a106-47e3-bc7c-a57fe43e20dd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fd706c-94f9-45b6-b4a5-9ba42691d004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ccdfca-e757-4503-9909-2964d0082084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ccf049-bc39-4894-aa4a-ed3e2ed6efe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05597e98-1095-486c-89c4-c9ab0d77e9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea3a7d3-8079-4819-aad1-98b8ef53bf3b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3571fe3-8ae0-4a56-aae1-ee4305feb61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5446a9-bab2-4b7f-9bc4-7c1e1e09345f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab6d242-13f5-4943-9b20-f8a028f4617d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ae5f75-9e4d-44ad-b884-7d7c0724f024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ad7bfa-a30e-4495-b7dd-0dd8a9e0fb1e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abeeeea0-b10d-4af5-94c0-fe7818620497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30717d42-d18e-419a-9dd9-ee86cf331163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ea8c90-bdae-4dee-b1f2-90dca2eebbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37ca9f38-ec08-4cba-8a9b-094f85c6363d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bce7fb7-7836-4c71-a873-600cf0cc3f97",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff22f2f-57e4-4a23-88c5-403722eb7ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1afbb6d0-3fa9-4952-9d06-b49be363d679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c206c4-5a70-4b43-afb1-801cf9f4014e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4baa1332-c8f8-4aac-ae4c-dd09b9c1cde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a709363-3a62-4362-84a9-44c5d659b553",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf4b029-a414-443c-93bd-0943aca0ffeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4cc95f3-e32a-42d3-a0d0-bdd16f5a9a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1ba78a-8206-410a-a261-42f859e9f370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89318868-6361-4527-aa52-2fda1f9271a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcee6ac-f8d4-44c1-884d-a62646c2d1bb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6555b5e2-e166-4502-9f9f-2584885bf7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cac864-aaa7-41e2-af24-f9d3b1594f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8900d251-b825-4309-a6c5-ef28d34e6d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9535d93b-e8a0-4894-b69a-3600283ec96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff47e14-8741-4552-8316-88305a5eb826",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c07379-ea53-4dc4-b4d0-b4676d622e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82e36c5-1412-4b53-81d6-a1ada2487674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5997cf-f0e0-464a-bf69-d81e01b9c650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46a89306-3cfd-4ce7-a10d-2c1c05feb938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad88930f-eb29-4b7b-8de7-cb359778f447",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335bb38e-ad53-49ab-8e16-909cea445c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f9206d-7881-4ab5-8ef2-edc5a6f42815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca731b5-f6ba-4c2e-b01d-6adf495843d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "44e71258-0848-4682-b572-f0bb378bfb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7dc5fd-1a54-4698-9f44-7c37bcc093e9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebd1fb4-7d32-4e72-a039-3207e11c2907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869fee90-81de-476e-8109-c40ecc7b9ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdae8cf-73c1-4ed9-a30b-5dbb5cdd879b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf587565-5221-43ba-b88a-19795998329f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06960f03-e861-4085-8a52-9c927377a511",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1f5ebc-ece4-472d-ad4f-4ad04c19ec14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f30955-217b-4987-a7c0-25318d8d913c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9876ce-8e5f-43e2-9cca-7baef58e66d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6af1db7-9e3d-4099-9052-a35e10b2cb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4ebf11-ddbc-46b0-bfa6-ddb34cc0feea",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95585f81-2750-4484-89e8-f8d7dfe7db97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f14d9b-faff-4cad-bb90-3c0b9977ae13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54075459-ed6f-4f85-b578-3876238bedd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd5aaa3-4bcc-4314-9997-34c195f2ac04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771a350e-9e03-4e8a-b824-72ef2a70596a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c17ceda-657b-4e2c-9da8-4aee062a4f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb447c8-3a9b-4363-884f-8b6a58cf1f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96b9660-851d-49da-a0e5-3dfcaa6b72e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27dca938-f27d-4ef4-add2-01561bc51e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2c4f60-3f2a-4502-916e-ae0f8bcef7aa",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd3d4bf-61a1-4867-a5f9-a42f453739a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01d5ea8-81c9-4e4d-836a-382d3337223f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54897241-876d-497e-95e5-04937edd2e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4bc724-dd36-48cc-b142-512adf148d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627b5047-b17e-476a-b77b-13c3b35ffafe",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f96dcf-2f3c-46f0-86eb-6bbaf36c7d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33abbff0-c95c-40cd-bfcc-6fab6c4ef568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42073f99-a22d-4c4c-a7a3-ef20f2c9df01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1de99f3-d2ca-4aa0-bc46-a2074ad30204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc88cb4-e817-4bdf-a729-9d8ad5fd530c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab28bb73-1edb-43d5-84e8-074164f2ccd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0805ff-b4c3-416a-81ec-a6c559a0dea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ce6e74-e997-4c24-846e-363553af4833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "81d52b10-92c9-4aaa-a0a9-60d6eda2b06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e143a88-0eb0-4ca0-ace6-6a7466336bed",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f6173b-e05f-4680-88d5-1f580a46914f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38ea145-0f5c-4282-8fb9-227c71e35a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea6381a-03e9-432b-90ad-bc4e7b00ebca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cabe165e-f8d0-45af-bcdb-1ef5125aa9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f7b4cc-d592-40b9-a8bd-132a0959fef6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ba5c17-4df0-4cb1-b673-71240af79f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047f2589-49ff-44a6-95f4-5ef87125a585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3745705f-6e11-4fa5-b7f9-9539ea6ac798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6da55bbc-0abd-4728-9c19-4b1bd36ca915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e33134-caf3-4840-860e-91a4de61c070",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9a802e-a951-4446-ae12-b9a8fb957cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa96714-f173-4801-b310-620966d92280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cedf414-f077-42cf-a4a3-4dcc2806d12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25df073f-1f9a-4b28-a2b7-0066bd237f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad24ed3-483b-456f-ab13-7770a6189354",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f36fdaa-041b-4528-9af7-7e09b1a31a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b52d03-e1c1-49c6-b7c3-ee123e2339e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3c097f-7ff4-4459-a9a7-b480024f8fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "213a2bf1-bd73-4997-836f-be9afb0baed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4410db04-cc3f-42f0-85d0-428eec165cc7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e512b1-c5ca-41cd-95e3-531419c67a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3661b43-ff22-46b3-a68b-36a24ece6e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec7d61b-29f6-4a92-b6a4-b925ae49a3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4cef548-6fc5-4491-ba27-a5cb43fb6e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb67658c-4108-442d-9170-e6126365dc19",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1043267c-a277-401e-9d91-4a2dd46e3cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7266027a-9a17-477c-822b-74c18b438c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750d8da7-a461-46c1-9cf4-4422be44106c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c34c314-8b5f-4ee4-bb48-7ecbfddc8bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945a7936-8de4-4e15-91a0-05ddda1e8862",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec32a33d-e39c-4338-8db9-4ab9e0db7384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90923a41-e85e-4188-8bec-6f72105433ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b9e212-bf44-4070-9a3d-cb3b6832bbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc04d89c-353e-44fa-9554-31c26d29b844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646e1d4e-9722-4f93-9395-a853e0e5fa01",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c187d73f-5fd0-418f-90f3-fdc45c8ca40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad75f63-3a0a-4d6c-9265-0fbec5a3f0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba27d9a8-d206-48b6-b3ef-3256dc8c67bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8bdd6b-c3c4-440f-b4af-f6ea9fe5b338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a229ee80-f9e8-4b8d-b05d-86478f2629f0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01f5087-ec23-409b-8bd2-62d696a2a1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583aac7c-09d1-44d0-bbb7-bf880df14112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f21ec19-2400-49d6-aa8e-e675e7e62cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9161ccec-1113-4b3e-a892-bf7fb418f5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a937c2e-4137-4bae-8061-c12cd5efe55e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17feb74f-3e9d-411e-a0d2-63ac18af1c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2e1255-f805-4e03-ad4f-c069a3efc333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3152726-2c61-4bb0-b6a4-5c436b2e1dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1038f4-f731-4ea2-ae24-9f912d36af85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c23385b-4fa8-4400-b0db-3b768d59f082",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdd15a2-e245-4606-80d8-ee37814be538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78084b06-b001-49c6-bb10-eb08eecb2071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f359eb07-6c7c-4156-b2fb-43b7580afd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c24fc232-1b42-410f-8fa9-07d7b5d424aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666d1808-5bce-4396-8e7b-0977b8e50fda",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffcd2d5-5ca5-41a6-9c19-850e1094e31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbf760d-4705-4c74-b2e1-4769bc2786d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13eb2ddc-e036-4c22-9f52-f0b2418b6bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "623044d0-fe71-47d1-a05f-d3cac7f4b024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a010be9-6032-4fd0-9da9-5b039677f6c7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9615f5d6-3754-48ee-9566-eb8043f7e980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af05cbf-85e0-44d2-9a63-d3280ca5f596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffaaa00-3d1f-4bda-9aa1-d0afefaacc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e016a9c-5873-437b-bb6a-aaa1da9ccc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a782cca-7b20-42a9-b2cd-71433c26ebc0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fdb226a-b90f-4b0c-8378-0e7ba90fcdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87acb46-3fe9-412b-b683-6c9e5332d75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e69df98-7836-4c1b-9bc7-aa2f91164894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "99614385-ab25-4eb8-a317-e89c9dc2789b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76139169-f435-45d2-b248-a9d0a2e2cc4a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22598437-b283-48f9-95de-becb7e5423f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd44f79c-9fdc-4e05-a189-d079ce6cd2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770f6d11-f91f-4d5c-b20f-bb1907ac5211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dde78754-2358-4823-b68a-9f2ba81ce16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965fd979-24d5-4da8-9919-378a115e3b9d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1099c6-2639-4cb0-be47-d84807b2cc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52b9af3-fc7e-4085-a2a6-44af6b742900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd48ae47-0cb3-4a6e-9566-8cb24c1c6bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb306b0-0b09-4e08-88b8-65d76a89146b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46760a6-674e-41ee-8912-2c089f6ba14b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8541b3d-8a2d-4acb-a52f-17c055c3d494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71fbe6d-0e98-49dc-b200-849559e728f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243685f3-8dc8-45a6-89c9-ff008338a01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbbd0710-aa97-45d7-93aa-9164a977f27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4da9fd6-f8f0-4541-a938-39ca37028faa",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e227f73a-410f-40cf-8e3a-11fe1ab1b08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cda28b-46d7-407c-8b02-049d27337371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e3c819-2165-4497-9527-398685367eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6c76a1-2498-48fe-92c3-fc6798799535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6c7085-b464-4b12-a449-cd641aadfbe2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b0a0ac-3117-4c5b-9fdc-203acb9c1c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac247273-d3f8-4532-b149-a5c4f54eae89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94c9719-c13d-44e6-abb9-b13e0e9f27fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28bc83b0-6f51-421e-9ae8-dcdaf14661a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4c9a00-0bda-413a-baf4-a0a74badcf7c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a860b03-46f9-4244-af36-a837f3672c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca0151c-5cfe-437d-be26-41d0e4fb6fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ac01d0-8d71-494c-a60d-be508fc946b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc78861-956a-405f-bd4a-88b5e4de59b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb0d059-1a14-4fb2-8444-6d0d4da2984a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8edf227-2caf-4b62-b417-278ee0c0c725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb77c4be-f6de-43ef-b212-cc508ef37bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef821174-068e-47ea-beb3-972ace22a062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c959d8-5287-4438-9b21-01516d85a927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae7c89b-8293-4b7a-8179-4c8518ab9678",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d30e83f-d309-446e-9264-69e12f3e092a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccbe8635-f627-460c-a827-7be17dfcf435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805f13c1-b6e9-4a78-9cd3-50ad498e9910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62485c8a-ee25-490f-a2c3-25ce2d503888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c820a848-e51c-4173-8ac4-ef97be711181",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91deef0c-b604-4c08-8fa6-864a6a4d4f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade4f1ef-f9e5-4580-b5c3-a3eda9d73c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dea4690-4574-4022-b448-9234fe2ec8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96df95c4-fc65-4a23-86dd-6c373e5cb33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4b1c60-8666-4556-9ec7-5339b293f660",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb070ecb-9304-404f-bdb0-00588d5a9b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693e3d32-f23c-4503-b4e1-7df063662e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ea73a9-08a4-4105-8618-bcbfb91afa3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70609a96-1912-478c-889d-041fd9cb9d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3281673d-2ee6-4422-b11b-caae1a331b7c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c488de2a-6380-4c5c-ae9b-a3f5ad2840ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e98bf7-6c97-4fa1-9138-74f3f47f7a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68541d9-b522-4763-9c43-5c157c66ab5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b6715667-aa3e-458a-ba9e-5e1454bb01eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1a5868-f43b-4a70-b7b8-b9fbf863692c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc3e86c-c109-48a5-b38d-9895495c4214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36bdb70-afb9-4d6d-9b99-b7790345ad33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e65d9f-9a03-46cc-a91f-586a476f20fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "63bd2351-591b-4875-abe4-e05aea573734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98da4793-f20b-42b8-b5ee-539ab0e499a9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac009ea-76d9-4b0c-b668-e5dd0430bc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a3fc2e-5790-4371-ae78-fec9f4679617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c24a32-7fd5-45de-a86c-b7a673db0519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4caa3fa-2e94-4f48-ad80-c6a202cdda97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91534ce-1d11-4ded-8ff6-f593921d1e03",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77c749d-ab39-42cb-bb97-9f4bc147d068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4881459e-3e5f-49a4-a81d-fe14a554fbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d68362b-4297-45a9-a29e-9b11e8d884f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "178e2c03-f63c-406d-b628-78f388f8696f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96cdceb-68fc-4ba6-b348-23b5b6a50028",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8cefe1-f097-4b9f-be49-3a1e04e502de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1211a535-dba9-478d-b7e4-7ac5a6bed12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c7bb24-b589-4ff5-9408-8a554f34aba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb5af02-61f4-4928-a104-57ebd55c760f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43fe711-58b7-4892-bae7-2357bc5795d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fd238d-bd5f-4baa-a041-3b91d7c3973a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93e8508-ec99-40fa-bdf1-aca6449ff9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53279ba-b7a8-4add-b19c-246479d1a376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "014b0ac7-4138-49fe-891b-0cd32f5606f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd6105d-c2d0-45eb-a305-2b005fa0a58d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233232ec-7436-4eea-bc70-6714c052e591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dab09d8-e49b-48ee-9994-afdbebc47e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ef2a9d-77b7-408c-a394-5c450342d7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "41188ae6-59f2-4c24-9134-8c6124a44eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8655ae5b-8057-459e-8bf9-49ccb24c382a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e7dd2c-3ee3-4f7d-95bc-7e70ba2e44ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611d96f3-5a93-46d2-90e0-1d328d3db3a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bf729d-c45a-4139-9e15-5a63f22504a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "420e295c-d0f7-4fc6-a9a5-da454473da69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e00c61-0273-4ef9-853c-4d17b085cf60",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e8e25a-cb0b-4b13-8c30-dab424902223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35375339-cc66-46fc-bc26-b97471ce66ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1989fcde-7411-4a47-abbf-8434844cf767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5127cdb-891c-4672-bcd2-b1574fadbcac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cee0867-29d8-435e-aad2-c47c070209f0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc8a727-35f6-4810-9008-86a6e0ce1e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e9e10a-6a37-4a78-b3ea-4474d5bc35e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1031c7-2dd3-479a-ac19-04d494fbef9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31721c97-aa2b-4650-8146-c0250309d1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe73023-e4ee-4128-b233-69601026a416",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da18d81-a1ac-4426-bd1b-e6df8d05bdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0552374b-15e7-435f-938a-5046f85e401d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613d0b9c-0155-42b0-8654-dfaab4216ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16cb39bf-f4f3-448c-8e9b-a31dfa94a05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bb8ba7-40d8-4a3b-aef6-9cc85cf5353f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72eb6321-8619-4cf7-8594-440906c087d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cdbcbd8-32ed-4671-845c-fcfd7f329024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f859b092-b283-428c-9372-056759171abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0beb711c-8369-4e5e-9dce-20704a2fc4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8c484d-a2f9-4799-8cbb-ace73fd1e8bf",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7b795d-c303-4425-9001-e4ec16ac81a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e0d78c-cbe7-4af4-8afb-f26920aac680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce469448-7665-4d47-93d4-1209171f44e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c55ea190-e834-4d0c-ae36-b45b4788315a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fad16a-2926-4773-8d45-fc4fa754c5d0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54dfb56-71f1-4fbc-acb5-f46dd87b9991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5cbcf5-4b33-4a74-a115-d58a9b2570ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14a427c-cb6a-49a9-9b03-e1c67439eaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "251e6a71-29a2-4f51-9816-830f9a91e1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9321ea4e-b140-4bb5-9926-f9be95c57ef3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e9eb9d-effb-465f-9cc0-e1cfa85dd678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb56099-f5c2-45c0-809f-31940222688b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec6b8ed-cd85-4116-8081-33479a6f0db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad17aebe-6fc2-477d-aaf3-9ce8d9a20f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf34ddb3-e37c-4cbc-875f-5fe7c1f75e7c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f377bb6d-4387-42bc-b64f-5cee70ae6b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ce1cdf-b06a-4759-ac7c-0d490aeb70ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b800a51-93d8-4cef-a9bd-ed30c5839167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88a76870-5b55-4945-a23a-4b77fceb679a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f980ee6-a4c6-4086-8afb-77fff290fc8c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6959c53-05ce-4b28-8ca7-040ee9d71a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e812d064-2049-47f2-8370-7dcff83bbc17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a91ebe0-ba00-4909-9442-e87d39e6500b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13a1f9e3-2e90-45a2-9014-4161b06cef96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73604db-fabe-4ee9-8eec-41d41536705e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c62915-4ea9-474f-a64b-083c3ba29805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fcb88c6-b21f-4d0e-aa42-aef289471999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176d138c-ae41-4568-80ee-f84ed26e1b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7819c163-fe4a-485b-af97-9bceb595355f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9055f21e-5be3-40f9-9d6f-a7ad49db8e01",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdacf81-4603-49d5-b538-84a5f286ee95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28f6f2b-01f9-4fff-be41-99e2726cff82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d595fc7d-ee12-4006-b2ee-16ab76293757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea740559-b5a1-4d99-9fcd-bd20e7acc6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7d8198-708a-4266-8759-e0bc4a3c223f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62750cd-2a11-40e2-b45d-66216a515234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aefe6bd-6b3f-417b-8492-0f1ec6e4a694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a21d6df-c31b-4ba6-827c-8412f6bdd67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e935ac-96c9-4337-a4ff-239fdb445413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828b0054-f0b1-49bc-8e43-cfdbfe9d8732",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfb1553-8083-4b29-8ccd-1fb813bf6ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512ff5d2-0085-47d0-9376-14b2c7483c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3598175-a320-48df-ac94-6662891c2689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbed96ab-1370-42f7-acdf-017bfbb6e009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7db2466-608c-414c-a403-ae8e73772de2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c3f6a1-0e52-4e5c-b5a5-6e4d8c4f48ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49b4227-d6ab-45dd-8d82-c72641e171a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63cab06-c311-4ed3-8b09-ca044e4ae60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f97c0ff-c125-4634-bec2-cf55042633ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb6d7cb-dfdf-414b-a2d3-5ce09bde919f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b8f799-d7a2-4273-a6e6-cb02756e9b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e94979c-f435-4b12-bd00-ee6a3ddd2461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f53e40-a977-40c3-a456-844ad6954898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "498ac7be-9958-4f5c-9f05-3cfd1d600db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6907d6-e4ca-4f28-b609-56e1c5036ee6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873438f2-7df6-4db1-ad9c-0d9c255058db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7051f868-b5f9-4d04-887e-cfb842db60a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ec7e1a-1722-462e-91b6-e33aa6a5abfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f236ad8-9d7d-4219-b995-6f0339225957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46ca5a9-2ae8-434d-b4ec-85403505ca07",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d8b64f-2675-40c1-9285-96ad2a60c820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ebbb0ed-ea69-478b-ae39-157e4bd2d404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c084af-d936-495a-9cb1-ee7fd6382e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c791c32f-b802-418f-8064-9f8f87999bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd219c8-a7f4-46b2-b200-a5ede3680738",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2daf3a-0577-4f60-b4a3-6a9dd7d7b3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b47746-cc34-438d-b03f-f63c3625a7a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afff5c9d-5e58-4788-a50e-1c3df20279ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb6d6cf-be4e-4b0a-929f-0f7290b5f429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3334a189-263e-4ae6-9bed-f1237496e910",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471a0cb5-6663-4ddb-a79e-43eac0da1524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71bd635-99a8-451c-9290-4a12dec37376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f11aba-c4b5-425c-b46a-1a130d7e2702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df0b244c-da71-4c9e-b695-6536f6e97a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0561447-cfea-4810-9f98-bcea15df5e9c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c5d600-1fd4-418c-89ca-4ebfd761b5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf1606f-d4dd-4f06-bb49-420a7cd8d2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ef7489-a7dd-467a-90c6-3a942e935ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3ad8f3-3e83-43f2-a6e3-56fc2c1d2ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05fbee2-ff2b-4a20-8cf5-8b57d81df791",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bf38a2-b991-46d6-b87f-62f202cea72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2325e1b8-b9e5-49ee-80e4-2c07a124f743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b959d09e-73d3-4277-ba17-30493bbe2e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c2c288c-750b-4051-8ef3-e64253bdc2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb6419d-478e-4976-9e32-44edb8b67ea3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51fcbcb-6982-473c-b323-ebcb1404107d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9709d3-36ff-413b-bd73-e9d6da9cff64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ebd65e-e79d-4ece-8631-d1ddf5dfd029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6385407-89bf-4c41-9647-fdb7c5d6bb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ca1cf5-aabb-45b0-b41c-1b9893038d88",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95eee017-0d82-4249-a3bf-b7a410df670f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a851fb99-0829-4dd1-bf4e-c06c83d8a06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dbd2de-bafd-4ea2-a651-cfe147e63880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30a27a26-0b77-4406-9cc2-6bccfcbc21ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9ce1f2-8d73-42bd-be56-61bb78356702",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379af441-7949-4d57-bf29-1bc4761c67fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca097ed1-191e-42f4-9138-f48b4c0b2c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c566153-2829-4f40-ae30-e6b2b19eed65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e008030-8b78-4e27-97fc-9ddcaedcc6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57d5d0a-58f5-417a-9642-a56bfd9b0ed4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c9c88c-4aab-4d0a-b4d9-2d9d6988ad42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "141398a7-1b10-4226-998f-69297c7b4d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827d61bb-17b8-4afd-a7a9-4bd99a4312cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa9dfec-c951-4819-9592-d92cfb71ec3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5acbda6-7006-42ed-952b-42d65a598ddd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f11e3cc-70f7-44a9-b7d9-75a5f71d5149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238a762c-0064-45fd-94c5-f40f52018775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f753396f-b55d-4030-862e-73785c166b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "92e2626d-b635-4384-87bf-3401e87663a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4a3352-e8c0-4d55-95a9-f3df484ce8b7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d317f18a-a772-4d81-b0b9-095391e7ff50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a947a257-877b-4620-b530-a11287dbbafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6015c171-c993-402b-93e5-5e9fe949920b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef05dab-5ef8-41ff-b34b-f19ebee93456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21b96fe-3c4e-4d47-be65-24df66e8c675",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c162af-8815-481f-8142-8393336e748a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5fab3d1-1f98-4414-b778-e45d32653c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b38103-ff16-4c00-8610-f5d356bb3527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaafec4e-b67c-4ade-a177-fbecfecc1a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b779b372-927c-428e-9bba-6c0a1358ce19",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00901f6a-28f4-490d-8f91-f32f8964d3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "49b93cb7-4bd7-450c-a4eb-343e46bfa591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c934c528-d30e-4284-aa3d-a3067f42a848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ee6f04-2690-4c3a-b770-7eca11ffb46d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e2155d1-3de9-4ad4-8e49-eda1187eb5c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c69f535c-c8e8-4d2d-b2e7-20e99a6d8f09",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0330b9-5d02-4e15-afab-97bf45254a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab136e6b-bb4b-4817-a998-9493b15356e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3074b336-0a2c-42d0-8e0f-8dcd2822695e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d133a6b6-f67c-4349-abf4-ed817b2c0e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cd2ecb-309f-478a-b4d8-d1ba80927a56",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b2e2ef-e9bb-4a85-87f6-bf781b1a19f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fe0449b-db59-4591-a87b-7d9f095f1be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b92aa8-b627-4af2-ba17-774adc234705",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fae85e6c-1a1f-486b-9242-37d14fac9d2c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04b2ce33-16af-4c77-b1f8-39e7755d9560",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdc51ad0-8cad-481f-890c-b3d8248f82ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eeedb3b9-fde1-4424-8062-956f0e421fdf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aae7e63d-7e5e-4492-843c-9c48d3a55d36"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8fb37147-0a29-4385-b11f-e2069fbd3071",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b60bc08e-b04f-489a-b463-3f5099e863db"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "28ef78ed-d074-4883-9380-a8ccdf1c5497",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cb21561a-2c15-43b0-a94f-b9bd640fa845"
                }
              }
            ]
          },
          {
            "id": "16e43421-99ff-4bae-9fe6-eafc5084e184",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0e0cc268-78e4-420e-8071-82bceceb1552",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6834f85-8212-463a-8fb0-c124b1da361c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee706a88-32e8-402f-a74e-4d1d38318724"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab0684ff-2937-4694-8119-4c9084edbbdb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d81b791c-ee33-40b7-8f0e-2232e6d0e5c9"
                    }
                  }
                ]
              },
              {
                "id": "d1f74029-c03f-4490-9cdc-b572766254cc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ba65dd3-1584-4008-9f1f-effc4ad10988",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2414707-7b0a-4da6-b32c-ae407a218e61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d44da591-5773-49d3-a9df-3387c0478f98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "59925b11-ca46-4f61-8e5a-5e105382c230"
                    }
                  }
                ]
              },
              {
                "id": "db4d9991-b247-4ecf-8c2f-896e589a1306",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5562baba-1da8-4e89-9109-105bce600fb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7466506-adba-477d-9aac-75cb6ca730ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4236c322-d202-48ad-8d72-aaf1df81e225",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fb87d959-d0a0-4629-a3db-f1239ce69259"
                    }
                  }
                ]
              },
              {
                "id": "bf32af57-7bd5-4762-845b-6ce098c493b4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5ebea0e-5dd5-42c3-aa4d-7b69aeb555d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "596ed320-11fe-4b93-ac86-b4c983929780"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "264377bf-5cc3-4321-b29a-e6cf66adbc5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9b125de1-d2a6-4a36-bfb3-43f9ced8a593"
                    }
                  }
                ]
              },
              {
                "id": "5ef59cdd-f0db-493a-98d0-f63105a3225d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b1bae3c-4fe1-4674-8a46-a0b7dd3ffa90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb319570-2384-45fd-a271-436dfaebcfc6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fd5aa4b-cbe2-4012-b93e-bc08fbacd125",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa0364d0-0bf7-4c63-b9cd-bb82b9d7abd3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb5ee55e-70b9-4fe9-abe0-18b19a1ee9e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08abcc26-8f87-494b-9f62-f0f9cadb2596"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96829aa6-e7d6-4b3f-b29c-11f87a6fed90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95b06299-9b47-4aa2-aa2f-6886065371d3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fc3bf15-993f-47f3-bd4c-3b47724a3215",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2f172823-dd0d-43ca-be3c-ce1d923730cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ecbcb5cd-626f-4254-aecb-c6b47ef5f945",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27bac2c1-4314-4f7e-a9f5-235caba72929"
            }
          }
        ]
      },
      {
        "id": "ffc97d7f-6c25-42c3-a5ba-76e6c76e7c2a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "dca6ca05-ba5d-48d8-9101-198e8e89db0c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bfc73e82-fb2b-49e0-b03c-b7fa73cde744",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3193f649-5bf6-4fb2-b8c4-a26d13723690",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10eba8ac-724a-4eda-a647-036919715e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935c04d6-241e-4e57-a64d-53081a113eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de536be-515f-4d53-b803-493765e3a02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c15607c2-00c0-43db-a726-ce48de944ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd640dba-ae70-44d7-a6f3-b8665903ac6e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a057dc99-66f0-4cc4-9e98-63b56dfcb055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84868e61-5f7c-44ef-9be9-ef65df919856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aeeca0d-7bc5-4a3b-b63e-c35aef0ddeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "676eb4ca-ebdf-4fcb-8c9b-a4a2e8727075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dc1101-809b-4dd6-94c6-eb63c7f4853e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f5ac7b-8d98-43f1-af5d-f8a6f54c8c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1911a07b-0257-4016-8605-775f0cf720eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9945c2-d2be-403e-889a-4eded60f8500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00b538d2-01c7-416e-af84-78577d1234d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702bd401-3df2-4db0-a894-d8eb305ca441",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedb79cf-1b7d-43b3-a95e-2c7720aede61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb65cb1-a4e3-4de1-8fb5-79447f4cc03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b39542-947e-4111-93c4-2b954231107c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "582c9804-8def-4704-9d87-2d115db9557a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a984ff2-a4b8-474e-9cb3-7920331c5cf1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca014f3e-eab6-4d12-a298-822d79bb1a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e34aaa-27b6-4f72-b9d5-7c3b01edf5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333b7b85-6bc8-4c3c-88de-59cf02382b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d9a7eb-de1d-4c2f-827e-2b2f75f27b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63cc7bc-81a9-4a30-bfd1-4a8972206579",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50659f6-d923-4ab0-9e55-5af3e484f8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ad1817-a439-40c2-86f7-3ccb63c6b44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321db1a7-2c6a-400e-8730-29235ed47b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c836d40-2ffd-45b5-9058-f412cbfa15b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a7726a-4bae-48e0-ae68-8278a3e3f532",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10605b7b-f170-45cc-b9f3-d5eec327b762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b795f29e-1558-47fd-b27d-20735c9f8f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a99dfde-334a-4c6d-b957-130cd15e70d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6168cf3-0e3e-4c4f-b746-550b29810e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e01543-6355-4600-bfd5-2f4af7038c4d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2323621c-997f-4942-89d8-de1fede75297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f786e549-4f33-4db7-8f4a-ce53c399050d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b096eb71-1c0a-4ea1-935e-75a21423c62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7458f377-bc25-4342-9ece-9b5a3aec46f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9218a6d9-f7e9-45ab-8ab0-4755d3660e6d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34df7ccc-9c5c-4fd7-8c02-96e0f982b5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c342d5-91a9-4f06-8523-2b0469851979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546589c9-c13d-4771-ae4a-a3e89a2b6a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "966ce0dd-4066-4643-8a93-18aa6ee48ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9804ba23-5618-4354-b79e-54687b258d4b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c173dbf-efed-41b2-9ca0-603cafcc69d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29f3409-1b3f-44c2-aa9f-08016a655b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba15bc3-bdd4-439d-a9a6-96551029b7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae215a9-ad71-4f3a-ab33-d5a5f23569dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475127c3-a903-4ab5-b304-e62768a65ab7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c140628f-a3ef-4703-9905-2a75f6bf52dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45db3279-f7ca-4fd9-b2fe-005e1ff546cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2daafc36-9405-4181-9bfa-c9bb75dbca7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "434090eb-46c2-4eb8-8f95-a4c0fb8b670c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f4996a-2e7d-45d6-a96e-5765487e5098",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df1ed9d-89e1-472c-8cc4-afbd47e2e3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1b25cc-2ca5-4c71-9aac-399f52956558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0254f3-9a45-4beb-aaaa-c15cfc4d955a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f46c4e57-1750-4dcc-8d29-a46f064b9d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff69920-bc7c-4438-93e3-30afcbd30541",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699131e0-f554-4b14-8d30-910a65782d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a70ecb-0ee4-4a9e-9591-a4b8b178f8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ee9f94-d9e3-4132-ae52-53d479d365bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3af0bd57-de83-4d70-91e1-c4cbeabaebe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a7936e-73e9-4ce9-90d7-146f840d07db",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e397f4fb-182e-438b-9356-59266a16f7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a783a4f1-83dc-4bcd-9bc7-bd0448d33c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da469433-0953-40a9-bc36-c4a475b8e8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a34ad96-43a9-47f2-858e-3e3df9cc549a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e214dc-3d40-4bb7-9d9d-c715db5c7798",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfce955-24cc-4b21-93e4-130699090a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52295d70-a8e7-4b88-ade6-83c85e65d939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da55dec6-a04d-4ee0-9015-4bd5a9892d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3ec0c4-be45-40ca-b14f-bb24fcfa12a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b745da-ad51-4163-a1a3-0da49c79db44",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a90199-dee0-4c6d-a6ee-84eabf10e0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafca8d8-1c77-4db9-bc8e-78ff9ce21a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895564c6-b35b-400a-a4e5-8cfe9f35ca5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2eed68c-5744-4505-ad2a-30392bcf93b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7957e8-2476-4f9e-ba82-5fe2cd620975",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af506e3b-5d77-464b-a933-4d91eb7a7119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd198848-fbed-40c9-83a3-2c64ca0c2e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559cd3aa-b86f-4e20-8e69-83fe3af67fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c1cbf42-777d-4d79-a310-9881a739e014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd5df0c-5f83-4738-bfed-9fe60535a72d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97843cd-92e6-465a-8d90-3d2753b36d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b1c1d9-b89d-451f-9b86-657a1bb399a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c709f0-92ce-4237-bea6-34e74a8c6063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "72a8f78c-e7a5-4fe8-a407-417a07e3cefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4872c6b-72b9-44f9-82aa-642f9b0bd020",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de7053d-0cfc-4779-a5c9-cdf6a0e53ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bcff60c-daa1-492f-bf1a-56b8c28d584f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a01812-4dc1-4b3b-ab00-703c5d7cff8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc20402-a5dc-487f-beda-4c66836343e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5df664-bf8e-4854-b62f-14b8d06e023d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5f5a6d-8810-4980-a674-285aa0dc0b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1a7caa-6ee8-49fc-b823-1a5e8c8eb88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2ceea3-bc80-4afa-85ee-f8356127a9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee58c38-0585-4255-95fc-314f1883340f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954b342b-0cfb-4f64-b99b-ece5df75c3ad",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9815a8c4-3afe-41cd-a40c-8a68568c3bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97a1959-a0e3-4f6c-9c70-910ac44eeb9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ec17f5-86a8-4ed6-967e-163c2de3c2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e6f772a-4299-444a-9875-69433bdf75af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ac4c39-197c-40d8-8ef0-7ddd28dd69b5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7092bdc1-39d6-4047-b426-76f4cfd5f9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ab16c2-e80b-4cd6-9bb4-83b39d1e020d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee228871-8de5-4b91-ac34-7dd3f5692997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "355711bd-d4b8-4647-8ad8-36f33d62fe11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde0402d-4d78-4b66-a663-2f0f8eceddf5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc62969-3cd2-4c81-aeb5-75974de435ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fcf72f-5215-40bb-a5c4-787ce416ec53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd454fc9-f748-4556-b3a1-8415a40d6fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "400a25c6-2e60-4a8e-ae2f-91e7bd4c5512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64f59cf-fd65-438a-9344-946acb9da74c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e198d03-57bb-49a3-8cb8-3cceec760f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0732fca9-b42c-4dc2-8668-41e40fab19ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9126495-f5d8-4be1-bc7d-bb7e39dc8334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e02d2c5-5f08-464f-a33e-66bf79c55fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f7763c-18a4-40b1-b47b-9e9ea1dfdecc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c393d5a4-d9c8-4222-b7e4-09a9ffe602ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce38dc29-0539-4431-a540-977c2083fb1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20012879-000c-4b19-b671-8900c8077cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6f65d8-44de-42a4-b6a3-1076f92582e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335f5e46-97db-423f-b94d-7bb3e58f455c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923d10f5-c530-4bde-8257-b0a26f90258d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe0b684-511a-43e8-8256-b71283ae4984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c75f77a-7907-47d2-93a1-369cc9cb3300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3993f94d-2a21-41e8-847a-61411226c35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a16c26-41af-4214-9d35-c80058f5e2ce",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c76b14e-2028-4e91-a674-34e612aad8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e347a3ad-4210-49d3-aaf2-c15cd69b4eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea71c64a-d578-4335-8262-fa76c64dddcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5d31c2-d5fe-4618-ae82-235c2d6a1220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3a3fe2-ce15-41c5-9398-5c32908abe39",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8496ca3-66fe-4902-b391-63791567e902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1728528-998b-4389-b099-039ecf6a5e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfdca90-8a25-4309-9e9e-ff3ab5b3270a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd56d0dd-ff9f-43f1-80c5-95de5e61a5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c5abd9-6231-4078-911b-42c61045c7df",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de3d035-7103-4efd-861d-b3096fcb8510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8cc7d02-4ebe-4ac8-b1f2-1795bee63137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9686b8-1e06-4a62-b439-a2f38da738d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1363e6-387a-493c-9190-d20eb36d7532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cff0a6a-0db4-44f7-b074-ab0cb3af0727",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b7b82f-7f5c-4e5c-8c94-ea7a1eebec71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54edfb45-2e6f-474f-9c99-ef2c00a921c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2056d4c0-0da9-4c50-ba93-9feb4bfd6f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4269fbb9-806f-4e3d-ad95-4dc4c482f7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bdaa3b-614c-4df6-a4a9-60dbc62fc916",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6410f87-a71f-48fd-85c6-38b046f8df19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99ed278-a3a4-4848-aa31-06d013d83e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d806d00-fb5f-4e69-be42-2a019687462c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "995f8f59-ca1c-4bd0-b462-69dc0c526bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee5d45e-679e-44d6-975f-2f3aba081156",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268853a3-7cdb-4b54-b2b6-c26330b18706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf0db00-f5fb-47ff-94f8-3cc2731090c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8424612-3d6d-48c7-bd80-53a417611267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23954096-e4a7-411c-9a58-b0e2df840853"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "37b9f19f-3d43-4f8f-8cd9-9267fb4773a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "089a894f-577b-4bf5-9c85-b881ed18158b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b3619f-c4c0-4548-8ec7-76b0c8e1d8d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "532ad2d9-20f5-45d5-846e-041e16052b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742c20a0-9712-4f46-bef0-77241e1b8631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c2440f2-f37f-48ee-89f5-7802acbb8d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff810f1-47d3-46a3-87ca-73970d2fb955",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f18990-817a-4118-aecf-0ec21b71307d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "78bc8116-bb39-4f05-8141-001a91cd24e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4872022-ce0a-4791-a2f2-c90f9f77e010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "045a85f3-021d-402c-9543-cae5a199bf84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fca93be-e8b2-4e79-a8ba-4102ecea9455",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d1d25c8-b97b-458c-af00-6d85854a046c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25faf68f-8d05-4777-acb1-9b9835eea6d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87c4a86d-2dcc-4b22-b97e-ce85a543a5a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "568bb67b-27da-4c9a-b716-c389d80700ca",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1561ed62-e106-475d-b8aa-31a27de8f349"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07a4bce5-bdd6-46e1-a7b6-0d46d7e22406",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f9a6ac2-9339-481c-a371-8919f5961d73"
            }
          }
        ]
      },
      {
        "id": "18efe19f-3355-4ce1-bc09-60c81b0ccb60",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6f98f2fc-9da3-4d98-ac69-7a09178f952c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8737e2cd-70a9-42b7-b822-273c6178002b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "43136105-0fea-4d0f-a9c3-043f5c9b0cf3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fa2c91-1ff8-41f0-a772-6e4dd0cb982e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a980bda-1f91-4fee-ad13-b7d49becfcf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940636e4-b336-456f-80d5-22c69e47f144",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05efa8f4-117d-43ea-a530-d1f2b4ab7aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941f294d-8a55-4be5-8fd2-5165fe8400b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501e52ea-3c2b-47a6-9d51-bfa6062e3a9e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0eab124-5b72-4eb7-acd5-d72ffed59028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287b22d5-8393-4720-bf9f-ed3b409b5931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4f8b8f-9fb5-4028-8254-44dd8c577251",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66e29d5-9080-4fd2-bdc6-f3154b64ded5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aac6088-8438-435a-8a47-9f24364a68d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7c1306-4748-496d-a37b-49c8736878c1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5273d6-800d-44ed-9f1b-65fef213291e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2d03ea-a3d3-4213-9b50-db501b26b0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be40a045-ae78-45c1-879f-12e4e343b8b9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e2af62-b40e-47c7-adb2-7ef3dfffeecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e66c8cd-7918-4baa-af81-d7d7c9ba6747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe514e0b-9f11-42b9-9de6-519c8e9be554",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5927d1-fff2-46c0-a6de-fb15e216dcb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d7267a-a5f3-4660-b607-beb0e8f122f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063824a6-b4b1-495c-9a16-74c9c0accf0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd2d42d-b8fa-465e-abc6-144a489ef154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd6cb12-b70c-4952-926e-00193176dcd2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d95033-d5c5-4db1-9f08-83cc5fdf802f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fe229d9-1f16-4400-b1b0-cd88ff42afd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0bd128-b2ca-4c8d-9b63-e6d415ba3d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0bda4c-a85a-4bb5-bd69-557bc6a0ee0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7468cb14-9d5c-48ff-9489-9a01218c6c66",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77435df4-159d-4539-bf70-7a1433949085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5702a0a7-4e9c-456e-b016-e721976b89d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5364f38b-dee0-4b26-9217-c5471c097f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0f6790-eeed-4a31-9005-2d62a61e7ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512b8272-8ecf-496a-b966-a59cd1023832",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e62cca2-cc14-48f6-9961-aff9f0891081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc21f4f6-3994-4e30-8628-917bd463818c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c374aeef-caab-4241-9e2f-d9aca227edee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16e0127-26d9-4bc6-b70f-1ec2ade96107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb23465-3a35-4269-b5d9-6598cdce8334",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdca23cf-d65d-42c3-a0bc-16984a6227d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721adb3f-beaa-4b8d-9beb-f07e3caab3b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf58fff-ca84-4677-9f35-951f90d4c521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "968df3ef-64e1-41ed-8d94-1c5a1f251df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71d1856-29ce-4a2a-9510-230ea2f1c248",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e773589f-424d-4610-8e22-c6f95a7c9606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124dfbf2-fa98-4935-aa1c-344a85e9bece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf7f486-9e90-4c58-9f22-7ed4f9016ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d313bd48-c234-4541-a812-06290a73eb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3424e28-4353-43cc-9596-b71b14f0561c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c0cb29-18a7-4e24-8878-a0a2f9fe8960",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3561f538-59db-4dc0-8a1f-a2824a68b0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7f1f8e-eea5-4331-8e39-97d3cb733c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207bc9bd-f42f-4062-a2e1-4e1ee87f0d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbb19a0-ece1-4eba-836b-5db764872942",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59045638-0456-4b43-b611-8e975956d99d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c214eea-eeb8-48b9-bab6-6b986cfbfd3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "123f289d-b244-4249-85b4-57d01ee3c2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99dffe89-301b-4a38-b7c3-a8206d512e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176c89cb-438c-481b-82a4-55678375b990",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c1ecb7-3d83-46a2-b00a-9b14a66ee705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c998309-aee2-4955-9f0e-26f86987ec1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76bdbce-977e-4348-973f-04d1f064db87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf6fc65-7c7e-4e9e-8b6c-f6125dfd6a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e637569b-fe87-4b31-afe0-dd9cd0932295",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e3fe81-564d-4904-92ac-ccefc2fd6bc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ace5386-85e4-4895-b584-bd8e8e52733d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be701a8c-dabd-4c32-b71f-db0f34203777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea0591e-398b-4a70-996a-a34c01cec46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8861fc2-013c-40a5-9f8b-97fc229bacdd",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fe17c0-66ce-4926-8960-b2b34011c24e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638333c5-65e0-449b-9a7a-43aec8c882af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f8b6d7-130f-46e8-8730-80e7fac7e4c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c60bfd-06d5-48c0-91e1-234123864406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4dda30-6763-4b66-bb0c-61d57cd705a8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626d92b4-905d-403f-85c8-9afee44c79c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0df1cf-e555-4be4-a5db-0aa6509e7610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8ea9a7-6608-4c40-8032-7d34c8b1648d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9c1fe3-6a29-4f24-8367-8fc534b15fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e4f62a-c23c-4a3d-a18a-2f0c3b946af0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a2399a-eaf2-4cd8-b45f-0843b46146ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58fe1e3-3ff8-4a50-943d-a3746144cce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71bdc9d-bbcf-4ffa-a063-456e5a75f7d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35fd1b1-13ef-41e6-8540-88f25df70b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dee4456-f963-4f04-ae3d-364a8db830e8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9696acd2-9a8f-4ddc-969f-f3a07906cb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b7b4a8-cdda-4721-891d-5500fd9020b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02af1fb2-e9b5-436d-9ae1-1f670fe5e52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f514c75-064b-4cb9-a6dd-c520e2c01990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275b5fec-8b8e-43d2-8cd8-fe3eaa2387b8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bd0116-ff65-4895-bc52-31d1b427fb07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11ec13d-d118-479f-a3f7-25167131c476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba73ad53-fd0e-4925-a712-1d24f7226f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0525dc72-e86b-4c2d-aaad-93b3dd0a7d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7872414c-be7f-44d4-84ad-967fde411fec",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947bfbda-d47b-4c6e-9fbf-79edff6e75fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178395db-5413-4d26-8bc8-ae3214c2a453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457f10f5-9299-4e01-8344-21d0a6a957f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9edf3d9-646c-4a6b-972c-25b95e5488a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49e46fc-ca16-4921-bcb4-04c5489ce67a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2033ce1e-2b79-4ad5-b62c-d5393ab3ed54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1ab3e8-d6d1-41d5-afba-bbc72f6c7dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac48171-30e3-45cf-aa3f-a2353c83b900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e257d15d-3d49-44cf-80ad-99e2e170b967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4491b648-a461-408f-9d19-05648de22d11",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21760bfc-d1d9-4a94-b743-5c136fb8e8b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa9e30c2-3a2e-4ada-9ac1-63ed288794df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92f0258-5d16-4204-99c2-84e97811edce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c14c10c-cbff-4829-b57f-e32adada956a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969d730c-ba9f-48e6-9501-8c83b98c9c34",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed5d292-bd48-414e-adbe-cfb9f7a8f04c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bd42101-4934-4b59-9dfd-017f7eeca4d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "957cc226-f1db-445d-a8a9-8363d318d631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2576ad-fc76-4ff6-9aea-2475e4fa826d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ae0d29-beb4-46c7-ab76-3d073083c085",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c55fcf-b687-4337-908c-06450a5664e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ca75504-3c2e-4764-aeae-ae63e99120f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9903b74d-2a4b-4b89-a7f4-5d56714390f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d1c014-fa3f-4963-b403-ac15fb836716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfc22c7-6ddd-4b2d-85b6-92096a542c2b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd2aaf7-55ca-4b4c-bfa3-930858ff7db3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1c8f625-bb8a-4976-9ac1-f453e6597484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb067fb-9b79-4719-a000-1737f90e07cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce114d56-1130-4c98-b608-16df0769b40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5512e6f4-030b-457f-bb27-b3f8d3faecbb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab795115-1cf6-4939-9e64-b6857d8cd7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "123f1be6-f2db-4dfb-8412-9307b895fd0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb729439-92ef-4870-adb5-23eaeb3065f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9e515c-6a52-444c-bfbe-b738a84102ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad767ac-cdc7-4b52-b17b-f6114324478f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f373bac-3b05-4109-82f1-e16651c7fd23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5390712-aff9-4bb9-9540-dc490d6b2d34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7434cb7f-4915-4fdc-81ba-c8a825be3f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9eeebb-9aab-4e63-b760-44ca233e4407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0c4829-9989-4e1f-915d-8f5c9f543701",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67a5f6e-5c60-4748-8817-8545b0bd8374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64b904e7-8a9e-4fcc-8915-983b3928a101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3950317f-bca4-472f-bab8-e76422b3a5cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd143e1-c31f-45e4-9cca-c60dbd555238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5c119e-7fc0-4116-878e-85a61b6c36c7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc23b81-d8da-455a-a19a-c59c71ae0448",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ff4110-194d-492c-b3f7-71afc13ed07b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9081c3eb-cd52-45c8-ae46-8d5ca84d9b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0377dec-fc2a-4ead-9ee4-c35e022d700c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bc94b8-9cb9-4f41-a3b5-7b4adef07b5e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb208de-a285-4828-beda-dd88031394d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fe77659-4ba2-42e9-b4a0-e6477842e701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88167c1-0ba4-48d8-86c6-e5fd37de6f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc55db51-5de4-43ec-a023-87101b138b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82433755-fc09-4094-af0b-53490549b360",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f111cb-a46f-4347-888e-da6496efea38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b24cafa-fcf9-4b6b-a2bf-ba8c2e092a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96054998-4df8-4fbe-8a40-39fc4d32db4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5bac809-2115-490a-8d8b-76c79f4c6ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b459a509-ffae-45f6-9515-c890b293d0dd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450764b7-ff0d-4c1d-8f00-55a78eeaafee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc18f323-843a-41dd-9170-84f322d261e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704ee2d7-5b05-4dc9-a646-12bd1aab9dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aef9114-5fcc-49d9-b47a-7e35d0cccf53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5da0e7-5f7a-416b-8b9d-8ef683f2cac5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abc8f89-342c-439e-badf-513a766e746c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ddc9d82-03e7-4912-8853-5e029ff0f803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04352fff-2e49-4ba2-b3fb-7177b3354de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7a517f-9efe-4294-bd81-c6d8aa0643db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7842110-9d2b-4eb0-b41c-b1ab5e55bfee",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646f301a-9253-4026-9a61-b57ec63ccfb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22482189-99a6-4656-b5e7-fb429d775344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00953ef-2c25-4e65-83e1-fb5c965a205e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4159b9-5894-4c89-8c02-2387e355b2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ddcc8c-a24f-4445-9fc1-49349dad9895",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ede72c-e6e0-4394-bd4d-9a5557c9131c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a203d64-2bea-492f-9c8e-cb4647011689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbeae8f4-6c49-4bbb-b154-bac83c65ecf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afff73cd-828d-4470-a5be-a14810933497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d42ffe-0d05-444b-a2a2-327f06191676",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca0898b-f2f1-4ab0-84ff-109d20413832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f56ae3-4b03-44ea-b041-8b366abf2e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cca458-871d-4200-b93c-4d2e5b3f6ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc313e11-9669-4e59-b5c2-c40963eebe16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21385ad-8976-49d0-b80f-e9aee6c2829f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955791d6-3ab3-48cc-998d-db7c51bf77a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f475422e-2518-4aa6-a52b-7fecdc4507fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cee5b73-a69d-4a2b-93a7-19f10a9e98c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f515d16b-477a-48eb-a561-92f3aefa4f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d84d987-e068-47e9-a3e6-492661525ece",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9cbefe-cfbe-4568-acfc-4eae8e1ac0cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6cb1a6c-aee4-4edb-877e-8cfd3cf9f4c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36417f5-593c-45c4-b495-9e03c16806a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0baf3183-ec09-4a77-9d45-4927bd5ef0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43420d8-e01b-47ff-aec0-0aae8b41495e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8f31d0-105d-4789-bfd1-d1c7ff1141a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ebabd7c-007c-45a9-b56f-5a318e524327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2234ddb-2e29-4330-aca1-af8b33f253cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331fa9ef-fda2-4ae3-96a7-2d24894da2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b1558f-b496-41ef-a0a0-7edce17036f2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f6090b-1dc6-4c05-8609-452878b1d4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859ebc39-f19c-4348-9508-919b8f3c3a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b72378-a36b-478e-a710-cae1325bb833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f1d992-57bb-460c-9685-517f61cc9ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf35e4b-397f-4559-ad32-247e751af48d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6eaafe3-446c-4287-8741-e6fda227d2f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba56a3af-5fd8-4504-a8cf-fcaae8ea5c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19570a7e-365f-4173-873e-d81bb834dce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86411454-19ef-4d7f-85ee-30ac0b98f0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1827a663-63d1-4e00-afb2-46bdde0b4aa6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd11f8d-3ffd-49c3-9503-168fb276bd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b22103c-4b5b-4fec-93a1-c5d59f3f998c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc41b559-3a88-4812-95c1-7b5b905bc932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48857e33-aec7-4d19-8616-72e505e4ff79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f981b89-cdbb-4cbb-b387-55d8ee221be4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86911cae-1368-47a6-b85d-7ba0807998f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824d7643-701e-43d6-be29-7a83694fcb4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d886dbaa-9e39-49c9-808c-129147cbb500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725b67d7-bac0-4a90-aeff-ea059d9f1888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52ee09e-0eda-4fa8-871f-a36b93f272b1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a216ea6f-1555-4d04-b37c-8c62bd093a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62348bdd-ca32-4063-8a10-9965fbf0bac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc229ca-d1d7-43c6-8496-93c994a2f190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35243aa0-af1d-4b2e-a7e6-95c9ad53a64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4fe6b3-5ab4-4a93-a363-300e843ef2cc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee2714b-1537-48a5-91d7-15677f66f904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25f99bd-a17a-496e-ade9-356a59b7ada7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036bac6c-9f73-4565-baf5-e73cc211b92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9571d021-21c4-4e2d-9113-8c78a58fdd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e22e07-6c53-47b0-a9ce-ac3cddb0b704",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85992546-d252-46c0-a7f8-4813889562dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9fb6061-c51d-4cbc-934e-6461099d3989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "375aa605-b59e-48b0-9369-57b6ad482a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e38127-0271-4fbe-8f1b-a07e02392db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bae6b2-58c7-4dfc-bd32-f052b44a24dc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b4f1fa-eeb8-4328-a851-3ee196cfb301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad4b235-f10a-43d3-8a9f-26b136e81fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "349783a2-a2ff-473b-9269-d69062ae0f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5804406c-f2b1-4458-9020-70d2ac458517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571ba380-9fd2-4449-9de6-1943a31ba9f2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7f2748-4953-44c3-9346-72d5dfdd1aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602a8e37-49b9-4581-a385-1ef25638398e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4dfc82-357f-44fa-a629-dca8673c04cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cceb8f1d-404e-4988-aa18-3b11d0c838c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2538f3ae-fadd-4bf0-8418-e37c91a66880",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856b28ee-bfa9-45f4-9ff1-64a665e89b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f8989f-b33a-49d5-b395-5957b70ccd47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4b77ee-df40-4cd1-952f-62658567df8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfdcb720-fcaa-46d4-9bba-26fb2aacb91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5147e56d-1934-4527-b0cd-086878e7615c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbbd689-616e-4925-80b4-ae1515e0d91d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a811d0fc-08c1-468f-9995-0a853ecc5113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271f3a0f-a873-451d-996f-61002507bb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c06803-3b99-4a23-af9e-d97bcf191359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51176da-1c18-4cfd-bdf5-dc0e9e016641",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14111aae-06e7-47e1-a4ca-a47520c88635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67276375-b21b-4721-bac1-49d757fb4674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee38694-f920-486f-b956-f75adb93ab4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e19fb8-7b79-4c5c-9dc8-8bde42313481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc64e5d6-ba2c-4f81-a49f-0c0b6ad4854e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c0dd90-eb37-4a74-8f91-c60b5a553ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd60ece-4cbe-4957-801d-8e0a2bcfee38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25cf2ca-cdab-43e2-8339-4ae4fcfb37e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dfcc4ce-65f8-4de4-b47c-3b343f763125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004c43da-a4c7-4f07-8668-850b044347ad",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb1c444-7973-4528-98d7-d07aca32da40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fce13c0-6f52-455c-a17c-716c2d89696f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9261719f-57a8-4a71-9795-32a1a10219b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631c45ff-0434-44f3-a3a2-d8e1bf69ec69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78587473-9780-45f8-b00c-11f587401afe",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05b1221-2532-454b-b88d-d94e705e3a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16150eb-c00d-4fe8-9e57-2ac344e3549e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74766f25-3619-4eb6-9631-0fdc7b777ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d44d27-a6d7-4e7b-8faf-5af282a5a928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a06a7d-f3c6-4ac1-9f0e-858a3b9e5a76",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c06b49-0492-4af3-abe9-c68f4faf129d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd0e852-51e0-4fe4-82a2-12a65b628c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "242174b8-999b-432f-8f7a-62ba9e1c234d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1796f043-b9f6-4fdd-818d-3edd3e98beb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c43d2cb-6ecf-4787-90dd-257451f8d9ab",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5334b079-4cab-4b59-bf2a-1e9b7ab91a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e69431-fd88-4260-866b-b08c33916a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f999437f-8387-4612-b200-76dfb3ec3494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafc0ce4-1d0e-440a-8363-55524b73c2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d7fd56-0445-444f-a332-6a4c2cbaa3db",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f78afbb-6d50-4377-9f83-7e3ca576ea5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "843f537f-be25-4887-92a6-8cf9a72cc591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dba81d4-8d04-49ee-af93-eb44ad345320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5079a885-48ea-4d53-8a21-751d1250388a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7bb15c-daa4-46b3-9019-9ddcb8f2a719",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1550c8-bb82-4c69-9cc7-4b99ac24005c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44f16bf-6b94-49e0-9d2a-f31d9f894cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e77bcb3-0044-4e13-acaa-90b9fd441ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fcc51df-6143-44ab-8326-673fa8589a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0aa5646-1cea-4b0c-be23-bfaccc894b6b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c843e3-d3cd-40e9-9d21-f3ee56c14a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d20b32-27cf-4f6d-8aa0-ec34dc48f21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189bb176-0447-48dd-987e-44aa5982b84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0069ed2-785d-4418-8884-027eeb65d0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c090baa-912c-4a4c-b343-048ae55f78e4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f113fdd4-053a-49cd-8a73-4e415e54acd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3963f0c5-3040-4c6c-b6fb-d8f5fa0f147d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2be2a33-d4c9-4524-a65b-8e16139968ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a230a91b-3d17-40d1-bb26-2c9bedb933a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d2f20b-4c54-4f58-a6f6-16c382218809",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060fbe55-5fe8-4eeb-b54c-d2182e42ef7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b71cc6c2-4144-4b07-81cc-71999fd0e95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b5627b-9889-4afc-ab86-79ba7c1a79c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17e278e-aa7e-474b-bf36-668e187512cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6c5343-157a-46fb-bf72-a530cd5d1b21",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795d177f-9ad6-4354-a9c6-5bf8c2078678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06b9afb7-aa90-441a-a28d-b2b895a0a636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0b2a51-944e-4d10-9eab-0551bc8db027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89effb3d-c607-4205-b6de-cd4a96ea5dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdeba687-351b-4f31-87a3-a557abc7ef12",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269b56ca-834f-4107-9d18-804bb14a2954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0acebaa8-611f-4fad-bb72-35a366658fa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd92045-9584-44be-b940-c40311d2f74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c0d1e5-c1ec-45bd-9028-0896a8d15a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79569bc2-3835-4715-aed6-361e3ee36422",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25975b9a-e00b-41be-80c2-3d119049e79a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "454323b9-2c50-471c-b039-05a6fa800369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763f56c9-c651-4faf-8a30-500cfde16739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68258fa6-7532-46f0-a11e-0c16ba3b88c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8781d36a-e2e0-46f4-8772-896ba6707492",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a65ba66-20f8-44df-85b9-0ba542032a1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9ac5c20-72c1-4f14-a99f-de96da797cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec80efb-c137-4ada-ada3-88e13ffaf1b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5471b13f-40e4-472e-a0c6-1c6438021011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb096c5-7216-43f0-b456-477b787958eb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c709b380-94ce-4138-9bf7-4b0d77b86645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63682408-2717-45e5-b274-ddd79c2d4ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4c8f55-6dc6-4767-94c0-1f8dd6fdb706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d15427e-69ba-458c-bdc2-dc515ebbcbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f1b2c1-671a-4e7a-8722-3cd1188b6540",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1556d1d-f0dd-4c59-826a-893fc1506a4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "307eb8d4-3925-4286-a0ef-08f21a7ac871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c2c95d-d2a3-4b26-8538-eb937f38c16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1fa132-afe4-48c5-afb1-94d791817f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e4f24d-09f8-4984-92f4-9d547c127bce",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8c7f90-b650-4f66-b56a-f64537571e75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b810cd4-d90a-4a0e-b21c-ab97c452adbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bf92b7-3c21-40c3-8a82-d13fc769ada6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97e90dc-dd03-47f5-bf38-6345a07766d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99eb462d-c013-4c49-9745-5c8e8cdca698",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ce69b9-0ab9-4ce5-b4fa-32dd19f7dba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e31a9f0d-3808-4235-8d21-897d2410af9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d19700-a875-43a7-b957-6f753c07a190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74fcab1-af94-4aaf-af2a-e7e8bea19ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca32691-fcd0-4de1-9c02-27e8dfc2f542",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc2d486-6d36-44ae-bc1a-4dcb0be3bb78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e7b759-8053-444d-ad41-1852535815a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eee1420-b4fd-4c1f-aaa1-08991cc77e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed9ba52-5497-412f-b813-b06b62be1c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d40ba1-103b-4a07-bdf0-fdda1fe5cfed",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa81d0f4-6f30-401b-9c49-ee5bf8115393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e500baa-1da5-4297-b314-a747ae2e8897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cb8691-17f8-49da-b01b-00f91226805c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728ccc7c-1001-4c98-90f4-93e9add2dd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6967f170-61a5-4568-a138-552b8eeba9cd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24b0d44-7110-4495-bdf3-a06b35b35c46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "780675a7-140f-4942-a65b-582363cc663a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf3d1cc-712e-4a1b-9627-ae18dbea3f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567f24a7-40c0-483e-811c-717ca06c968e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9ba213-fd55-4d77-80c8-3bb592604995",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119e6344-03a4-4307-b3fc-6b729ce5cca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0513597e-92c4-4352-afaf-75e5e1c55087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0d0624-931f-42a1-9380-4f2c27a15748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb203aea-158f-4e16-b87e-a1f659d70cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333ef35e-a4bf-4027-8ca4-1e5b18bba595",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336655c7-d2fc-4b06-8b33-5e2931149b99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c7bced6-1d3b-49c1-b3ec-1d823dd18719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc90ab0-de2d-4024-88fb-b5f60496661d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1edcf39-aa39-4f15-b0dc-f7f6c72d69cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eeebb06-8766-439f-ac2c-60c56d1343eb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0477f1f6-6cd1-4a1f-a89a-1e5a4ea2c285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79525169-e3b5-4496-92e6-7849ff6eb548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb4a08b-71fb-4013-b9c1-f163076bf2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ebb54f-e04c-40f4-adbc-c2fe07a4324c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beef2129-ae30-46f7-a32e-28152b994e06",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e46f82a-9f3e-4c6e-a150-d6eb6e880d1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dda88a5f-3076-41de-9d1e-5fd96c6b2329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafb6c00-d177-4d41-879f-b5f46226c1a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9aee55a-e179-484f-a696-bdd19e616923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4c1530-00bc-4cb5-a111-232751e07d76",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e35df54-7e01-423a-8256-9e13e7d833e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be7fef01-287b-4326-ae33-195423a3264a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80e8a22-6d83-469c-9ba4-41847adc5dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b90c03-3a87-4888-bd67-2621e2f003ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927b2899-1aa5-4613-a9e8-d66982ba7f74",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbb1a93-d119-46c9-b386-1ef8875dceed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2e22049-ee64-4e68-b5fd-4f6c884613ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28341633-e6af-46fc-a62c-260753eced98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe87109-654c-419b-a5cc-4db27bc12848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0629510-e284-46b7-ada8-f9b7dedd5f8f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed39d8be-552f-4cd1-8068-b43a875e461d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49896853-43e5-403d-b41d-6e0ebe5b86dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1659d32-234b-4788-8593-fd257a2c0975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa8b30c-70b9-454a-8138-9a83b5bdb0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2eef31-cec7-4211-9de8-9cbf151aa813",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bd056e-ff3d-4182-bf80-e1c39b25246e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4aa0a01-f46a-4080-bbfa-c00d076be305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b441f5-7947-4bfd-b686-86bbf8e17a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941cfde8-2d2e-45b8-81b0-f538899062eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b45d2f-c5dd-44ae-a2c4-ade089b57f59",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d48979-217e-44ca-ab7e-3cfc129bb5e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afb08b4a-6e7d-45ba-bb9f-5b3fca37eebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cbb424-d7de-48e5-99b1-ec7cf6e0024b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1f26ec-83f4-45c6-b2ce-c197db084eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c4c8d7-1fcb-4e77-9c7f-e76255f9e3d5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b28445d-0a6e-4465-b69a-b15c855d931e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0983bc45-0dcf-4210-9e28-c58a68127580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7792187f-84d0-455c-a4ac-7398254ebdad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfc82ba-5058-4ca9-909c-72a9200f53a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09c22a9-5fc5-412a-983b-88b54325af46",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccabcb3c-e849-45b2-abf5-ee3292ae9b22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "507eebf4-b82b-4d00-b971-f580fc318526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5eb349e-efb8-442f-8059-b2445e4f45d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d85905b-b846-4110-b55a-13fd53398357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6686eaae-34ca-4b1d-a70b-b7cb4c5ba812",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52b9a85-c561-449a-ab73-3fd1d986fb63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c34559e-5e88-4b8e-b932-b99a94dc6c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2905e42-8b19-4819-b473-0861ca848504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9876892-acd0-49a3-b026-8b7eeceb0604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4cf1d1-33c4-48a2-92e8-0a60fa6a207c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21d2544-b71c-4934-99d5-27a62d22e700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e002a2f5-b542-4cab-a448-8e58744225a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0178dc63-fdaa-4d4a-a0b4-914d879cacc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f9b333-12c6-47d4-a3cc-71ce6cdd051a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4737792e-d475-4fd0-b01f-ea5055089910",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d0321c-a4c4-4147-9457-b483cc101596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44a712b2-5416-449a-855c-59aba8ec1ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c38397e-c0a9-43c5-a623-e85b158f9d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55721c9-3185-407e-83fb-ff0a9ad11b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a509f718-3c9c-4bd1-ae8e-95bbe1c2ffb1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649190d7-82de-45c5-afa5-7fcdf51535cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76de7750-35a7-4e77-950f-0bedccdd900f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf30bfc-2a95-46f1-8ff5-d3bb54b0fa14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4481ef7-56df-440b-b6fd-8e62d7110f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5977e152-7071-4c22-baf6-ae5cb008abd2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df586d0f-c995-4810-b820-75db1ad271fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0155f0f7-9081-42a9-9628-6b7dbc293264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a754dc-86a5-4817-b92a-d96b11bc5910",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c563f3-4505-4eab-86c2-ff5d122d4b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516f39ef-bdb4-4df1-bcbb-b4e8654e0beb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87eefe79-85d1-44bc-812b-df9404b11a2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da718f21-617c-4e22-ac96-dc8b5d51825f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbee9b09-a39c-4b6a-b3b0-c7ccd473b9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb08241d-921d-4d65-a08e-5b2f09c83bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfbfe14-cec1-4900-b8ea-bd441d1d13af",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36bae91-ff08-4ae1-80b5-0858dfce35eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2573cf2a-77c2-43d3-a5eb-e78861bd2cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bf5bd0-9dd4-40e3-9ffa-4b637f6652d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be18dd3-7695-4d3b-874e-44c31c89fcb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c51e376-d681-48d9-8af3-4a5d633be19e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28831828-63cd-4b5d-aeb7-0fb94171b999",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6deb610-4e6b-4f56-ac89-fbc682b88425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acecb41-5f38-4d64-a2d3-2059eb95b618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a704ba04-3490-4a4c-b8a0-caf9cc60dc6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819113c2-f250-4b50-bbad-5f899c137ec0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0d9349-ab94-4100-aa49-4f4479095268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "875be1af-e13a-47d0-aae1-12863c69808c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2442fbd-a07d-4857-a015-77dc1ef73df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d95d8d-ec7a-45a4-b077-d5cad8558112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91acba8-81d9-4c98-bc0f-ac40af624c2f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218667aa-06cf-4be2-b285-498b94ed7d5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e4f998-e3ac-426d-9bfe-699214ac24f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7e53c9-1fd8-4b6f-a95b-c66431d5c1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9706b78d-7be7-405a-9890-a6840ed043d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f219b5dd-0156-4e48-89cf-ea01c585b1fd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5d2bf2-90a8-44c2-b371-32e55e7889d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d5d05c1-4076-4d94-80c1-e76d25c03c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2db5e0-c98e-4cf2-a062-b16377e1dfcf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549ae1ba-035a-451c-9b3b-0f533e0d7c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f4b99a-cd61-49fc-9074-ff0a8dc1160e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979db3a1-1d0e-463a-a4bd-09ef7d0a4dac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45024693-04c9-4f6f-9142-792ba17607a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c4d986-0102-4ec6-b57c-d05fb8acb389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01786f5d-a8ba-4e6b-8ea0-ec5fd4b0edf6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "170fa807-bc38-4bd9-b669-fb5f7d85b798",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb4bc959-52c3-469d-aa88-a5fe3a630300"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23bb2cb2-fc0c-4cfa-b8df-dd7806fa8e44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58becc62-f0cc-481c-9d34-03f6d590b973"
                    }
                  }
                ]
              },
              {
                "id": "e05946d0-e630-4599-a9ad-1af76adc3e09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dbb48b17-b0a2-4284-8156-866c9d6ae1da",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ff4f67-fadb-4589-9590-01b39600bed6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5bbf7a37-7a60-40ed-b1d8-833d685aaaa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa647b14-e12e-47f3-8883-5f5a4511d534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf1194ae-93d1-4b2b-aa56-6d10499ee916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e364a897-1118-451e-95c2-3dd98dba3285",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934ab174-f3f1-4c06-9087-da963db96573",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5760cef2-7f68-422c-9f90-2344d4721dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f96e18b-689c-485f-ada7-3585443807c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed7192d1-73a1-4ceb-82f3-7925738f1fb8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a3bd885-b45a-4985-8460-450ee278b204",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b226ddd-5076-4f57-aa1d-af52ff472f6b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2daef1bf-7594-4b75-b719-2d7a2ec92fff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84b38cb9-cbea-4a99-9a9b-12adda2bc7d4"
                    }
                  }
                ]
              },
              {
                "id": "d19de9de-c664-4e25-a1a8-e5113cfa9de0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ebd6322e-e18e-47cf-99a6-d2a5d560469b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa80846-83a3-4a45-88b0-c0958e0453c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ebda0ea3-11df-4f0d-9e3c-59bf7ea10bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977b2b5b-2386-40e4-9c9d-9ca2c84bddb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7c530d-c719-4e28-b4de-0da907587d95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2e31edd2-a6f2-48f7-9655-84dbde1baf0c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d4fd26cf-ed1c-4d4e-bd06-43467a039e3a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89426b0b-ad36-449e-bf3c-afd08b58c172",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fc46cb1a-5dcd-4164-9cba-b6e7c763111f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84abc2d9-10ab-4516-bee7-e0e407965b6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d6c9195-3b89-4bd1-ad21-7665fdb3478c"
                    }
                  }
                ]
              },
              {
                "id": "9385f941-493d-454c-aa95-4255a1773bc3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5b3e23e-6112-48ff-b84d-37b3ccdd6903",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "27a680e5-6e87-4eab-997a-25a1b842d903"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "beb8453a-1965-4653-b58a-4a836b6f72bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e3f7d17-f999-4856-8ffa-0aae41c57466"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27f758a5-17b0-48d4-b2d0-0ef3c5599bb4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a3736828-5786-4adc-a824-4860c0d956d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45c1ebb3-1eba-4389-9f81-11f76075b376",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2254f52a-b1ed-4a65-b5ba-cab29768ded1"
            }
          }
        ]
      },
      {
        "id": "3281546f-2368-4e2f-9af2-84ba6017144f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "27ef4c54-ecc2-40ac-992b-e87c882103f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59195ef2-0e80-4738-8d39-71e4935690c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68e1dfe9-74db-4622-88e0-3c1fcf6ab96f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91348d9-99b5-4dff-b70a-3b3e373ae3a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "557b4a26-8e84-4e29-a8a1-207815798d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8325db8-7a3d-42b9-a2f1-fefe9f29fafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b4ca483-7b1c-4166-94bb-e683f8d01ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee1b864-755c-48f2-8775-0b999eabb5a4",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57ccb46-95c7-4520-8410-012401b5b57e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f2535060-6f17-4afb-ad7d-d525a52ef6b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262b7d51-10a0-4ab0-bfc0-5f4be287d86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fec217db-f06b-4b3b-8487-854b15452786"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10d936fc-5718-4e30-af83-6167e7782696",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40aa29a7-ab8b-493c-b724-73adf0be7a6d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5e98036-0268-4acb-920a-9bc8a40867cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5bd720f-396b-4f9b-a9a9-ed2aed2453b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f0ecf1b-5908-4bf0-9e4c-853c0e9c50dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "51fe8a50-f266-40e3-9932-f4020034e856"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcc5d598-8944-4e76-b532-4367843e6992",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "169c1961-dc95-4942-beda-4a263b9e2389"
            }
          }
        ]
      },
      {
        "id": "06dcf5c0-0d00-48d1-a3a2-530b9981af9b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8056beda-ff4a-4af8-9346-45652bcaf244",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d66201f5-504f-4582-80a0-66e20cd435b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d6f9d00-032c-4647-bac9-a3720b39bf2c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed19cb14-9ee0-4c1d-b6d2-e35cde950f8a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce2b2ddd-f1f0-43b8-a282-27a9f9522028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67db1969-1232-4d1f-b9ec-9a231cdb28e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c57c461b-04c6-4a2e-98bb-c69b044ebcee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed740419-ce14-4246-bd34-1b768b8a51d1",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2cd69d-ae63-49c1-858e-26300c4cbba4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb1e6c2-3981-4e54-ae36-6a13dd6dd7cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "878a5722-b9c7-470b-92db-7d58c5fbafbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e47c710c-55f9-4e49-a472-92ac631e43b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58c24f41-3e7e-41b6-8884-32f880e5c85e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61d05256-c393-41a6-b002-01040e2e3d29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82863854-ea5f-4b6d-9811-0a5a0d7b02d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c38946cf-e5f7-4aff-9f5d-59b2bebbbe15"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2672b24d-ba93-4a23-bf89-5c0491a9ddc2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c646189d-ce24-4a01-8ff2-adee2cadedb6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cc623f1-162d-4a36-ad59-b2701195ad40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f916ae8-7a26-478e-9fac-a05975482ace"
            }
          }
        ]
      },
      {
        "id": "d2098912-051f-4a54-9460-e94295043527",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fce20175-2b45-4c87-9945-ee244fa61880",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a32c7f8b-bc10-4373-92d4-b8df557d6d67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c0b985f-6dac-4d71-a299-c5a6d35e7977",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e390adb6-eb13-40bc-bcdf-1fe30ec9fd67",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2db93668-6784-4444-89c2-10a7a9f956ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a3de26-9340-4769-a1a8-d4ab7628f888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "095cd259-7861-4be6-8108-18f5b3b51b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6009ac76-0815-40e7-ba1e-661dae3e9183",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d24aa2-9f4f-4e59-bef8-5d200821e0ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "67561226-7460-4562-a54d-25606a6bbd96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1caf5464-694b-4401-91c3-3db64b11d659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efc4a728-54e4-4a69-8c2e-3cff65fb3b4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb5e3939-128b-457a-8fbe-c7992ce9c9ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2826f18a-9add-4501-b7e7-4b821d41f95d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90fff7bc-3564-45a5-bf44-f4fefdfbbb27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc3c369c-2dae-480e-b44d-7ebba7d32953"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2075c749-819f-4b8e-b18f-3939c418179d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5611ded6-56bd-4bcc-a46d-2f63acadb9c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94f215af-7672-468b-b6b5-cf8aa34bbdc1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d2c7bd55-0c47-4ecd-883e-13f25a7c8ec6"
            }
          }
        ]
      },
      {
        "id": "1574d1b7-059c-402f-9fca-b8086b6259d1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27d338ec-a7ce-46ab-9638-e0f4fbd9b050",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f341b7ae-60c4-4714-8d94-0843e53df15d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9e0593f2-045d-4e63-9ece-87e8ec99becf",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5f27c1d-b000-4184-9e3e-da13a042227a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27e6a46d-0b83-4270-84c7-217952042860",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 16.13127413127414,
      "responseMin": 3,
      "responseMax": 489,
      "responseSd": 59.892746374337804,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677860695275,
      "completed": 1677860710005
    },
    "executions": [
      {
        "id": "d3082008-6d14-4622-8643-97ce4df35267",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d3608750-f07c-4a08-8239-e4e7fbdda767",
          "httpRequestId": "64fc0ea3-fdc5-4758-9122-26a194927481"
        },
        "item": {
          "id": "d3082008-6d14-4622-8643-97ce4df35267",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "38e5c787-f9d2-4b5e-ae57-1003c36e5b88",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "536a0db8-1bc2-4b28-9151-ded6dec3a709",
        "cursor": {
          "ref": "dfc5c84f-7972-45c1-9b29-9240b9d876b0",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f5284de2-c61e-4c3e-8a5c-3e9e1f862bf0"
        },
        "item": {
          "id": "536a0db8-1bc2-4b28-9151-ded6dec3a709",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "153dac50-9c39-463f-8268-66d8d4b3114c",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "0b9942af-5080-4261-a1ad-051d9e1b8c56",
        "cursor": {
          "ref": "5bc31087-4021-4156-9954-dfd22088e733",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c3827ef8-3642-4473-933d-c62d5bde938b"
        },
        "item": {
          "id": "0b9942af-5080-4261-a1ad-051d9e1b8c56",
          "name": "did_json"
        },
        "response": {
          "id": "aabccccb-97c1-4c12-9498-4e0159b74d37",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa44b292-703f-4582-8b9e-2a95480df994",
        "cursor": {
          "ref": "5aaaa0a9-fe6e-4962-9ac5-6dcc0358493e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fed4707b-1066-4f57-9814-c78745e9002f"
        },
        "item": {
          "id": "fa44b292-703f-4582-8b9e-2a95480df994",
          "name": "did:invalid"
        },
        "response": {
          "id": "72b86bfa-9268-417a-92d6-7c5f2fbf5a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa44b292-703f-4582-8b9e-2a95480df994",
        "cursor": {
          "ref": "5aaaa0a9-fe6e-4962-9ac5-6dcc0358493e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fed4707b-1066-4f57-9814-c78745e9002f"
        },
        "item": {
          "id": "fa44b292-703f-4582-8b9e-2a95480df994",
          "name": "did:invalid"
        },
        "response": {
          "id": "72b86bfa-9268-417a-92d6-7c5f2fbf5a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5d2189-09f5-4333-af3c-ec32a687b100",
        "cursor": {
          "ref": "1e276a80-7efa-4ef6-ba83-3fb8ae44ba12",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dd021790-b1b1-47c4-baec-c44e00111c32"
        },
        "item": {
          "id": "bf5d2189-09f5-4333-af3c-ec32a687b100",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "067a7262-2dfd-4a64-ba93-2d2e44d13425",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6664a194-857c-4480-9988-8e5fb44877b7",
        "cursor": {
          "ref": "8013b6e5-cdff-4cc5-8e46-da57bc314710",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3800a8e0-7cbb-4548-aa70-ef1a66fd8845"
        },
        "item": {
          "id": "6664a194-857c-4480-9988-8e5fb44877b7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "18469544-86cf-4766-a421-53184efc074a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1851ea1d-323c-40a0-93b0-4707951e2581",
        "cursor": {
          "ref": "9cfb4de0-3b7a-493b-872a-e4c59a6ef678",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f8e67181-f29a-4f13-9292-cc4e46923092"
        },
        "item": {
          "id": "1851ea1d-323c-40a0-93b0-4707951e2581",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a712b149-1993-481c-b38e-59f934d474ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b190681-01bf-4b1f-b377-02c14bcc7a02",
        "cursor": {
          "ref": "2197d2d1-0766-43be-bb9c-25e4a6ca76b9",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e7b9afcd-fdff-4a8f-9fa9-2835b4d1f24f"
        },
        "item": {
          "id": "1b190681-01bf-4b1f-b377-02c14bcc7a02",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5acfdb69-77f7-4184-b2ff-39c2cd6a81dd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b190681-01bf-4b1f-b377-02c14bcc7a02",
        "cursor": {
          "ref": "2197d2d1-0766-43be-bb9c-25e4a6ca76b9",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e7b9afcd-fdff-4a8f-9fa9-2835b4d1f24f"
        },
        "item": {
          "id": "1b190681-01bf-4b1f-b377-02c14bcc7a02",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5acfdb69-77f7-4184-b2ff-39c2cd6a81dd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362baf09-86e6-4a3f-a053-6e0a9add6553",
        "cursor": {
          "ref": "b2d0be3d-38c9-401f-8738-d9182e55d568",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a3b9bab8-92c6-44cc-92d8-bb635632ef3f"
        },
        "item": {
          "id": "362baf09-86e6-4a3f-a053-6e0a9add6553",
          "name": "identifiers"
        },
        "response": {
          "id": "b214f3ac-5e0b-43ad-8e09-0faee5108557",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4b2a94-0255-4ba8-8219-3e689d614602",
        "cursor": {
          "ref": "12ec368f-5923-4216-9a50-4e542fbf1c6c",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4520a08a-5e84-479e-b121-1457a5504e15"
        },
        "item": {
          "id": "7d4b2a94-0255-4ba8-8219-3e689d614602",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0bb46c46-d4f6-4eea-a5ca-568b40adf608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4b2a94-0255-4ba8-8219-3e689d614602",
        "cursor": {
          "ref": "12ec368f-5923-4216-9a50-4e542fbf1c6c",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4520a08a-5e84-479e-b121-1457a5504e15"
        },
        "item": {
          "id": "7d4b2a94-0255-4ba8-8219-3e689d614602",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0bb46c46-d4f6-4eea-a5ca-568b40adf608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4a070a-29b8-48aa-bd65-0e92df89bc07",
        "cursor": {
          "ref": "de786718-a980-4d41-b7cf-edcb9436e4a3",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d3334a5f-39e6-42b6-a2f6-1bddedeb1a4f"
        },
        "item": {
          "id": "5b4a070a-29b8-48aa-bd65-0e92df89bc07",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4d9d209b-0dca-4ad1-a148-9b0a9887d645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd16cf9-a37c-414f-b9f4-443a09a568c8",
        "cursor": {
          "ref": "c992b2b0-d5c6-4e5f-9207-31b2c9b9922a",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2c0c3113-afa5-43be-a4cd-46808fa3b7a2"
        },
        "item": {
          "id": "6bd16cf9-a37c-414f-b9f4-443a09a568c8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1fae89a3-80c4-4044-b0eb-dfc2d0dd3479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54d6f9e-b615-434c-adfd-94c8e2ddb993",
        "cursor": {
          "ref": "6920d592-ee56-46c0-982b-955340e50779",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6e5fb113-6324-4f37-b6e0-8ab8090640f4"
        },
        "item": {
          "id": "c54d6f9e-b615-434c-adfd-94c8e2ddb993",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7ee3c7b2-4b5b-43cf-9945-5c52d282a7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08e8bb8-9798-4a13-bd29-297e4e788200",
        "cursor": {
          "ref": "d27b8697-e0f9-46d2-ae02-7203bbc6dab5",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3b54075c-c155-4b66-bf76-ab9ac6400cac"
        },
        "item": {
          "id": "b08e8bb8-9798-4a13-bd29-297e4e788200",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6999b160-7ac4-4873-a070-5eff814711fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96426f2-2ff2-4f61-8e75-00120307990b",
        "cursor": {
          "ref": "8b327741-061b-46b1-a150-76453d5e59a6",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "77a2cac9-6679-4401-8ce8-c2f9c03eb047"
        },
        "item": {
          "id": "f96426f2-2ff2-4f61-8e75-00120307990b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "af1c92f8-91f5-4570-a5cd-5db48ec0f9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec0db46-815f-468a-9e74-268b6bc20ba3",
        "cursor": {
          "ref": "742ac121-885c-4fab-965d-6cb90aac8017",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3bbea396-6259-4ab0-ad5f-7fa4aa4b1a9d"
        },
        "item": {
          "id": "aec0db46-815f-468a-9e74-268b6bc20ba3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d8849d5f-7ea0-48b5-9df0-01a6f3d585fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9e20c8-d565-42fc-9816-19b340060bd9",
        "cursor": {
          "ref": "29989cc2-0462-43c2-9057-d1e3a7fca051",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2766421a-7224-4a3a-a60b-62912b9a118e"
        },
        "item": {
          "id": "ca9e20c8-d565-42fc-9816-19b340060bd9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d8de853e-eb3d-47c0-ac6e-2a8271e8c604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d240dc0d-f12b-4e61-9145-53e516e696df",
        "cursor": {
          "ref": "f093d7d3-c200-472d-b453-3738bb556bbf",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0a0f1399-8e04-4f2e-b56f-78b477460374"
        },
        "item": {
          "id": "d240dc0d-f12b-4e61-9145-53e516e696df",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7ff52d9c-5344-4d1d-8ee8-f85409c06f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c6d2e8-4320-4f9c-9883-74e0355ed7f4",
        "cursor": {
          "ref": "a3905abd-f226-41fa-8af7-5f2de0089ea6",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0af1bcb0-e0b5-4b68-aca0-0cc89533c38c"
        },
        "item": {
          "id": "20c6d2e8-4320-4f9c-9883-74e0355ed7f4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "53f22b70-a5f1-4f30-94fb-8aac9d73ea1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08f95cc-02cc-4327-b695-a886c00feaab",
        "cursor": {
          "ref": "742f87ad-c492-4ac3-9d86-b0df3118c79e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7862ce8c-5e31-4259-9df2-cb8bcdc009b3"
        },
        "item": {
          "id": "d08f95cc-02cc-4327-b695-a886c00feaab",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "820dcb38-620c-4c78-93d3-61b469d70279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b26a5cd-124a-407c-9c4d-a484759ffe36",
        "cursor": {
          "ref": "39204e60-a008-4d19-8b7a-37921457ddf2",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "196db06e-649f-4c79-b7b5-fb595000935b"
        },
        "item": {
          "id": "1b26a5cd-124a-407c-9c4d-a484759ffe36",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "37e6104a-3a37-482a-a1ad-fd56cdfc492c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f894ef-65c3-4809-be98-25c7198d1eee",
        "cursor": {
          "ref": "e479de68-6786-4e16-b654-432aa42856bc",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9a982764-9b88-403e-b6eb-a6bfd1f838a1"
        },
        "item": {
          "id": "70f894ef-65c3-4809-be98-25c7198d1eee",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7807a0b7-d17a-413b-933c-105f21bfc194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db4c3a4-78a8-4b52-af08-e62b50cd46ae",
        "cursor": {
          "ref": "0b9f5b84-10d8-422b-9015-075914fd7728",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0b56e81c-a7d3-4039-af4d-b52a6284c232"
        },
        "item": {
          "id": "4db4c3a4-78a8-4b52-af08-e62b50cd46ae",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fbc8aa13-3197-4a2f-ad44-4fea64783cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e1dc89-4dea-48e3-a717-8ba27bea4e3a",
        "cursor": {
          "ref": "781828b5-c1aa-46a4-bf0d-71f455d64a51",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1a958f46-4cf0-4fd0-9e8e-8bb656e6297a"
        },
        "item": {
          "id": "d9e1dc89-4dea-48e3-a717-8ba27bea4e3a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "25b54c02-7f67-4818-93d9-d55b05168dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364062cc-00d8-4f1c-891c-8f641184345f",
        "cursor": {
          "ref": "daa5d936-581f-48de-87de-14ea970d90a6",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e0430b33-e66f-4aa8-bf78-f55c077d14be"
        },
        "item": {
          "id": "364062cc-00d8-4f1c-891c-8f641184345f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2852d69e-ba82-4744-8a23-52511be6ee70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d10337-a106-47e3-bc7c-a57fe43e20dd",
        "cursor": {
          "ref": "a0aade3d-273e-428e-bcf7-18436bfd3938",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a0299d24-b4a9-4cc4-9abe-b92130c63515"
        },
        "item": {
          "id": "71d10337-a106-47e3-bc7c-a57fe43e20dd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fc6bf529-6e87-4144-bd95-a000179d5cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea3a7d3-8079-4819-aad1-98b8ef53bf3b",
        "cursor": {
          "ref": "63476a6f-9784-4049-9382-384f43198780",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "dee94fea-4941-496a-989e-4aa25dbbd190"
        },
        "item": {
          "id": "aea3a7d3-8079-4819-aad1-98b8ef53bf3b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1f88c0ac-b20a-4f08-85bb-3b3adfcd7a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ad7bfa-a30e-4495-b7dd-0dd8a9e0fb1e",
        "cursor": {
          "ref": "5fd2c15b-c3d1-475c-ba09-3961e127e3fa",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "695f74e5-9d68-465f-8c2c-be3a15ba9e50"
        },
        "item": {
          "id": "74ad7bfa-a30e-4495-b7dd-0dd8a9e0fb1e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "52328d5d-afd9-438b-8294-47805e381c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bce7fb7-7836-4c71-a873-600cf0cc3f97",
        "cursor": {
          "ref": "fe74f872-1305-47af-811b-52783186abc1",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "dbddd26d-2d4f-43ec-9141-06c06ad8252a"
        },
        "item": {
          "id": "5bce7fb7-7836-4c71-a873-600cf0cc3f97",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "358e4965-8707-4f8b-8b97-ed5fa3cefc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a709363-3a62-4362-84a9-44c5d659b553",
        "cursor": {
          "ref": "b048d951-a608-4124-aac1-fa6d9d9dfdd2",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "283c4a31-7761-48d0-bdeb-c7308d66acf2"
        },
        "item": {
          "id": "8a709363-3a62-4362-84a9-44c5d659b553",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2f9a7f4b-edc6-415e-8e84-f106e2fb79ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcee6ac-f8d4-44c1-884d-a62646c2d1bb",
        "cursor": {
          "ref": "afbc1e71-8702-4af4-a544-0ec462686b97",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "afbddf01-6e7e-4122-97cd-6b654db6a290"
        },
        "item": {
          "id": "9dcee6ac-f8d4-44c1-884d-a62646c2d1bb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3f9d74fe-de7f-4534-bf45-be5b280f484d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff47e14-8741-4552-8316-88305a5eb826",
        "cursor": {
          "ref": "e85d4311-59d0-4317-9929-5ec0c0b4731a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "93bad8d2-5ed3-4f0f-a9c2-e5b45b7e2fed"
        },
        "item": {
          "id": "7ff47e14-8741-4552-8316-88305a5eb826",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "16cdf229-dd1d-4bd4-9e56-b18b643e01fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad88930f-eb29-4b7b-8de7-cb359778f447",
        "cursor": {
          "ref": "967f8593-f5b0-45c8-b0b9-e85ae4458d95",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d6b8ed65-3cab-4aa9-84a0-70099876da04"
        },
        "item": {
          "id": "ad88930f-eb29-4b7b-8de7-cb359778f447",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d96b1e8c-387e-49f4-9b0f-a8d51d11b4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7dc5fd-1a54-4698-9f44-7c37bcc093e9",
        "cursor": {
          "ref": "144640d2-2808-4b40-875e-894a92d88b85",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "42fb0b86-dbed-4f11-920a-a3734499d88d"
        },
        "item": {
          "id": "3b7dc5fd-1a54-4698-9f44-7c37bcc093e9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5523abd8-1e75-41ee-8002-a623ae99d4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06960f03-e861-4085-8a52-9c927377a511",
        "cursor": {
          "ref": "21dca756-2732-464c-b133-f8aa0c915970",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "463dc965-0165-4c33-bb68-88baa1c76f26"
        },
        "item": {
          "id": "06960f03-e861-4085-8a52-9c927377a511",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "20dc4095-6a59-4564-8e28-efe36f598d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4ebf11-ddbc-46b0-bfa6-ddb34cc0feea",
        "cursor": {
          "ref": "231f4e44-dec2-498e-af78-a739ba757f18",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "762620cf-ded9-4e9a-9fb5-0917a2e9b336"
        },
        "item": {
          "id": "2e4ebf11-ddbc-46b0-bfa6-ddb34cc0feea",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f5d2e09d-3abd-4efb-af8c-fa3ee3c41991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771a350e-9e03-4e8a-b824-72ef2a70596a",
        "cursor": {
          "ref": "964b548f-8d87-4ae0-b0ca-4eff87595e2a",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3e4f93e3-5195-47dd-a5e2-799633dc2459"
        },
        "item": {
          "id": "771a350e-9e03-4e8a-b824-72ef2a70596a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f77b1ac2-af88-4055-90c8-871d0a9fc68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2c4f60-3f2a-4502-916e-ae0f8bcef7aa",
        "cursor": {
          "ref": "7c16a20a-9235-4400-91e4-3d1fbbec6790",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a5582c07-6869-4553-9609-1b1dba5f3722"
        },
        "item": {
          "id": "3a2c4f60-3f2a-4502-916e-ae0f8bcef7aa",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2b29b95c-c76c-4f45-b524-f4393c74fd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627b5047-b17e-476a-b77b-13c3b35ffafe",
        "cursor": {
          "ref": "373b6f03-7f10-4f40-b352-92e973d80767",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4af83029-c9ac-4224-9c8c-33f575660422"
        },
        "item": {
          "id": "627b5047-b17e-476a-b77b-13c3b35ffafe",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f5283d53-ae74-48fb-85ff-8b67df4c0195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc88cb4-e817-4bdf-a729-9d8ad5fd530c",
        "cursor": {
          "ref": "83698c03-4a1c-49f2-b210-7e481adc3955",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ec177dae-f71b-451a-9b91-e0955a8ace14"
        },
        "item": {
          "id": "efc88cb4-e817-4bdf-a729-9d8ad5fd530c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2182e0cb-73c3-48b0-bf22-f1d28ab9d220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e143a88-0eb0-4ca0-ace6-6a7466336bed",
        "cursor": {
          "ref": "0879899e-4559-4618-8304-c425a33e64d1",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "694a3d69-fa53-4b6d-86c6-fef607d16576"
        },
        "item": {
          "id": "1e143a88-0eb0-4ca0-ace6-6a7466336bed",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "011eca2a-3a7c-48f3-bd6c-9cd0468f5c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f7b4cc-d592-40b9-a8bd-132a0959fef6",
        "cursor": {
          "ref": "a7d03ddc-0849-40e6-9a7e-8111db4b24e7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "565c5c64-380a-41f0-b4f9-3aa38ec92b97"
        },
        "item": {
          "id": "b8f7b4cc-d592-40b9-a8bd-132a0959fef6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c9b157b9-c59a-4e80-8ac1-beb6284bf2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e33134-caf3-4840-860e-91a4de61c070",
        "cursor": {
          "ref": "faba75ad-cff2-4fa3-9965-9453627adbc9",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c2a5a2af-76cc-4f36-abab-c6e7ddd793ec"
        },
        "item": {
          "id": "b4e33134-caf3-4840-860e-91a4de61c070",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "65cabe76-ddeb-44a1-858b-aed4dea5dd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad24ed3-483b-456f-ab13-7770a6189354",
        "cursor": {
          "ref": "65071a0c-d04d-48c0-b148-dd98269d1876",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9eb95b6f-233c-4520-a51b-b815b0368057"
        },
        "item": {
          "id": "1ad24ed3-483b-456f-ab13-7770a6189354",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5363f320-f307-4a87-84db-5e138c2e0090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4410db04-cc3f-42f0-85d0-428eec165cc7",
        "cursor": {
          "ref": "f0594672-3d1e-4039-be6f-a49ad71c0044",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a56c5631-d05e-42fb-b888-7c7ed67fa76f"
        },
        "item": {
          "id": "4410db04-cc3f-42f0-85d0-428eec165cc7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "10918b19-cb80-4b84-b483-50c6cb4770d0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb67658c-4108-442d-9170-e6126365dc19",
        "cursor": {
          "ref": "4caa4569-60c6-4c8f-bf06-56ff4d29f270",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cf652ccf-5275-48e5-95c2-b4b05368427f"
        },
        "item": {
          "id": "cb67658c-4108-442d-9170-e6126365dc19",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9619a3e1-d7a4-4295-807e-c33af7972a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945a7936-8de4-4e15-91a0-05ddda1e8862",
        "cursor": {
          "ref": "103d95bc-d518-4564-b02d-bedd0eb7ea09",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "905dfc72-f8a7-4756-a9c6-945bf96b2754"
        },
        "item": {
          "id": "945a7936-8de4-4e15-91a0-05ddda1e8862",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9abd5a59-8cb7-414a-93b2-c598405bfa00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646e1d4e-9722-4f93-9395-a853e0e5fa01",
        "cursor": {
          "ref": "c9612097-2dcf-4643-a3a2-1c383ab51b1b",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6a94d93d-adaa-437e-ba87-e22b9736b4b0"
        },
        "item": {
          "id": "646e1d4e-9722-4f93-9395-a853e0e5fa01",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8ee27ce4-14d4-4de8-9f9f-1215d5f2e171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a229ee80-f9e8-4b8d-b05d-86478f2629f0",
        "cursor": {
          "ref": "8c8ea1a5-ec75-4c23-8e79-7824a350d350",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c49f0708-db8a-42da-8712-f789bf2e73ce"
        },
        "item": {
          "id": "a229ee80-f9e8-4b8d-b05d-86478f2629f0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e34e7b4a-81c5-4036-b607-cbc9e8f47a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a937c2e-4137-4bae-8061-c12cd5efe55e",
        "cursor": {
          "ref": "34d57683-0c78-42d9-bd06-b39151ce9030",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "50e77a4c-e624-4693-9dad-2c8fb42de8fe"
        },
        "item": {
          "id": "5a937c2e-4137-4bae-8061-c12cd5efe55e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "493c47ba-ccad-4d73-a147-d819fe03ffb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c23385b-4fa8-4400-b0db-3b768d59f082",
        "cursor": {
          "ref": "9f80f41b-d28e-4f89-a309-01a6b02f1eb8",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a98ef5c0-e2ab-4b1f-b79f-8e737f8f9241"
        },
        "item": {
          "id": "3c23385b-4fa8-4400-b0db-3b768d59f082",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "15cdb096-c0be-499d-8f40-b9b800d9353f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666d1808-5bce-4396-8e7b-0977b8e50fda",
        "cursor": {
          "ref": "5857aefb-2ae8-4951-9775-a6d3d6ed47b7",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ab19ca9a-43a8-4f33-8f4c-a9b1b0043485"
        },
        "item": {
          "id": "666d1808-5bce-4396-8e7b-0977b8e50fda",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7d5817cb-0a01-41ba-ab31-4a32d5309d7b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a010be9-6032-4fd0-9da9-5b039677f6c7",
        "cursor": {
          "ref": "9eb5e6f7-64e2-4fe3-bed9-ca7ab47d0de8",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7caebd38-72ad-43c3-9c4f-5acbee3929ed"
        },
        "item": {
          "id": "7a010be9-6032-4fd0-9da9-5b039677f6c7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4ce078a2-a538-4fbd-b8e1-b1e57c0639e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a782cca-7b20-42a9-b2cd-71433c26ebc0",
        "cursor": {
          "ref": "15d32f2e-5219-4f82-8120-eaec24cd18d0",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "47cad588-4c60-4364-9a96-3860e6cb2d33"
        },
        "item": {
          "id": "2a782cca-7b20-42a9-b2cd-71433c26ebc0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0f0c9e36-75e4-4cf3-8622-59eb1569f287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76139169-f435-45d2-b248-a9d0a2e2cc4a",
        "cursor": {
          "ref": "ab6682cd-03fb-4d87-ac55-92de4313e04f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f94a1eb9-3f37-4d67-8085-cd8c6f5eec6a"
        },
        "item": {
          "id": "76139169-f435-45d2-b248-a9d0a2e2cc4a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ceb50085-2b0a-4658-8012-fb69a3aed107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965fd979-24d5-4da8-9919-378a115e3b9d",
        "cursor": {
          "ref": "d67185c4-6bc0-4923-88ff-fb4bd97c299d",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2c57290b-3a00-4186-b532-c61b6170d240"
        },
        "item": {
          "id": "965fd979-24d5-4da8-9919-378a115e3b9d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d12ce0a9-6ba1-4f0c-89b6-dc7e27470c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46760a6-674e-41ee-8912-2c089f6ba14b",
        "cursor": {
          "ref": "4c8bc8a8-c407-49fc-842a-6152ada95375",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "00ee9cc8-8109-4352-ba80-f0aba7d26551"
        },
        "item": {
          "id": "a46760a6-674e-41ee-8912-2c089f6ba14b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1a16349f-e5c1-49d7-a561-4f944893bc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4da9fd6-f8f0-4541-a938-39ca37028faa",
        "cursor": {
          "ref": "c27af2fe-60ca-470e-aad3-9c851ebd2512",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8668251f-e3a0-4e60-8d63-391e7fd7f5e0"
        },
        "item": {
          "id": "d4da9fd6-f8f0-4541-a938-39ca37028faa",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "08125c58-f8be-4d80-b9f3-558fe92e46b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6c7085-b464-4b12-a449-cd641aadfbe2",
        "cursor": {
          "ref": "c0c72eb6-ed3e-47f6-9b98-6b2a57daaec4",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3b3e9f0f-25c6-417d-8683-8a982892f187"
        },
        "item": {
          "id": "bb6c7085-b464-4b12-a449-cd641aadfbe2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f2f88a4e-38d3-427f-80a5-ebda43683aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4c9a00-0bda-413a-baf4-a0a74badcf7c",
        "cursor": {
          "ref": "d5479258-1941-4ba7-9c63-39589d0327f6",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "27a0853a-82d4-40a4-a31c-bf11e6247ea0"
        },
        "item": {
          "id": "7d4c9a00-0bda-413a-baf4-a0a74badcf7c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "15cb07b5-44ea-4f4e-8b9b-f84fbfa59326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb0d059-1a14-4fb2-8444-6d0d4da2984a",
        "cursor": {
          "ref": "0e904899-d1e3-425a-9641-5ebd5a43d3d4",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a63f8a49-cd03-4484-9f4a-9acbc0062381"
        },
        "item": {
          "id": "7bb0d059-1a14-4fb2-8444-6d0d4da2984a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "455605c2-6920-4234-8350-80218e7332dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae7c89b-8293-4b7a-8179-4c8518ab9678",
        "cursor": {
          "ref": "913c9d1c-4f02-4430-9f76-5568e85a51ed",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fb97110f-09d2-4dac-8980-a3c750f288bb"
        },
        "item": {
          "id": "4ae7c89b-8293-4b7a-8179-4c8518ab9678",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "357b4a83-decf-44c5-b1af-c74eeb749624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c820a848-e51c-4173-8ac4-ef97be711181",
        "cursor": {
          "ref": "6ab0418e-679f-473b-836a-061632272578",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6cdd5fed-232a-4a67-9bdf-76c019e30b84"
        },
        "item": {
          "id": "c820a848-e51c-4173-8ac4-ef97be711181",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6da3e00f-0821-4a4a-82b9-826a6974e604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4b1c60-8666-4556-9ec7-5339b293f660",
        "cursor": {
          "ref": "d464116b-9eef-4db7-a701-79bec4d45372",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ef7f193c-947e-4b47-a49b-1b8e43ce3a9e"
        },
        "item": {
          "id": "8f4b1c60-8666-4556-9ec7-5339b293f660",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e04dd818-ee71-4609-86e9-d97f87e66d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3281673d-2ee6-4422-b11b-caae1a331b7c",
        "cursor": {
          "ref": "cf1d2e23-6f90-4f02-bd4b-f041025ac5bc",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5cf63592-5614-4bab-a3dd-373cc6f8f50a"
        },
        "item": {
          "id": "3281673d-2ee6-4422-b11b-caae1a331b7c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1d4df290-29b0-404c-8883-2ad51f8b5a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1a5868-f43b-4a70-b7b8-b9fbf863692c",
        "cursor": {
          "ref": "76f7d9fd-ebee-43fd-8eab-e8d94375d0b6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cff6e6b0-4721-467f-b25e-1fceb69ea494"
        },
        "item": {
          "id": "4d1a5868-f43b-4a70-b7b8-b9fbf863692c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cfaeb9b9-731d-4b87-b5a2-2a4916376742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98da4793-f20b-42b8-b5ee-539ab0e499a9",
        "cursor": {
          "ref": "b24a66ef-71f9-44bd-bc2f-1daf64fc6d80",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "90b1c9b1-b681-4c5b-a057-dcbe1f29ef12"
        },
        "item": {
          "id": "98da4793-f20b-42b8-b5ee-539ab0e499a9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6880d475-8d42-492e-af67-369c03b2b6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91534ce-1d11-4ded-8ff6-f593921d1e03",
        "cursor": {
          "ref": "e5daac07-8ed9-4e59-86ae-c859d74c612b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ed137809-1fe8-46bf-8c8b-9887a5f8bad4"
        },
        "item": {
          "id": "f91534ce-1d11-4ded-8ff6-f593921d1e03",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fdae6367-a48e-49b3-a6c7-4d30c9ed923b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96cdceb-68fc-4ba6-b348-23b5b6a50028",
        "cursor": {
          "ref": "08a05a40-f55c-4c5e-b0d1-5ff8972b557a",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1cb4885a-a839-4562-83b7-ec4889946e8f"
        },
        "item": {
          "id": "e96cdceb-68fc-4ba6-b348-23b5b6a50028",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ee722f10-cce0-4b26-8ca3-936cb696328a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43fe711-58b7-4892-bae7-2357bc5795d1",
        "cursor": {
          "ref": "9a63ce59-cf36-43c6-becd-5b0e6230c1fc",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f5fcddd2-1581-45ae-bb03-4be032d4d6fd"
        },
        "item": {
          "id": "a43fe711-58b7-4892-bae7-2357bc5795d1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e42ccb52-44c6-4312-a039-cab8b510d31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd6105d-c2d0-45eb-a305-2b005fa0a58d",
        "cursor": {
          "ref": "e108c5f7-dcb1-4020-8d3f-716ca6fd0360",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "994efaf2-2fb2-4d02-90d0-d182c3b443c8"
        },
        "item": {
          "id": "5cd6105d-c2d0-45eb-a305-2b005fa0a58d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ad304043-25e5-4ec2-8d4f-0d833079053f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8655ae5b-8057-459e-8bf9-49ccb24c382a",
        "cursor": {
          "ref": "49b32cc6-15c6-4e41-848d-648a9aa4dcd5",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c837dab0-207a-4f80-b22e-7bf78e45845d"
        },
        "item": {
          "id": "8655ae5b-8057-459e-8bf9-49ccb24c382a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "373eee79-d691-4c60-bea1-1cf8ff170620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e00c61-0273-4ef9-853c-4d17b085cf60",
        "cursor": {
          "ref": "f425cdbd-acce-4ca8-8f20-d2846acd346b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "54703fb9-efae-4017-80b8-88acdfde6b65"
        },
        "item": {
          "id": "48e00c61-0273-4ef9-853c-4d17b085cf60",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "00f09aa2-02d6-413e-8702-f4ee566fefff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cee0867-29d8-435e-aad2-c47c070209f0",
        "cursor": {
          "ref": "bec809cc-2d09-4f94-9994-887865ee3d9e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6bf9e2db-2a68-45e1-8356-fa6f818a5bc7"
        },
        "item": {
          "id": "4cee0867-29d8-435e-aad2-c47c070209f0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d182ae25-f032-467b-b6af-7ceee692380e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe73023-e4ee-4128-b233-69601026a416",
        "cursor": {
          "ref": "bf40cca3-481c-4134-87c3-852a773493c4",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "34df4389-6d33-40a0-a83a-5e6ee2a1cb55"
        },
        "item": {
          "id": "cfe73023-e4ee-4128-b233-69601026a416",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7aadc542-6c55-4a2d-8be4-0cdecea3bf60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bb8ba7-40d8-4a3b-aef6-9cc85cf5353f",
        "cursor": {
          "ref": "4d84f356-f385-4ab0-a194-d0367d8fbcbd",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a9553102-88b2-4aa9-bc9a-05beab78fb3f"
        },
        "item": {
          "id": "b3bb8ba7-40d8-4a3b-aef6-9cc85cf5353f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "622c254f-64be-453f-aae4-aa6755e605f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8c484d-a2f9-4799-8cbb-ace73fd1e8bf",
        "cursor": {
          "ref": "d0d3cbbb-c46d-4c5b-b499-7c7159eb8de4",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "00f4c10e-ab70-48c5-9139-3c1e86b22c60"
        },
        "item": {
          "id": "aa8c484d-a2f9-4799-8cbb-ace73fd1e8bf",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "113c507e-708c-4214-b90d-21194516b2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fad16a-2926-4773-8d45-fc4fa754c5d0",
        "cursor": {
          "ref": "338675fb-2563-4597-aeea-3e9b7a8e9b8b",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "dada720f-1ad2-4fed-aa5c-2c2ef519230a"
        },
        "item": {
          "id": "a8fad16a-2926-4773-8d45-fc4fa754c5d0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "aef776b6-f387-4507-8f6a-ded62e38c7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9321ea4e-b140-4bb5-9926-f9be95c57ef3",
        "cursor": {
          "ref": "d2cd0548-270a-4333-8866-278a12d8d678",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "84d0d553-0227-4162-9006-ffd6cad1ffb3"
        },
        "item": {
          "id": "9321ea4e-b140-4bb5-9926-f9be95c57ef3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d332d2f4-d93b-4705-a7c6-2aa5737b8d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf34ddb3-e37c-4cbc-875f-5fe7c1f75e7c",
        "cursor": {
          "ref": "f3819546-4056-4905-9f12-75b552a7bedc",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "855ecad1-40e6-4fb6-9a26-6b48f8fb8a08"
        },
        "item": {
          "id": "cf34ddb3-e37c-4cbc-875f-5fe7c1f75e7c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9ecf4d12-9d60-4e54-a217-614fb190e6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f980ee6-a4c6-4086-8afb-77fff290fc8c",
        "cursor": {
          "ref": "6b3d5372-39a2-4969-a8ef-6d508818eac0",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2eb424c4-d2c7-45fb-92c4-cb8e9f4a4d4e"
        },
        "item": {
          "id": "8f980ee6-a4c6-4086-8afb-77fff290fc8c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "251c470b-95a4-46b3-907b-1e83c1f4070d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73604db-fabe-4ee9-8eec-41d41536705e",
        "cursor": {
          "ref": "da0364e1-a6c0-4ca0-85dc-a4022b28a309",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "393ac8fa-82c6-4ba3-a431-cba98e0a485c"
        },
        "item": {
          "id": "b73604db-fabe-4ee9-8eec-41d41536705e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f76f0fad-f84a-4911-aca4-e5c431291875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9055f21e-5be3-40f9-9d6f-a7ad49db8e01",
        "cursor": {
          "ref": "420cf6bd-e464-4782-a0d8-5187b50f7652",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8586a648-c5fc-4dd9-8869-5cbf59e81d83"
        },
        "item": {
          "id": "9055f21e-5be3-40f9-9d6f-a7ad49db8e01",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fcc84188-ff8e-47c1-b420-f19a1643cf69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7d8198-708a-4266-8759-e0bc4a3c223f",
        "cursor": {
          "ref": "c190c7c4-1ac1-4cc6-9e0a-b6861f78587e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c4544c0a-92f2-4e9f-951a-fdf9aa5d877f"
        },
        "item": {
          "id": "3e7d8198-708a-4266-8759-e0bc4a3c223f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e01734e5-c3b3-4525-bce0-866957f3f902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828b0054-f0b1-49bc-8e43-cfdbfe9d8732",
        "cursor": {
          "ref": "c947ca48-5c62-4e13-9481-889dfb2d4573",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f0d93fad-fbb3-48c2-9699-65055efe374d"
        },
        "item": {
          "id": "828b0054-f0b1-49bc-8e43-cfdbfe9d8732",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "76e0d519-bf80-476c-8e09-2b7510922257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7db2466-608c-414c-a403-ae8e73772de2",
        "cursor": {
          "ref": "401ef831-b707-41ae-b4b4-fa8ead97e3e0",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "abaefa43-537b-46df-b926-9ae93a8bd9d7"
        },
        "item": {
          "id": "d7db2466-608c-414c-a403-ae8e73772de2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c83fa104-47d9-41d4-a050-0d4ceb1a2644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb6d7cb-dfdf-414b-a2d3-5ce09bde919f",
        "cursor": {
          "ref": "3beae404-abe7-4a7f-9aea-0c1ca87f7f7c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f20da93a-8f9f-413a-9cea-5b4e9359b7e5"
        },
        "item": {
          "id": "5bb6d7cb-dfdf-414b-a2d3-5ce09bde919f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4e20b078-0fd8-41df-a2a5-a1d43e1044b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6907d6-e4ca-4f28-b609-56e1c5036ee6",
        "cursor": {
          "ref": "45a4a039-eb77-4ef7-822c-72debab3a842",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e48b8f65-cc10-4789-94df-85d3708eee43"
        },
        "item": {
          "id": "2b6907d6-e4ca-4f28-b609-56e1c5036ee6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5a1482b2-4d95-4f63-bf9d-9a7710e42af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46ca5a9-2ae8-434d-b4ec-85403505ca07",
        "cursor": {
          "ref": "2edbe190-a5e5-4100-a42c-eab27fee2922",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "17501225-05b5-4b4a-a218-bd9669b518b9"
        },
        "item": {
          "id": "d46ca5a9-2ae8-434d-b4ec-85403505ca07",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2dbc377d-4938-4842-87dd-09ccb418de32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd219c8-a7f4-46b2-b200-a5ede3680738",
        "cursor": {
          "ref": "2883e483-92fd-415d-aa6b-c1c1998dc7dd",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "614e16e6-4c70-4a02-b803-d1f01e507c30"
        },
        "item": {
          "id": "7dd219c8-a7f4-46b2-b200-a5ede3680738",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "65b11d2b-e4c9-468c-b0bd-f2820ad7c77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3334a189-263e-4ae6-9bed-f1237496e910",
        "cursor": {
          "ref": "1406474c-0dbc-4ffa-9101-102e849467b6",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dbee5ff1-32d3-49cb-a8ff-2d6fba31ebf3"
        },
        "item": {
          "id": "3334a189-263e-4ae6-9bed-f1237496e910",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3f181f49-d3c8-447d-9fb5-2ef6e06d66ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0561447-cfea-4810-9f98-bcea15df5e9c",
        "cursor": {
          "ref": "dfbcd813-cc81-43df-9fe7-b1523bf0c666",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4d6d4043-418b-446a-9ae6-12b033a6a081"
        },
        "item": {
          "id": "d0561447-cfea-4810-9f98-bcea15df5e9c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7198d3c1-460e-4b5c-b6ab-4c871871b39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05fbee2-ff2b-4a20-8cf5-8b57d81df791",
        "cursor": {
          "ref": "e29d3641-97c7-48fc-8f3b-eb08fbe9ff99",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "609871ef-85c3-4c44-8f10-7e1700613c17"
        },
        "item": {
          "id": "f05fbee2-ff2b-4a20-8cf5-8b57d81df791",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "df6d3f14-71df-49fd-b38e-dc09de85f430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb6419d-478e-4976-9e32-44edb8b67ea3",
        "cursor": {
          "ref": "13af3632-de9d-47ee-bd92-348329aa3ac4",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6bca1ad4-ba19-4c91-9d33-76142652e254"
        },
        "item": {
          "id": "1cb6419d-478e-4976-9e32-44edb8b67ea3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9d62de11-0eee-4e9b-b8d0-46657183bdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ca1cf5-aabb-45b0-b41c-1b9893038d88",
        "cursor": {
          "ref": "183e0b82-58cb-4b8f-866f-26246f305288",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "853433bc-0cc6-450d-809a-8cb17fcda3bc"
        },
        "item": {
          "id": "43ca1cf5-aabb-45b0-b41c-1b9893038d88",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "57101481-8bc1-4323-a643-a32950f4e196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9ce1f2-8d73-42bd-be56-61bb78356702",
        "cursor": {
          "ref": "4d9dc155-f372-48ab-8a6b-2fc63e1a64ff",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ffab823f-ad73-4010-b7f1-d9a14afdc9d4"
        },
        "item": {
          "id": "4d9ce1f2-8d73-42bd-be56-61bb78356702",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "32a417c7-6d47-4f04-8578-a33977eb69d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57d5d0a-58f5-417a-9642-a56bfd9b0ed4",
        "cursor": {
          "ref": "a90d301a-55f3-4b96-bb93-d92dd060831a",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ef812635-9bce-4fd8-87f5-968f89880b24"
        },
        "item": {
          "id": "a57d5d0a-58f5-417a-9642-a56bfd9b0ed4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8c403d8a-35f0-4b0e-ba22-6daa0505ada1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5acbda6-7006-42ed-952b-42d65a598ddd",
        "cursor": {
          "ref": "c7979eb9-cfb9-4776-95e4-cc87e7518d04",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4ea73b52-a107-4834-a831-6665fdf31c10"
        },
        "item": {
          "id": "f5acbda6-7006-42ed-952b-42d65a598ddd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a343cf4c-6576-4344-ad01-4340a673c084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4a3352-e8c0-4d55-95a9-f3df484ce8b7",
        "cursor": {
          "ref": "d833f453-5c7c-44c8-b02f-87d3df37930f",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4c081904-d75d-454a-8161-961dbcee1c67"
        },
        "item": {
          "id": "ab4a3352-e8c0-4d55-95a9-f3df484ce8b7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e378f9f0-bd29-4459-a5ee-b43f3bc79052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21b96fe-3c4e-4d47-be65-24df66e8c675",
        "cursor": {
          "ref": "91cb891f-9768-46d7-bf58-e40e4eb6aeac",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bf473b4b-eabe-4a3a-96b0-7e6de9696d5e"
        },
        "item": {
          "id": "d21b96fe-3c4e-4d47-be65-24df66e8c675",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "efb56e94-77e2-4a94-8051-23cdbcfca6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b779b372-927c-428e-9bba-6c0a1358ce19",
        "cursor": {
          "ref": "16fdc3b1-2ebf-4740-bc59-95a1699a5660",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ce4759f7-fb6d-4083-bc7c-721df1862c0d"
        },
        "item": {
          "id": "b779b372-927c-428e-9bba-6c0a1358ce19",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "accbe909-0e49-4e22-8a4f-b682020f510a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69f535c-c8e8-4d2d-b2e7-20e99a6d8f09",
        "cursor": {
          "ref": "02b8b331-250f-4300-89e1-f95b2efe4b13",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6a2f27da-94ae-40d2-a31b-eb47925cd76a"
        },
        "item": {
          "id": "c69f535c-c8e8-4d2d-b2e7-20e99a6d8f09",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "59e9f7bf-3f74-4a4d-b430-9ef629b0ad8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cd2ecb-309f-478a-b4d8-d1ba80927a56",
        "cursor": {
          "ref": "e963b1b7-ac92-4d0e-9850-b6f8a1ad5255",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3984564f-372a-43ab-8e4f-a4d930554f7f"
        },
        "item": {
          "id": "a8cd2ecb-309f-478a-b4d8-d1ba80927a56",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "a30b13ea-4e0d-4102-bd05-a4bc896af2e7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0cc268-78e4-420e-8071-82bceceb1552",
        "cursor": {
          "ref": "81a7b177-9e2f-4efa-896d-4fbb58e1d05f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e9b1d5e3-bd4f-4588-a76b-f5b8d017eb9b"
        },
        "item": {
          "id": "0e0cc268-78e4-420e-8071-82bceceb1552",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2bd50dfb-5453-4320-9354-cf984f577bc1",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 860
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f74029-c03f-4490-9cdc-b572766254cc",
        "cursor": {
          "ref": "fafcc1f0-6af0-4a43-9783-e51525a8322b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "94c707cd-b7af-4445-882f-7ac15b2b0927"
        },
        "item": {
          "id": "d1f74029-c03f-4490-9cdc-b572766254cc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "de6568c1-5c31-4d20-89af-d35e93b886b2",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 860
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4d9991-b247-4ecf-8c2f-896e589a1306",
        "cursor": {
          "ref": "d5cb0b96-cf54-4f12-9a25-3f670948c128",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a0376943-42f3-40f2-9b02-69c2f69a11ff"
        },
        "item": {
          "id": "db4d9991-b247-4ecf-8c2f-896e589a1306",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b8172bbe-7e8a-49df-b92e-fb9f8678c6fb",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf32af57-7bd5-4762-845b-6ce098c493b4",
        "cursor": {
          "ref": "82928cdc-1e3a-4772-b150-2d55febd4ca7",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7bdbfc1a-c128-407c-a428-d95f61858419"
        },
        "item": {
          "id": "bf32af57-7bd5-4762-845b-6ce098c493b4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1ccfa0e5-790f-4cf5-a035-60b4a3a9b3aa",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 850
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef59cdd-f0db-493a-98d0-f63105a3225d",
        "cursor": {
          "ref": "b4f91a9c-80b9-4318-9f0e-8a78fe45d061",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cccade3d-1eca-42c4-86c4-e591ddae2b3f"
        },
        "item": {
          "id": "5ef59cdd-f0db-493a-98d0-f63105a3225d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4de1608f-a75b-46bd-b697-a42ec688825a",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 860
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "3193f649-5bf6-4fb2-b8c4-a26d13723690",
        "cursor": {
          "ref": "3b3c94a5-35cc-43eb-908d-cc33bc4c6829",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0264563c-462b-48da-b9b6-8dd59c15db3a"
        },
        "item": {
          "id": "3193f649-5bf6-4fb2-b8c4-a26d13723690",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b055bbc4-9c90-4fce-94e7-810168458251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3193f649-5bf6-4fb2-b8c4-a26d13723690",
        "cursor": {
          "ref": "3b3c94a5-35cc-43eb-908d-cc33bc4c6829",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0264563c-462b-48da-b9b6-8dd59c15db3a"
        },
        "item": {
          "id": "3193f649-5bf6-4fb2-b8c4-a26d13723690",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b055bbc4-9c90-4fce-94e7-810168458251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd640dba-ae70-44d7-a6f3-b8665903ac6e",
        "cursor": {
          "ref": "89fe040f-e67b-45b2-8b85-b7300797d4f4",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "da6cbcb5-a057-445e-bf2a-af1d16c95d11"
        },
        "item": {
          "id": "dd640dba-ae70-44d7-a6f3-b8665903ac6e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b3b5f243-7783-408b-9aa7-7d5f0bcdad1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dc1101-809b-4dd6-94c6-eb63c7f4853e",
        "cursor": {
          "ref": "b7d7d117-7ffa-4b07-9b22-224577b957c9",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e45882cf-c6ad-4e24-96b8-351a62c73842"
        },
        "item": {
          "id": "c7dc1101-809b-4dd6-94c6-eb63c7f4853e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ef48ba50-687f-402a-b9a2-fa1f8d0429db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702bd401-3df2-4db0-a894-d8eb305ca441",
        "cursor": {
          "ref": "fb6fd1dc-ece3-4b8e-a52d-7e06203839c2",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "20f18153-cd7e-497e-95d7-a6b30abd33fa"
        },
        "item": {
          "id": "702bd401-3df2-4db0-a894-d8eb305ca441",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "538e1e91-ab68-47b2-85dc-f7c45a060346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a984ff2-a4b8-474e-9cb3-7920331c5cf1",
        "cursor": {
          "ref": "7dca92db-52f3-4a66-a1d0-cfe4f39d93dc",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a98dbbb3-1f78-415e-a080-cfd4db71a992"
        },
        "item": {
          "id": "8a984ff2-a4b8-474e-9cb3-7920331c5cf1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "57fc2132-1354-4111-baf2-c07185df3c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63cc7bc-81a9-4a30-bfd1-4a8972206579",
        "cursor": {
          "ref": "41112414-a77f-4591-940b-3e9d9ae029e7",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "abb60b6e-4307-47d2-b1c5-6765e0e10699"
        },
        "item": {
          "id": "f63cc7bc-81a9-4a30-bfd1-4a8972206579",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a1a9acc4-e248-4dfe-ac4a-40c030f0413b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a7726a-4bae-48e0-ae68-8278a3e3f532",
        "cursor": {
          "ref": "9b15454d-0a35-4378-b138-56e900c90fa4",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "38f0c32c-e3d8-4ca6-b177-f750eb14fdf1"
        },
        "item": {
          "id": "d2a7726a-4bae-48e0-ae68-8278a3e3f532",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "59266a08-b205-40c1-9df1-5c6923eb7675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e01543-6355-4600-bfd5-2f4af7038c4d",
        "cursor": {
          "ref": "10226579-9e34-4bca-8d35-b0f6b0c8ff19",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "33cd98aa-2f62-4b51-a88c-739180f91058"
        },
        "item": {
          "id": "43e01543-6355-4600-bfd5-2f4af7038c4d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "51b41675-5e8c-45f7-8f47-f9de737477cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9218a6d9-f7e9-45ab-8ab0-4755d3660e6d",
        "cursor": {
          "ref": "feca1a55-d38d-4c11-af0c-cf0a7a4bddc0",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "651affe2-2df8-4d5c-8570-e49ba5ca4cf4"
        },
        "item": {
          "id": "9218a6d9-f7e9-45ab-8ab0-4755d3660e6d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1e4061fe-ae3c-4261-a0ff-8ef60c49b561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9804ba23-5618-4354-b79e-54687b258d4b",
        "cursor": {
          "ref": "06048e97-383e-4520-934f-709bb0ba6cee",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1fe278ee-3f30-4045-96a1-410e2feb90a2"
        },
        "item": {
          "id": "9804ba23-5618-4354-b79e-54687b258d4b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6f6e3147-d445-4bbb-bad5-3ff2085e8258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475127c3-a903-4ab5-b304-e62768a65ab7",
        "cursor": {
          "ref": "3488e47e-c8f1-47bc-baf9-e5e065a56165",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ab859b4c-d664-48e8-ab77-6ba86bb3b227"
        },
        "item": {
          "id": "475127c3-a903-4ab5-b304-e62768a65ab7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3dd7b8c3-2475-460f-b61b-5198ac8bc495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f4996a-2e7d-45d6-a96e-5765487e5098",
        "cursor": {
          "ref": "03786c79-e7a8-4c01-a936-8c459040f2aa",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "458bcb34-72f6-4f85-a617-c46c5dea2b10"
        },
        "item": {
          "id": "20f4996a-2e7d-45d6-a96e-5765487e5098",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bb9750bc-9913-447e-bc3c-c638bd213204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff69920-bc7c-4438-93e3-30afcbd30541",
        "cursor": {
          "ref": "768d6e36-7b10-4f28-abcd-edcf3147343a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "210ea27a-3867-4a36-9c54-09768387bd6f"
        },
        "item": {
          "id": "4ff69920-bc7c-4438-93e3-30afcbd30541",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2f1ff0fd-9ab4-4f69-bd12-dbea1595bf87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a7936e-73e9-4ce9-90d7-146f840d07db",
        "cursor": {
          "ref": "244268dc-12a9-4a4d-bed5-82f2a16ce99a",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "763667c2-2168-44d6-bc53-ce22bec5aa6b"
        },
        "item": {
          "id": "57a7936e-73e9-4ce9-90d7-146f840d07db",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c8512d19-aa01-487b-8154-29c158a0c450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e214dc-3d40-4bb7-9d9d-c715db5c7798",
        "cursor": {
          "ref": "a98ff071-1750-451e-bd9e-50156af0e375",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a194255a-4471-4944-9ac6-4b48f13c388e"
        },
        "item": {
          "id": "31e214dc-3d40-4bb7-9d9d-c715db5c7798",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7bbfca70-0d62-4dab-bb70-3ad00e0c1444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b745da-ad51-4163-a1a3-0da49c79db44",
        "cursor": {
          "ref": "58d5d19e-951b-4657-ad93-40d6f4d9f190",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "95fd4d7e-65b0-43c0-b5b4-076ce1551718"
        },
        "item": {
          "id": "09b745da-ad51-4163-a1a3-0da49c79db44",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6abefe32-c095-4995-a968-0e46cc22891c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7957e8-2476-4f9e-ba82-5fe2cd620975",
        "cursor": {
          "ref": "b59425ca-4e2b-4753-992d-88d4fa1da1e3",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "50c5d9c5-6942-4a24-b01f-4dbc6a27d7ea"
        },
        "item": {
          "id": "6b7957e8-2476-4f9e-ba82-5fe2cd620975",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c00ab759-9ce9-4e56-8a71-f73ddb39e55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd5df0c-5f83-4738-bfed-9fe60535a72d",
        "cursor": {
          "ref": "0e95fa73-9462-4f2c-a017-37a94aeb76f3",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a724b173-7549-46ac-a1b0-eed7e4b841b6"
        },
        "item": {
          "id": "5cd5df0c-5f83-4738-bfed-9fe60535a72d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9e65e3d9-61c3-4b70-a48b-ea21188d1a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4872c6b-72b9-44f9-82aa-642f9b0bd020",
        "cursor": {
          "ref": "e4cb8e88-0954-48bd-acc0-9bd6745e75c3",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bc0de194-c169-403f-9b95-7bc9e176d9cc"
        },
        "item": {
          "id": "e4872c6b-72b9-44f9-82aa-642f9b0bd020",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "09b2b1c6-0bc6-4146-be4f-ca844f93b224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5df664-bf8e-4854-b62f-14b8d06e023d",
        "cursor": {
          "ref": "0a956e90-6829-4c20-98b4-b7aefcfc7c46",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8ebfba83-0673-404c-add8-6585834953c0"
        },
        "item": {
          "id": "df5df664-bf8e-4854-b62f-14b8d06e023d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "808d22d5-be14-48b3-be20-ab967eec9e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954b342b-0cfb-4f64-b99b-ece5df75c3ad",
        "cursor": {
          "ref": "0ae52a7e-cb9f-4f70-b07b-3260aa694c5a",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "50a371cf-5e18-40ee-ba58-bfaeaf5762b8"
        },
        "item": {
          "id": "954b342b-0cfb-4f64-b99b-ece5df75c3ad",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2eb8c8a1-af07-4edf-b101-122ee3f218aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ac4c39-197c-40d8-8ef0-7ddd28dd69b5",
        "cursor": {
          "ref": "657239e4-6fb0-4101-8e82-2d95e28a2ace",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "62d6c79a-fc94-4834-91ee-298c0bff3bd8"
        },
        "item": {
          "id": "90ac4c39-197c-40d8-8ef0-7ddd28dd69b5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fa20d29c-0a4d-49df-8b19-763d93a31781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde0402d-4d78-4b66-a663-2f0f8eceddf5",
        "cursor": {
          "ref": "832aff07-7b21-4f6f-b778-716630524ecc",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e78487e2-a022-4cc2-9715-b1d6534ef051"
        },
        "item": {
          "id": "fde0402d-4d78-4b66-a663-2f0f8eceddf5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1e08a373-403c-47e8-99ce-c8fec9091bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64f59cf-fd65-438a-9344-946acb9da74c",
        "cursor": {
          "ref": "73894dfe-083a-4bd5-9892-11fec845d70f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6a20a64e-58aa-4fd1-bd3b-b3ad446725c9"
        },
        "item": {
          "id": "b64f59cf-fd65-438a-9344-946acb9da74c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3eee8673-7de6-48c8-ba61-569c42ccdedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f7763c-18a4-40b1-b47b-9e9ea1dfdecc",
        "cursor": {
          "ref": "30f4a86f-e5d2-45b3-9018-44e52337a451",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "53fbccb7-fa71-4966-8b03-c84e4e8ee4d1"
        },
        "item": {
          "id": "99f7763c-18a4-40b1-b47b-9e9ea1dfdecc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "106bc11e-4dd2-45ed-a7bf-6b89c3b970e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335f5e46-97db-423f-b94d-7bb3e58f455c",
        "cursor": {
          "ref": "d22a1f0c-b172-4710-9ce5-0704fbd43854",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "380f620c-1579-4d61-87ea-8739abbb04fc"
        },
        "item": {
          "id": "335f5e46-97db-423f-b94d-7bb3e58f455c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0321dcb5-3e2a-4bcd-854f-3b1915344af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a16c26-41af-4214-9d35-c80058f5e2ce",
        "cursor": {
          "ref": "3556b7b5-0275-49f7-89bf-b5c2d7733489",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a0be6a62-74da-4033-b31e-54f2eff18763"
        },
        "item": {
          "id": "10a16c26-41af-4214-9d35-c80058f5e2ce",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d9a3a944-2be2-4dc5-898d-db8e18eb0b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3a3fe2-ce15-41c5-9398-5c32908abe39",
        "cursor": {
          "ref": "89463a8d-1f24-4cb9-9491-076724773082",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c9c89d6d-2b8a-4ed3-aa77-91573d55aaa9"
        },
        "item": {
          "id": "2c3a3fe2-ce15-41c5-9398-5c32908abe39",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "af868a96-e641-4300-ba95-cd40032a61c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c5abd9-6231-4078-911b-42c61045c7df",
        "cursor": {
          "ref": "f12eda67-a5b0-4ea7-894d-d6563b820126",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3537f573-1ac9-4684-9e0b-b827d6d21cbe"
        },
        "item": {
          "id": "07c5abd9-6231-4078-911b-42c61045c7df",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f651b614-150f-4c27-a344-c6c812a120be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cff0a6a-0db4-44f7-b074-ab0cb3af0727",
        "cursor": {
          "ref": "ba924fef-0e44-44f9-87bb-d3c27b2e286d",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6b838336-b88e-4d41-9ca5-5c4c69cbd08d"
        },
        "item": {
          "id": "9cff0a6a-0db4-44f7-b074-ab0cb3af0727",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "087c2843-6f5e-47ae-bf4b-8a95630c8a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bdaa3b-614c-4df6-a4a9-60dbc62fc916",
        "cursor": {
          "ref": "9cdecda9-97de-4721-81c8-f8a685752853",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4f3b6a4a-8b44-4b4c-9bf5-ef5c483b9560"
        },
        "item": {
          "id": "c2bdaa3b-614c-4df6-a4a9-60dbc62fc916",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2e28bc02-c910-4c33-86f6-d969fcf236b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee5d45e-679e-44d6-975f-2f3aba081156",
        "cursor": {
          "ref": "7030e36a-f266-4e26-8c33-adb9d34184ac",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "aa0245dc-10a4-4521-8e97-974447233da4"
        },
        "item": {
          "id": "1ee5d45e-679e-44d6-975f-2f3aba081156",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e26c7cff-d0fe-43b1-9030-1f837305771b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089a894f-577b-4bf5-9c85-b881ed18158b",
        "cursor": {
          "ref": "8cc230c4-128c-40cd-becb-1e31ea07968a",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9f17a970-11f2-4f2e-b945-c70e071c2c59"
        },
        "item": {
          "id": "089a894f-577b-4bf5-9c85-b881ed18158b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e3c504da-9c12-442b-ac6e-85027aff536e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff810f1-47d3-46a3-87ca-73970d2fb955",
        "cursor": {
          "ref": "71299a59-611a-4343-939d-e855352ad95b",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "67f1985d-c841-4526-ab8d-b000236f8cf9"
        },
        "item": {
          "id": "0ff810f1-47d3-46a3-87ca-73970d2fb955",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "2e3ec1f0-28fa-4707-959f-8c53697a05e2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43136105-0fea-4d0f-a9c3-043f5c9b0cf3",
        "cursor": {
          "ref": "bbdb54b8-8024-4035-92f2-0edb7e03eebd",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3e57274b-c11b-48a8-b731-56d4ac6c9add"
        },
        "item": {
          "id": "43136105-0fea-4d0f-a9c3-043f5c9b0cf3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e7b40e88-ecdf-4d30-a03c-fa50fec9ab4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43136105-0fea-4d0f-a9c3-043f5c9b0cf3",
        "cursor": {
          "ref": "bbdb54b8-8024-4035-92f2-0edb7e03eebd",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3e57274b-c11b-48a8-b731-56d4ac6c9add"
        },
        "item": {
          "id": "43136105-0fea-4d0f-a9c3-043f5c9b0cf3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e7b40e88-ecdf-4d30-a03c-fa50fec9ab4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940636e4-b336-456f-80d5-22c69e47f144",
        "cursor": {
          "ref": "ee8d1988-84f7-4bf8-b707-fb406873e489",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "63127d76-6958-4e56-a182-ec21bbcbf542"
        },
        "item": {
          "id": "940636e4-b336-456f-80d5-22c69e47f144",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "febdddc6-75c8-4833-9bab-cce48277722f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501e52ea-3c2b-47a6-9d51-bfa6062e3a9e",
        "cursor": {
          "ref": "75736af4-2a97-4244-a47e-68b5559e4b29",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "caac6b73-9c48-436b-8bda-3c504d9adca9"
        },
        "item": {
          "id": "501e52ea-3c2b-47a6-9d51-bfa6062e3a9e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1b85a04f-e7a1-4cdd-b910-e4c0f6c398f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4f8b8f-9fb5-4028-8254-44dd8c577251",
        "cursor": {
          "ref": "68f6fcae-f8bf-4e35-bd51-80d5935d5a5b",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5e4d2085-1b0d-4956-b99b-57b1c3b05ba1"
        },
        "item": {
          "id": "9a4f8b8f-9fb5-4028-8254-44dd8c577251",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7b057437-c05f-4373-a418-babda35885e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7c1306-4748-496d-a37b-49c8736878c1",
        "cursor": {
          "ref": "97baefcf-8e1a-4b23-aede-71e5d9150520",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fcfa16cb-b6b0-4b2c-bf2e-40d18f347501"
        },
        "item": {
          "id": "8b7c1306-4748-496d-a37b-49c8736878c1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f0bcd752-341f-4d6d-805a-b622d8e78bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be40a045-ae78-45c1-879f-12e4e343b8b9",
        "cursor": {
          "ref": "547a6ca4-4ce2-4182-aa67-614433bd56cd",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3742e155-cf94-4bff-a89d-4444848b12cc"
        },
        "item": {
          "id": "be40a045-ae78-45c1-879f-12e4e343b8b9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "afa68bba-b0cf-482e-aef1-9a1c9398850a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe514e0b-9f11-42b9-9de6-519c8e9be554",
        "cursor": {
          "ref": "c6387b32-7ff5-43ce-a1ef-a583cade850f",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "baec8e9c-009d-488a-b58c-2dfa444604d3"
        },
        "item": {
          "id": "fe514e0b-9f11-42b9-9de6-519c8e9be554",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f068d251-3c8b-4f25-ac59-47eb9fd4b659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd6cb12-b70c-4952-926e-00193176dcd2",
        "cursor": {
          "ref": "9e3dc58c-d3b6-4a09-a9a5-12e8169e4da8",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "605c4a9e-7816-4c5f-be3e-eaf0da10007b"
        },
        "item": {
          "id": "bdd6cb12-b70c-4952-926e-00193176dcd2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "430ec638-02e8-4fb4-9dc0-f88565a1918c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7468cb14-9d5c-48ff-9489-9a01218c6c66",
        "cursor": {
          "ref": "9061eff8-f20b-4a4c-8ff3-269987ed9bc4",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0dd4ea5e-934d-4f9e-b1bd-f2d08f6f4b4b"
        },
        "item": {
          "id": "7468cb14-9d5c-48ff-9489-9a01218c6c66",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "45478a39-f977-465b-8624-04eecb0467cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512b8272-8ecf-496a-b966-a59cd1023832",
        "cursor": {
          "ref": "2bb07b37-141e-4e7f-9c65-75f84946a710",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bfb6df13-3d2a-4310-8447-bac1c1a73997"
        },
        "item": {
          "id": "512b8272-8ecf-496a-b966-a59cd1023832",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "99e843ee-08c2-487a-a0d4-5c1f65c1e21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb23465-3a35-4269-b5d9-6598cdce8334",
        "cursor": {
          "ref": "734012c7-d0bb-48a6-a595-3e93e61fce29",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "16d01b4f-9ea0-4036-9671-5817123c5a37"
        },
        "item": {
          "id": "0fb23465-3a35-4269-b5d9-6598cdce8334",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "629c1e26-cee3-4c47-9be9-fc34286ebef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71d1856-29ce-4a2a-9510-230ea2f1c248",
        "cursor": {
          "ref": "32ed1f3f-74d6-4f21-b713-23b8b656929b",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "15b144cb-cb94-48c7-976f-eefe499ca389"
        },
        "item": {
          "id": "c71d1856-29ce-4a2a-9510-230ea2f1c248",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "48d6bb56-aefe-42b8-9081-d9e85c795914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3424e28-4353-43cc-9596-b71b14f0561c",
        "cursor": {
          "ref": "f48a51c6-f37a-452d-8a4f-9c54e36a00fb",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c34488ce-23b1-4cdb-9d6a-47f80eee3bc6"
        },
        "item": {
          "id": "b3424e28-4353-43cc-9596-b71b14f0561c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "28f6206c-18a5-45b9-931b-7546f6492b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbb19a0-ece1-4eba-836b-5db764872942",
        "cursor": {
          "ref": "cb538946-dccb-4266-8b15-5fda02a5aadd",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d015a0de-acce-4ac6-80d7-29b3db1bd76b"
        },
        "item": {
          "id": "2cbb19a0-ece1-4eba-836b-5db764872942",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4cc4a1d5-6a6e-43cf-94df-92cdfb283de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176c89cb-438c-481b-82a4-55678375b990",
        "cursor": {
          "ref": "0e40bc0c-8924-4115-9b09-21a17829cf4c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "492b0123-cf09-462f-8d34-f8c7d7d7e257"
        },
        "item": {
          "id": "176c89cb-438c-481b-82a4-55678375b990",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "20f18d75-2029-46c1-9e77-f1c4de5fec03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e637569b-fe87-4b31-afe0-dd9cd0932295",
        "cursor": {
          "ref": "de0f5bac-6bc8-4d73-816e-3741eba4998d",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b8cb89fe-6b22-4eea-8f9a-189cf189fc5b"
        },
        "item": {
          "id": "e637569b-fe87-4b31-afe0-dd9cd0932295",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5638c090-dcb0-43fa-866b-9624f5b1769b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8861fc2-013c-40a5-9f8b-97fc229bacdd",
        "cursor": {
          "ref": "bda7420d-7fca-46d5-b5f7-bed4b481cd05",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5f3fe017-c10f-4746-9d72-1d850c842e2b"
        },
        "item": {
          "id": "c8861fc2-013c-40a5-9f8b-97fc229bacdd",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8f21c8db-6a38-42a5-a0bd-dd2e3d577c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4dda30-6763-4b66-bb0c-61d57cd705a8",
        "cursor": {
          "ref": "4dfe7fa3-5a66-4999-97ad-24dc1ae0481c",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6a05ef6a-bf94-4972-bdb2-ff809ba2ee8f"
        },
        "item": {
          "id": "af4dda30-6763-4b66-bb0c-61d57cd705a8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3bee55c3-0dbe-4aa9-a664-db3e637010ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e4f62a-c23c-4a3d-a18a-2f0c3b946af0",
        "cursor": {
          "ref": "74cf9be0-2f95-4854-9fd9-335aa3fab852",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d423f098-e7c5-47f2-8866-af249954aeae"
        },
        "item": {
          "id": "c5e4f62a-c23c-4a3d-a18a-2f0c3b946af0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7caa3e4c-f656-424b-9c41-d2c286c53872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dee4456-f963-4f04-ae3d-364a8db830e8",
        "cursor": {
          "ref": "7ca6c942-38fa-4e69-b17d-1465de248ca4",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d33b137d-3749-49cd-8370-a52e15266ba2"
        },
        "item": {
          "id": "5dee4456-f963-4f04-ae3d-364a8db830e8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2d2d0cc1-c7e3-4b0a-b422-29f0f1e90c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275b5fec-8b8e-43d2-8cd8-fe3eaa2387b8",
        "cursor": {
          "ref": "853fde5e-363c-404c-a4f7-6b68698d5876",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ba6219ce-e2dd-42ec-b2a8-775c5edc5148"
        },
        "item": {
          "id": "275b5fec-8b8e-43d2-8cd8-fe3eaa2387b8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d160926c-4c4a-4080-ba01-6b7d7525ff80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7872414c-be7f-44d4-84ad-967fde411fec",
        "cursor": {
          "ref": "0a917e74-2e0e-4db3-886a-39084240a590",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1778e925-ff21-473a-b699-ed566f3183cb"
        },
        "item": {
          "id": "7872414c-be7f-44d4-84ad-967fde411fec",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5982565c-e6a7-4eff-93ea-befaffaba2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49e46fc-ca16-4921-bcb4-04c5489ce67a",
        "cursor": {
          "ref": "621ef4ec-576c-4299-b970-5d1d62fcde25",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "004b8bba-3b75-4b9b-9b58-28b9cd1bcb98"
        },
        "item": {
          "id": "a49e46fc-ca16-4921-bcb4-04c5489ce67a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ed9cc3b0-2b73-42fc-baa1-ae9f5699b046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4491b648-a461-408f-9d19-05648de22d11",
        "cursor": {
          "ref": "e0253bf5-3304-4962-bc46-d2b5578dca9b",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f8624288-0900-4549-8e96-bd2da281f7ad"
        },
        "item": {
          "id": "4491b648-a461-408f-9d19-05648de22d11",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2abe1037-429f-4fa1-a4fd-ee489182d1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969d730c-ba9f-48e6-9501-8c83b98c9c34",
        "cursor": {
          "ref": "ea692fcc-e1d8-4d04-8dcd-2d008017edb2",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4a308aa1-e07e-48e0-847e-f6d6eb4d8201"
        },
        "item": {
          "id": "969d730c-ba9f-48e6-9501-8c83b98c9c34",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8b61118b-ac32-42a7-9ea4-8596d874d504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ae0d29-beb4-46c7-ab76-3d073083c085",
        "cursor": {
          "ref": "df3dc87c-2fac-4b29-b27e-7db8c915367d",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "00fe3bc5-c13a-40a7-b56e-8cf291d05b0f"
        },
        "item": {
          "id": "f2ae0d29-beb4-46c7-ab76-3d073083c085",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "677a415a-f6c8-4909-b54f-3791f3c7664c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfc22c7-6ddd-4b2d-85b6-92096a542c2b",
        "cursor": {
          "ref": "cf1e5327-592f-41fc-b7e1-4457f02c9113",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "17c95d32-f14b-4c0f-b67c-8fe2bd82331f"
        },
        "item": {
          "id": "1bfc22c7-6ddd-4b2d-85b6-92096a542c2b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0431b8c9-2ddc-45ed-ba95-f8df5b7ff997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5512e6f4-030b-457f-bb27-b3f8d3faecbb",
        "cursor": {
          "ref": "a078dfbb-6dbd-4c7c-b32f-5b240d320bb4",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5fc9039b-8986-4bd9-9244-39909e43ada3"
        },
        "item": {
          "id": "5512e6f4-030b-457f-bb27-b3f8d3faecbb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3dcba358-662b-472d-83ed-9efdd3d70705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad767ac-cdc7-4b52-b17b-f6114324478f",
        "cursor": {
          "ref": "a6f82f12-5dc9-4208-989a-e933aa851cc0",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "93862e96-da7e-4fcc-8c23-fb12bc3699d4"
        },
        "item": {
          "id": "4ad767ac-cdc7-4b52-b17b-f6114324478f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ad2e5c0b-76d9-440e-8512-0455edbee0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0c4829-9989-4e1f-915d-8f5c9f543701",
        "cursor": {
          "ref": "b006709f-7cc8-4b51-8aec-eb0deb47a4c0",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8bed7a51-af27-4964-85ff-0ef417583c62"
        },
        "item": {
          "id": "5b0c4829-9989-4e1f-915d-8f5c9f543701",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "76e06b6e-cea8-473a-95f3-085badfb36b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5c119e-7fc0-4116-878e-85a61b6c36c7",
        "cursor": {
          "ref": "2f0ce90e-2e72-4e60-a8d8-96dcdbaefd69",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0213daf1-fda1-48df-816b-84ff9470b6af"
        },
        "item": {
          "id": "db5c119e-7fc0-4116-878e-85a61b6c36c7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cb4a4d93-b0d8-4c85-94a0-112686433397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bc94b8-9cb9-4f41-a3b5-7b4adef07b5e",
        "cursor": {
          "ref": "152895d0-9f28-43ea-b882-71679fe24a19",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3169a2c5-f206-482d-bb23-08f73a176711"
        },
        "item": {
          "id": "55bc94b8-9cb9-4f41-a3b5-7b4adef07b5e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "83a46601-c97e-4cd4-afd8-f929ea9501f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82433755-fc09-4094-af0b-53490549b360",
        "cursor": {
          "ref": "b040f577-45fd-4e12-82bf-b093b872ec53",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0a242876-6a96-4db7-b63a-caaf9af7b176"
        },
        "item": {
          "id": "82433755-fc09-4094-af0b-53490549b360",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "34da70f2-3191-48e6-b1c8-b8c71584453e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b459a509-ffae-45f6-9515-c890b293d0dd",
        "cursor": {
          "ref": "8f7b122f-b5fb-419d-981f-302188824f83",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2d875d22-41f0-4e81-ad9c-553de6d7de5f"
        },
        "item": {
          "id": "b459a509-ffae-45f6-9515-c890b293d0dd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "93070aa5-de66-4a06-9cfa-06140af57e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5da0e7-5f7a-416b-8b9d-8ef683f2cac5",
        "cursor": {
          "ref": "15ba53c2-c82e-40b7-832a-5bc603873fc9",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "877e8550-0aaa-4d66-9bc2-1df1eda1f92c"
        },
        "item": {
          "id": "4d5da0e7-5f7a-416b-8b9d-8ef683f2cac5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "28366505-0b6a-4be4-b060-0c372480a7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7842110-9d2b-4eb0-b41c-b1ab5e55bfee",
        "cursor": {
          "ref": "cfeb2ed4-a766-471e-a856-5b2df0d2fd20",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3456408f-01a3-4361-a106-76c0db873644"
        },
        "item": {
          "id": "f7842110-9d2b-4eb0-b41c-b1ab5e55bfee",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "98b74a39-8d8a-41cd-98f2-6e174ae9c3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ddcc8c-a24f-4445-9fc1-49349dad9895",
        "cursor": {
          "ref": "8076f5e9-3f28-484d-95dc-7e71e3f020d4",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2b47d482-a1ff-4ded-8aed-c8b85bf25cb1"
        },
        "item": {
          "id": "57ddcc8c-a24f-4445-9fc1-49349dad9895",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "837b6082-1cf0-443d-8dd8-5ffa9e7dfcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d42ffe-0d05-444b-a2a2-327f06191676",
        "cursor": {
          "ref": "b94450c8-3527-42dd-8e8e-cd0cfea90030",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "80477ec8-4d73-42b8-8861-52c3f356e817"
        },
        "item": {
          "id": "22d42ffe-0d05-444b-a2a2-327f06191676",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b746b899-44af-4063-9fb3-2f4300d0e79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21385ad-8976-49d0-b80f-e9aee6c2829f",
        "cursor": {
          "ref": "8ec164c7-ffa7-4fa7-9059-e59330c12ebb",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e0d73d14-0c27-48c0-9aa0-8d0881179ba4"
        },
        "item": {
          "id": "a21385ad-8976-49d0-b80f-e9aee6c2829f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "974b905b-23ea-43a0-b9c9-8d5b42b8809b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d84d987-e068-47e9-a3e6-492661525ece",
        "cursor": {
          "ref": "830e7788-9e7d-48ae-94a4-5edc79723d50",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d219e090-0967-42c7-883a-ec694679f3be"
        },
        "item": {
          "id": "5d84d987-e068-47e9-a3e6-492661525ece",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "023bd3ca-9556-4a8b-ad3c-24706dc5d4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43420d8-e01b-47ff-aec0-0aae8b41495e",
        "cursor": {
          "ref": "1ea34cf1-7bcf-4cc0-8bf2-59b97b09565f",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d501ca34-ae2b-4773-acfd-e8b0c054609f"
        },
        "item": {
          "id": "e43420d8-e01b-47ff-aec0-0aae8b41495e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "83e0fd3a-b109-40e9-9352-81d64dda72c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b1558f-b496-41ef-a0a0-7edce17036f2",
        "cursor": {
          "ref": "2cd7a219-fd12-4eda-81cb-2419a6369e56",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "861e0ff9-7b62-4da3-8028-3406359096b8"
        },
        "item": {
          "id": "20b1558f-b496-41ef-a0a0-7edce17036f2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0319a129-b947-4f09-9764-d1336c6edd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf35e4b-397f-4559-ad32-247e751af48d",
        "cursor": {
          "ref": "26f26915-23d4-4bbb-9f16-72538709eb0c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b843970a-1799-4fa1-88ac-d0d7f24cedb1"
        },
        "item": {
          "id": "ecf35e4b-397f-4559-ad32-247e751af48d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0cb8d448-5c93-47a6-99e9-2a606b85767a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1827a663-63d1-4e00-afb2-46bdde0b4aa6",
        "cursor": {
          "ref": "d6e95e03-e227-40ae-bfa1-e61a6ee390ac",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e100c657-e803-43c8-988a-b5498b8027ef"
        },
        "item": {
          "id": "1827a663-63d1-4e00-afb2-46bdde0b4aa6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ff6e12a5-e90a-4bba-9e8e-b817db9097ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f981b89-cdbb-4cbb-b387-55d8ee221be4",
        "cursor": {
          "ref": "9e670eb3-73c4-4a17-8f7d-58f44541de23",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "df6c58c0-371e-4d46-aca4-89463efe4134"
        },
        "item": {
          "id": "2f981b89-cdbb-4cbb-b387-55d8ee221be4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e95394d3-b0cb-4a4b-9f23-7f4447fb5b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52ee09e-0eda-4fa8-871f-a36b93f272b1",
        "cursor": {
          "ref": "ed1be33b-5ef0-4031-954b-ee7989800380",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3c06d460-8210-4c2b-8eda-631634c342e0"
        },
        "item": {
          "id": "a52ee09e-0eda-4fa8-871f-a36b93f272b1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a9eea089-7c82-48cd-89d1-423f48fe4a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4fe6b3-5ab4-4a93-a363-300e843ef2cc",
        "cursor": {
          "ref": "87dc66de-828b-475e-94db-233cd9566ab6",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6c67a269-2b24-41f3-bbf9-84f417b141d1"
        },
        "item": {
          "id": "df4fe6b3-5ab4-4a93-a363-300e843ef2cc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fa7a6aac-497a-4a19-8076-d21d5d0ffe4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e22e07-6c53-47b0-a9ce-ac3cddb0b704",
        "cursor": {
          "ref": "f70d3543-e684-477e-85ca-ecf75aa324bc",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9239b5cc-a5f2-4d8c-8fc4-2c9de1ac786a"
        },
        "item": {
          "id": "c4e22e07-6c53-47b0-a9ce-ac3cddb0b704",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b33ff15f-0b4f-4d63-b138-b32a5cf40384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bae6b2-58c7-4dfc-bd32-f052b44a24dc",
        "cursor": {
          "ref": "01839b3a-fec2-43c1-bee2-1b08f0a149c7",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "46fa414a-5abb-4bce-adbd-9110a8d47f1c"
        },
        "item": {
          "id": "b0bae6b2-58c7-4dfc-bd32-f052b44a24dc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d2302586-a5db-448e-8713-a1cdb7b48995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571ba380-9fd2-4449-9de6-1943a31ba9f2",
        "cursor": {
          "ref": "bf0c5a2a-0c0e-454e-936e-a1d96b2e6653",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5401f405-11a1-43ae-adee-def531e32592"
        },
        "item": {
          "id": "571ba380-9fd2-4449-9de6-1943a31ba9f2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "77dafdc2-224d-4b58-b6cf-0624c1d3adef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2538f3ae-fadd-4bf0-8418-e37c91a66880",
        "cursor": {
          "ref": "bc37e0b8-3406-4171-822a-2595d0f6d1a7",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cb6afded-c6f4-4589-ae94-b9cb84752f9e"
        },
        "item": {
          "id": "2538f3ae-fadd-4bf0-8418-e37c91a66880",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "63a2ff9e-eb01-4864-b8ae-0cae0f61e4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5147e56d-1934-4527-b0cd-086878e7615c",
        "cursor": {
          "ref": "0f119f3c-2ecd-4871-be5c-faeefd7e076e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1fd270f7-d6a9-4759-af54-f038c6e65396"
        },
        "item": {
          "id": "5147e56d-1934-4527-b0cd-086878e7615c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "88d1dfad-a4c0-4c43-9a74-b6f7c4efbeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51176da-1c18-4cfd-bdf5-dc0e9e016641",
        "cursor": {
          "ref": "fcd0d28e-35c1-458b-8d57-1115942e5422",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f7c19d54-facf-48aa-a3f0-f368e4339c1b"
        },
        "item": {
          "id": "f51176da-1c18-4cfd-bdf5-dc0e9e016641",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "45477a26-fed8-4de1-83fb-7a29c93ad589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc64e5d6-ba2c-4f81-a49f-0c0b6ad4854e",
        "cursor": {
          "ref": "057785cb-16df-4ee6-8b21-90ef7ecdf415",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8d82a3dc-7acd-4957-8551-b69c77483be4"
        },
        "item": {
          "id": "cc64e5d6-ba2c-4f81-a49f-0c0b6ad4854e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4e1b9f06-4143-43de-894a-1b05977418fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004c43da-a4c7-4f07-8668-850b044347ad",
        "cursor": {
          "ref": "5e6b98b1-27d7-4680-a270-1abccb61b291",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7f25a0bc-e994-45e4-8aba-cf19b5a37503"
        },
        "item": {
          "id": "004c43da-a4c7-4f07-8668-850b044347ad",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "da8a1852-a52a-4629-907d-e12cf8d5e053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78587473-9780-45f8-b00c-11f587401afe",
        "cursor": {
          "ref": "3550c55a-ff8c-42af-a013-bc82a063a3b8",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "32320b33-504f-41e6-b4cf-26a0ed4c20e0"
        },
        "item": {
          "id": "78587473-9780-45f8-b00c-11f587401afe",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8ecd6cad-6d75-4462-94d0-57b004f75b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a06a7d-f3c6-4ac1-9f0e-858a3b9e5a76",
        "cursor": {
          "ref": "4185c217-2ff1-4dc1-a487-a348323a8492",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "89da973a-7a4a-421a-a019-41eeb7e4bfa3"
        },
        "item": {
          "id": "25a06a7d-f3c6-4ac1-9f0e-858a3b9e5a76",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cf087aed-a357-44e4-ae12-dac1e03f8e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c43d2cb-6ecf-4787-90dd-257451f8d9ab",
        "cursor": {
          "ref": "fce90fcf-6539-4c32-81f7-1db5fc7a5484",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ca66bfad-266b-489a-b3de-d472cf3a7645"
        },
        "item": {
          "id": "2c43d2cb-6ecf-4787-90dd-257451f8d9ab",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4989b372-9056-471f-ae57-42823774c221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d7fd56-0445-444f-a332-6a4c2cbaa3db",
        "cursor": {
          "ref": "560a63de-61d1-4ece-92f7-fa0b1905c3f5",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e66bf1f0-35e8-43bb-af8c-aa26fbd844aa"
        },
        "item": {
          "id": "f5d7fd56-0445-444f-a332-6a4c2cbaa3db",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "91851b31-c40a-484e-ab7e-bd3ca42b7c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7bb15c-daa4-46b3-9019-9ddcb8f2a719",
        "cursor": {
          "ref": "2d9a7332-d249-4ba1-8548-985aa84e68f3",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5bc19859-0e19-48b0-8f34-74bca2fe2cb4"
        },
        "item": {
          "id": "0e7bb15c-daa4-46b3-9019-9ddcb8f2a719",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c2e4f4b2-07a0-4889-a329-2cb14400aac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0aa5646-1cea-4b0c-be23-bfaccc894b6b",
        "cursor": {
          "ref": "bdef91c7-8717-495c-8740-c1c5fe1b8d4c",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "812f49ba-5449-41bc-976e-139d128dec50"
        },
        "item": {
          "id": "d0aa5646-1cea-4b0c-be23-bfaccc894b6b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8551baed-d3af-471e-85f7-b01b9efbe4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c090baa-912c-4a4c-b343-048ae55f78e4",
        "cursor": {
          "ref": "63572295-2a8e-4b30-b07e-c7feb63ac316",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bb5d6718-0bcf-475e-8bbb-27b974917ff3"
        },
        "item": {
          "id": "7c090baa-912c-4a4c-b343-048ae55f78e4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "063cb763-bda8-4c0f-9e6e-3bba97c96b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d2f20b-4c54-4f58-a6f6-16c382218809",
        "cursor": {
          "ref": "140f48ee-1026-47a3-b36b-ec1c1739522a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f1ae0946-7839-4244-8df8-4832347256e7"
        },
        "item": {
          "id": "67d2f20b-4c54-4f58-a6f6-16c382218809",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4a22b294-a69b-4036-be91-589ab70e8636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6c5343-157a-46fb-bf72-a530cd5d1b21",
        "cursor": {
          "ref": "5b413414-d9ab-43d4-9ba2-761b623454a1",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d03fc2fa-c7ba-4afa-ae8b-8cca191dac9d"
        },
        "item": {
          "id": "1f6c5343-157a-46fb-bf72-a530cd5d1b21",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1cfad040-d813-4786-a727-164a12238135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdeba687-351b-4f31-87a3-a557abc7ef12",
        "cursor": {
          "ref": "e7aa1087-1118-4056-bc4e-c0d58adfff2c",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9fe9cd43-8827-4c1b-8dad-d45a858aa035"
        },
        "item": {
          "id": "bdeba687-351b-4f31-87a3-a557abc7ef12",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "45a2942a-5448-4518-8d9d-d6b75bda0301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79569bc2-3835-4715-aed6-361e3ee36422",
        "cursor": {
          "ref": "882d2ea6-fff5-4730-8f72-2b668cd0224b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "79f93de0-136b-47d8-9c31-dacb214282c7"
        },
        "item": {
          "id": "79569bc2-3835-4715-aed6-361e3ee36422",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "996836d4-8fc4-4318-8eb2-c3c7c9a66e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8781d36a-e2e0-46f4-8772-896ba6707492",
        "cursor": {
          "ref": "515255b4-91b1-43d7-96a7-ac296cc217af",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0eadb6b2-1ac5-4821-9899-9737305fc775"
        },
        "item": {
          "id": "8781d36a-e2e0-46f4-8772-896ba6707492",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4a947324-a4fd-40c8-94c8-24e75d9ce4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb096c5-7216-43f0-b456-477b787958eb",
        "cursor": {
          "ref": "fbd320ad-274f-440e-99e8-a9a32a7cfde5",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "662de27f-eeae-45bb-8e90-dabed0eb3611"
        },
        "item": {
          "id": "edb096c5-7216-43f0-b456-477b787958eb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "24720a11-ff08-4c80-b604-7970047ceda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f1b2c1-671a-4e7a-8722-3cd1188b6540",
        "cursor": {
          "ref": "ef4847e7-591d-4c3e-99ad-21ed879a2508",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e2e4470c-ed27-481f-9b8a-1655af67d718"
        },
        "item": {
          "id": "94f1b2c1-671a-4e7a-8722-3cd1188b6540",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3d3fe2bb-077a-4fa8-b4dd-980457e5c539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e4f24d-09f8-4984-92f4-9d547c127bce",
        "cursor": {
          "ref": "44d23935-19a7-4076-8404-a0a92d4310c7",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0230ff9b-3853-4fa4-93d8-f424c213369b"
        },
        "item": {
          "id": "e3e4f24d-09f8-4984-92f4-9d547c127bce",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "16fc3372-17fe-41da-9e06-d40da2398da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99eb462d-c013-4c49-9745-5c8e8cdca698",
        "cursor": {
          "ref": "a6c01ebd-bb58-4bd5-931e-bc2d668e4f92",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "307cbc2b-4ce3-4ab0-b4fb-e18416ea49dd"
        },
        "item": {
          "id": "99eb462d-c013-4c49-9745-5c8e8cdca698",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6c42a161-4e89-47b4-8d0b-5dc1e55d41e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca32691-fcd0-4de1-9c02-27e8dfc2f542",
        "cursor": {
          "ref": "bb4fed03-620a-46e0-bbb7-992a70518488",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cc01abed-6476-406c-9329-49c8ce5a2b08"
        },
        "item": {
          "id": "0ca32691-fcd0-4de1-9c02-27e8dfc2f542",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "efad66b4-40fb-4c23-ba05-a64a6b7d7061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d40ba1-103b-4a07-bdf0-fdda1fe5cfed",
        "cursor": {
          "ref": "62ff0683-98f1-400f-b900-beee4e1970c2",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2d7d2f6c-b28f-4b4b-8274-103cb02d793b"
        },
        "item": {
          "id": "81d40ba1-103b-4a07-bdf0-fdda1fe5cfed",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8863866e-83e5-45eb-863c-060f62a13f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6967f170-61a5-4568-a138-552b8eeba9cd",
        "cursor": {
          "ref": "8a231707-35df-4f98-8cc9-128cdcf6f162",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8ffadb62-9f11-407e-95ca-cca7a24d2ab2"
        },
        "item": {
          "id": "6967f170-61a5-4568-a138-552b8eeba9cd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c25965ee-f6d1-47fb-bb59-a6adcaf24a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9ba213-fd55-4d77-80c8-3bb592604995",
        "cursor": {
          "ref": "e682a276-e18c-4932-bdb6-fb2e9ea58213",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "52dc1d59-adc9-45f0-be90-60a0b90bdcaa"
        },
        "item": {
          "id": "be9ba213-fd55-4d77-80c8-3bb592604995",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a4374752-776c-4a77-bd69-eb747078f0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333ef35e-a4bf-4027-8ca4-1e5b18bba595",
        "cursor": {
          "ref": "8be633ef-ecb0-44b3-97d6-84cc80952cb4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f7c4cc53-26fe-44c5-a94b-650bb6efb68c"
        },
        "item": {
          "id": "333ef35e-a4bf-4027-8ca4-1e5b18bba595",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "21abeccb-bfe0-4247-8392-db8f5131e815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eeebb06-8766-439f-ac2c-60c56d1343eb",
        "cursor": {
          "ref": "fae0afc8-42fa-4484-b525-b060e8b85618",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7f04bd52-1365-4b56-b117-79c27f41f98b"
        },
        "item": {
          "id": "5eeebb06-8766-439f-ac2c-60c56d1343eb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8b3875b7-4d8d-48e1-b946-7c4602551379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beef2129-ae30-46f7-a32e-28152b994e06",
        "cursor": {
          "ref": "bb44ca8d-42fe-4ea5-87e8-cca5a903eec1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "38a241dd-63a1-4bc5-9a4c-4dbe60f89492"
        },
        "item": {
          "id": "beef2129-ae30-46f7-a32e-28152b994e06",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "328c97ef-da6e-4722-b3e9-68a038bb8f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4c1530-00bc-4cb5-a111-232751e07d76",
        "cursor": {
          "ref": "d5d02031-7a41-434a-9f1d-46edb1f7990a",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0ff98828-5582-4530-9755-3e5bb83e1a3d"
        },
        "item": {
          "id": "5a4c1530-00bc-4cb5-a111-232751e07d76",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3c054d02-d87f-41df-b2ac-871d1d4efa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927b2899-1aa5-4613-a9e8-d66982ba7f74",
        "cursor": {
          "ref": "764fd95c-caad-426c-8096-14b2760f3c88",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "64923ba4-97bb-4794-9249-4e9e3d9108b8"
        },
        "item": {
          "id": "927b2899-1aa5-4613-a9e8-d66982ba7f74",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8271e832-47dd-44b2-9617-944f818bc3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0629510-e284-46b7-ada8-f9b7dedd5f8f",
        "cursor": {
          "ref": "0b36e462-1230-4f5f-913e-1ba66cae3e04",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c1305116-6118-49af-a27b-54e2d0aa8ab8"
        },
        "item": {
          "id": "e0629510-e284-46b7-ada8-f9b7dedd5f8f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e8139c0f-47e9-4e47-b6dd-03a164dd4833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2eef31-cec7-4211-9de8-9cbf151aa813",
        "cursor": {
          "ref": "3c310817-a78d-4be2-bd2b-2126d90bf384",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6acaf2e1-df8d-47df-babe-e1b393a9ecb6"
        },
        "item": {
          "id": "fa2eef31-cec7-4211-9de8-9cbf151aa813",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "da468cd9-5be2-4882-8a2b-b82d03fce91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b45d2f-c5dd-44ae-a2c4-ade089b57f59",
        "cursor": {
          "ref": "5c4bb456-694f-413d-bee9-41bf21937742",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2b748fd0-423a-40b6-b3a5-a714bec2e181"
        },
        "item": {
          "id": "11b45d2f-c5dd-44ae-a2c4-ade089b57f59",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2e812089-0caa-4fdd-8eb0-a04d30845b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c4c8d7-1fcb-4e77-9c7f-e76255f9e3d5",
        "cursor": {
          "ref": "1a835746-c495-4d14-85a8-efbd50682ab0",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "50dc44de-e9b3-4514-b7e0-6c8a3ff89aa6"
        },
        "item": {
          "id": "88c4c8d7-1fcb-4e77-9c7f-e76255f9e3d5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1146043f-dcbe-4005-9203-781845d8fde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09c22a9-5fc5-412a-983b-88b54325af46",
        "cursor": {
          "ref": "605fc06e-371e-47e8-ae0f-c8ecdde3218f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "aec42658-2193-4a06-95ad-ad47168f2103"
        },
        "item": {
          "id": "d09c22a9-5fc5-412a-983b-88b54325af46",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4f4bbd71-d89c-4794-8634-9fc94ec76c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6686eaae-34ca-4b1d-a70b-b7cb4c5ba812",
        "cursor": {
          "ref": "8e0d7308-3635-4909-818e-1c0987397306",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "cea17133-a3fd-48fe-9033-0d65ae0d7c10"
        },
        "item": {
          "id": "6686eaae-34ca-4b1d-a70b-b7cb4c5ba812",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a643298e-84a4-40d5-9637-c86f57e94f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4cf1d1-33c4-48a2-92e8-0a60fa6a207c",
        "cursor": {
          "ref": "ed9e65c0-ebb4-481a-aedf-43abedb66c60",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "710c0c39-5857-4d3e-92fd-5e45015ae9fe"
        },
        "item": {
          "id": "fb4cf1d1-33c4-48a2-92e8-0a60fa6a207c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f3a8ae9e-1abd-4da7-af0b-418d1c0a417a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4737792e-d475-4fd0-b01f-ea5055089910",
        "cursor": {
          "ref": "e11bd08d-a3d5-4f6b-b2d3-215a716f7916",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d0331b50-f65b-4a26-96e8-f768d005ebf7"
        },
        "item": {
          "id": "4737792e-d475-4fd0-b01f-ea5055089910",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a047f447-0d11-4e08-a09a-7a920c88a07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a509f718-3c9c-4bd1-ae8e-95bbe1c2ffb1",
        "cursor": {
          "ref": "33de1a6f-33e3-4bd8-aeca-fdeb96975944",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9eada6ad-ff1b-4100-8572-233840a8f44a"
        },
        "item": {
          "id": "a509f718-3c9c-4bd1-ae8e-95bbe1c2ffb1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "12080e47-1347-4cb0-b488-eb531c198eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5977e152-7071-4c22-baf6-ae5cb008abd2",
        "cursor": {
          "ref": "d62c9fbb-62b5-4ea3-abfc-93144e74dfc5",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ef03b879-9dfb-4313-ada1-4ef3588896c6"
        },
        "item": {
          "id": "5977e152-7071-4c22-baf6-ae5cb008abd2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "33d9efa7-01fc-4a2d-b15d-364eb17fb722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516f39ef-bdb4-4df1-bcbb-b4e8654e0beb",
        "cursor": {
          "ref": "5920293f-be4a-4adc-b210-8ccf510bdda9",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a6ded670-6a35-43b7-a6c2-44ab94f58810"
        },
        "item": {
          "id": "516f39ef-bdb4-4df1-bcbb-b4e8654e0beb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3d7bad0e-7bbc-41ea-8636-222516ac0759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfbfe14-cec1-4900-b8ea-bd441d1d13af",
        "cursor": {
          "ref": "04db9d0e-266f-4441-aede-bd20c2d4eb41",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "471d1dd5-ef74-4915-880e-5a544bf8ab34"
        },
        "item": {
          "id": "8cfbfe14-cec1-4900-b8ea-bd441d1d13af",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9c63b189-e84e-471a-b936-a3b47005b642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c51e376-d681-48d9-8af3-4a5d633be19e",
        "cursor": {
          "ref": "ffb88dc7-4bf0-4f1b-9086-0c7d58bbdade",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1fb3a97f-a8c4-4cbf-8574-16e868424f30"
        },
        "item": {
          "id": "2c51e376-d681-48d9-8af3-4a5d633be19e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d6bce143-0769-483d-b0cb-e13e1df6dae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819113c2-f250-4b50-bbad-5f899c137ec0",
        "cursor": {
          "ref": "6fb0ab24-a2bd-40c4-bbfe-6f57479e8c2c",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "838c6487-ec6d-44af-8ad0-18654d411de8"
        },
        "item": {
          "id": "819113c2-f250-4b50-bbad-5f899c137ec0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cf8df65b-f813-4cab-8d29-212de3fbc412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91acba8-81d9-4c98-bc0f-ac40af624c2f",
        "cursor": {
          "ref": "99404c2d-ea50-4121-a4ac-27884e1abbc2",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "79c8d29e-b8c2-4369-a8fc-6b7b36f327e2"
        },
        "item": {
          "id": "b91acba8-81d9-4c98-bc0f-ac40af624c2f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9f946d0f-419e-4afd-85e0-b13eb6e94ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f219b5dd-0156-4e48-89cf-ea01c585b1fd",
        "cursor": {
          "ref": "4bec68be-b101-4e0c-876a-b59dcb75515d",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "99919cdc-3a40-42f6-a547-bca9a327e122"
        },
        "item": {
          "id": "f219b5dd-0156-4e48-89cf-ea01c585b1fd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "86221f6e-b8a3-46a8-a25f-8990c704dbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f4b99a-cd61-49fc-9074-ff0a8dc1160e",
        "cursor": {
          "ref": "85b1f4f2-231e-4263-a6df-9c07b73ce945",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4b5ebbcf-e2e3-4ac1-99a3-5d4c021d4db1"
        },
        "item": {
          "id": "54f4b99a-cd61-49fc-9074-ff0a8dc1160e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "be907a8d-2a0b-4b1f-8dfc-ec1e9f17f0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb48b17-b0a2-4284-8156-866c9d6ae1da",
        "cursor": {
          "ref": "4f0e6c67-864f-4a6a-b10a-5407dd9d2625",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8cee0e73-837f-424b-8cb4-4399a3300ae0"
        },
        "item": {
          "id": "dbb48b17-b0a2-4284-8156-866c9d6ae1da",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2ecffbad-48e3-4f74-9c52-6c76e1543c12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e364a897-1118-451e-95c2-3dd98dba3285",
        "cursor": {
          "ref": "43f698ac-875b-43f9-a6d3-2952e7bb727a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9ffc5d6f-14a9-4999-845f-9046663bcaf9"
        },
        "item": {
          "id": "e364a897-1118-451e-95c2-3dd98dba3285",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "bf9a8c04-9305-4a0d-9042-420aa8d471e5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd6322e-e18e-47cf-99a6-d2a5d560469b",
        "cursor": {
          "ref": "8cce02e2-47d0-4a9a-97a6-0407ff811009",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1689cc9a-f72a-4b3f-a9a8-785f88f770df"
        },
        "item": {
          "id": "ebd6322e-e18e-47cf-99a6-d2a5d560469b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c293a723-bf1a-42bb-aecd-8846ea8966d4",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fd26cf-ed1c-4d4e-bd06-43467a039e3a",
        "cursor": {
          "ref": "2502811d-b34b-43c7-acf4-39590215697e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "63f52f3d-ec74-48fe-b17d-08ae3295f4d4"
        },
        "item": {
          "id": "d4fd26cf-ed1c-4d4e-bd06-43467a039e3a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ba58f1a6-ead7-4881-aa75-368407756087",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9385f941-493d-454c-aa95-4255a1773bc3",
        "cursor": {
          "ref": "aa77e1a4-9d3e-4242-be1b-1e4a57d40f31",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "aa2c7b7d-2a27-401b-89e8-bb4c6fb3f9cc"
        },
        "item": {
          "id": "9385f941-493d-454c-aa95-4255a1773bc3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e087cbde-2339-400a-baf8-d41f33a6aebb",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e1dfe9-74db-4622-88e0-3c1fcf6ab96f",
        "cursor": {
          "ref": "895e7cc2-e283-443a-902a-8ca992f9ab36",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2316acdf-96c4-436a-8821-0ef592839195"
        },
        "item": {
          "id": "68e1dfe9-74db-4622-88e0-3c1fcf6ab96f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dcdfb4e2-4fa2-4a5e-bfa5-29d63441030b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e1dfe9-74db-4622-88e0-3c1fcf6ab96f",
        "cursor": {
          "ref": "895e7cc2-e283-443a-902a-8ca992f9ab36",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2316acdf-96c4-436a-8821-0ef592839195"
        },
        "item": {
          "id": "68e1dfe9-74db-4622-88e0-3c1fcf6ab96f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dcdfb4e2-4fa2-4a5e-bfa5-29d63441030b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e1dfe9-74db-4622-88e0-3c1fcf6ab96f",
        "cursor": {
          "ref": "895e7cc2-e283-443a-902a-8ca992f9ab36",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2316acdf-96c4-436a-8821-0ef592839195"
        },
        "item": {
          "id": "68e1dfe9-74db-4622-88e0-3c1fcf6ab96f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dcdfb4e2-4fa2-4a5e-bfa5-29d63441030b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee1b864-755c-48f2-8775-0b999eabb5a4",
        "cursor": {
          "ref": "e28a2c45-2688-43e2-b838-401f9a2bcd0b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "28f34c72-242d-431f-b744-53b2ca378f8c"
        },
        "item": {
          "id": "2ee1b864-755c-48f2-8775-0b999eabb5a4",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "bb172214-eba7-4141-bf3f-c40fd4bb5e34",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6f9d00-032c-4647-bac9-a3720b39bf2c",
        "cursor": {
          "ref": "35dd9178-a7ec-4ecf-92ec-78dc1fdae61d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "de368683-42ca-4ad9-bd13-bbe0fb443976"
        },
        "item": {
          "id": "5d6f9d00-032c-4647-bac9-a3720b39bf2c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0918ee2b-3c55-43c2-a1f6-50a8713521fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6f9d00-032c-4647-bac9-a3720b39bf2c",
        "cursor": {
          "ref": "35dd9178-a7ec-4ecf-92ec-78dc1fdae61d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "de368683-42ca-4ad9-bd13-bbe0fb443976"
        },
        "item": {
          "id": "5d6f9d00-032c-4647-bac9-a3720b39bf2c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0918ee2b-3c55-43c2-a1f6-50a8713521fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed740419-ce14-4246-bd34-1b768b8a51d1",
        "cursor": {
          "ref": "660be7f6-72a7-4f29-8cb0-92ca5ab4d3bb",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "189ab609-846e-4c05-88e9-6425c8fb8f42"
        },
        "item": {
          "id": "ed740419-ce14-4246-bd34-1b768b8a51d1",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "36737e79-1852-4739-98b7-7d1b2550c699",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0b985f-6dac-4d71-a299-c5a6d35e7977",
        "cursor": {
          "ref": "33d04032-71c7-4d81-ab15-6e6b05cc3541",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a147c03c-9dcd-4d1f-9d8e-e4a40b05a6d3"
        },
        "item": {
          "id": "6c0b985f-6dac-4d71-a299-c5a6d35e7977",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "00d96648-d4d7-41eb-980c-b7833e4ce947",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0b985f-6dac-4d71-a299-c5a6d35e7977",
        "cursor": {
          "ref": "33d04032-71c7-4d81-ab15-6e6b05cc3541",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a147c03c-9dcd-4d1f-9d8e-e4a40b05a6d3"
        },
        "item": {
          "id": "6c0b985f-6dac-4d71-a299-c5a6d35e7977",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "00d96648-d4d7-41eb-980c-b7833e4ce947",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6009ac76-0815-40e7-ba1e-661dae3e9183",
        "cursor": {
          "ref": "8bdff589-2b8f-4772-ae87-98a0a0216423",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "59e5e801-22c6-43c0-96fc-b4e555ffbbe0"
        },
        "item": {
          "id": "6009ac76-0815-40e7-ba1e-661dae3e9183",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "1721bff8-a464-44eb-85db-838a55fc75a1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}