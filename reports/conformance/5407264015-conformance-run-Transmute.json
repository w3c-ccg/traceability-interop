{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9e10f04c-f8d7-4366-9033-c02a403d8c1c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7f05e8d5-7b62-43f1-9071-a4784151a597",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6217eba9-2b14-43b6-b949-822645417212",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5194b466-32cc-4479-acaf-63f7e7b9bd9a"
                }
              }
            ]
          },
          {
            "id": "70818293-2e24-4c6b-952a-f88220331310",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b81d88af-0414-4a7f-aa1f-5cfe20cc110d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d9fcaaba-db0c-4898-aa26-34fc67dd1b08"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "76a92324-6f66-405f-a484-dc8f7e33aab4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d092a2e9-57d7-477a-8651-0aa869c97c8f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec1d93bb-da46-49d2-bcdc-9ecea8f9fb47",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21baa477-ed2c-4dad-8985-623753235931",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29a67244-217b-4a4f-acc5-123c0b6f22fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a94ed8a-c7db-4956-9df9-4f1825279209",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "33cb5da0-615d-4a99-9d5c-1273e98b829e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f72cf346-eac7-48dd-88c2-eb0a9ab3f3cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93aff3c4-c82c-4af6-b83d-4304721f3e59"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f64a340-4ed9-4521-9853-b45b5db69861",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7aceae74-c786-4bb0-9c40-3c71ef4ad2bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94aa98b0-1815-49fe-abde-5965624f3a56",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4dfcdc82-41ba-4597-a59c-a940843e74b8"
            }
          }
        ]
      },
      {
        "id": "b59bcaa6-7a43-4142-9678-4fe9c92777cc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "913534be-4a74-425d-a257-70cab3a76f2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1484e39-e056-4fdb-9419-ba43d10423a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "08249a26-fddc-415d-9967-5213678ef865",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a80bbab-1042-4def-8c82-8cf4539f0c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe773f86-844a-42d5-8f4d-1a11aabcc23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acdc464-7363-4b57-9645-63e45073726c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b0df98-ed7d-49fd-83f5-1b12c83ced5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b7843f1-643c-4cce-99a6-c95935bd4678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35276aa-4843-43a8-9a4a-d5c13a995950",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fe8b96-5074-4c8b-84e0-8e876c5ec45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7881819e-7e3e-408c-906e-71a9f8496c57"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "29fc7ccc-cbdb-478d-8106-f80868523525",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d067f8a7-eff0-4b3f-ab26-0472d2dae19c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776e4638-4034-4f33-86b5-f66e80058d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89378ed0-ab8b-489c-9b05-24169a8ea48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a7a4b0-a283-47ec-8adc-417dc96b9466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00576ae1-ec6b-47fe-b900-15a3c6e76fc7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "85e507f4-5111-4939-b192-bd350c88c148",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ddd9fe22-d670-47f2-bbd1-de238766b345",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f764cf70-7e68-4949-a83e-439595920bff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6909d017-9fd5-4b28-a0ab-d833b129e5ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f8b5902-e235-446c-a855-f5d57c632f18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f216d0a4-5455-4f68-96d3-1a80a4cd82ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e1fc9a6-9f9c-4862-94a8-172b56198370",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b1fd580-4160-41d2-85db-969f1e770f7e"
            }
          }
        ]
      },
      {
        "id": "5a05e468-4e39-43c8-b884-7a2f0418acc8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a9d4b9f0-dd20-40a1-887b-66a0bda9e02c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab90e0ba-8d89-42e4-b32f-c2f5ad15b3e6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "df855a66-a902-4824-893d-8768d9e998f8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25229c9c-d6ad-4382-9c37-e80365d04c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272baf45-0304-43a9-9e79-fb41485059cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e548913f-5b51-4f50-ad7d-3d9bee49c4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "708db4d6-f54a-4f19-8e09-c8c47267e853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b05bd3-6139-4f9f-b548-3c9acbe06721",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9534f0-5790-4cb8-b12c-5b2ce0482995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91075ead-b382-4dc0-8663-a771b6451fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69032a29-ceb9-41f2-a4bf-2f1cc0f264d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26945e97-319c-423e-954a-cbef12dc0293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197a56c1-7678-4a0e-9bc2-946b456c5f21",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8bf821-a057-472e-b3ce-e53c2baf95ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224accb9-075c-4421-8d06-980a88a601e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55bdb72-2b29-47a4-9dfc-a9aeffe0d58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0692d89-bbdd-4442-89c9-fc9a9093401c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61df071-a3a2-43ee-a71d-7a8a68109704",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cc4181-8079-4282-a48d-3800228b1a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567fbaa4-abe2-4650-a5d4-c2f669954c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cfedee-e3a7-47c5-a907-d8bc0fc8da2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfef6f73-bf07-42b4-8f01-0fc0e8d8bc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5568b49a-3b49-44a9-add4-c5a26f3dd511",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0910058-be80-4159-b98f-539625a63ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb4ef51-b257-461f-bd85-39ff40a3c097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631c1548-16d8-41ec-97a8-c43d45f562c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36cdff88-7ca7-4e09-b4d7-4fb532a38b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d881dfbb-701e-4d7a-b9fe-8078bf8125ae",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5ec172-b16d-490b-b340-398a928c08bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39d0cf6-5101-4549-9a21-da90146f2fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116155e3-6885-4705-820d-79d3d92cf966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "018d78f7-593a-4905-9066-eea55aac584f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab3ae87-fd01-4e4a-8e6c-8f36a0df08bd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011f6844-921e-4866-b042-4729fdf5efb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54d5e79-9d76-4a8e-a233-22aa8caec9bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709aea1d-4d9e-440f-a6bb-e76f00fbe7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "069bc6fc-2ea2-4dba-9c33-e36df5020fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0200e1d-645b-49e8-a705-8706400c5cf8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd38ee26-a187-4f42-a1cb-657346e2fc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a95b3b3-ccff-4331-8724-cdffd9644b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6525dce5-e2ac-429b-bd68-8236e91b3de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43f6c1a5-b04f-45e7-917e-bcdf1c933998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47696099-2a2f-4120-848a-694e7e8af9e1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a627a77-28bd-4144-9869-f1f7d37fe6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70288010-df89-43b7-b096-609ee73f2149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6293fc8d-9f89-4b27-bd85-c2922a5b0ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd5ef815-0f3c-4103-b814-fd88769e54d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fa73cf-027e-4c8e-80fa-4592daa36701",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64b7ff8-c107-4b10-b871-319c61d661f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb335f45-8bfa-4ef1-a24b-94b0cfd840aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6639d7f-0a94-40c7-9fb0-ee6cffc395b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0b740fe-ba0c-49d3-b6b6-9e507b242237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ec8979-2099-4d77-8efb-f0110f00cfbe",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe94d92c-0ad1-47a0-a1bb-c9b21fe33fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb1773b-3623-49cc-8b60-b9934935c212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b4d62c-a4ac-4b40-ada6-69f939bcadb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f77415e-c4a7-4f44-9937-c9a7a5cd1330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9d7c93-4dc7-42e2-9342-76d623d42bdd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a5bfbb-d653-40f4-86ab-6a09b1a59550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba8dd89-3558-4e06-a4ac-d6a5a3c6b600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fb18c8-19fe-46a9-9a13-f41fae3c9285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b24c580-444c-410c-92de-a292d64e3099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdedd98-d851-4e5e-8b77-70392e3d5d1f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92ecc45-bb77-4395-b4d6-01675622547c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608e004c-e4fe-4bbb-833c-eb89b3b6c7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11aca882-52b3-49cc-9c99-a1ddffac3ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94da55a1-8d94-4cf0-8798-63345b8b6a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adfb8da-683d-4feb-8366-e2ad766ad70d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124267d6-168d-453b-8142-b74f44655321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3d9cd5-6f5c-4f28-b762-a83bfc2a1631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca31005e-e846-48f3-ae7b-4f9ee6de8661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dfd7fde-c57e-4a39-94ef-e106873754b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85ae6cd-7355-489e-928a-f2571c3f74dc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc6d860-d15f-421e-84ef-0b7c4c10abee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169cdee6-690c-4d22-867c-476515a11e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcb56ad-7aa3-4e4a-a482-47ac558cde4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45afc332-a1de-4ffd-b416-ba03d2d97775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f681ba94-78fd-483b-b366-511dd490f9a9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4cead3-5b5d-4117-bb78-244e1515fa96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb2f15d-b971-4aec-b80d-34f199ce85d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5959a7d-3420-4a22-89a6-7c450058ab59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afdf182d-126d-4b8a-b45c-9a5957f793ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f854aeeb-f148-4016-a8db-6a4aef3ffff5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53347e19-7087-45de-a1b6-312b5be48e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21deafd-4ceb-444e-870c-2885fb26c9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d099c7b-6781-457b-97e5-538e5529a8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d8c934d-3ced-42ee-9d5d-86f73296bd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbeba13-c0f0-4770-aa7d-8074b00f5856",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949ad5b6-4a6f-4724-9353-7366f1520d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1987745-967c-40ca-be77-48122cae1998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3d2236-dad3-4b21-bf10-a90d4c56d7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "13a52dc3-1e0f-4db2-af18-83c2d68fcec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cb97a2-b692-47d3-867b-046cc2953948",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cae2f21-1fd5-4e25-978f-caedfea56fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3dbc29c-4b84-44fe-8323-e6226f0b3859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3830b663-8448-47c5-a39c-57e7254e050b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0beeaee-ba29-4829-ada2-1cb21f920c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9537b67-23b0-467a-8623-a4ae056ff452",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bc30c7-75bc-47e9-b7e6-9c1f2684086d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e0112b-7aeb-4263-8e76-9c928ff0576e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8b7288-6d4f-4b50-a524-c978b5c90e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03b62d01-2eb2-47cd-aa26-1b99aabaf000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61363fa8-06fa-4ef8-a2e9-c1918d3f0119",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8f369e-f7bf-4d29-8db8-6ec144aa80ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c644c452-54f7-45a2-a3cc-9fd97d23ee10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2025d168-fbfa-4e86-9882-dfd5038329c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebeb7dcd-db0f-4b04-90e8-b19028048d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a2a7a1-ec2f-43b1-b230-bd24f7dd96d7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb0566b-5c2d-4318-a3f0-a5bc3b7c0685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d5090a-12d1-4a58-9a91-0e549d5c5d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325b285e-0f03-4a67-acee-774c43b94c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9713c148-c376-4039-b685-6f8f92fd484c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583003c1-c424-4625-93cf-e041ad6997b6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6775083d-6943-41f5-a6f1-a780f690231a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96da4270-948a-4552-8c6c-5d33c15a3f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ada988-fe69-4117-8a2f-bec1053e7c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "397a086e-a9c6-49ce-851a-3662e0e8b964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027c635c-3ea9-496a-849a-6ecf6dde4d58",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f2e02c-b149-4f9a-b8fa-76d086a47b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52744e69-1ecb-4962-9111-0d2d5a9d1139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cf7e94-d485-458a-969d-28da04b3fb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b882e3f-d19c-4810-bec8-fdd3fdfd8da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660e92c4-788a-480a-9bfc-a2d183e8b7b1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffddddc-f9b3-42b0-9484-ae4ec66870d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2f5a79-c1c9-4f97-bf97-efcfe92d321a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb42a68-e881-400f-82fe-70f380bb36af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83ce0576-006b-4b6f-8ac6-9e22de5c8ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3db916-7ed9-4145-9a9f-94907e05c65a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae25c05-1675-4b8d-8dfe-23652bc25cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb9818a-46ee-4fba-aaf4-abc7993052ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b9fe7c-b055-4529-a537-c897f9ae1ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f146d0b-3edb-4af1-b3f7-fca00bf75f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6637db8b-0578-4662-959b-839ae04e756b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cda507-e28f-43d2-b57d-9b36ff1f152f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937b36f7-889e-40ff-bcdc-6fe8b9e0a5a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d1f57c-19f4-4127-a05a-591a14bc9ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "343c7d12-684d-40a3-89b9-245c1bf45a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5b9b34-ab0e-4d0d-9a56-66e0da630821",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63170bad-c0df-4621-8b44-4bdd923d6480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b035a75-72c1-4e08-bc3e-f670c24766b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f542cba-4cb0-4151-913b-009ab83a10dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "428f4e94-2bdf-4109-ac04-e725ab9fca66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db87617-30c6-4c82-8c02-e9b16a44c7a9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07dc6155-087c-438f-b07e-5da4c7568b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4978cf-68dc-4366-be67-6e09c8413e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fa3608-ecf1-4985-89ca-d3ca16cb991a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33028b39-aa43-4bb1-84ae-8f51758b8556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed0d876-7b67-4121-bac2-bbb271440f75",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad0a1d1-4f99-4b90-b10b-3adbd85cdb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f11c7f-fb31-403d-b96d-df7f2a5dcf06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e368374-171c-40bf-9523-819e2dd247bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eef93c1-dce4-4412-a88d-bf6dc540e7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c94bca7-4d7f-4b9e-9836-196993629fac",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac18d9c5-0cdb-45e5-ade3-93f1ca2c0454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e52152-3006-4296-a4ec-ec9eb029227e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26a8813-c191-4114-b6d0-160b455c38f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9cadea-901d-499c-af6a-b940c2c8dee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b9c26e-c028-4387-a17d-43650a64aaa1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe25562-7cc4-441c-b937-42db309a56f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf228392-5bae-4ecf-817c-3706e30a6077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc8ba33-242d-4deb-a11f-e06fc25f2330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "732a9242-1667-4758-83f3-45942f083b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1861ca-15f7-4a88-a7e0-6b55afaeaa81",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18f7875-5ccc-4169-a386-eb39867fcac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c2c0007-e123-4604-8a68-885f1b0cdde0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b567b2b9-dbf3-4d3f-be12-c15a81b1aec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f92b3b72-fc9d-4369-855a-e118408ba20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b912efde-a084-43b8-9c13-c47b321a9c4d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56685edb-d285-46eb-8f7d-1c73631e38f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda146ef-b999-4396-8c09-57774fb31fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9caa2347-f7ad-4339-9ae2-a9947d215415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c00c4b38-35aa-402f-aff9-3f0810aab5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4a3608-3f44-463f-b0ca-2db9263ab9b0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4398c4f7-43f4-4e60-90a3-3b45c0f629c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9d4183-8a7a-43e8-8c17-eca5abd3a29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc33f0f-afc2-49e0-aaed-7712dfad4e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "48d54bd0-c87d-4455-8159-158ca9f5a798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c8dcf8-5292-462e-9ed8-6931d7945e84",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb6d88d-cc05-40ee-8d6c-9aec42ae18c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53a8dea0-599a-4f73-bb82-437984ebc4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be927b9-8cce-48ac-b88d-efe2837d1642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "477d65bf-51c1-41f5-9fbb-ca59466cd0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071f99dd-f1df-48a5-90f9-fe9624c68f82",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d44250-637f-4393-80e2-57b590dd5f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962081a4-5cdf-497a-8150-b9520aa3b649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d9eb0c-81a5-4867-bf6b-5e62abb3a821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d51797-0307-465e-b729-f9521f2e5382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17d309a-a2dc-44a1-bfd1-6866c6ed95c6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cdf57b-dfa7-460e-8a2d-a0f3f3fec669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "454f18c9-f236-474d-b2d4-1adbb51a3919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c5a45a-4962-4364-a4b3-de64a2e8ce2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cffc6a8-9415-4b41-8f80-b0c947cfa7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87bd6b0-bf2b-459d-ba9e-01083ddf8c37",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa80eb13-df88-4222-9d41-6ba9bde7f847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b4d954-c2c2-4fac-b986-d68f6444e3b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb777e7-23f3-4381-bf2c-831ff6eaa988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0a96da-8d0c-4cd3-bc0f-e86e73d39e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712a89a0-f463-4ac4-8829-c2d439afb884",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ad7ce7-0451-48c1-bd4e-1c2d5f3a6127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "010ba7e9-44bb-4733-a462-664e9625dfac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a112bb59-3012-4f1e-87a1-3b4d2c60a054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "03b5db4b-698a-4b56-87c1-cdfe32c53288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200dfab5-8ed0-4424-b83e-e4e3c3331eb6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ea28ca-7b6c-4014-ad01-3d164d797d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d430c4ef-2049-4023-b05b-b3d89eb11a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9f7dc4-f598-45de-babe-6557928c18bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "61b3fec2-3501-4e8f-a3bb-7b649572d3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0446ddd-f88e-47f6-b72d-96253b0c4d14",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f582909-162c-45c5-88dd-c3544452b7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de51c576-a0f3-4913-91da-3430f1b18bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1714184f-ee57-41f4-b9be-f5cc2a023b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "76fb7909-e4bf-41d9-a282-03b81d7f77dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344d081f-e310-4196-99ac-b01db823a929",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0827566-684d-4070-b65e-541eba95b477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ec9994-16c5-4ffe-ba66-8dd0216b53b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7842c58d-948a-4ea8-89af-6c628d6d3887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2eba31c-3093-43a7-aafb-993fc9a5590d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8f98dc-f822-4283-bf9b-d07e67023a50",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fe695a-6828-429f-9693-82df98308402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca2805e-5365-4782-9e6a-50b039390974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa65242-a7df-41f1-ad7f-88bbef4da6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c98e217-2028-4f9c-b5e9-c777e7b868a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c2a6d9-d5a6-4c49-ac11-f4f1f3cc8483",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cae684-733e-4a56-9993-484015595fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3b4082-7b96-4a6b-8889-98048562722a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d264a7-6401-4331-8c3e-77421d805db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b65c6089-987a-4932-82ad-c993cf003015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53a90a5-c8c3-4ad1-a521-c29bab8df3d9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d3610e-d9c9-4aec-ba35-e24ddea1b045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ad0019-43c4-40b2-9bb2-6d946f5dd69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2feffdd5-1f3d-4878-93b6-0e521ee5b109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8984c5-c7b3-4baf-8299-9ab31320990a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13f2455-2e78-4dea-ac90-9c904a49794d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c4155f-8381-4658-9b32-0f0da31ae3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517c0ec6-a493-4eae-aa0d-1449267b7037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816213ff-cd3b-4d9c-a072-5c0c6fb3427a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf8bfe7-c129-4a91-959c-eeb2e3751856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8966ed-8dcd-4556-9bd3-1243b2b6c2e2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07510fb-f3b6-41c5-a90f-b4b4064457e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f8ff38-78d3-4510-8fe4-79036ba8e82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17085c7-3e97-4aa1-8334-33b70cf97c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a23a9ed-aa29-4e62-9fe7-fd44547b1179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec3e2be-48e1-4df7-9f8d-3da476bb9ecb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d817cc24-d286-4873-bea5-7f16c7639695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b9548a-1a1b-42b1-b1eb-a709653bba0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebfebb4-9c7c-48a2-a2ec-5bcb656da8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93caf8c3-7b40-46a3-9524-02de91af6ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00db5e35-d3cd-429b-9754-a878b3615d2d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e89e91-5121-44c7-a2bb-83bad0c72bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859ce0db-ecba-4ffd-b8e8-11cc6f6661be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8a3262-44bc-4356-8922-e54dcbc56517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7370830b-c2cb-4c53-aec0-24f636438b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb9dd8d-7c53-42f5-93c1-c607093538c2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecf5a7d-1dc3-4b49-a2bd-9dcc6b613238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a72bbb4-788c-45f2-b72f-51bbb65fc2af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6420d63e-14bf-4afd-beb5-bb9646ae4645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc023af3-15ae-4030-88db-632b78ae2c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce3b436-e249-4a6e-b705-60252f14249c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4c7d59-9f52-4b4a-9db0-eebcb31b1cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54f02ee-6503-4ce7-97b3-db1060bad9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e1223a-75c7-4a33-920f-babd7b227c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41fb2bc4-55a8-49d7-9bdd-a732e9df5ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b6c3e3-dce5-4d7a-8798-973fc789d8ee",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa308f7-c147-4d34-aa55-30de638ba0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9593a56-3bea-4147-851f-418e6f2d4d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd06c042-2abc-46ab-9ba1-b66379ba282d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1efe3084-2f8b-447f-8e37-ace136658115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4b0ff8-0b12-463b-8402-20c975f3b808",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ab1914-c599-4f9c-8b1f-613d79146ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed025ed-0514-44bc-9337-3cc275a5657b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8089c4d-54f1-4616-a51b-cb12aea0715a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d654e6de-f9f8-452e-88b1-fba073150049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4fc395-e979-4ecf-ae76-ed49b618a1b1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60f54cf-8d3a-40b5-94cc-29eefe0c1746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecce451-f62a-42b0-9ffd-727ec60774e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79320e0b-5f0a-4045-9c80-ad735f8ac7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1acfce9d-48bc-4e28-a012-ae0d890bd43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6223c59a-0ecc-48f5-897c-4fe7f5ee1606",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81a7498-d7fe-431b-b2c6-9fbb62dc3023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd64c344-bb61-49f1-bf50-468fd024356a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778423c3-2606-41f1-b393-fe87b0edcfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "121f5d08-f5a6-4a1c-8cb5-4029680e24da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2d636e-e9fa-4a19-a6a7-f3adf5fa2770",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba35c184-f651-48a2-b509-7715436d6dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3019f861-ea62-4d08-a65a-2ff4b47355ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7a3d7a-8b1d-4ff0-a183-6c71436270fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bce0c276-84d2-49f6-80db-80b68fa16567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8919311-c131-4121-a294-57330285f080",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d435129-6888-46ef-9d39-02d33938764b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9036b21-38ae-4e87-8ba2-dc18fe98dc56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6db0881-d70d-499f-9ac0-a67077e61a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd499b6d-44f6-49bf-8bfe-999a736553ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3cae638-0466-4875-bcd4-e80400fa9903",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481f0ffb-a9fe-4c50-8d19-55110af4cd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37d79df-7176-4ee6-b369-83da71ec0f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe8037b-da72-4069-9863-50bed6601fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e86ef14-5271-49ab-9ebf-41eec9c140a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d8b534-1577-4377-8bf5-24612b5030c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd03e24-45e5-479f-80c0-bc2209244dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b79ca8-3342-4fff-8c37-c66f18d9d188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20713c79-6367-42d8-ab42-84e28dceb158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3a3869-8ec5-418e-9a17-c24d112801d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fbfc5a-8ab0-41c6-b4d7-4a0f8b6770cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a899775-d6e1-465b-b27b-43955ee95ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13e7b7a-d837-41b6-91b2-c5aea135f48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dd7bc4-1dac-44c7-bdcf-8d4c7afe7b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "92b15e9b-b291-444f-b1e0-2eb65a6509d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed20f1b-e87f-4556-9fca-f67bda417d3f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ed0fad-9e39-45e7-9a90-a2b3bd12c6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb09621-29e8-44d4-b425-375e38f8ab47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee72d467-989b-40ea-ad75-a83b46252ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b79c74ff-37c4-456c-abaa-54cc9c1aa4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9a1816-e2be-420f-95ff-df45170a577d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2bb751-74c4-4b8c-a6b8-ffd43bcad6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50dc91fc-9059-42de-9b83-c658319b3d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5ebe00-a5f3-4119-be49-dad44af749d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "16ffad6a-fab6-48f0-bbbf-89a7bfe11ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f77ace3-7d72-4ef3-a415-d3812ba84873",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ae674a-9bdd-46ea-be22-bfa3c27222c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8846a4e3-4cf6-4e14-9486-9cb6b5a220ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5d7b6a-1c08-47b9-86b6-1a617792c298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ead83e0e-bab4-4592-bc33-a1701d8bab8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d105a611-da13-4a10-8cc6-b9e6cfa14b8a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d588b3d1-512c-4ed7-b9a5-e8f00d884cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31c4d13-4230-4b55-88ef-84085c37d271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8488da-1ebe-4142-8559-ce3df1e554f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c082941-5510-4fdb-9255-7066dc6856d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c571354-3d2d-4ee0-bfa2-11da2e841e39",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe67b96-09ca-4fec-b9c3-dad63948f5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfde690f-7619-4f4a-bcbf-e40d26524892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef50bb0c-2495-4f89-a9a9-1a0072813a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9581cb7d-f660-4946-adc8-b306fdf4f605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961ec298-c1f1-4cb1-b73e-90ae84c62a47",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd4769a-a365-4bb8-9e53-7dabedf341fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60edcbde-e413-4d19-a42b-91e93f1d792c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d5401a-933e-4c85-9cd9-bc8c79981177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c396ea2-7512-4943-93c4-225d0d5d3349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599b92bd-e5e3-430c-93ac-165fd70a891c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b7fdbf-c4a7-4f1c-953d-13575599202a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce861d6-cf99-4740-afca-e199758c2842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c961093-2ef1-4cfe-91b9-8589b6982205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6e3491-11d1-4c4a-8c08-6a8b5d6ff8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b789b5e3-3d28-43a8-bb4a-0357d4ccb388",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c9f892-866d-421b-8e08-266b5d545319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e885ad2d-f65b-48b2-912a-421b7cab5917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81dbb02e-c888-4f0b-9a8d-82aefee470de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb53844-6a43-4fe8-9a96-7734f690f771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef24ebe8-a133-4935-9994-c0bc9986b713",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a220a2ef-9584-482c-9cd1-7aefc4e5239e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd0fc1c-ad4d-4519-ab0f-c0cce3fe6664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67c5ce7-0291-41b6-8c38-e6a766b638e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35681474-109e-49a3-be55-7eaeeba1720e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269683ae-dff7-4598-842f-79b179bbf7d5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e69c57-30eb-428f-a5b5-b64d15ce4b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09cf5453-2dee-4c11-b4aa-4d2841159b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e1b457-e737-4180-b74f-be0b6de6e475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5ab997-be41-48e2-a06b-537379fe6004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcff7bd-1999-4b96-9e75-aa005a1c0845",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f9cd3e-eed4-40a1-9a12-93e4c9baad9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8dd3a67-539a-448e-920d-9065b517bd20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfbaaca-8776-4b62-94fa-5702223e7414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4af1e213-aa7b-4056-954c-c7723717a5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1686501-91ca-4241-8213-d8e85fec6588",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98e09ee-6eeb-4f3d-a4ed-881623bfb32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9194544-2469-4ee2-95dd-3ef4f467e261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43974aab-b86e-4a3b-a393-07236a3755c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d514ac9-066e-4b41-a874-fb362a4ff7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d26cccf-03ed-4d6e-982f-8b746c262fa9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e9d67e-da0f-46cc-9044-e6e090825d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250610b3-fa72-4067-999b-696687ba6af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440a96f0-1798-437a-869f-fdc1d3cf1380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87fc2e1b-a2d8-4e0a-8777-e6a3c5632f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368399f9-9b03-46a8-bcf5-c5d1123d18f3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63c91b2-43d3-41b7-8d6f-7be75eb25418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251f2376-afa1-4f78-ac19-ee333e04751d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25f58e6-5696-4700-a9f1-08aa51c6f68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fbd5ce9-755f-484c-9103-03fa272aec41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540c38ed-2bed-44ca-a15e-6945829dea44",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43c3722-f943-4f40-a34d-5715e21a27ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e4c372-0d6c-4848-889b-332f6e0f1a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa54a39-33bc-412f-a855-6a5a0f09a251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06afb01c-0d0c-46e8-a852-e76dffecb526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878980a3-ca13-4c2f-94b5-3698f32c587d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a934f8a3-5d64-4ce1-86e8-9de5e3b2064d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64102a6-95d6-4493-a7f3-2a1bb2e5fdcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3d210c-e877-4da9-bebd-785799315ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "830c72dc-a3d6-40b1-bdec-77bdef4c0914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fdf525-3462-4f50-a16d-4811c4ef38e4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7424f018-04d8-4526-af5a-ec96f642fc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83f1bf0-348b-4a6a-b12e-e159e375c40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c9bd75-9d16-458c-8561-c8631d4b7041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f0bb10-ea42-4a38-96be-6fcc0968ad6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2c9494-a993-4bc1-bc1d-ef647906bb0c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82486aa-fbf9-418d-95f3-6dac49f83d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd73fed-26ae-4d5e-8875-600bce3e5bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d9bafc-b7ae-4151-8ae6-f46daa3e1ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60a967c3-6fa1-4145-ba21-48d3f3755b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9131ad5d-ff36-40b0-9edf-9c74d209d5f8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf859ac3-89cf-4ee9-a299-3be85967f082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c8717d-1128-4471-9b16-6ce9098670d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fd2d21-42f9-4e92-9a40-d896dd7e0560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbf3275-48e7-4ead-bb26-be9396143dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8921e6dd-af62-4ab3-a748-d6e80ab53301",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2a30b9-36f3-46c8-b7df-6a14e9bbc66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a223c8c8-c59e-4ec0-9756-c0605b59c886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab14454-8c19-4436-9913-de05baf6d51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0def6d5-01de-49f4-9596-e07327d30e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d360f38-7254-4439-bfe7-7050b2a85f8c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc3b92b-709a-486d-a19d-e1f9ced12536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b59211-1aaf-470c-9f0c-11128455b49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc30d4d2-0965-47cf-b94c-8228cca199b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a40284-73cd-470d-808f-64472fef881c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc7e185-74b0-49e2-84c1-98f5302116c4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914bb546-efdc-4549-8956-28bc2c830a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c60704f-8424-426a-91a1-e8d2281bd2c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdbe526-e215-4797-81f4-6220b1aaeab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2f183c-17c9-4e8c-b2ff-f084b2c646b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de09077-2f42-4fb0-b36d-31894c88025e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea496f2-6d8c-4bfe-af5f-130007f8ad8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360e9cd1-178b-4c21-a422-dfd31354d5e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac299478-428f-4407-b328-5f604aad5762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6441215d-5037-40ec-9ddf-dd88b81a54ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35459c91-ef10-48aa-b86d-ed35da9c90f8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7400fe8f-6cf6-4ea7-93c5-f067ccd1f898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3150636-ad23-40fb-a1c9-512dbead2d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62afd4b-a693-4596-ac76-eae942c69953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f220dc5-5acc-4311-8418-1219c7f811fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72a972a-8842-4d74-850d-9eb12abce657",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c71391-e7e5-461b-94f0-3d00f20063ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b528d19a-fae5-4f39-b458-fceb3fd05c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ded78c-8c2c-4de9-93e6-3cb0043cd0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f680406d-9a94-4235-93ce-0608924c2207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5788b602-5aa3-4319-aedd-0da022df2985",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2418342f-b43d-4fd3-8a94-486167d0f1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79bcf427-5291-43fc-967b-67adf50b029b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c051d2-20c9-437d-95cd-72fd02e225d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1296de3d-d77e-4aee-8cfd-4d313b1b07ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84089a94-84de-4903-9122-d150d02a351c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da14815-5668-4d85-84e7-22969817a360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e5bccd-7b98-4bd3-87de-96c9c3e46f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35028b3a-110c-451c-b993-5efdd9cd9c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6535f195-8fb9-4ca1-80dc-0fb0ed595610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f534d8-480a-4c5b-a65a-4668d543a97b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c637d607-c29f-4e04-a166-f85084bcc103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908429bd-ad8d-4e2d-831f-179adc25b585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c30e79-d29b-4f07-89ea-b4547665450a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "495c9dfd-d0b5-4628-8961-2fcd409b0261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e4c071-45d5-40b6-b975-58123f89d6c0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484c6a42-cc91-47e2-80ee-0a3f47ef42f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a18bd0a8-8409-4ae0-923a-39309d9be6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed42b56-a76f-4710-95bd-da2fa86f8675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "db078f89-5878-4fd3-a053-cb3d99e24884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab03a5c5-c6fe-4dbc-9ecd-7924fad80190",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f070cdd8-dfa8-4bb1-bd5c-481c7f4885b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d6122d-8a7c-4dbd-9711-2e4d97eab168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df61d842-0627-45e3-9120-a6a47218fb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0621c013-e0a0-4391-9a1d-275f767d0053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811227a9-0fcd-4bb9-bab8-ab4d422a1a12",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f98150b-e585-40b0-87d8-0841721002ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7f270144-695d-4880-971b-3cbe60a892ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd7c471-4c2c-465c-8713-2db0303d06b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0d95fd-4028-4e2f-bb56-2895adce850c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4acd970f-aa54-43c6-8758-799972a5988f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8f26d9f-f7cb-4324-8666-d01f92ffc37a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9690ef-558b-4e90-95ac-f49baf8d17f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f00de30-dbc9-4260-ab18-4e90fbba5be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a9da5b-234d-4c3f-96e8-d0556c52d050",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93c43afc-c740-42f0-9525-426d2030253f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3d4d085-ba02-495d-910f-3078bccbc65d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d86db5f-2c63-41d5-9135-8f9a6226e67b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2956567c-668b-48e9-9945-512ad97d2764",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1dc276c-4238-4ef0-8324-14562fbf4289"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "22ca3800-6fad-4532-9140-680ae3fa3afd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "663cafda-e1a6-40f9-995b-7ecf533df445"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0e9a2952-11ca-438d-bf33-60a6ef0396bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8477b578-b239-4527-87f7-69a5aacd4554"
                }
              }
            ]
          },
          {
            "id": "303c7caa-47c0-4b8b-9a65-06994a199d11",
            "name": "Positive Testing",
            "item": [
              {
                "id": "711de8a9-a434-4d11-ab06-a2fa227eb797",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be882f0c-56d6-4ef0-8ed9-7b566a137625",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a54bd7e-2dbd-462e-b64e-5b76621f4732"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "603cdb71-f08d-4a44-84ec-dba64bb61657",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c22644ab-c543-4bf1-a72e-650e55bf5b40"
                    }
                  }
                ]
              },
              {
                "id": "6ead93d8-0ead-4905-8a76-771915941153",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c59355d-d1f8-4e4c-907b-1207542c96d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32a7b39b-bae8-4d7f-aaaa-1492fcf67062"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ffcecb1-7e18-456f-9636-601aa59a8e1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f2db7d9-e6c0-4a77-a378-65a26c681996"
                    }
                  }
                ]
              },
              {
                "id": "db4bc99e-80b1-4026-b237-6ff7009f4208",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a625f685-fc39-4b88-a5c5-c0853f289e89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb9cc397-8b5e-4a80-adfb-4f36c52c7aee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c8463a6-c193-4035-9278-3f62e0afc152",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f2f28820-d3ce-4989-9368-1a1ade601460"
                    }
                  }
                ]
              },
              {
                "id": "574f1412-dfdb-4f8b-ac31-6b6b0ebb2302",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85eaf181-e045-48c8-9ea8-f2ae645d6c3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75954e39-aab6-451d-956c-79be7c5c4f94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e27ab67e-e9a1-4a03-b2ca-997ced64c133",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b25dec42-8df2-46f1-946e-dc2dbf1f13e4"
                    }
                  }
                ]
              },
              {
                "id": "f29f33b0-88ec-44ab-9beb-291a7aa4f093",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9da6d151-7821-44dd-a7f8-1760868d1067",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18ff72f9-ea67-4f24-80dc-3cb5e66a15e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aad48f4c-4e7e-4415-9f18-4dbbf7bccea6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d61d51af-cddd-4877-a5c0-b0489770c02f"
                    }
                  }
                ]
              },
              {
                "id": "11576954-cb91-43a2-9a4f-4f407160cb2f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab3ccdef-54bd-4614-a11e-92b200008f35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a7e0369-41c5-4c08-b255-3bad22ad2430"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40d92bb5-ad21-450c-94b6-2613352881cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "08cf9d74-1653-4f73-a1e3-547345df3e70"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c0152728-1ffa-48bd-af43-53baf6903a56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60ffc6b8-7fde-4f26-a050-f59c4fedf11c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "daf74e30-9bbc-40a3-9822-dfdf8cf81fd0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "74c0098b-eb56-49de-8045-eaae4da09511"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed37a8b7-5fbb-4e3a-aed8-fdfb29efc29f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "16fdc367-6392-4dae-8c7a-1c5f77159699"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0ff3948-1a95-4419-b949-2d833c7831ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "574b622d-fbaa-4dc7-b39e-bdfa569d7518"
            }
          }
        ]
      },
      {
        "id": "731ee40f-74af-4d63-a3e4-517be9bdf369",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "09429c3a-b22e-4e9f-b8b1-706cff8c5a61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06cf148c-aaed-4dcc-90a1-8f8a7659d0d7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e848db1-e92e-4f6c-8e58-c48f3de54797",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4533e5c-78cb-4f69-b532-32ec1110a0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb6c62c-5fd1-4f4a-a9a9-1043fd593cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03257161-ef88-4330-82c4-c50c61d5c0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a1bc3dc-4f93-46c1-9274-197976eeccef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3882ae45-e31d-4b1d-a5ac-bf3ac5570da6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5834980-9702-44df-9018-8075d5a8bcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac128f9-4e3e-4ddd-8021-a355bb28b897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9fa859-7532-46cc-97d6-8da6b8603c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c02381-3d9a-4578-97fd-2a4f0480d5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74418159-3ab5-49b8-8372-de00855ec6a9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee78ac9-0c36-4928-ab56-ed3868248872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb02ef4-2e38-479d-af27-46655a12681d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5242ef-e5b4-496b-b0c0-ea573226db7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "535c1132-23fd-4522-aad5-c657f0b6ea99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06aa700-615f-48a0-8d40-11051e67fb48",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4e7030-50df-4957-a442-c84fd2c94e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8c9312-f620-4cae-8cc8-24ed088c9d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72482d36-e046-439d-95c3-a3fcba160620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce1b61f-b9ad-4cc6-9a8d-35781ccf0b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe748d09-bc30-46c5-a5eb-4781a4f4794d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15493dad-568b-4621-85e3-5b33fa505d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e44cab-f3dc-4081-b070-a2c8305eaa18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc70660-0bf4-41f4-8ccc-4e5ff65036bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29979cc1-5f62-4b05-937f-cd6ca3aa4488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355b0833-da9d-4fd5-8cae-92a86f43738b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b51054a-499e-4af7-9337-676cb2c2a0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f393b1-3c13-4755-97ab-71be655f9aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfec1079-8b6b-422f-b5fe-f85a7007013f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6445da93-7767-4ffb-8d57-3b2c281a1153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff06f5b-a152-4814-a33a-6558fef284eb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c4bf21-7417-4605-9cfd-7a9a56e1bd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac19fcb-108a-4be6-a485-96eff52464d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7015eb-7f80-40aa-9d01-a52ddeb59ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "379177f0-bcab-443e-94f8-ea1ef9202c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdfbc2a-908f-46cb-8bdb-6e7e8bba767c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4738747a-3a48-4f27-a5e3-d2fb1f4f37e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b711f57-3ed3-4272-9c97-074461627f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4566b553-bc60-4e22-946f-0139c01b7857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "befdaff4-4e51-48d3-8774-da092e791d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47508f97-f1b2-4fa4-b3cd-cc502b4a3e9a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29384adc-b8a4-438c-9349-894aed6b4f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0892cfd2-4107-48fe-a921-a0df39efd766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7203ad-4c04-4905-88d4-43c6e1faf597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df626c28-ed8d-4542-9263-54e0bef3c6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd30422c-388d-4707-8096-94512ca29cbf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f432ebcf-153a-4859-ac5d-3fe761622370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b33625-1d3c-4e51-828d-d03145c63dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfb6177-2320-40e8-bc54-5248e69a9ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efe94526-b045-4151-b4aa-c8663cd1013b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01fb0b9-f31d-4a34-b3f9-d52c674527d7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568d2c94-100b-454d-8324-cc90b769a16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10abc586-dae2-47c1-90c1-92fba8046bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461b7a24-cc63-4e0c-b7be-7bbc1d9cdf2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8a31cff8-c9cf-42d0-90fd-00fceddbbffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32740ce8-21d9-47dd-a57e-e7a990473160",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127b0f28-0f27-4399-8419-097d46715111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de2e638-325e-4911-9000-f0342032d072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aee88f7-48b6-4724-b73c-9d272de5029e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e27df7-285b-431b-a9d3-ca1fd9e550ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff1156a-b29b-4e02-87f5-a2bbd7a3b660",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f57767-c105-4ab6-adde-783cf59befaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b53e3f7-e3e0-4517-9e4a-abb3bd94f69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34824d4-06fa-46e1-b18a-de6cc38db1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7f5c9e-2a7c-462d-bacb-04877bc3fedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ababe63e-9b18-4587-b7c1-104a5c7b9442",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3094ba76-9410-4481-97c0-67dd596c0c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849b8fc0-83e9-4a8d-a831-6f509882b219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c9ddf5-1045-4f49-a792-2aac28fb3446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a013cb3d-cb6e-46c8-b194-8615115e7f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e0ffcb-625d-4a20-ad35-fd4c0d92a65a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352f7d02-44ac-44ec-918f-c80c43aea99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ce6d38-637e-4c2f-b712-9df8eea7e1ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f89a196-7e62-416f-b58c-348d865f6240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d47dfa2-8b74-4688-93f3-52487cd0d4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c435cc9e-cf5d-4fb7-b261-d26dc97cc3b5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c11e760-cfbb-4d97-b82d-7613b29047e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ad939c-4277-4417-9f07-9717c068c32c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f6f393-4245-4a83-9670-fdaf926d7394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0e97cf-74e9-43e2-84d6-b229e77610bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc02aab3-486f-4cbf-932d-0578ec4e6b29",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d827955d-6f1c-4a67-b690-dab91c9933a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a4300d-0661-4314-a404-09475f7ec74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80e762b-595b-48ee-b411-8b2d6c25fab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "33ca18f0-99e4-436e-ba47-2d9562485c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a740b47e-b156-442d-9945-54745f52dd2b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2147d8a-9b6f-4b7e-bc03-dd2df3d3b9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec528a8-036d-451c-a0ad-e544733142a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af05e9d0-55a9-45ee-b446-e4c983c4fc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c23d3b4-00c5-44d6-bbbe-07f5d37aa4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9061de-3632-4b56-8ca6-f862d7a83547",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ed0aae-4387-46dc-aa33-689a528d38f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb90daab-66b3-4961-9c1e-89412de712b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c29db3-d666-4d62-908f-1c82df39f488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d31c93aa-3868-48ce-9063-3286cf819d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b7088e-f6d5-4741-a908-61868911c5a1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0e93d7-b2eb-418b-908e-8c531a6f8ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adae3dcc-8bda-4b87-8542-33b2317fd990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f583a52-12f5-484a-a9ac-75f592b6eca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6930336-86af-47eb-94ac-81585c0f1dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd5ae77-f3d9-4f15-b644-dc28496a818f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b161a40a-042b-4db9-90d3-2693f7dd50b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb676b4-dd17-45b5-9d88-cd11ad277bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764ad3ec-cdf5-4bf1-8368-ee6c4fdf993d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70de591d-62f8-43db-a216-4caf786dfa38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3115fd-25e4-45a0-b995-930263b8e03b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72df2d61-7640-43bb-b90d-9a90f24f875b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66415a30-bdc8-41d9-b06c-e3a64dc6a7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cc9128-6e6c-4e18-8d8b-a897e0c4a62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7835394-3049-45d8-a46b-e4841a8242f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e1ffb7-b7cc-4e1b-a3cb-1e94de331c6c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d2a349-0bc8-4476-9da8-300136300029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa6a005-6308-4911-b085-48c4d371758a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2916578-bcf0-4e15-bc05-bb36bc0118bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78d4395e-fcd2-4631-a089-013011afe6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18590a6-abd8-4868-9f2b-14456ae6e962",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c50bd7f-b61c-4dc3-bf36-f0e0089bb07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af74c54e-a404-4a6f-a7ee-3045f6f1bc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84e6b6d-da48-4805-929f-958a00eab3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27213565-6b89-4f35-a7cf-3fc9aad7dc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3276f15-2d6b-42bf-a72c-38fa500852b8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3113be9-c2e9-48e9-bb55-db6dc45f4a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393210c3-67b3-4f81-9025-dc8c8a2e4fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6d2072-4c35-4e54-85b2-9917225797c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4401cca-8946-4a98-85f3-108519eb8558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4058e4fb-ba50-47bf-8bdd-3fb39b037ded",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b90b406-a257-4330-9bcb-b8fa190baa50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4471c87f-0efd-44a4-bc1a-59c208c19ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e276901-1105-4519-a79d-a9bdac2c7a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "508c7f38-3f56-4faa-878f-ec38068a3b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c239ad-f760-47bb-9d72-9e4f515092b6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84823a21-4f9c-453c-8430-260af3bd3299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e665dff4-2990-4155-a0da-44785c412936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bcd4f9-d9ce-4224-b45d-5ba398481145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "811fd483-0973-4137-8452-f8d82ddb4b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c439e539-73f4-4144-a33c-39c5476cec42",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb100f99-8203-4fcf-ba53-9ebee84b7bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79b32b1-8768-4dee-ae01-f915e3928242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921160f7-aab9-4d5d-b00b-a859e86b8032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13fbf302-9737-4674-9ae3-544a9b50fe5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65636d37-4245-4883-ac9b-40e1ca3a9211",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c45b32f-d22c-4f7a-b14b-e7f465dcd5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1620c21-f26a-4d3a-a9f0-51861db9a9f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a208f2-a7a4-4846-944e-1850c86f9b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38857ab9-a5b9-4c07-a64d-70f2791bee59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef202c2b-e6e4-480d-b540-a98cca9a307f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5d0a66-b9e8-4c5b-8980-a2933a7b1e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6916c20e-81c8-4c80-8bc4-9e75e40cc3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd93c32f-f83d-4328-8ccb-80edfc370c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "730788ff-e7e9-48c0-8a4c-92f9d8e00563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b717f53-9905-46ab-9472-4196f0ef7dd3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50775208-054a-4474-be6e-e49838746182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13116f42-8034-4ec3-b325-a3ae1203e2af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c442c29-14d9-43f0-a663-bfec0cdac9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e87b70e-4fa6-424b-addf-2433353c70b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba99a4b-3953-4494-b1d7-3a2cf8e92697",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823577ee-00ba-4278-b527-0e3700f174cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a535fc77-d826-4fbf-b306-d5a9147dcea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d57c8d5-1888-4e4a-a282-f02968a29d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd003d3-5519-4f7a-abb3-28ce473e9c17"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "53529afa-31b6-45aa-b18f-98f5bcd84afa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "540cdfe6-dd15-4b3a-a060-4fc8ee0101c2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a76e39-275d-4163-ab0b-d469ec66f263",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4df517-d534-46da-b37c-97a877efdd9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6afd4e-b5d6-415a-a3c2-0122b298c7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac657843-b1e3-4efc-aa0b-d5b7c4ea0858"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c256a06-1626-4f79-a955-7e48056832b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6689de91-7ec4-4726-9757-8116b9bef0df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2462870a-6f9e-4889-9ccd-9c0e450bef0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "911966f3-1560-402a-9057-e01c2485ef7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55af8932-1f5c-4f2c-8499-9b05ada60be6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d0e7fc69-0a68-42f4-8fd0-25d9f5d7fc6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4566f8b-a89b-493c-b553-76d1897cbdf2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06832ae0-d3ee-4001-9068-9fed0bdf645b"
            }
          }
        ]
      },
      {
        "id": "fd13df5e-ab8d-466f-8fcd-1ca65cf29145",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f68889a8-87e4-4c8e-8da4-ef9c75305978",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf8aa1b7-a51c-463d-ac16-4cfaf03f3c7f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bbc09f6e-2485-4ef1-9e12-b3dbf2911fac",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c40dec4-d279-403b-9bac-e448782eeb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5764992-900e-4ffa-bb7b-b6dfb2649612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0138c568-732f-4120-977b-4c4dabb11ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f7be00-24ae-4ddc-a1bc-87bec80811c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2fd131-2839-4dd9-9ef8-0a44f998e45f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f605ff24-ba1f-46f2-ab58-2635dd4c9f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1593c4b1-85a8-48bf-afa7-963e5e4f42f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a225b83-a163-4d11-948c-d333f60df6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dbbdb60-bb5c-419f-b8e6-67341a51d73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43441a02-c713-4947-a88c-feab3e44858a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96aedaae-bced-44d4-9c14-f10db4514d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e037e2f0-8ed4-451b-b395-5bf580a72507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0029431-90f2-48a6-8f94-f82438382474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3412d43a-0a3f-4ce4-9032-449ea2fd5cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93422b50-e760-49d2-bddc-47f21fa3aece",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff85fd5-11bb-4ff1-9104-89a20fd799b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c903fc98-19ca-4905-a37c-5729246c3b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fd0c81-866f-4afb-9f1f-690ddcdbe5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58003bf8-5731-4b2e-87ac-3502295804bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8204e27-c540-4009-9e96-edbbd1d8800c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9cd955-2129-4bac-8a1b-85c2e9158dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67fc7035-c26d-4336-8ff8-52b380a04fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82abd8c-548b-49e9-ba90-e244abba0ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18d8a064-684e-4132-ab43-8bdad3da912a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf654f9-0245-44c3-a59e-5fc1cdd9403a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a77c86-c698-4e75-9570-5da3086b2b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78bbd71f-81f2-47bd-9e42-3cbe3497f1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc435487-41df-4657-8b54-00f5e35ea70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff5b66f-8a1f-4db9-9b17-f0f9c5f5b4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6252eed-9b24-4127-849e-dec2c595f4fa",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138fd959-93d0-4dbc-ab6c-fd4f016af5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f016988-06e2-43bd-b0e7-abd600c37cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6dfe52-acac-4d1d-bf46-1bcfe5cf922a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "29df2213-f4b4-4855-a903-9e7ad9a1f9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d49005-5f9b-4175-81bb-67054952bb6e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cbe807-4ad7-43f8-904f-a4c1473bd116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2b050f-c00e-4ebb-aaa8-3dde9a8f7467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1c89bb-4cfe-467f-a858-e7bddea6106f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6819f4-ef1e-440a-9154-c9584821707e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3abe85-b060-4559-b003-98de67e51cc5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7132677d-281e-4b21-9b1a-411da8fae28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c498caa3-afab-48d6-b520-e6fc4b7addf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a74fac-2d5d-4599-8fe8-2ea71c3a4b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a5b4ecd-bd66-448e-b610-b603d5ead19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc352a1d-a550-4cc4-9e61-166927e70567",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa4eb11-f05f-409e-bab9-7c8b3dfff461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be763535-bd74-4084-a129-d9cb439aad28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a1ff0e-aa09-4d75-8c8a-c763d45310f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "629ad7da-fa2a-4473-94b8-47781e5a64a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b304ae-ca36-438b-88a9-fc45d18c5608",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc33b15-645b-403e-a65e-873d310f5858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69f3333-1a66-4b39-b246-56c243232068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6037d95a-fc00-446b-8914-5d90966c3b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "35cf95f8-0a14-429e-a98f-30bca3e1fa5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b77cf9a-abdf-4434-803b-aaa2d0f40c5a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41fd8b9-0316-46c3-ba55-32a400771971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "688ba113-dcde-4fa4-a473-e8eae6a5d9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb9dea4-9959-44ec-8904-6f1d91aa2b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c37f298-aadb-4b22-b8b1-38815384ca25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9183a05-58cb-4bf3-9c98-6be5d56a3d6b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f428fe-f49c-4b5c-b815-512a051d5be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cf7b38-bb56-4baa-a738-7f340f07e789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab95cadb-8a1a-4e42-8cef-8bb4da6d023e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcca7bce-55f3-48ef-a7cb-1bc992712b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455469e0-a154-4c41-b831-685c5bc4379a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f712c36-5f22-4006-8569-5239d98f133b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6123f9-c8e6-4700-bbd7-d12ebda711f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a34e59d-26d9-4e7a-9821-7c188610235c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7441a19-3802-4497-ab1e-db73f32e6926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9905ff4e-6d70-4328-812c-2ddb265eaf78",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b0f1f2-e244-45a5-9a1c-4ae872f928d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbad46f3-8cc1-4b84-a3d6-7c59acde83d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb25d455-2573-4e46-bf3e-3230d3c44730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca67c8b-b032-4d00-bb49-d7d3db50ec53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acdef44-a7dd-4e24-a254-2c58cf30b234",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d66526-d391-42be-98bc-dcc325b2304e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a98036-851f-4946-bb5c-b9139200ef7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143e0379-f2c0-4eae-8109-1acda3f518a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2517dffc-953a-4095-ac25-9122e9c4eb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ea814b-d4cf-46f6-b9bf-80ccc758af9b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cf6cd8-8611-491d-bdc5-21a2dd6a8c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f97c4d0-1b63-48b5-8e30-37de232e89dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422a9e17-cdb9-4068-b45b-b8f87c39d296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7126f77f-2b35-45d7-bf06-c7c0ca111629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e5fd40-1f4d-48bb-a76d-60748f31cd8c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eae058a-6d77-4c05-8c1d-fd83bd2177a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dee12af-c2ca-422e-ad53-e009583b0e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c734170-0a90-4323-8e77-e155e533de45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c210182-1829-4838-be20-1c21ede1a8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c5b598-5674-4657-bcec-8835a2cdacd5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28042ec-7eb7-420e-ad9c-f123a6531c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424206c8-390d-4952-af56-5a2146aad527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60acf003-5939-4ae8-911a-4947f2709342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0695ee4-34e2-4fbc-be54-e1150e48bfee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd07fbb-2d1e-49b9-a751-8a7cd75ea39d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce6a28b-3e7f-4f9a-a913-8a34473d190f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e00f752-fff1-4f5f-b23f-b87480b66e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4385725d-8e5b-4eea-95e5-8dcc4a82e987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4457d1f-b452-4091-82e7-e7dba88a6f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e638fe67-b161-48ad-bee7-2dea261bd4ac",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b30d12-6c4d-46e2-97cb-ee9eb9ca8035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a68a0f-adc1-43c0-abf5-94e706b69f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5aa07d-d451-4452-a746-7e40b050edbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0962e2b-f7ba-4d51-bca1-c0bb0c18c3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb025c1-de77-4d11-ba22-78fe684e6fc2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a89a678-0f2f-4115-8e70-50d395eae4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b150478f-ac3e-4889-bc0c-b11b30b3710f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a99e14d-ce9d-4338-8b4f-6e752f1cdbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27977a9d-d181-4adb-a880-e35e45d6bd15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e2ca46-97c2-4ae3-b609-9a025b957365",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622930af-29cd-4183-8a43-020db4d873aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a0bcba-7d43-4b7b-87ee-4dec2178b515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5c5a82-3880-4307-8841-c21a117156ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "534e86a3-3096-4d98-a8f1-c52e5c56a461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21dadae-9632-404c-a7ba-edd7125858f1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9de4b46-1998-4966-b08d-8e6c9fa17ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a7530a-3c96-4b4f-b88a-c2a3eedfd375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac719ff-d5e9-48f6-a50e-68713f779d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21e147c2-2574-4acd-a7c2-c8b022f2c6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8649ed62-8096-44b7-92e7-e4f66fdab220",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec7fe7b-15a4-45fa-abe1-51bf0b563705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79c6fc2-70f5-461d-a4ff-ea7e5681d14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db3bf0d-2e61-4361-8517-48b92dc18f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88534a72-da29-42eb-94e5-440add8a5ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413dbd74-671d-48a3-b264-d9e766091b01",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d742e8-2732-41d6-a007-5468cad307fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225dda57-6ed2-4687-a3c7-46719b9a4522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0391e3-b489-424b-9f97-7a3efb2dff16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4ef555-df97-4488-89f0-c33e74c1fb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8725c984-ab73-4ffa-8699-182dfb7a24d7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93af1a03-454f-452b-945f-2d439b89fe34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cede33d-14fe-4ad4-a5f4-a4aaede5b627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681af0d8-5454-4506-8c48-bc0a64bd88b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b41c9c6-bc89-4224-becd-d7a2f1cf349b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8253c6f2-3b44-4b44-a9b4-09a8c1a0ba49",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ff1644-9fb3-4cca-be5b-4f257a084f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67fa6aec-c121-45e3-8ffc-cdcd2512bec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36c4d29-9cc7-45d0-9ab4-fc6da8755edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2fd3bd9-d943-49b3-9b8a-e62a0731af44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112d4843-b85d-44ab-a530-3829955bd0bd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718830e2-af5c-4c63-a3eb-da73a3bd448b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d0f385-b81e-4bea-976d-fdc6ad302cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1e1e80-59cc-4e0f-938b-aec82887cef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a840ddb-48a9-457d-bbf9-e13c7cef0578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89afb4b-210b-443b-bb53-e759c44b99a6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe69b96-750c-4c5f-849d-911e386d4c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a5a3a4-8860-4390-a8af-9d5ef15db9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2875fc-4a2e-4d77-b1b0-d73f1faae1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfbdc243-ec7f-44cb-84b9-d36e06d4bc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441f42a0-98e0-4fbb-a26a-82fff98088cf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d942e5e2-c7d9-4a6b-ad48-16638f72d031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a24c99b-f626-40cf-b691-4cae3a22835b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e690394-bc81-4eb9-be36-1ff3c6ce1dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "561a36ad-d967-48c8-ac84-669709dd3fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33cceb3-7885-4e86-af83-2c9223bab5a7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b87c13-da25-4ec0-9c2e-878698a56319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c711688-fdcf-49e9-8692-52040aff2bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4c4126-532e-48f1-92a6-c5ee1c71609e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d798cef-5e80-41ce-bb25-2c2734b4cad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a068d2-bf89-4a47-806b-7123d8adbd89",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334e0f4d-cf43-4bb1-bece-f4c0d0e932b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377ea72d-30d3-44e1-a93f-2ad09702a8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48136eae-e8a3-434d-b294-9dd0f6b86e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "872158f5-e1de-445b-9489-e06c5cad8196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489b1f91-11f3-4551-b73e-f82ca9f02c6d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0752cac9-6ac8-4858-acd6-327f0b22813f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2bb8ed-ad57-4ecb-bb9c-ccd80210e35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a89d633-17ca-4ccd-a5ab-21ee3d458c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8bdc2b-3d51-4ba6-a874-964df674f060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d184c0-6634-4c97-81e6-e58ffeff51fd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126e37a5-f516-4e3f-93a8-da5f998d010d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1c7994-0322-4daa-a41b-b7d320211307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7f5acf-733e-44fa-b2b0-799b39c8a036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41305149-a392-46ca-b863-7e26c7c899b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8d4326-cdee-4247-9c5f-e5c258cd618b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9106d9-8c19-47c1-be18-5723220d9430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab8fd9a-f020-4ce7-bf60-4db794a01d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8941f9-bab4-45f1-8a51-3cf1ce88450f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52436baf-fa47-4d64-a422-dd9e115a78cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a38a14b-f1f7-4603-8fd2-623417c7261c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c812772a-6f47-4e11-ac84-e25fa5e9dcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4eef63a-acb3-425a-ac63-db04ebcf9e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331c2de1-cd91-4105-98e4-0a5745253809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9bbf55b-caee-4426-a6bb-0758bcc1cead"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9f43b7d6-b05c-4165-aa41-da5240d36f21",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40f3fe87-06b2-410c-9f09-35766bb173a0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647bdcf1-66df-457a-b912-9bae72711450",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c78bbdc7-c03d-4a8d-84c1-4ec4f7b9ce97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26629bc1-b716-4d54-99fa-6f400ee43793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a25d712-c51d-46e9-9237-2559c72c3ff6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a32a5e8f-f56b-48f2-8f5e-74354e3563c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c08266d8-3ddb-48fd-93dd-0e6cc40752db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "edb64c81-626e-4208-be1a-81407811b9db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdf4b2c8-4c9e-46c6-a694-71856a6d5314"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0df35a90-9068-432d-9880-ab0644ee4857",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "758fb6c0-dcbd-460e-b58c-04da0fb627a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f665a774-9788-47e4-8c0e-d935a3a21994",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9246f36-e9f0-4a92-9637-563196195f3b"
            }
          }
        ]
      },
      {
        "id": "52f3edb3-b983-4500-a9e8-f2e6f7e0abc9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "05502c30-2256-494c-9fb0-744833b5439a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01348aff-6938-48f0-8193-f94483e6f374",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a913256-c38b-48ab-8e84-69f80c81c704",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb5d8ca-8448-4ff1-bf8e-df2d8cf84116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51753f3-1edf-4318-8bf5-f1581c3861a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915df006-686b-4a13-8807-40a92d97b597",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e06b7b-f44c-4544-8698-42abdb9a9c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab82bae6-4c15-41e4-a5ea-1d39ec785032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d70cb78-9c08-4467-8312-4a5c94feaad3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c9dd27-ef47-4a08-9151-362091c12b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9e86f0-23f2-44ab-9d2c-e0465bc6770e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146f7cf0-b9a6-4263-9482-9d6841934dee",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da09ba44-fbe1-47a1-9c3e-80fc465a25d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20fd7c5c-9247-4fb3-b957-12099496ce0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f29e40-df38-4b4a-9472-a408744f3eb2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e112f65c-c142-4558-be3d-ba2dc8957eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6122faa2-74c8-44be-8c21-a79028ba0360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4010cc17-f6c8-46a1-8dd7-8129b701d8a8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee589a63-1573-4e0f-9eb5-ae5fdccc7380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0697b25f-d8d4-4583-951d-6b90866c2719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b32c2e1-9dd1-4e0e-93ac-b2e4465252e3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b738448-b0a1-4fd6-846d-e9a6d01db47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a34fb83-0d95-48e8-8166-55a61ded9b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d8819f-b748-4c7f-b513-f51b40c63ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6a560e-dcd8-44d8-b042-55866eb92794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8522b8-73e7-4877-a714-ba5a030e3b2d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69538d9b-814e-462b-a894-04bd6ec0adf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4fe8610-3163-4b0d-b657-7e4c7cb062f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ea041e-ac7d-4ce0-b676-0a13bbce2113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195a39cc-161a-4459-8e64-ed620795a65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6a7a4f-2fcd-4f13-a185-6ad9dd69227c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f78afbf-86c3-40b9-973b-a9fef7e416af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7e3d9b4-5130-4cbb-afff-1deb8673372b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a99fa5a-fa50-4ec0-974c-928aac2a9ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad75a36-db9c-449b-9f3c-5aaa7855bb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26fd433-369d-41cf-8d7f-95a8e6490b6e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ac56a1-7e61-4ad0-8c2a-dafdc5c2d2f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "656f6daf-8c49-4a71-a1aa-013b4768a968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0554a81e-9263-4a18-8f1c-82df48a71cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f4e304-3684-4c2f-a85b-be1924f2adea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0a33d9-47ea-4be7-b79a-cded659bb70e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3e84aa-eded-4c65-a025-85a754ec5d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7848ec7-8c9c-4e68-b91f-a9d10206945b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4ab81e-773a-4b46-9325-f1dccc122e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce038ff-ddd0-47c6-92f7-83e22cf1082e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1037f8-d126-4e30-8b17-70d1d06dfc9e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0381de45-6c12-43f5-b15e-3ac062881287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6d97f3-1292-4347-bcd2-753a9c85964b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8985d47-1839-49d7-b78c-c41a3aef5403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ec4793-c178-4327-a3ce-4adb3039a993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87fcb4c-9b8a-4020-b35e-9f03c5f2414c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32625e56-1b31-4eac-9595-52b4d7c10d5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d017d74-0d42-4948-8c40-96158c670f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da32dc4d-566f-4596-a96a-b7716d7da012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346b73aa-ef0b-4ddd-b1a5-8839f7072dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28bbb411-e094-483c-867e-24c6eefd9e71",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75ddb79-37d2-46ab-9eac-29719b231c55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b0f754c-30e8-444e-93b9-d8f050ba33b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bc3fcb-71c7-497c-94b6-4f1e051cf0ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124dff8b-aa19-4b68-927d-06efaa01e164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933e5652-b110-41e2-be54-96691a5c66d2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33ce139-430e-4940-99bf-d495fc25f0c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bcea657-543f-4455-9196-5966fbf0c92a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c0f93a-3771-4e41-9886-e29952c30f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c0cff0-4573-49a4-9404-e654cc9ce26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cce3ffc-5099-4281-95cd-c498c721145d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e9b6d5-7524-42a0-87aa-b94404c2041e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b107cd61-e2af-4a64-bd19-7c6cbe1293ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeca5c06-dd62-4f0c-88e0-33f88b3e44cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40012d2-03bb-4d67-a542-0ffd358e2037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4c80b7-9592-4880-aca7-7cc6c93700ff",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f60786-1551-49bc-b48b-c53d15c724a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d82b35-60e5-413e-aea3-db35460f80e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dae6afa-5bdf-4100-bbaf-2338eddfe6b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3516e3a-18b3-4226-8329-da3906e15c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be2c563-cf0b-4014-a988-1a4883c634fc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b34594-c1a2-4e35-bfae-b1d7b1643ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0e6c0c-eba2-4e69-87c4-80e644551610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e2f724-c511-4541-801f-983fe45ba1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88349ca9-516b-41e3-aef2-b8f4d3fbc731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb4b786-3efd-40de-8c2d-fc4b96f890b0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec1cdcb-5818-49fb-b7f7-901f6cdc7e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c23acfd-3ae7-4851-acd5-579cf61c8618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ef38f0-141d-4026-b313-e04b57ba587c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1791b66-a733-4bfc-a846-3efb368e8452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c321513-5505-4e0e-bc6e-4b46d0438f27",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de96dacf-ad92-4d64-8af7-cf2cc23b6aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7a163a-0180-430f-9b72-fadf01c41d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e734ac-87fe-4832-8c7e-ca057f65282c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49dc6031-0e71-4a75-b95b-a2ad547a79ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843440e9-4113-4d21-bc80-b6e5c59d9cd8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130247bd-da1e-4891-9ff8-eddef6a516e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff07cb8b-4e1a-4cbc-931d-6f5ee1f8f4f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0faee59e-3ab1-4f48-be64-004e4e48810f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e4e443-0792-47d9-8d75-ac5131109185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86b2488-7226-4b9e-b378-3f5d6c143ac8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77c837d-46c7-42c6-bb9f-695a5916b78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d688ffa-349e-44df-a507-c810c80e0491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805bb4ae-b248-4180-9aba-512f11de7dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8f7eec-867b-45aa-aba1-067fbf3acfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67138c5f-d5d7-4e51-b079-adcc90b1b787",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b076fe-0860-489d-b80e-0ad5ca7fbc70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2640a3f5-8f2e-44aa-af64-6af559532982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d67a9cd-ef90-48e8-b4fd-8932cb044904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7083660c-5bdf-42d4-81d1-4fae2aa6b86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70140cb-02f5-4074-b8f3-603eac878f53",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037b116b-59a7-419c-a069-6f5f62cd86d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad50b1aa-370e-4611-bd9d-95f74943a999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba781f5-e3ae-4240-941b-7b2c8d18c665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ceee88c-39a7-400e-afa5-66564cab6b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb62e067-6bcd-40d4-90bb-9179ac220248",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df23bf14-e167-4897-bd3e-eda308210430",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "559b2f69-a1ea-45c3-a59d-8d677d0c26e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12173c8c-6018-48ca-bfab-c2c646254c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ca366d-2b57-4265-838e-723e8d377d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05119c0e-b583-43b3-a43f-e4d9b35521e5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d3a0f7-c635-450f-94a3-f6d0f9a3cc6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccfea5cb-390b-42a1-9c82-aa74d59e77a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec27a050-9130-4de0-ab36-316124487803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c2d8b2-9444-49fc-8686-ea51b99048e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce0e885-9a0a-4cb0-b509-65f7b31eef3b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a4f1e9-f95b-4397-94d1-33ffb08491ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c47a4c09-36e1-403b-a08c-c91e5521164a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdb7acd-6ac5-44c9-8597-4122a0282c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da87d5a-fd94-4070-94d9-8e95e5b8e825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67180aa-1082-40f4-8eb9-49d1217ceacb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba12066-c8fd-4149-a106-031c106ff795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4935b6f8-526e-46d2-9827-ea1e7076d0fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c6a613-9d1c-4e21-b4ef-f7f70b7262cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce37666a-68e6-4d9b-8a10-caa748cf0f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35373dd-7e9e-4c5d-87a2-3863df729142",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09cba8e-308b-4a7d-84b2-8b19306efbcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e81206cd-2e41-4f8e-9284-bb79213776ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64638f30-4eec-45f2-ba86-3b27dd907d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec42087d-a6c7-4451-964f-2ed45ead996c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3927de-e35d-4f53-b968-6355ac4a1949",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3733a0de-7b48-4258-b8dc-a9f4a4f36f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67fe5a65-3dec-4715-8de3-900136103e04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb56fd06-d532-49c0-bc3a-5b2caf191586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa0de07-cd1c-449f-8154-61717e747c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0ccf6e-9ee2-4ecd-a4d7-d8f6c03a8da4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdf6896-61bb-4b51-b475-bfd4da7ce921",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4702581f-5133-4866-bb50-d656e8d466ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55617f8f-6368-4116-a299-c2b2e27c1a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf14fb22-b39d-4c83-818f-8ddf79c64397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1b0e31-6cce-428d-ace8-dd4e3c8de16d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65720e8a-830f-478f-8df6-98faf2c96cc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e67d8771-7562-437e-9050-cbf5898ee17c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd7cc0d-57f4-41a6-91e7-267768388599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32688323-6124-41f7-a63d-ef384214c9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c838ef5-c178-4ee9-95f9-46b45314e10b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686fd4cc-640e-41e3-9292-6571c7b4c7fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aa9d397-e4f4-4e65-84f8-fc5eb82192d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aab1a4b-3966-4888-9c95-5bb70c0e162a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8a55bd-68b0-4580-a97b-ff8e28cfe7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d103e3c2-fb77-4313-b2eb-e97d76d7d62b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fc2769-243a-49cc-b6a4-5325d012ec8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a620e39-557c-4807-9f39-e91830586be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc67c3d-2d22-4408-8ff2-7ca1d062ebb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c581959a-09ea-465e-b0b6-daca8d729ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222493df-e3dd-4a7f-8c8e-217aa09d779f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d2eaf1-be09-46ce-b991-a37dea15437a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c9e1f6-fc8b-4bf3-bd06-80bbf8f1427c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ae9952-7c22-4ba8-b14d-d085497eefe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5ca708-2c9e-4e93-960c-60a9d1fcb553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b32538a-fe53-48e0-818f-7ff4279dfcfa",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a58b60-fbe3-4349-ad79-d4e8f6ae9570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f548b228-b190-4a01-a35d-53b33ee43093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98998cb5-f4c1-4431-a4eb-398249493161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7622ef-1b00-4d71-83c1-062fa06f96c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770cf61d-3bf9-4927-aa02-21095a86c8d4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f84236-1f61-4959-8c5c-3969ff77f477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c43320-4f6a-465e-a796-ad5e5a67e6b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41676d86-b4b3-4458-bc0d-5223f1f179a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b957abf1-f8ad-4af4-a321-02104ff1cedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf9e094-b2e5-47b5-94e0-09a0040bf9cc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ee8df7-d44d-41a6-9b00-f9307bb8d460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7109ed71-2547-45ff-a8c7-d8b8842278c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d0ed19-bef1-40b3-97d1-2a740016dac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac307dfc-41eb-4ea1-8543-ac3bf1c331de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab0fa81-a728-4860-9ed8-fd77deb4dad3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c6e7da-03da-442e-b1aa-940940f53e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f947a17-3a4b-4510-b998-5a3aec1dedca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fa8c32-1c50-46d7-b148-75d0816e9dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f2298b-7414-443b-a1ca-52ebc78153ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c142cb-cd16-4692-9502-8464d4b26933",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c1558d-3b9b-429d-9428-1fb309dcc7d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912f850e-33f0-4411-a9d6-32cf9cff3ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65cf28a-5de6-4a95-8923-9f40bd7b1806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88886fd-475f-425c-8589-62634d433b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67020ab7-4f71-4d8e-80e2-04fef9810942",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d58b3e-b1b7-4b35-8f67-6e68c7ce809e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba0b841-2336-4205-a190-1b0bcdaf0c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6363ce-16ba-46dd-bfe2-a7bef9ddf9a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65b3048-bac9-401a-95f0-72ab15e44d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b2c78b-4504-4b7c-bdad-28df70113489",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d92333e-7b93-41b7-8c77-5635d5d16652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed89b940-7277-44f4-8e33-99e9a940ef93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fb80e9-34fa-4753-b098-0bf3d4a1a1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4e047b-f238-4e94-95c0-d6c85408c484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a096cf92-6e36-41ec-9fe0-2a120c577683",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66c2b8d-3ffd-49e9-a026-5604a129c253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87b939d-80e1-432f-b6d4-72638e68ac70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fad4974-4ee3-411e-9d74-8b3596ea392f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e4b4bb-fda3-4052-8d7d-db846ea11a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beda1503-c7f7-4806-98b1-aa00135544c9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0227be-50b0-4503-ab41-2ef0a4991040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad40f06-a69f-4094-9597-b8a9a86ccf50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5331e3b2-6c2d-4475-8b37-bb0782d7b79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82cab4b9-bd53-42c2-b062-e66173e9005f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373e4023-949c-4190-a10f-79983752176d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346b7222-5f7c-4a35-913b-34357b92efad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1d6eca-af73-4ba8-9b4d-da55e55c672d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6fbc7f-2f94-4326-8c06-1c4cb918dbbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa661e2-8b60-4a5c-ab7a-893518399cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1152390e-81a3-49b3-97a7-d37985e711b6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759784d5-a40d-48f9-b540-5600e0d713a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8575f702-a352-431d-841a-22a7da33c38b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c38559-a2a8-428d-9d57-ca7867b04db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784c44dd-4dda-470c-9e8b-986bb522fd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc757a1-4daa-4f4f-886c-00c855818577",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b122705-63cb-4f4a-9657-7ff95d6a551a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67260cc2-8fad-4110-a792-c8066140e129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dae1fb-f8c1-4132-818f-d855e6af7bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ea4923-353b-46af-bab0-44675f0b3d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0fd100-1cba-4eb0-a50d-38c408410fee",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2183476-83f7-4079-99d0-1c3e45c5374d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168b74ab-2c12-4289-9a76-bcb45191f41c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "779555ce-2154-45de-aa7d-a36127bb0571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5cd470-1e5c-4d3b-a297-439d715a7d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f051a8-fdf0-4de3-bf81-e74e0639d6eb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5deb863e-f48b-484b-a5ad-18222754b2a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8540371c-55bb-47b6-b33b-cf5650955558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a3afb0-90c8-486b-b19f-3e2ab2dcb020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aaa77ba-e588-4d7e-80e1-782f662e9ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33e0c87-1b61-49bb-9dd6-e1b926a96364",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891faa99-a75f-42f1-a8d2-4c73647bcf43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049e6e33-2ba5-4b66-a1ff-f8d1798e679b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "181761f4-2f73-4869-8ef0-b59586c0e20a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8fe031-0e76-43cb-bd22-7bf64a732083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9528dc8e-6edf-42cd-9094-0cf4a3ba0f31",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6849e396-e940-4aee-b8ca-0af89839ca3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2baafdef-2a56-4272-a9a6-69762b8754c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5433ca4-9da2-42dd-acd1-026e9ca3fb07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f271b2e2-ad48-46e1-92c1-6b3f28a89c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3980bea9-df7d-41db-9eb3-2d4956a821ff",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab78d24e-050e-41ed-94ab-a559770bd2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9961eb5b-eedd-4f69-96ee-b4520e8bfa9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f53be8d-14e8-4cb6-9991-a806b0bf73ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9837a441-6e1a-46ef-a963-a8c50cc5736e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bd489d-f44c-4875-8de8-f4d3a5c27523",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6314b686-258e-43f6-963f-c695a5bf716b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4032e90-a638-418e-b6d5-a9c0ab4a6da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee43f17-ec05-4cea-b0a7-60d0716ec0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7518b7e0-7bcb-4525-91bd-5cb503595939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb0fe27-9a0b-4ba0-91b8-e11fa6c37c1b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927260eb-f58d-4f50-a440-1ecb337c46fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321e94ae-25f0-421e-beb0-7c1c7265eeab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc74bc2c-03b3-4374-bd5e-2e9566ebae25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e14f35-04c3-4b50-8f7a-4a3624976b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e594f6-c0ad-4003-a8a7-9e43f720a788",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888d8638-4b0a-4bb9-9bbd-437eda27a2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60421897-d939-4e5a-a193-c4442e20dabf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25ae7b1-7aa3-4ce2-b483-5bed70fa57ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30e7709-5b05-46b7-a461-c20fec58f22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9319cabf-203c-4167-8218-71b7136ff9da",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445d3b3a-544b-4305-a782-173474e421ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0a33c1-f0f4-45e9-88ef-7a10c1031adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b829060-6e0f-437b-9733-459e1000c1e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90bffaa2-929a-4eb7-aef7-bcd63ebaac2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd36100-5ee8-4492-a5e2-3ef569a94ece",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95adf827-4c6a-4e0d-93f8-39c29ad41e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980fe291-6f51-4979-a709-be37bbd53f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ca76bf-f912-4b0a-bb71-94faceafa617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f44c94-be46-444a-88c8-0d357f712c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d107b1f5-c0b0-4242-999e-f4531e6125a5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7769bd-5e21-4e5f-b719-fe81e72532c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc57a5a-adfd-437c-a137-77d7514f1c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc929840-474b-4033-b52b-336278d8525e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b3e502-7eb8-4707-90c2-de185c29668a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cefe4bf-4972-479b-94e8-d08a037afb3b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036a84f2-4108-4e17-a8d0-1aea94efa42b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1ed0be-c649-44c1-922a-abc95d573d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7e528f-1593-4894-a8a9-70251448de55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb8e90b-c930-4a0e-bfec-f4db173b41b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52234005-afde-46d6-af90-82fce9a57fe9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f847c2fc-0e92-4e2a-89b6-8f0ea7619899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95eb1fda-786d-4cf8-8b7f-d662127ac83d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e51298a-d014-409a-bf98-e9b22b4f4565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd789530-a645-4135-8699-bd4634a8b04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1800125-9114-487c-9d60-bd266ec29e07",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6094d48f-6711-472f-82ae-0813a7e680bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de442a5-bd02-468e-b76a-abd3d16336a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6d4d41-bc6d-4695-a2d9-a6124c50a53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d222c7-3e5d-48de-9203-2df5d51937a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec57ca8-1628-405b-8704-926e57587e20",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3325d47d-ff3b-4760-8a11-027bba7dcba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66197d49-5501-4686-ae42-4eed331b7fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "902a8dfb-c1f9-445c-bfc8-f94b347f20fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d698a98-0f5e-4997-b218-dfe0cf592d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e07c4c-f84c-4f7f-9ae8-198bbfcce91a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305b6ea3-feb5-474d-bbe5-8aacfd066bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ccf3faf-d733-4dc7-bb5a-f6903d641c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a3d2d5-9fc8-4a26-9d15-2d1be16722d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d93511e-e29a-44cc-9ff1-36182a37cdd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f115b3fa-cc02-4488-b834-c1128f23671b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d057b05f-ff56-44f6-af4a-ea331a5cf5e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa14e451-9bcf-408e-b9a7-17312f79f522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0331495-e87b-4358-937d-bccc629cbec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a633d82-dc17-4bf0-abe5-fc16544b9499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3ba5d5-327d-4c80-8cba-477ef1754d5f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786341bd-72df-4c83-9587-7591415a77c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cedbcc5-0c27-42ca-94f3-987eccbd6027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3b3da2-74a6-4ac4-af69-82d7d2fdd5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a191a3-9664-4ff9-8a9c-cffd35aab6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbab893-9d90-459a-a19e-140544da4220",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31938d20-74d0-48c8-b934-5aea2494303f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58301a48-c0dc-4e2a-9356-c9728f64f52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f7ba47-2c8f-4b64-8f80-4678179cee81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c6c752-9eaf-474c-8ebf-159b0e33bd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fe93f3-3bf9-460c-b987-48ff56486c0a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a226d3-e95a-466a-9076-ab011b5b0660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbfdd59a-495a-4a22-8d3e-ca6362761462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07363c58-e783-4dac-a1cd-b49b1a996487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0372ae-3f40-4079-aded-6e92b0f53496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c8ac00-4fd9-4162-9bb6-1aa1ab958cf0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071708fc-37f3-458e-9364-8b4fc0e2d998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1751f5b0-e9b2-4e69-95d5-54025f76ae08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582943e4-c88c-4276-af1e-f1a24d873f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f77f18-9e56-4f96-90ea-1109a64c6182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01acbb4e-93de-4a37-ba20-72886b8a9308",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7c53e2-ebbd-4397-aaea-2dba0169deec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ac234f7-9c45-40fc-ba7f-a09b21854914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d11913c-7b09-40af-8c31-677cf9faa6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f943c4c-70cc-430c-b030-4d3dace32b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcf19a0-0b70-4aae-99aa-2289fe479979",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a950e93-cf28-4fb7-a55a-6ecc7f4882d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16269ac1-9b6d-4fb5-9fd2-49a87aa66b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25102fc9-b39f-43d2-8941-b20a43cc10ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5469cb-d43e-4243-80af-28c49ef1c393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae631845-2bd5-44be-9197-611c073dbe3b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f2ea9b-69c4-48f0-9e65-661f9dc9aef4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcf4a4a9-4f3c-43c6-b3de-5b8b0795d662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aeea0c6-9aed-45d5-9de8-0b7153da6a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5258cf-9fc6-4b52-8e57-8fd9b28674bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a91eb1e-7674-4c5b-93f3-b296b531da05",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fbf8e6-82a6-44a8-86b2-ff2f06922af0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b5318bc-81b6-45e4-9291-c42d59a10bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68966b1-46d4-47d6-93e6-e0709922dc2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f526e87-ede7-4f2b-a09b-77b7f11f3e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89324403-d10e-4a08-8b61-26a9cc6fdb95",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec434533-2655-4121-9e2d-81f8f50b0439",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8865429e-b9d4-4bfb-9e4d-c8f9de9b0a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08791539-e3f2-4ada-bc14-aad4b2754300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50aa6c8-29b3-45ae-88c1-5070ce34bea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff1fefa-c7e3-488a-a619-c8ea5202d00d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11665be8-7f49-45dc-83b2-5df695def75c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eddcb8b-8f57-4325-ad9c-9e0600a55a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8be30a-e242-4805-86f0-e3b04e469b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de85e3d8-3e83-4b28-adcd-6a9e866fc572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca97aa2-5a36-4c77-959a-f583bf08bf4a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05619e5-4864-4519-9bbe-7afefd3be0ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d78cf62-cdb1-4b72-b0a0-f912a5059d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4993e94b-6219-4a44-a5ca-5200f57da1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b631b51e-64db-4677-8156-725f370ebfdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd74b04-62db-43fe-9b12-dce0db0a9f92",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb36c706-3913-4f98-aacf-4cde9da43550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb5c1afa-bbe7-4ca3-bdea-8014c42546d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "490a0b0a-d612-4a8e-b536-a53dcd25c352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f67cc3-20ab-4aee-b542-2c57b92d8971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3051c9-d9d7-41a5-9d48-91d98ac7eb39",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f46114-a389-415b-8328-0b77cf1f27cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c005b746-d3b0-4627-8f6d-73e4ff3d647e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bde08a-5e10-4cab-b96e-2159fc9bcd67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945b67ca-a2f5-4d6b-b432-8ab4b43d2d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389b00d5-a9e9-4ee8-b259-12a48c671210",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aae0e64-1763-4e4d-9772-8cadc826c3f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f14ef47-a5f0-4c58-8ddc-952329cd7d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1fbff4-e8b0-4865-b538-c60f6828e4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db245498-73c0-40b1-97fe-d3580d41c3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac746e53-336e-4eee-a9a6-82a95b40517e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47791f31-1249-4b41-9df0-80093a8dc9d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "830ab8dd-2235-4f78-8414-3f4fc217f6df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48a90b2-b576-4da2-b664-65e3ebf394b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae82d16-0117-4e1f-ba24-4c7e4f9f6b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269286ce-3d84-462f-ab06-09b25f9cf2bd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121e8597-d1a7-42ac-8bf3-67ebf08bde55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "884735e6-7c08-4bb4-a962-0b69bc02def0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba8cdb9-0433-4cff-92ba-da36378e22bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452d29d5-13d7-4d91-bf2f-b06113d776c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee2ee6f-bd59-4585-bbd0-81b911ee351e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc56fe3-a43d-4d79-bed0-be6cbf0811dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce7c4a36-4a2a-4c8d-af96-d253483f6774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "327a4330-c0ef-496d-8651-de0fb1d5ac73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201f662d-1cb0-4570-a519-417e0f787bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2af3e0e-0f0e-4ade-84c3-84ff4addf022",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c715927c-31bd-4b48-86ab-a261863c54df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f597c43-0489-4bb6-a6fc-066b058c0e4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6b13ac-89a2-4fd4-82cc-e8e96efbb668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e5d4ec-3bb4-491b-a316-e4698e95095d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e975826-17c8-4622-8f39-4433b9314199",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ed6b74-e110-435c-94e1-1817e7adbc96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbc4b062-ebae-4046-8aa9-8e1799341175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aaf7a3c-2b73-4b51-b917-1d412057e3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fae4615-aa29-433f-a9f9-f9d4fd3f2013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534ee628-d721-4470-9fc1-59284c94125c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5018eb5e-2b31-4126-9630-037e6258ff9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4571f6c1-f2c5-415e-834d-9617fb5767e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edb81ea-7d6f-428e-8932-a07b65d8a3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1167369-8f97-4ed8-8af6-52a779bb2b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c3eaa9-260e-44b9-8df1-7815afeea261",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd76fc70-6602-49a0-bc39-1cb5f422d929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4107669e-ef87-4733-a46b-efe8b0b00c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ed2161-0533-4776-af38-213a76dd85bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cfbaecc-7cbe-4975-8573-6eeb90101420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4467c3c6-6703-467f-84ed-e3e06097fab1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa34397-51f0-4c07-b15d-67fb3c5b354e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2833f7a-7d76-4ac4-81ae-edc7b4ac86bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f277f695-df00-4eec-a4f1-ad05f27dfdf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f59fbc3-d590-45f9-a4b4-2193c79f8d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf125c2-d67f-4d82-8df0-2f002237f90b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f657c9-369d-43fe-81a8-a8fbb2a8b2c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc715f0f-34ae-4f98-9890-fe3fed702d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65ee62c-726b-4dbf-9aae-b8de5169d80e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9614c0bd-e49e-477e-8b9a-e2acbab24ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec837741-414b-40f9-a288-4955fb402ddb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7fabe8-8f4d-4743-b00d-23bd722e9feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "358d8e3b-b71b-4035-aaf8-431da6829a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0389ff98-f110-4b8a-82ed-89ff124f0e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca90eed0-05da-46ad-89e5-d6efbede37a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c93806-30d7-46d6-87da-3385638e2d5b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e6cab2-887d-4085-8063-4fe83f0d4eb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "136be283-d001-4e28-be20-caa3c05f8769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3047b0f7-8522-491d-910f-d4802f22294b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9646ec83-1da6-48fc-8573-f3977095dbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2baf5d9b-341d-42e5-9196-a503316f3a4e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235bc3af-3157-4fb5-9bb3-0ef1d435fed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96dc5e26-cb17-4633-99db-be641d79fbb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bee7aad-a8d4-4c88-8d69-02a77c5a00f5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0308e42-542f-4522-a199-58ef6597b89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32410d42-4540-4907-a9fc-518a2762403c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd29f1f5-d63d-45a1-858a-152a01912a85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f036a08-475d-4715-8950-72e0c56ec4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9de63b8-91d0-44f5-aaa9-411b46875e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d3c7c1-c1bc-447e-b9d9-d99d3ee1e778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca75fd4-151f-4b13-8798-1b5129ad89a4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7132ed-31a6-43d6-89ba-83246bee8f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aee99ee-9f81-4132-a77f-cbb8ec60d710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9a597e-644b-4471-bed1-be4088849ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6de5a55-2e8f-456e-80d4-00d6492d8379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1254d20-7206-4598-b3d6-9947531b2ebd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b581f2b4-6e97-4500-afab-3602b093950f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7ebc7d2-c216-409b-a89f-e262379c5330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39974002-ac94-45fe-923e-92f87cb7fbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313783b5-2c29-400f-808d-f33c1e74db1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bb2193-fe49-43ad-b495-ab2ae21f0f11",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cf8e39-355d-4f4d-9630-117efb4af9d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ba62691-7c34-49b0-8784-8f0a57e200ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8538d7-ba21-40e6-ad5e-e523f0f47b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46c83a0-63ec-4152-a27c-bc6f102343d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d44ac1d-6839-4952-89b1-d1ff4be51a33",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41128326-21da-48b3-9c26-88125e234e7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42accbca-e6a0-4eb0-9c5f-3133432e536a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a920ae9-73a3-4e07-82a8-b9e0a0b5517b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad003dd-3090-477a-9022-9e97bdde0873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938c04a2-08b4-49a0-8e68-b3d6bbf4d5cf",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61adfeca-6e3e-450e-abe3-90f955ba4961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d5997d5-7dcf-45b0-85dc-d5829a1b19be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9555fddd-4e5e-4561-8f20-6ea3af5c2076",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18cc857d-1223-4c2b-bf5a-5cd354fe9554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772f1fd2-4cde-4d16-b077-47f32eebe2de",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e9571f-e45c-49ff-a9d7-dc410d0992c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b89e2b51-719d-4c76-882e-2102d015ff83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c8de7e-28c8-447e-be92-c79ccc25fcb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2217c1-36ea-4fa6-8ab6-4dbad678a210"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34894ebc-f215-40fa-abc1-dd2c29581b9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d905f02-b296-4dae-892b-4805078ed2d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bc14bcc-2a3b-43fb-bf3e-65d9f1131210",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0dbcea24-d5de-4567-a5c0-f88b4f455502"
                    }
                  }
                ]
              },
              {
                "id": "c5b906f8-0aac-46ed-a944-cc7ae1dfa886",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39628124-0322-4208-bafe-396e1fda2169",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ffd59e-12df-49b8-84aa-424e54b5eeb5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2a93edd4-2c9f-45d2-8968-badcc575e18d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28398259-737f-4b1c-9213-1f1eb10e1c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f63d0687-ab40-4241-bba9-d07ffb5da5a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c4f185a-6272-4717-8690-a43c15103f67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2320f54d-7b65-493e-b2f1-881c93c99a92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11e8e4ef-eee1-4c9e-a4de-4b39b60f9321",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75f1b516-0896-4a5a-8ed3-bd90a14be172"
                    }
                  }
                ]
              },
              {
                "id": "6566a1a3-53b4-4d64-aefc-9fadcf63e111",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c43c6a94-552a-498a-a7a7-51b55dc8a04d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99427aa6-5374-4fb6-8192-31cda6eda870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "05ec3f09-5bcd-4783-ba25-6bc26d582a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e920ca3-5c45-4102-b29e-645aeb56924f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01074129-21c0-435c-a359-e13916e8f830"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b4b5e06f-a07f-4e29-8398-98786fe89d06",
            "name": "Positive Testing",
            "item": [
              {
                "id": "913c056a-2c6d-4dde-9440-24be2130298e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f370cc7d-ef26-45f6-ae9f-3ac3fc99c5b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f5433bd9-52ac-45d6-ab51-90693eb26d9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50f9e5e2-a5e2-45bd-af7a-68a4b950d916",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e681762f-988b-4546-a9c5-36f1880d68f5"
                    }
                  }
                ]
              },
              {
                "id": "8ae1408f-3f46-46d8-8c18-81cbf0537399",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c33376d3-a55d-43a6-84c4-708789c049e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6e100782-cbce-4372-8db6-93633828c954"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe5dcfee-53d3-4e0c-a86f-a338eff7235a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e347cfa8-cb89-405a-bdfc-9bc83f26b7e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a69ae9a-6526-4f09-a624-161633067704",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0590a982-ef8c-4064-b1d7-3b11f2c97787"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff161f78-12d0-474c-879e-b0e006d219c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d92c05d4-c42c-4dde-ad23-059b24b7552e"
            }
          }
        ]
      },
      {
        "id": "32aa4abf-6df9-4c40-af62-90eb0ce2c8cb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "24398ff8-aad9-4670-b10a-b2b21e89411d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d864254-6a42-4b35-95ec-b9b2eb5c3783",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d272f67-e004-4e49-bfec-868c8be5059d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0ddfc0-b57b-446e-9217-d93a82c84a1a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3520f127-74a6-4734-8903-f74d6c635248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6ceb3b-235a-41d0-ad52-c24a07deb505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13e06e21-4a8c-44c1-ada9-65d2f50d1bfc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4419126-69e7-4c84-b670-fb0b794a6102",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8358cf79-dfb3-4eaa-956f-190b65ec4ffa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32bc7a0f-ec67-4deb-8cde-15a0c7617895",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa6cedb9-c4bb-4ad0-9632-d36d815e85cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d377eb33-74dc-4889-b312-8cebde922f62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5634dcd8-0649-4507-ac8f-0a3f9b2476a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f1cc39e-6219-47f7-9e74-0264c7cd4613",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe1f9c51-6d9a-4494-8e2f-b08ff46af8c9"
            }
          }
        ]
      },
      {
        "id": "430cbdbf-afac-4ada-bba3-102365acf051",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b1c4ef22-83df-4342-8e61-6ce6f3f1f2f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0087a75f-3625-4b28-98d2-0899df45100e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "692e91ef-d6b9-48ce-8844-9c743526d5e5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fb7a83-d0b9-4913-bd15-ba90117fc48b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63dde2ec-cca0-4ab0-8e86-4a92b4f34bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38effa30-a7f0-40b8-963d-0a65879ffc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cf96b12-6e37-4868-b50b-20e0c129acaa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8270c0a5-58b4-48f0-96c5-35a76946b434",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1129848e-f4f6-45ae-b550-19236fc36eca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3d27bd0-3401-456f-801f-2583f35843f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecde8cd8-c5f8-40aa-919c-79c14c995b4d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7431017-c461-47e6-80a2-0d70e47a8379",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ea77ad01-be65-4b44-a1ea-273736f642f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41131667-e83d-4e58-b1e0-c19b1c62c974",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0cad7ec6-9887-4731-bc44-f1442b026417"
            }
          }
        ]
      },
      {
        "id": "7f2c7468-1cd0-468d-aaa5-294a31e198d7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2eb4ce5f-dd94-4851-956b-c95d4b0312f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "baafbbe6-725d-44da-bb25-d16e2c8506b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdcbc291-1d0a-4251-926b-f20647d5d83e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d3775d-03e0-46d5-8640-a0ccb99e1555",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64d11090-5b47-4437-be2f-99f776dd827e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f692105a-cb52-4109-a7d2-fccf53faa8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43c10532-4321-4e5d-abe1-2657aa05330e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ff3f6d3-a9e7-4c4b-b103-17c35595be43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bafc18d-5828-4b21-880e-2b3e3ffcfb29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "485b4f93-2f35-4013-bd81-990c3a499cd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e013721-1af1-40a3-a13c-9f907484ca81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "976699bc-215a-4f62-82d8-d2b755b81443",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ca3ca2fe-2020-4995-b21b-3d080fdc0426"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31a47482-eeaa-4bb8-9863-fdef1091e699",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9d58919-ebf9-43b2-8c52-737febc15b66"
            }
          }
        ]
      },
      {
        "id": "e6d0b3b9-e448-4564-af14-5b8cb5f175a8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92dbfb9c-3bf0-42fb-8d65-417b1ed63584",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "330bde22-9e29-406c-a238-576768df2bb7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d3d87241-fce0-476d-809c-0fe2cf940926",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88803df6-2c5c-4d48-83f2-58876ed6b500",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18adb174-9722-445a-8db8-df29c55f9962",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 707.8732394366198,
      "responseMin": 15,
      "responseMax": 6788,
      "responseSd": 786.0277685590015,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687999555961,
      "completed": 1687999770434
    },
    "executions": [
      {
        "id": "7f05e8d5-7b62-43f1-9071-a4784151a597",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3383b20e-d1c3-46c2-ad63-d3fdc1e47a51",
          "httpRequestId": "ad092e15-a39e-47e7-8a30-a2bb864e2007"
        },
        "item": {
          "id": "7f05e8d5-7b62-43f1-9071-a4784151a597",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "df3400ea-37c5-4d82-880a-665c88314475",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 0
        }
      },
      {
        "id": "70818293-2e24-4c6b-952a-f88220331310",
        "cursor": {
          "ref": "07c9f306-3bb2-49b8-9e24-d7db590ca604",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "56f30a03-ef00-4443-b349-b36b4341b871"
        },
        "item": {
          "id": "70818293-2e24-4c6b-952a-f88220331310",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "52b6a98c-d259-4c06-b78d-9f3b7113ec37",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "ec1d93bb-da46-49d2-bcdc-9ecea8f9fb47",
        "cursor": {
          "ref": "9dabd77d-8d09-40e1-b367-a35edf16fbb8",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f7a7901f-51e7-4512-8976-fd9932a61118"
        },
        "item": {
          "id": "ec1d93bb-da46-49d2-bcdc-9ecea8f9fb47",
          "name": "did_json"
        },
        "response": {
          "id": "3d040cb4-3986-48a0-a2a9-d517d5eb88d2",
          "status": "OK",
          "code": 200,
          "responseTime": 1025,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08249a26-fddc-415d-9967-5213678ef865",
        "cursor": {
          "ref": "e92118de-f510-40be-bcf0-2b600f79e5b8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9d7a5810-95af-46e9-a645-3a4f9f67ce75"
        },
        "item": {
          "id": "08249a26-fddc-415d-9967-5213678ef865",
          "name": "did:invalid"
        },
        "response": {
          "id": "94ec42a8-5c9c-4d1c-b474-b6807ee00632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08249a26-fddc-415d-9967-5213678ef865",
        "cursor": {
          "ref": "e92118de-f510-40be-bcf0-2b600f79e5b8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9d7a5810-95af-46e9-a645-3a4f9f67ce75"
        },
        "item": {
          "id": "08249a26-fddc-415d-9967-5213678ef865",
          "name": "did:invalid"
        },
        "response": {
          "id": "94ec42a8-5c9c-4d1c-b474-b6807ee00632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acdc464-7363-4b57-9645-63e45073726c",
        "cursor": {
          "ref": "2d0defd7-e091-4685-8302-cf9cd1ba24af",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "67045260-8257-48cf-b70a-584e85020223"
        },
        "item": {
          "id": "4acdc464-7363-4b57-9645-63e45073726c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9d0e51b3-4585-4031-bc9e-fd5b50aa13ca",
          "status": "Not Found",
          "code": 404,
          "responseTime": 758,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35276aa-4843-43a8-9a4a-d5c13a995950",
        "cursor": {
          "ref": "1f220faa-d498-4f54-b6b8-75e23a81d24c",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0938b372-6758-46ac-8349-05819caecb02"
        },
        "item": {
          "id": "e35276aa-4843-43a8-9a4a-d5c13a995950",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1eb4f088-8a21-46ca-a8f1-f725b06fe754",
          "status": "Not Found",
          "code": 404,
          "responseTime": 821,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d067f8a7-eff0-4b3f-ab26-0472d2dae19c",
        "cursor": {
          "ref": "89b3226c-916a-4ab0-a198-7de0e6fa1ac0",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4fbd3ef2-55c7-4b90-9984-6fb613915870"
        },
        "item": {
          "id": "d067f8a7-eff0-4b3f-ab26-0472d2dae19c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e508ce65-56e6-43ae-a93c-796aaf4b1fa8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd9fe22-d670-47f2-bbd1-de238766b345",
        "cursor": {
          "ref": "61c2ad1c-38eb-4738-a3d2-6bf2862cc4c8",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c0fe5682-0eef-4d5b-a026-cb93ffe94562"
        },
        "item": {
          "id": "ddd9fe22-d670-47f2-bbd1-de238766b345",
          "name": "identifiers"
        },
        "response": {
          "id": "2826eb05-0a53-4f0b-8c49-9e48c9b4b64a",
          "status": "OK",
          "code": 200,
          "responseTime": 1508,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df855a66-a902-4824-893d-8768d9e998f8",
        "cursor": {
          "ref": "c78adbba-f25b-4a9e-b3af-61333f1e842c",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1d9368cd-94c5-4bd0-abe7-526d05da350b"
        },
        "item": {
          "id": "df855a66-a902-4824-893d-8768d9e998f8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "236c20d7-be25-4897-afff-45a790d2c685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b05bd3-6139-4f9f-b548-3c9acbe06721",
        "cursor": {
          "ref": "1746aa8a-a360-4193-884a-46d338c1f9d4",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1248e54b-1753-4659-a9d2-2b170bc986d0"
        },
        "item": {
          "id": "51b05bd3-6139-4f9f-b548-3c9acbe06721",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "951d521a-271a-4255-a5a0-b3901480d1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197a56c1-7678-4a0e-9bc2-946b456c5f21",
        "cursor": {
          "ref": "19c3b804-bb30-4cbe-9a19-1172ef2adcf3",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8359fe49-465a-4c7d-b7ba-e97d99d86045"
        },
        "item": {
          "id": "197a56c1-7678-4a0e-9bc2-946b456c5f21",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e253ba9a-224f-4e3b-86e2-0ff667eef6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61df071-a3a2-43ee-a71d-7a8a68109704",
        "cursor": {
          "ref": "9034ac70-71e0-4046-8cf7-c9595a2cd501",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "60ccd16d-2b3a-489b-8b01-294270235a2a"
        },
        "item": {
          "id": "c61df071-a3a2-43ee-a71d-7a8a68109704",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "aef46a2a-5f5c-414d-91f6-e224476f759f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5568b49a-3b49-44a9-add4-c5a26f3dd511",
        "cursor": {
          "ref": "5d617b4d-7dd3-4233-b0da-2ee2e63a04af",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f4e48c7a-e904-4862-a9b9-455dceedc6c4"
        },
        "item": {
          "id": "5568b49a-3b49-44a9-add4-c5a26f3dd511",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4197feed-aeb9-477a-a22d-04fbbf87b8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d881dfbb-701e-4d7a-b9fe-8078bf8125ae",
        "cursor": {
          "ref": "cccc0225-d6bf-48e0-85d2-42aac1f81405",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "15fc0764-2a41-4560-b8e7-1072d5ea6881"
        },
        "item": {
          "id": "d881dfbb-701e-4d7a-b9fe-8078bf8125ae",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c1fe876b-7e4a-4ed2-9a35-1a68cbb20e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab3ae87-fd01-4e4a-8e6c-8f36a0df08bd",
        "cursor": {
          "ref": "13594cf8-b1c4-4d26-805e-d5548b689781",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cb121740-d4ef-4af2-ae25-6ee76e4d792f"
        },
        "item": {
          "id": "3ab3ae87-fd01-4e4a-8e6c-8f36a0df08bd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e8260d37-9369-45c4-aad2-bd36894e3658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0200e1d-645b-49e8-a705-8706400c5cf8",
        "cursor": {
          "ref": "c3b0d5a7-fe0d-49b5-aadd-b0c75190ef24",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "65d76212-cf78-42c5-9636-0ff6eeaa20f0"
        },
        "item": {
          "id": "b0200e1d-645b-49e8-a705-8706400c5cf8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "75a4ca07-93d3-4a6d-9eb0-6101aa0e8065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47696099-2a2f-4120-848a-694e7e8af9e1",
        "cursor": {
          "ref": "08f79bd4-4c32-4c8b-a4c9-699dea60a9a8",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "40d14186-a8e2-4d53-b3aa-53af8d7c10b6"
        },
        "item": {
          "id": "47696099-2a2f-4120-848a-694e7e8af9e1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0cfed146-c731-448d-b9a0-5adb862116d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fa73cf-027e-4c8e-80fa-4592daa36701",
        "cursor": {
          "ref": "682b64a1-a642-47fd-860b-910f1d90dc50",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "21322828-e0a1-42a5-9625-d6d96dfbebf7"
        },
        "item": {
          "id": "56fa73cf-027e-4c8e-80fa-4592daa36701",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "991a8814-e432-46b5-9f86-b855997547d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ec8979-2099-4d77-8efb-f0110f00cfbe",
        "cursor": {
          "ref": "70630edc-d2f2-4ab8-acee-2d5dc09aa8a7",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8069b76d-ab11-4950-888a-09a1e3049923"
        },
        "item": {
          "id": "a1ec8979-2099-4d77-8efb-f0110f00cfbe",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "12d16347-4f0b-4cad-b691-7b1ea742ff68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9d7c93-4dc7-42e2-9342-76d623d42bdd",
        "cursor": {
          "ref": "ba001e3f-eaf8-4208-a3df-cf90fdc4f231",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "66f0fc67-3bb4-42d9-993c-eb3edd61ba7e"
        },
        "item": {
          "id": "8e9d7c93-4dc7-42e2-9342-76d623d42bdd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1eb4d764-a1bd-427c-9eaa-7dcc6f98530d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdedd98-d851-4e5e-8b77-70392e3d5d1f",
        "cursor": {
          "ref": "14e67a03-313f-4538-8bba-fa8b7f2b4012",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8db29b2c-88b7-4c52-a7df-f0d4bc850757"
        },
        "item": {
          "id": "ebdedd98-d851-4e5e-8b77-70392e3d5d1f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3d68edc6-19cd-4f13-a769-fa9898e92a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adfb8da-683d-4feb-8366-e2ad766ad70d",
        "cursor": {
          "ref": "daaaf10c-47a0-4a66-9943-4845367d9011",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "00bb44a8-c8dd-4199-8b49-de1dfea7beab"
        },
        "item": {
          "id": "3adfb8da-683d-4feb-8366-e2ad766ad70d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b9596bd4-53b4-4605-8e94-14de423ba989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85ae6cd-7355-489e-928a-f2571c3f74dc",
        "cursor": {
          "ref": "89815da4-ac85-4f6b-a32e-c78eae3143c6",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0119e25b-1a3b-42ca-9d1d-af7d3f367127"
        },
        "item": {
          "id": "f85ae6cd-7355-489e-928a-f2571c3f74dc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b356ec58-e17d-4a6e-a0b6-da31b4541d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f681ba94-78fd-483b-b366-511dd490f9a9",
        "cursor": {
          "ref": "72e07683-36d2-409a-9db3-a5d22b2eac6d",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f7043760-37d2-4fef-a377-7e70abce2f93"
        },
        "item": {
          "id": "f681ba94-78fd-483b-b366-511dd490f9a9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "eb1e3c23-d15a-430d-937c-6a177f157720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f854aeeb-f148-4016-a8db-6a4aef3ffff5",
        "cursor": {
          "ref": "b577c8d7-9767-490b-a07c-58b0166d195c",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f18ce84b-45d7-4e23-9a57-808b75e111bd"
        },
        "item": {
          "id": "f854aeeb-f148-4016-a8db-6a4aef3ffff5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "004ab4be-b9f2-43ee-817c-6d9bd98cbc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbeba13-c0f0-4770-aa7d-8074b00f5856",
        "cursor": {
          "ref": "6a862375-8e15-4985-b73d-3717dd7da422",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "96017aa1-9ff7-4103-b81d-5f109ddccd53"
        },
        "item": {
          "id": "7cbeba13-c0f0-4770-aa7d-8074b00f5856",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7ee6657b-2de4-466a-8054-1c61a6430d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cb97a2-b692-47d3-867b-046cc2953948",
        "cursor": {
          "ref": "c4a1b786-2619-4e2d-9b4e-28a062f209d2",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2638ec66-eb03-4f73-aabe-dca5f97ed3a4"
        },
        "item": {
          "id": "c9cb97a2-b692-47d3-867b-046cc2953948",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "36c49b1f-5393-47e8-8022-51ddfdbe642e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9537b67-23b0-467a-8623-a4ae056ff452",
        "cursor": {
          "ref": "849b02d0-20cf-4e08-9dc4-31164c026b59",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "586d8813-147b-44ef-a414-e8af6b431925"
        },
        "item": {
          "id": "d9537b67-23b0-467a-8623-a4ae056ff452",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bd8f4882-9994-4a24-87d9-5eb97c67c20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61363fa8-06fa-4ef8-a2e9-c1918d3f0119",
        "cursor": {
          "ref": "e703e755-686c-4993-8fde-9d8efc6d748f",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "30cc3849-0924-4d0c-93cf-6a26de6bebe1"
        },
        "item": {
          "id": "61363fa8-06fa-4ef8-a2e9-c1918d3f0119",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7c72e4b9-0ee8-4061-bcb2-8266664f9f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a2a7a1-ec2f-43b1-b230-bd24f7dd96d7",
        "cursor": {
          "ref": "1ea72a97-b6ab-401c-ba55-082cce13527f",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "47c2ecf4-92c0-40b9-9a32-8caf72d9cd12"
        },
        "item": {
          "id": "54a2a7a1-ec2f-43b1-b230-bd24f7dd96d7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "86fb8b26-c82c-4111-ac81-2a20815ec6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583003c1-c424-4625-93cf-e041ad6997b6",
        "cursor": {
          "ref": "3878b0ef-d6c4-4efb-b594-7c4c3295afcd",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "35a5074a-02f7-4e7b-bfe7-78e39489631d"
        },
        "item": {
          "id": "583003c1-c424-4625-93cf-e041ad6997b6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "34aa91a0-642e-4ea6-aa73-6385d197a826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027c635c-3ea9-496a-849a-6ecf6dde4d58",
        "cursor": {
          "ref": "899d7832-ec0f-4ac3-b663-9ddfbff2cf43",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9ce5dc0e-b4db-4bef-82f8-0d55df112b1c"
        },
        "item": {
          "id": "027c635c-3ea9-496a-849a-6ecf6dde4d58",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "06eac42b-30d6-40ea-85bd-e1255b191fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660e92c4-788a-480a-9bfc-a2d183e8b7b1",
        "cursor": {
          "ref": "186e9acb-a185-45ca-934b-9de9509a44c4",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1c48e029-c667-483b-ba96-efcecdec34e7"
        },
        "item": {
          "id": "660e92c4-788a-480a-9bfc-a2d183e8b7b1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d97b1421-da2b-47d4-aa3f-9a1f1c4ac59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3db916-7ed9-4145-9a9f-94907e05c65a",
        "cursor": {
          "ref": "4efed04c-2dbc-4c56-97b6-2d303d399907",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "34fb84e4-ab51-473b-bccc-a5a0df720f93"
        },
        "item": {
          "id": "4c3db916-7ed9-4145-9a9f-94907e05c65a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dfdc2418-c012-4bc1-9870-2033c4991d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6637db8b-0578-4662-959b-839ae04e756b",
        "cursor": {
          "ref": "1ea5a728-a41f-4a37-8a98-b4b17e9138a0",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d6d1b9f8-c952-40f4-b19f-b1f146836fd1"
        },
        "item": {
          "id": "6637db8b-0578-4662-959b-839ae04e756b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9598311a-43ad-4013-b27b-82eb3be7f42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5b9b34-ab0e-4d0d-9a56-66e0da630821",
        "cursor": {
          "ref": "edc5f231-0ffc-41a2-ab9a-687f18e10705",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7230cf86-8724-40d5-a473-69ae30ad0afe"
        },
        "item": {
          "id": "5c5b9b34-ab0e-4d0d-9a56-66e0da630821",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "df71256c-3f55-42c8-af73-2e01964a860c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db87617-30c6-4c82-8c02-e9b16a44c7a9",
        "cursor": {
          "ref": "4a933021-a1da-41ca-a942-2a9f821fe816",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0a50ceb1-84c7-4ac8-9d0a-8e6a3e5354ad"
        },
        "item": {
          "id": "2db87617-30c6-4c82-8c02-e9b16a44c7a9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3fe4f53a-8bd7-42ea-82ec-7a0fb10481ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed0d876-7b67-4121-bac2-bbb271440f75",
        "cursor": {
          "ref": "acdc478e-1124-4e5f-a95e-d79004a4575b",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2449568a-fc1c-4c71-8f51-3fb7bf55eaa6"
        },
        "item": {
          "id": "2ed0d876-7b67-4121-bac2-bbb271440f75",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "daa29755-f976-46ad-829e-02418fa18f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c94bca7-4d7f-4b9e-9836-196993629fac",
        "cursor": {
          "ref": "9d9ed144-9107-4c4e-9229-af1ed841b686",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "11ce0938-cafe-4709-9f62-030f85935292"
        },
        "item": {
          "id": "5c94bca7-4d7f-4b9e-9836-196993629fac",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b228e7e5-629e-42fb-82f4-8d71cff0336f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b9c26e-c028-4387-a17d-43650a64aaa1",
        "cursor": {
          "ref": "cb3ef9e5-4116-4bf3-b7d1-68b0947cbcdf",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "05114b2e-1de5-417e-b011-33bd58f730db"
        },
        "item": {
          "id": "18b9c26e-c028-4387-a17d-43650a64aaa1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0c82b727-cc0f-4e71-a27f-a735acaad385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1861ca-15f7-4a88-a7e0-6b55afaeaa81",
        "cursor": {
          "ref": "b36b992c-5e0b-48c0-83ba-f86703868d42",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bbd77625-b5e9-4e89-ac6c-b02ed0052fca"
        },
        "item": {
          "id": "4f1861ca-15f7-4a88-a7e0-6b55afaeaa81",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "955ce4f3-db21-4218-b179-6ae41acecbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b912efde-a084-43b8-9c13-c47b321a9c4d",
        "cursor": {
          "ref": "305aa84a-6422-4c55-aa56-68122253d436",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cdf6f880-2278-4535-8c69-83006e667d5a"
        },
        "item": {
          "id": "b912efde-a084-43b8-9c13-c47b321a9c4d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f29fe158-afc5-4a27-a3ac-374b85615734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4a3608-3f44-463f-b0ca-2db9263ab9b0",
        "cursor": {
          "ref": "0e1ef0f7-3cd9-4385-ae4c-5761dd3646e2",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1aee45a4-30c0-4854-afd3-935c18909b8b"
        },
        "item": {
          "id": "7f4a3608-3f44-463f-b0ca-2db9263ab9b0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f47a7249-d53b-4b6c-8cda-34411eb21bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c8dcf8-5292-462e-9ed8-6931d7945e84",
        "cursor": {
          "ref": "ce03daf1-5fa3-4ea8-9c21-632100dbed9d",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4fae105d-52cb-4fa1-8e62-e8cf400b8f63"
        },
        "item": {
          "id": "b1c8dcf8-5292-462e-9ed8-6931d7945e84",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9098bffb-fd19-4136-86b8-a977a1a087ad",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 910,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071f99dd-f1df-48a5-90f9-fe9624c68f82",
        "cursor": {
          "ref": "1452065b-e094-402f-b7a1-fc21a27a29c7",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7b89e309-abe3-4bd1-bfe6-7679ce778d5a"
        },
        "item": {
          "id": "071f99dd-f1df-48a5-90f9-fe9624c68f82",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "987b2566-cdc3-4905-99c1-b4befc8a131c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17d309a-a2dc-44a1-bfd1-6866c6ed95c6",
        "cursor": {
          "ref": "f728a925-d8ca-4560-a8fa-bfc7b961a2e1",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "42242699-822e-4699-9801-9a82806ab404"
        },
        "item": {
          "id": "a17d309a-a2dc-44a1-bfd1-6866c6ed95c6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "27b562c7-7429-4107-945c-607a4443f15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87bd6b0-bf2b-459d-ba9e-01083ddf8c37",
        "cursor": {
          "ref": "0e381e67-5f10-44bb-b64a-23e7b0cce3d4",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0f6b74d1-e47c-4493-bfaa-f8bf41398e6f"
        },
        "item": {
          "id": "c87bd6b0-bf2b-459d-ba9e-01083ddf8c37",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "772330d5-2dfd-40a3-a580-f90241e6c019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712a89a0-f463-4ac4-8829-c2d439afb884",
        "cursor": {
          "ref": "2a411d9f-c4ff-4566-ab47-98dd04f2b276",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f79e33ef-cb1e-4f50-8ad6-88819a6d4b45"
        },
        "item": {
          "id": "712a89a0-f463-4ac4-8829-c2d439afb884",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f07af6ee-476a-4155-b9c6-b60ffd9e822f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200dfab5-8ed0-4424-b83e-e4e3c3331eb6",
        "cursor": {
          "ref": "ad7aaffe-510f-4652-a349-f2725f48351c",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a71becae-bd4c-4921-a5ca-d7b3d782f57b"
        },
        "item": {
          "id": "200dfab5-8ed0-4424-b83e-e4e3c3331eb6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c129144a-8d62-411a-a9f4-50f04b2e314f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0446ddd-f88e-47f6-b72d-96253b0c4d14",
        "cursor": {
          "ref": "1b7501f2-f2bd-439e-bb21-dca8010313b6",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "02810d61-1f83-4ee8-aab8-ded1ad452b77"
        },
        "item": {
          "id": "c0446ddd-f88e-47f6-b72d-96253b0c4d14",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d3cbb623-9fa4-4029-b22b-e03609eded43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344d081f-e310-4196-99ac-b01db823a929",
        "cursor": {
          "ref": "2b3adedd-7ae6-4835-9c00-bbe8a4d376f6",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0df8d4db-22bc-4050-ae66-1ad525abbc3a"
        },
        "item": {
          "id": "344d081f-e310-4196-99ac-b01db823a929",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ac5a70f7-260b-439f-95e1-01dbff9fd66b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 909,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8f98dc-f822-4283-bf9b-d07e67023a50",
        "cursor": {
          "ref": "34e2f88b-387c-4c9f-b767-97254422a604",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a0aec0cb-474a-4a5a-b2d1-cbd13c2dbf97"
        },
        "item": {
          "id": "cb8f98dc-f822-4283-bf9b-d07e67023a50",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e1f0051d-b6b2-4339-a8f2-f0ba5d75a624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c2a6d9-d5a6-4c49-ac11-f4f1f3cc8483",
        "cursor": {
          "ref": "7fd4c92e-0122-4e5e-8c61-cf78c1b79a36",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2171e7af-9a00-40de-8705-9a786a525742"
        },
        "item": {
          "id": "08c2a6d9-d5a6-4c49-ac11-f4f1f3cc8483",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4cc2b4b7-d5ed-4b0b-9e7f-a0a227a53a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53a90a5-c8c3-4ad1-a521-c29bab8df3d9",
        "cursor": {
          "ref": "749df315-b78a-4a0a-93f4-f3c195729b17",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "92f8e23e-f415-4853-b301-60249d55f471"
        },
        "item": {
          "id": "f53a90a5-c8c3-4ad1-a521-c29bab8df3d9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f8f4d334-35fa-41b3-9d7d-cdcbf7a4dbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13f2455-2e78-4dea-ac90-9c904a49794d",
        "cursor": {
          "ref": "30f9fd24-0d5d-40fb-aec4-c22c35d409c5",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c6d97983-ae56-451e-9084-d230fd0c428d"
        },
        "item": {
          "id": "b13f2455-2e78-4dea-ac90-9c904a49794d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e5f20853-5901-49b7-9781-75db7b2ca7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8966ed-8dcd-4556-9bd3-1243b2b6c2e2",
        "cursor": {
          "ref": "036386af-583d-46ba-b2d1-9630e7b01230",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "db451810-4265-455c-957b-7c8bd93ec299"
        },
        "item": {
          "id": "7d8966ed-8dcd-4556-9bd3-1243b2b6c2e2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7cddb8b5-2cd6-4540-9759-60f16b229023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec3e2be-48e1-4df7-9f8d-3da476bb9ecb",
        "cursor": {
          "ref": "e3c4759b-a4c1-4c34-b42e-75e07989df08",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c9eb27e6-3d45-4456-9023-edbb09c75c9c"
        },
        "item": {
          "id": "8ec3e2be-48e1-4df7-9f8d-3da476bb9ecb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "94231d0a-de74-4f1d-8f21-05227146074a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00db5e35-d3cd-429b-9754-a878b3615d2d",
        "cursor": {
          "ref": "f713ac52-7125-4eb3-abd4-d15e0233d4a7",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3f81ed2e-613c-4ce3-94bb-cb95f5f991ec"
        },
        "item": {
          "id": "00db5e35-d3cd-429b-9754-a878b3615d2d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a93fd0df-463c-4279-be10-faac7b8818bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb9dd8d-7c53-42f5-93c1-c607093538c2",
        "cursor": {
          "ref": "ac61b175-e5b7-4132-8482-5f95b64a8f13",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3ef0c001-c452-4140-8f18-baf260c4ae8b"
        },
        "item": {
          "id": "dbb9dd8d-7c53-42f5-93c1-c607093538c2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8e2467eb-0d82-4f8b-a8cb-9fa0af2148e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce3b436-e249-4a6e-b705-60252f14249c",
        "cursor": {
          "ref": "655316ff-09ba-4a11-9be4-c6aefbdf1b42",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "541d72ca-4d27-419c-8c3b-3e7f664a9149"
        },
        "item": {
          "id": "bce3b436-e249-4a6e-b705-60252f14249c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fafc7cb7-813a-43ec-bebd-8bae837adcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b6c3e3-dce5-4d7a-8798-973fc789d8ee",
        "cursor": {
          "ref": "4a264c67-d938-44eb-8d7d-483fd272121f",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "02ce3006-29ec-4c87-b9c0-6ec60b2e4086"
        },
        "item": {
          "id": "c8b6c3e3-dce5-4d7a-8798-973fc789d8ee",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3d13875a-4099-4117-9bea-4918493bb428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4b0ff8-0b12-463b-8402-20c975f3b808",
        "cursor": {
          "ref": "0e9c717e-bd79-42b5-8837-f760cb3aefdf",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "db114b82-56ed-48ea-96e6-deb92d90285a"
        },
        "item": {
          "id": "ae4b0ff8-0b12-463b-8402-20c975f3b808",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c6152e6d-1da0-4bb8-a86b-bad7cf9951c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4fc395-e979-4ecf-ae76-ed49b618a1b1",
        "cursor": {
          "ref": "b9d96404-4a8e-4104-a6fe-c267b8a7bffa",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2fe9725b-db3d-46bc-9d60-c03b9a95bfb0"
        },
        "item": {
          "id": "ba4fc395-e979-4ecf-ae76-ed49b618a1b1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1a727388-b0c5-454f-9753-5b161519ba4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6223c59a-0ecc-48f5-897c-4fe7f5ee1606",
        "cursor": {
          "ref": "a8fafc80-78fc-4a54-a26e-1e3aff1a63e6",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2827093e-a7d0-407e-a1ed-c2985241c905"
        },
        "item": {
          "id": "6223c59a-0ecc-48f5-897c-4fe7f5ee1606",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8eefa47b-e3cc-42f4-b526-81a66757c0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2d636e-e9fa-4a19-a6a7-f3adf5fa2770",
        "cursor": {
          "ref": "310d3b2f-005f-4b09-ab9d-a03896e065eb",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9aeaab4f-939f-46a8-b629-1a58f6404ce3"
        },
        "item": {
          "id": "2a2d636e-e9fa-4a19-a6a7-f3adf5fa2770",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "970e12ef-6a4f-4d2e-b564-4b62ce841f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8919311-c131-4121-a294-57330285f080",
        "cursor": {
          "ref": "77fdfe5a-9251-4703-8802-2e1578d634fd",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a417aceb-16ad-46a3-8218-19c34c179db1"
        },
        "item": {
          "id": "b8919311-c131-4121-a294-57330285f080",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "daa2abf0-9d56-4f14-900a-e31a1dcdd79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cae638-0466-4875-bcd4-e80400fa9903",
        "cursor": {
          "ref": "cd6be85a-0ac5-4ffe-a19f-4a6f6dc056e7",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "081e6046-fa87-49dd-b1fb-82e7f7452e5c"
        },
        "item": {
          "id": "f3cae638-0466-4875-bcd4-e80400fa9903",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f3ac970c-56f8-44f1-9e54-f57ca4c4e04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d8b534-1577-4377-8bf5-24612b5030c8",
        "cursor": {
          "ref": "f38ca129-d4c4-48e1-97eb-b16a1de9661f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d234da03-2459-454e-9d1c-b4c6309d91c3"
        },
        "item": {
          "id": "99d8b534-1577-4377-8bf5-24612b5030c8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2ed3478a-2cbc-4416-a04c-cef9314ed273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fbfc5a-8ab0-41c6-b4d7-4a0f8b6770cd",
        "cursor": {
          "ref": "99251f4c-e99b-4ac3-8edf-181a36288699",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b71861b0-345d-4341-8050-533bde857959"
        },
        "item": {
          "id": "04fbfc5a-8ab0-41c6-b4d7-4a0f8b6770cd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3dae9fbc-db57-439d-bd2a-ae5df6367587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed20f1b-e87f-4556-9fca-f67bda417d3f",
        "cursor": {
          "ref": "19c52eb5-0a8e-4747-b603-f21079592caf",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c04d0017-c6bb-49d8-a028-1b4e2adbef10"
        },
        "item": {
          "id": "9ed20f1b-e87f-4556-9fca-f67bda417d3f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "aa5038bb-9104-4958-8b0e-12eda9c2ee74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9a1816-e2be-420f-95ff-df45170a577d",
        "cursor": {
          "ref": "19d11b7d-b9f2-475e-aba9-81356aebce55",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "dbe95840-1882-4304-8acc-6ba2e550967f"
        },
        "item": {
          "id": "0c9a1816-e2be-420f-95ff-df45170a577d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2efb66e6-deaa-4f06-9d9d-779b44f8f4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f77ace3-7d72-4ef3-a415-d3812ba84873",
        "cursor": {
          "ref": "0d1172bf-b14d-4be8-87ec-c01f79f69dee",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bc92cd60-fedb-4e29-bd76-c7ada82b9b7f"
        },
        "item": {
          "id": "4f77ace3-7d72-4ef3-a415-d3812ba84873",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "25cc8c35-ca7a-4d8e-a398-9e1374e55337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d105a611-da13-4a10-8cc6-b9e6cfa14b8a",
        "cursor": {
          "ref": "d2ad4561-e42a-4e6b-ae35-978e4d6ca42d",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2904dda2-b5d9-4dfc-ba28-b0bd3616406e"
        },
        "item": {
          "id": "d105a611-da13-4a10-8cc6-b9e6cfa14b8a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e50c2255-d788-483c-a44b-d6347bc74250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c571354-3d2d-4ee0-bfa2-11da2e841e39",
        "cursor": {
          "ref": "cafb777c-10e0-46c7-8658-a70e827adc61",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8447d1e3-cfc7-4714-ab9a-92e7ed216d57"
        },
        "item": {
          "id": "0c571354-3d2d-4ee0-bfa2-11da2e841e39",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8c51f60f-8b3f-4690-a059-c47770319d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961ec298-c1f1-4cb1-b73e-90ae84c62a47",
        "cursor": {
          "ref": "7367c292-6797-4485-82e3-8d10e79bebb2",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f73c24c9-1078-40ff-8b6e-418bd725b0cf"
        },
        "item": {
          "id": "961ec298-c1f1-4cb1-b73e-90ae84c62a47",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2cfcfba1-a0ec-41fa-a0f1-61fa80609232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599b92bd-e5e3-430c-93ac-165fd70a891c",
        "cursor": {
          "ref": "65c90cd5-1e44-4c09-9b2a-92402e486d51",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "10b3b7dd-f5b4-4c6d-8086-2162868f1d73"
        },
        "item": {
          "id": "599b92bd-e5e3-430c-93ac-165fd70a891c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "05d7a2de-3b05-4c2a-b5c0-a9ae3ad46397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b789b5e3-3d28-43a8-bb4a-0357d4ccb388",
        "cursor": {
          "ref": "9980c18e-fa27-46f5-b2a3-9e3ba1292cdb",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "914eeeee-ccf8-4ed1-a9c6-14cec0fe495e"
        },
        "item": {
          "id": "b789b5e3-3d28-43a8-bb4a-0357d4ccb388",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "62db944c-2a6c-4731-b8ec-b9bfb21b7b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef24ebe8-a133-4935-9994-c0bc9986b713",
        "cursor": {
          "ref": "7464d9c7-3b0e-4cde-8569-51d82b19babc",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "dd7ce7e3-502d-4e61-aa53-457419870731"
        },
        "item": {
          "id": "ef24ebe8-a133-4935-9994-c0bc9986b713",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5b28da2b-34bc-441e-92fa-43e69be100f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269683ae-dff7-4598-842f-79b179bbf7d5",
        "cursor": {
          "ref": "86072ac7-0c98-456f-ab26-7daba8e805a1",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "46b6fce8-74bc-43b5-aaf3-e21120c39d9b"
        },
        "item": {
          "id": "269683ae-dff7-4598-842f-79b179bbf7d5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "77e80400-a4d7-404f-a036-04ebe9964132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcff7bd-1999-4b96-9e75-aa005a1c0845",
        "cursor": {
          "ref": "f5de0d1b-c9c2-4922-9013-62fe5a2d199c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "22e75bcc-3137-4184-aa3d-38b55240d5d4"
        },
        "item": {
          "id": "cbcff7bd-1999-4b96-9e75-aa005a1c0845",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6974b3a6-8ef4-4287-938b-f220702f52d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1686501-91ca-4241-8213-d8e85fec6588",
        "cursor": {
          "ref": "a2844cfa-0ae8-42fd-8d1a-d5d2188111d9",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5453158e-73aa-45d8-b6bf-4ea081eb9bb7"
        },
        "item": {
          "id": "a1686501-91ca-4241-8213-d8e85fec6588",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "388db2d1-24e4-4f7f-bcbe-c299a5dc9d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d26cccf-03ed-4d6e-982f-8b746c262fa9",
        "cursor": {
          "ref": "17ffffb5-26d1-41ef-8c6c-ca64f457090e",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c42ecaae-44d9-40fc-972f-325b7f66151a"
        },
        "item": {
          "id": "6d26cccf-03ed-4d6e-982f-8b746c262fa9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "96e617e9-d36a-44e6-bbb2-55f93feafca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368399f9-9b03-46a8-bcf5-c5d1123d18f3",
        "cursor": {
          "ref": "e34321a9-90cc-4780-9e35-9a4569fba3a1",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "829a46d3-b23c-4849-b03d-e59bd4fed0c9"
        },
        "item": {
          "id": "368399f9-9b03-46a8-bcf5-c5d1123d18f3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "73eca92d-e6ba-48f5-a2cd-c167e62b2efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540c38ed-2bed-44ca-a15e-6945829dea44",
        "cursor": {
          "ref": "c01398ee-12fd-4917-8a85-2cb355a94eab",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "51a0da1c-6df0-43be-a65d-16f8fb6c41a7"
        },
        "item": {
          "id": "540c38ed-2bed-44ca-a15e-6945829dea44",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "52735539-c49e-4476-90be-c0a27dac7e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878980a3-ca13-4c2f-94b5-3698f32c587d",
        "cursor": {
          "ref": "86dcaad8-2e60-4e37-a102-7c42c25f40ba",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9418eac3-1d55-4cc0-8a25-431174cc48ae"
        },
        "item": {
          "id": "878980a3-ca13-4c2f-94b5-3698f32c587d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c725c5b5-e9f0-46b4-b998-3238ccc4fe16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fdf525-3462-4f50-a16d-4811c4ef38e4",
        "cursor": {
          "ref": "b0628ca4-692f-4734-8dc6-a2faa404fe78",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "26c940e0-2929-4138-b9c2-742bf2b121fe"
        },
        "item": {
          "id": "26fdf525-3462-4f50-a16d-4811c4ef38e4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1f4f0c2b-7a13-4024-98ef-42b7a27abb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2c9494-a993-4bc1-bc1d-ef647906bb0c",
        "cursor": {
          "ref": "a4089a3d-5586-447b-9006-b2d91ffadd86",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0cffc646-6482-4949-bd0b-2a6a0e80be48"
        },
        "item": {
          "id": "7b2c9494-a993-4bc1-bc1d-ef647906bb0c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "94641548-a0a2-483c-85e5-5f66cab706bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9131ad5d-ff36-40b0-9edf-9c74d209d5f8",
        "cursor": {
          "ref": "6a26e9da-f323-4362-995f-aa7473522ec7",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c5719480-72a9-49fb-ade2-e1f9b20b2188"
        },
        "item": {
          "id": "9131ad5d-ff36-40b0-9edf-9c74d209d5f8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b0654239-81c1-4e5b-bca2-65bd148fc807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8921e6dd-af62-4ab3-a748-d6e80ab53301",
        "cursor": {
          "ref": "13e8302f-1222-433c-a9f2-5c7186bdecc2",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "603f5456-122a-4175-8a3d-28988096ca68"
        },
        "item": {
          "id": "8921e6dd-af62-4ab3-a748-d6e80ab53301",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7ecdc512-539a-49e3-97d9-2cfaa258f94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d360f38-7254-4439-bfe7-7050b2a85f8c",
        "cursor": {
          "ref": "e52f0c3c-8a29-45c8-9a0f-481217de55b6",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b655cb42-b11c-4518-94b9-3445e6830617"
        },
        "item": {
          "id": "4d360f38-7254-4439-bfe7-7050b2a85f8c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "97e6a75e-8478-4104-b841-277fb872b67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc7e185-74b0-49e2-84c1-98f5302116c4",
        "cursor": {
          "ref": "6af61e9f-5eab-402a-915b-10d21008bd33",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c6ffbdb9-054f-45ba-bd96-8dcfd1e73fce"
        },
        "item": {
          "id": "efc7e185-74b0-49e2-84c1-98f5302116c4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "be7703f7-bfdd-462e-828c-d6d6e5320917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de09077-2f42-4fb0-b36d-31894c88025e",
        "cursor": {
          "ref": "219ac099-6925-4928-9bb1-0c86d20f138f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "daad72a9-09f6-468e-8f9c-54983bc59d14"
        },
        "item": {
          "id": "4de09077-2f42-4fb0-b36d-31894c88025e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5bbf3145-4668-4524-aa38-4b23767dfdec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35459c91-ef10-48aa-b86d-ed35da9c90f8",
        "cursor": {
          "ref": "caff07d3-37be-4491-90cd-9fde98b0c059",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d03b0887-c777-4fb4-82af-06ef94f19ce0"
        },
        "item": {
          "id": "35459c91-ef10-48aa-b86d-ed35da9c90f8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "eea489e6-4d01-4c2f-9a94-cbcab89ffc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72a972a-8842-4d74-850d-9eb12abce657",
        "cursor": {
          "ref": "00bf4815-73bc-46b6-9529-a140eb514a44",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a33e568b-8a6c-45c8-be30-04dcda058709"
        },
        "item": {
          "id": "f72a972a-8842-4d74-850d-9eb12abce657",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ccd5942b-920b-4db7-a9fb-29dfb2c72dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5788b602-5aa3-4319-aedd-0da022df2985",
        "cursor": {
          "ref": "31dba5c7-9ada-4248-98f3-b232cf690866",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e68232f4-cf56-4656-89c3-40e9a17937d2"
        },
        "item": {
          "id": "5788b602-5aa3-4319-aedd-0da022df2985",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c5f18646-0e97-48b6-96cf-adb5fae27ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84089a94-84de-4903-9122-d150d02a351c",
        "cursor": {
          "ref": "ff38d81c-6814-43cd-91c9-dcc2c9decf03",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fe797abf-6237-415a-a2f9-e2e7d8b7bc0a"
        },
        "item": {
          "id": "84089a94-84de-4903-9122-d150d02a351c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "63c3dfc1-7110-46f0-bb04-45a014215d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f534d8-480a-4c5b-a65a-4668d543a97b",
        "cursor": {
          "ref": "25c461f1-f759-4fd1-9e46-a8d822f71b6c",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0bfc770d-5c55-4fd9-aa22-4376f8072b8a"
        },
        "item": {
          "id": "39f534d8-480a-4c5b-a65a-4668d543a97b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "919bd18c-5f61-425e-881d-98ef94312f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e4c071-45d5-40b6-b975-58123f89d6c0",
        "cursor": {
          "ref": "4c1848d5-cd5f-46de-a223-0173b29b6180",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0ad0bddd-d549-4b31-b00b-c5f6913f2bfa"
        },
        "item": {
          "id": "97e4c071-45d5-40b6-b975-58123f89d6c0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6b907ae8-8025-4263-abe9-39fb5900687f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab03a5c5-c6fe-4dbc-9ecd-7924fad80190",
        "cursor": {
          "ref": "c8482497-d03f-4966-8778-2e9559fdf202",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c0cf5578-349d-4a8f-8b6d-680999ee9c93"
        },
        "item": {
          "id": "ab03a5c5-c6fe-4dbc-9ecd-7924fad80190",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8307d1a5-ee98-4b4e-849c-5d5edda12914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811227a9-0fcd-4bb9-bab8-ab4d422a1a12",
        "cursor": {
          "ref": "1e433701-fbc7-4acc-9fa8-63a8cbfa20ca",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "aa1fcbe5-0f75-4ef0-b8be-58eddc782cdb"
        },
        "item": {
          "id": "811227a9-0fcd-4bb9-bab8-ab4d422a1a12",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6432eed1-5024-4e28-925e-dba080705154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f26d9f-f7cb-4324-8666-d01f92ffc37a",
        "cursor": {
          "ref": "99d7c333-d36a-486c-ad53-deb8c9c21d5a",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "acd09ad3-be98-430d-94b2-15b21af320e5"
        },
        "item": {
          "id": "b8f26d9f-f7cb-4324-8666-d01f92ffc37a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5538ba19-5509-4b08-b066-fc305d9f3b95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711de8a9-a434-4d11-ab06-a2fa227eb797",
        "cursor": {
          "ref": "023491cd-f86a-4274-80cd-4f4d6a0af448",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f6b0664d-a10e-424b-be5f-b0bc2e72ef8c"
        },
        "item": {
          "id": "711de8a9-a434-4d11-ab06-a2fa227eb797",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fc3d0fc2-440d-4859-811f-0d590726ec7b",
          "status": "Created",
          "code": 201,
          "responseTime": 6788,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ead93d8-0ead-4905-8a76-771915941153",
        "cursor": {
          "ref": "7a981da8-968c-4b89-9165-d53333431236",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d1a2410a-89e9-43af-bc49-1957e861c9e3"
        },
        "item": {
          "id": "6ead93d8-0ead-4905-8a76-771915941153",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7364a7a1-95f9-4ad6-9308-8db49513e52d",
          "status": "Created",
          "code": 201,
          "responseTime": 6382,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4bc99e-80b1-4026-b237-6ff7009f4208",
        "cursor": {
          "ref": "1ba5f2d5-da5b-4fbf-9c06-6fa3f8e4b030",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6b4b381f-70a9-4d58-87fe-fa813b4a2539"
        },
        "item": {
          "id": "db4bc99e-80b1-4026-b237-6ff7009f4208",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "067e02eb-d647-41fa-a2c2-5f14818fe5cb",
          "status": "Created",
          "code": 201,
          "responseTime": 6447,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "574f1412-dfdb-4f8b-ac31-6b6b0ebb2302",
        "cursor": {
          "ref": "da2e777a-b803-4864-ae52-7afd39c18ca8",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "adf0d933-8782-4f79-bd96-d70e4f562e65"
        },
        "item": {
          "id": "574f1412-dfdb-4f8b-ac31-6b6b0ebb2302",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "19c5fc9e-1bb3-438b-84dc-e6ef8bc6948e",
          "status": "Created",
          "code": 201,
          "responseTime": 6078,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29f33b0-88ec-44ab-9beb-291a7aa4f093",
        "cursor": {
          "ref": "f15ec0a8-f707-4440-97c9-1b0099843387",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "37d7c81f-6058-4cdb-a69a-bab461f10af6"
        },
        "item": {
          "id": "f29f33b0-88ec-44ab-9beb-291a7aa4f093",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ccfbaff8-c4a0-42e3-9110-ff420e009bce",
          "status": "Created",
          "code": 201,
          "responseTime": 6388,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "11576954-cb91-43a2-9a4f-4f407160cb2f",
        "cursor": {
          "ref": "1567ea60-1b90-4853-9192-6dc29ee42cb6",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a8bc1e92-6480-42c9-89c2-aba997eeb6f9"
        },
        "item": {
          "id": "11576954-cb91-43a2-9a4f-4f407160cb2f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6794c69c-0c98-4485-9532-95a19d0e70d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "8e848db1-e92e-4f6c-8e58-c48f3de54797",
        "cursor": {
          "ref": "1b7501c5-2aa4-414e-b62c-932840ee9112",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "53086b94-24e3-4557-b3e8-408caa6234aa"
        },
        "item": {
          "id": "8e848db1-e92e-4f6c-8e58-c48f3de54797",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e512f3ae-913c-4fc5-9c59-d09a3d82d842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3882ae45-e31d-4b1d-a5ac-bf3ac5570da6",
        "cursor": {
          "ref": "b567c685-10b4-4918-b24f-22d4319d4a6e",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "29cc1274-28da-46fd-9935-0050b0555182"
        },
        "item": {
          "id": "3882ae45-e31d-4b1d-a5ac-bf3ac5570da6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3d3afe5f-a6f3-4c22-8e05-f5136269d8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74418159-3ab5-49b8-8372-de00855ec6a9",
        "cursor": {
          "ref": "38597dda-fd90-4a89-9d29-83ec7b170885",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a5e9788a-2154-49b8-b46d-c37823833d84"
        },
        "item": {
          "id": "74418159-3ab5-49b8-8372-de00855ec6a9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "65992455-a69a-4b51-906e-1383ac13e218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06aa700-615f-48a0-8d40-11051e67fb48",
        "cursor": {
          "ref": "6ecdad70-ad15-47b7-b5e2-814ec08f7302",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "112c61eb-c8c0-4b8b-a093-dfb460ad3529"
        },
        "item": {
          "id": "c06aa700-615f-48a0-8d40-11051e67fb48",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "57d07815-9701-406c-a368-cf3a4b2507eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe748d09-bc30-46c5-a5eb-4781a4f4794d",
        "cursor": {
          "ref": "bf895c3f-c92b-426a-b1fb-40b6aa7d0526",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "833e5fe5-0db3-4a53-a9fc-274952a61954"
        },
        "item": {
          "id": "fe748d09-bc30-46c5-a5eb-4781a4f4794d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "36dbc553-806c-4b01-b598-17b00e5538e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355b0833-da9d-4fd5-8cae-92a86f43738b",
        "cursor": {
          "ref": "10330abc-15c1-4a76-a735-98098cc232ef",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a4aa43e7-62c3-491d-825b-28ec63f0d31f"
        },
        "item": {
          "id": "355b0833-da9d-4fd5-8cae-92a86f43738b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5f35e92d-078d-4b51-a041-39f5a7583565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff06f5b-a152-4814-a33a-6558fef284eb",
        "cursor": {
          "ref": "5f4551c0-cfe8-4278-9552-950839d14f36",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f3cdf1b8-4b87-49e3-999e-220c8782b446"
        },
        "item": {
          "id": "3ff06f5b-a152-4814-a33a-6558fef284eb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9d10c77c-55b3-486b-894c-f93d784ecb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdfbc2a-908f-46cb-8bdb-6e7e8bba767c",
        "cursor": {
          "ref": "8113ee3e-ba7c-44c9-b776-a51cbf3fc859",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4e8f91c2-6b58-4349-b336-21a8165c6f52"
        },
        "item": {
          "id": "3bdfbc2a-908f-46cb-8bdb-6e7e8bba767c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "836f3b8a-b115-493d-8cfb-541b4f06814b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47508f97-f1b2-4fa4-b3cd-cc502b4a3e9a",
        "cursor": {
          "ref": "642d92ff-e441-49ab-83d6-5edd9a9469c4",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "958c2b60-a785-4093-bc1c-2a33f527f37b"
        },
        "item": {
          "id": "47508f97-f1b2-4fa4-b3cd-cc502b4a3e9a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "66044bd9-01a8-4657-b306-5bc387bb577d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd30422c-388d-4707-8096-94512ca29cbf",
        "cursor": {
          "ref": "e6c633cf-5483-42d4-bbe3-ad380b1f6366",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d5768869-61ec-4e3d-a1f7-25edb2dc33e6"
        },
        "item": {
          "id": "cd30422c-388d-4707-8096-94512ca29cbf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "26b75959-7da0-4a0a-aabe-e6cba4c6c0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01fb0b9-f31d-4a34-b3f9-d52c674527d7",
        "cursor": {
          "ref": "5671f42f-8529-4516-816c-3a0a91ba59a6",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "599650d0-9ee8-4e78-a5ad-3da9f333204a"
        },
        "item": {
          "id": "b01fb0b9-f31d-4a34-b3f9-d52c674527d7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1ffdbd9e-d80a-400c-b8ad-7cc95cdb50e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32740ce8-21d9-47dd-a57e-e7a990473160",
        "cursor": {
          "ref": "c6def8fc-ce6f-4da3-8641-42b70856da59",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f33f3ca1-b672-4c40-93a3-b4b18e6901a7"
        },
        "item": {
          "id": "32740ce8-21d9-47dd-a57e-e7a990473160",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bf1f1816-3db0-4b99-b84b-27838d2cc6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff1156a-b29b-4e02-87f5-a2bbd7a3b660",
        "cursor": {
          "ref": "9542b2e5-053a-4dcb-944f-51494541cf76",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7164b3b9-a80c-42ab-9629-affdb8cafad3"
        },
        "item": {
          "id": "2ff1156a-b29b-4e02-87f5-a2bbd7a3b660",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2155f173-4d44-46bf-8a78-b8db13b46ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ababe63e-9b18-4587-b7c1-104a5c7b9442",
        "cursor": {
          "ref": "39b0edc7-4bcd-45e5-bd4f-5847a8f13da3",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "31b63270-c3a9-4d51-809b-fe8462914656"
        },
        "item": {
          "id": "ababe63e-9b18-4587-b7c1-104a5c7b9442",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2b615f9f-fa81-4084-9bf7-b588cbd23177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e0ffcb-625d-4a20-ad35-fd4c0d92a65a",
        "cursor": {
          "ref": "0c28b6ce-ae4b-4553-93f6-402340679e4e",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1536481b-67e9-4690-847f-41daec85ceec"
        },
        "item": {
          "id": "31e0ffcb-625d-4a20-ad35-fd4c0d92a65a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "37b5d59c-e76f-4782-802c-4f5dcaea44c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c435cc9e-cf5d-4fb7-b261-d26dc97cc3b5",
        "cursor": {
          "ref": "3daacb93-1042-453c-948f-c0fa7a4bb7a6",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "81471627-bd96-4ddf-a158-806be84bb4b5"
        },
        "item": {
          "id": "c435cc9e-cf5d-4fb7-b261-d26dc97cc3b5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "135d917f-805d-48f6-b841-f328cd76bea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc02aab3-486f-4cbf-932d-0578ec4e6b29",
        "cursor": {
          "ref": "9bcd38c3-40f5-41ba-b0a0-85aac0b2c364",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c42f894b-d138-41b7-a7e1-d5c5f9822973"
        },
        "item": {
          "id": "bc02aab3-486f-4cbf-932d-0578ec4e6b29",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f740a202-f065-4cfa-b306-40371826e9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a740b47e-b156-442d-9945-54745f52dd2b",
        "cursor": {
          "ref": "25bcc354-7b23-4ad0-868d-7311a2444b71",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2eddc35c-5782-4951-9526-cc16bab6fd98"
        },
        "item": {
          "id": "a740b47e-b156-442d-9945-54745f52dd2b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3e79a5d9-7001-4dbb-b4b8-5872cdd78112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9061de-3632-4b56-8ca6-f862d7a83547",
        "cursor": {
          "ref": "a5d6fb07-2a69-401f-ad62-eab18ce690f5",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "064f3478-8794-4c2d-bb70-35d8bf181778"
        },
        "item": {
          "id": "dc9061de-3632-4b56-8ca6-f862d7a83547",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "74c8f357-3771-4a7b-8ad7-618d48e1219c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b7088e-f6d5-4741-a908-61868911c5a1",
        "cursor": {
          "ref": "7f92b497-66ec-4a32-99d9-cb156c36bf2c",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7b5c9745-e24d-4dde-a153-d2d069410b30"
        },
        "item": {
          "id": "00b7088e-f6d5-4741-a908-61868911c5a1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e4b322ef-1cd3-4de4-a9c9-17fb1fc9c142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd5ae77-f3d9-4f15-b644-dc28496a818f",
        "cursor": {
          "ref": "36126296-4971-449c-9ae8-b73622e08f5e",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c6851a02-f307-43d8-b448-036c4827e453"
        },
        "item": {
          "id": "7bd5ae77-f3d9-4f15-b644-dc28496a818f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "42b51739-729b-4a67-a504-3b30c5006d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3115fd-25e4-45a0-b995-930263b8e03b",
        "cursor": {
          "ref": "267218d0-353a-4d7c-9ed7-f4df2201bf48",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f2389565-d4ca-422b-997c-9e446ee2147d"
        },
        "item": {
          "id": "6f3115fd-25e4-45a0-b995-930263b8e03b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f53ab850-fe4b-4a23-b62a-ead9e9dcf1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e1ffb7-b7cc-4e1b-a3cb-1e94de331c6c",
        "cursor": {
          "ref": "38708a6a-8fad-4329-b65f-efbc0bdfc2c2",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "caff71d0-c711-47f5-a6fe-3d82d3c8d846"
        },
        "item": {
          "id": "f6e1ffb7-b7cc-4e1b-a3cb-1e94de331c6c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9e42f390-01d0-4c6e-98b3-04fce6ee0a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18590a6-abd8-4868-9f2b-14456ae6e962",
        "cursor": {
          "ref": "a19f3b22-cd28-4f63-ab03-a18b765ced66",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6bd3132e-efd5-48a2-88bc-b932db9c2bde"
        },
        "item": {
          "id": "f18590a6-abd8-4868-9f2b-14456ae6e962",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2b082130-05f9-4d0b-9b91-469350ac993c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3276f15-2d6b-42bf-a72c-38fa500852b8",
        "cursor": {
          "ref": "36233405-0062-4074-8983-61b03368c14e",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a0cc093e-6e59-46e0-bb76-4d75e77d1016"
        },
        "item": {
          "id": "b3276f15-2d6b-42bf-a72c-38fa500852b8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "55c178d1-4a8b-4d60-9e08-ea87b4d2ce99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4058e4fb-ba50-47bf-8bdd-3fb39b037ded",
        "cursor": {
          "ref": "2deb8d72-be46-49e8-a92d-2fb7879355ea",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "73fbcee7-90bc-4c05-9586-00886f2d1c4c"
        },
        "item": {
          "id": "4058e4fb-ba50-47bf-8bdd-3fb39b037ded",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "486ce23a-e431-40e5-ac9d-dce2b5dedc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c239ad-f760-47bb-9d72-9e4f515092b6",
        "cursor": {
          "ref": "7f5ebeb8-2669-4f87-b640-c7146bdd0ee0",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "13307ba5-343e-4fde-960c-6dcaabf9135f"
        },
        "item": {
          "id": "78c239ad-f760-47bb-9d72-9e4f515092b6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cfc60262-bdc7-4206-8b15-1d5ed45c0d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c439e539-73f4-4144-a33c-39c5476cec42",
        "cursor": {
          "ref": "46b03f61-9b28-4d61-bb15-4dc26b17f8f0",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "515a3f48-c751-4261-97ce-9a719bcb2765"
        },
        "item": {
          "id": "c439e539-73f4-4144-a33c-39c5476cec42",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4296fa07-4f91-4a88-874f-e09b43575880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65636d37-4245-4883-ac9b-40e1ca3a9211",
        "cursor": {
          "ref": "0c0234ca-4ff2-4e1d-973c-078eddfa8a4e",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7f2fd6ac-a924-438e-9c6f-0405beab200e"
        },
        "item": {
          "id": "65636d37-4245-4883-ac9b-40e1ca3a9211",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3a500b2e-9330-4851-84c1-324b84ef0b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef202c2b-e6e4-480d-b540-a98cca9a307f",
        "cursor": {
          "ref": "b8188006-5a2c-4c39-a250-43024381a5cb",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9dc4b4c0-022d-42a7-9c7a-7cedff9d2ca2"
        },
        "item": {
          "id": "ef202c2b-e6e4-480d-b540-a98cca9a307f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "04e03bd4-4e24-4586-8393-a94ffe7bfeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b717f53-9905-46ab-9472-4196f0ef7dd3",
        "cursor": {
          "ref": "9d8300d1-6dd9-44c6-811d-29df5429864f",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "40f9c423-0474-4b37-9b85-a24e903bb558"
        },
        "item": {
          "id": "9b717f53-9905-46ab-9472-4196f0ef7dd3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "10b8c1e9-7686-4af2-94f3-b093470892be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba99a4b-3953-4494-b1d7-3a2cf8e92697",
        "cursor": {
          "ref": "ab97f1a8-40c9-48ef-9720-5b5662139db8",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "23129a47-8360-4d54-aaa7-f13069ddd53d"
        },
        "item": {
          "id": "fba99a4b-3953-4494-b1d7-3a2cf8e92697",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a460417f-29b9-471e-a713-74cf2e08b696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540cdfe6-dd15-4b3a-a060-4fc8ee0101c2",
        "cursor": {
          "ref": "922b8e18-088b-498e-895d-009243dc8096",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "616cbb2a-f1a7-42db-9194-fc079f8ad26f"
        },
        "item": {
          "id": "540cdfe6-dd15-4b3a-a060-4fc8ee0101c2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "43853615-d538-4a8f-b1ae-9b8eaa7b53d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc09f6e-2485-4ef1-9e12-b3dbf2911fac",
        "cursor": {
          "ref": "8540726d-cb69-4a55-a962-376219694693",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0e7025c2-c794-47ac-a34f-a88e04fe1602"
        },
        "item": {
          "id": "bbc09f6e-2485-4ef1-9e12-b3dbf2911fac",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "30a4ba43-7546-4c3c-8608-abc060a427fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2fd131-2839-4dd9-9ef8-0a44f998e45f",
        "cursor": {
          "ref": "6708470a-4402-4c5a-b7b1-bc313f640db4",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8208d918-05d1-4841-8100-5b190c8552bb"
        },
        "item": {
          "id": "7d2fd131-2839-4dd9-9ef8-0a44f998e45f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f0d36c26-ede7-4979-b50c-06b27244e749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43441a02-c713-4947-a88c-feab3e44858a",
        "cursor": {
          "ref": "994db12f-7547-43d1-9696-d4967c84c331",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ddff021b-879e-4a29-9ebf-4ee26b9ad825"
        },
        "item": {
          "id": "43441a02-c713-4947-a88c-feab3e44858a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d407ddcf-4726-4238-b883-908452c84a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93422b50-e760-49d2-bddc-47f21fa3aece",
        "cursor": {
          "ref": "575d34f4-9ad4-44ad-9bc7-16683829569a",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "81491a15-f5cf-4c6f-9fc8-11f4c517eb7b"
        },
        "item": {
          "id": "93422b50-e760-49d2-bddc-47f21fa3aece",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "528cb90c-0f6c-4a4d-b72e-d60f3494baa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8204e27-c540-4009-9e96-edbbd1d8800c",
        "cursor": {
          "ref": "bd17a7c3-889a-44f0-8ce8-583ddf4df98d",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "530cbbc2-47b6-4a88-82d5-d67c5080468e"
        },
        "item": {
          "id": "d8204e27-c540-4009-9e96-edbbd1d8800c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6b189481-cab9-4542-80c1-e0deff8a41c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf654f9-0245-44c3-a59e-5fc1cdd9403a",
        "cursor": {
          "ref": "7c1038ee-7ae8-403f-9149-84e0397c4a7a",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4640ac3c-8141-447b-a38d-50982b810440"
        },
        "item": {
          "id": "2cf654f9-0245-44c3-a59e-5fc1cdd9403a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cd33e27d-8085-4410-8530-91f3658b9091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6252eed-9b24-4127-849e-dec2c595f4fa",
        "cursor": {
          "ref": "6d7699ac-7356-46b4-82f1-30351b5c1695",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "265ddd99-02c8-434e-843e-25dbc63a9ee5"
        },
        "item": {
          "id": "f6252eed-9b24-4127-849e-dec2c595f4fa",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2e8c68c7-6f6c-4f5a-a181-7a100d7bb199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d49005-5f9b-4175-81bb-67054952bb6e",
        "cursor": {
          "ref": "b7cee974-806a-48f3-bbbe-3fb819453317",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "98fa2182-8daf-4604-bb2f-5eaabd0dd6f3"
        },
        "item": {
          "id": "70d49005-5f9b-4175-81bb-67054952bb6e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2f44fbbc-a00a-46a8-a76b-41aea47c49fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3abe85-b060-4559-b003-98de67e51cc5",
        "cursor": {
          "ref": "dc99320d-c0eb-4acb-8f95-b9784e8a8d53",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b911efee-b263-46a7-8d4a-59fd2def1225"
        },
        "item": {
          "id": "ee3abe85-b060-4559-b003-98de67e51cc5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "89e6466b-da34-46aa-938f-82c39b8d1b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc352a1d-a550-4cc4-9e61-166927e70567",
        "cursor": {
          "ref": "b03b4d2e-3492-444c-aa94-ab3427e8e3b0",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "96faa2a4-b2b3-4531-8086-3ffd11bb52cc"
        },
        "item": {
          "id": "cc352a1d-a550-4cc4-9e61-166927e70567",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "de9cb70e-f780-4c65-a7da-aac299a9e6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b304ae-ca36-438b-88a9-fc45d18c5608",
        "cursor": {
          "ref": "e940ca13-5377-4c2f-a798-9b07f5941107",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b45ec5d4-2bbf-4726-b6e7-773b8ba6a6a5"
        },
        "item": {
          "id": "77b304ae-ca36-438b-88a9-fc45d18c5608",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d07d0ff9-c316-4f06-81f1-7dedf0b3fb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b77cf9a-abdf-4434-803b-aaa2d0f40c5a",
        "cursor": {
          "ref": "0376bd6f-036e-46c7-854b-89a51b4331f3",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "507267d6-68be-46d6-91f2-3af1ca2bbf0c"
        },
        "item": {
          "id": "5b77cf9a-abdf-4434-803b-aaa2d0f40c5a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8c8a86e3-9b90-4458-a661-526e9e133a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9183a05-58cb-4bf3-9c98-6be5d56a3d6b",
        "cursor": {
          "ref": "da18bc41-0deb-4840-acaa-a73eeb5385bc",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0175ed91-5a31-41a8-abe5-ed83d253185d"
        },
        "item": {
          "id": "c9183a05-58cb-4bf3-9c98-6be5d56a3d6b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0460b295-f0b4-4bd0-a582-2390d72a05c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455469e0-a154-4c41-b831-685c5bc4379a",
        "cursor": {
          "ref": "f75a831d-84ef-4a87-abe3-59702e63f364",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "997b0095-426b-4ddd-bebc-5b7e5f2ee77b"
        },
        "item": {
          "id": "455469e0-a154-4c41-b831-685c5bc4379a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "77755a3c-954b-4624-b133-78342365f053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9905ff4e-6d70-4328-812c-2ddb265eaf78",
        "cursor": {
          "ref": "0c043e98-946e-49a6-a9bb-9bc3ac04c34c",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dc41a44e-6228-4961-9ec1-5c17d187a1e8"
        },
        "item": {
          "id": "9905ff4e-6d70-4328-812c-2ddb265eaf78",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4d111122-99d5-4639-ae9a-41b36e3aedc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acdef44-a7dd-4e24-a254-2c58cf30b234",
        "cursor": {
          "ref": "f07ea22f-759a-40d3-8214-78fb1a73c7c0",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e1d8520e-fdec-4f0c-b052-f958676f0767"
        },
        "item": {
          "id": "8acdef44-a7dd-4e24-a254-2c58cf30b234",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a807aa5c-d982-4b22-bbd9-c853e034c92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ea814b-d4cf-46f6-b9bf-80ccc758af9b",
        "cursor": {
          "ref": "6ebf50e1-a975-42c0-a112-22ac564b568c",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3771463d-65f7-4149-8e9f-7dd7ce6036ce"
        },
        "item": {
          "id": "54ea814b-d4cf-46f6-b9bf-80ccc758af9b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "923458a5-a132-428e-93d1-a1585b09475e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e5fd40-1f4d-48bb-a76d-60748f31cd8c",
        "cursor": {
          "ref": "a2b704eb-456a-49a3-8ed0-338f82e9d4fa",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "76cfcbdf-f04f-4cf6-94d2-ae8acebf9c8a"
        },
        "item": {
          "id": "c9e5fd40-1f4d-48bb-a76d-60748f31cd8c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "235b71e0-8c66-4d9b-847d-de953c535a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c5b598-5674-4657-bcec-8835a2cdacd5",
        "cursor": {
          "ref": "c3a985b4-7d04-48ba-a64d-4f6a33113cc4",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "da2d7524-6b0b-4f32-bb98-82571fa4413f"
        },
        "item": {
          "id": "85c5b598-5674-4657-bcec-8835a2cdacd5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cb746675-468e-4302-86bd-1189ecac1eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd07fbb-2d1e-49b9-a751-8a7cd75ea39d",
        "cursor": {
          "ref": "a7db76c2-0610-4ba2-88e3-d511eed22a0c",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9eaaa6dc-4014-4ec5-b5b4-1de91cc6af50"
        },
        "item": {
          "id": "9cd07fbb-2d1e-49b9-a751-8a7cd75ea39d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "82f89efe-a05e-43f8-bcea-b6eea586b6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e638fe67-b161-48ad-bee7-2dea261bd4ac",
        "cursor": {
          "ref": "3ddf3fbe-b8f0-4185-9d20-12ae7b641cce",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9baa6182-5351-45cd-a8c5-abc9bb821d96"
        },
        "item": {
          "id": "e638fe67-b161-48ad-bee7-2dea261bd4ac",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f0fbf813-8322-462d-82b6-beca1c538c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb025c1-de77-4d11-ba22-78fe684e6fc2",
        "cursor": {
          "ref": "d03569a7-ab26-4320-b751-ef8b7e487e26",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9210b3b6-556f-4f68-b193-ec5c33463e60"
        },
        "item": {
          "id": "0cb025c1-de77-4d11-ba22-78fe684e6fc2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c51795ba-1331-43b4-a534-ee8b43292b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e2ca46-97c2-4ae3-b609-9a025b957365",
        "cursor": {
          "ref": "d3a4df0a-0c40-4689-8dcd-6dcef5908b7f",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "378d4896-f223-45cd-bc7f-a511a3a95fe3"
        },
        "item": {
          "id": "f8e2ca46-97c2-4ae3-b609-9a025b957365",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "32b04d0f-d837-45c9-8017-b58ed492d816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21dadae-9632-404c-a7ba-edd7125858f1",
        "cursor": {
          "ref": "b980c6e7-ab03-47c6-a928-35acc8d5f4bc",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "faf7f321-2893-430f-a49c-4786dfdf5a10"
        },
        "item": {
          "id": "f21dadae-9632-404c-a7ba-edd7125858f1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fcac4c65-29af-441c-a616-a82bcb7ab1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8649ed62-8096-44b7-92e7-e4f66fdab220",
        "cursor": {
          "ref": "a9249eb0-0bb7-4afc-b69e-5addfb67b92a",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "31a9af38-eb27-4654-9d17-b51ca8c0c8e0"
        },
        "item": {
          "id": "8649ed62-8096-44b7-92e7-e4f66fdab220",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e126ac5b-fc82-4d3c-aa12-0e66d531cc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413dbd74-671d-48a3-b264-d9e766091b01",
        "cursor": {
          "ref": "31ff7aed-f7a7-4308-9fc9-a51139404468",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "59b550c1-6bc8-4a8c-a5a3-38affb44049e"
        },
        "item": {
          "id": "413dbd74-671d-48a3-b264-d9e766091b01",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bbc36d6d-3c39-450c-9113-3c40f938b9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8725c984-ab73-4ffa-8699-182dfb7a24d7",
        "cursor": {
          "ref": "ddd373f8-efc4-46dc-b6bf-3965b3e22825",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7669731e-44e1-43dc-ba3a-1772a5752c09"
        },
        "item": {
          "id": "8725c984-ab73-4ffa-8699-182dfb7a24d7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e7e17c10-94b0-40f4-9e90-fbe4f7d10144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8253c6f2-3b44-4b44-a9b4-09a8c1a0ba49",
        "cursor": {
          "ref": "60ca5e4a-4135-4be8-9285-022ae8a94f8e",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "88f04327-ff59-4b71-a384-601587c981f4"
        },
        "item": {
          "id": "8253c6f2-3b44-4b44-a9b4-09a8c1a0ba49",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8bc70420-a1ef-4ab0-ba0d-e739a1183bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112d4843-b85d-44ab-a530-3829955bd0bd",
        "cursor": {
          "ref": "3a6acd60-34c7-40aa-a158-bdb521b3059a",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "04784a87-3991-458a-b49c-c92b1dd09bea"
        },
        "item": {
          "id": "112d4843-b85d-44ab-a530-3829955bd0bd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "aa6395af-04df-4552-b3b6-872fe4bd6e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89afb4b-210b-443b-bb53-e759c44b99a6",
        "cursor": {
          "ref": "43a0d1b6-662f-420e-8c87-744070ea12a7",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "32f28a19-aa7c-49fd-8fcd-2fe540bc9f12"
        },
        "item": {
          "id": "d89afb4b-210b-443b-bb53-e759c44b99a6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bf42144c-5c03-46b4-9864-c8da4e2cd425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441f42a0-98e0-4fbb-a26a-82fff98088cf",
        "cursor": {
          "ref": "3b1be064-26a0-4d43-aeb4-975332582145",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "25e42dac-f13f-46e8-9c2b-8c6d0e65b7c5"
        },
        "item": {
          "id": "441f42a0-98e0-4fbb-a26a-82fff98088cf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ac8ba3b2-b36f-4d5e-ab15-14979e6c76af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33cceb3-7885-4e86-af83-2c9223bab5a7",
        "cursor": {
          "ref": "4c347e45-b481-4d44-b539-d12485dee743",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "580b08f2-029e-414a-9975-fc05c83a9e66"
        },
        "item": {
          "id": "f33cceb3-7885-4e86-af83-2c9223bab5a7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3a6aaed9-3321-45b4-a3d1-44c7045c9c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a068d2-bf89-4a47-806b-7123d8adbd89",
        "cursor": {
          "ref": "857a7347-dd31-4353-bc19-d69d776aa174",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b2590a51-03df-4b9e-965c-51cc93113ff2"
        },
        "item": {
          "id": "e5a068d2-bf89-4a47-806b-7123d8adbd89",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fa0d84b9-0b3c-430d-ae3b-7edafa4947b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489b1f91-11f3-4551-b73e-f82ca9f02c6d",
        "cursor": {
          "ref": "cc495c8a-77ea-45b8-9471-b3c5a7bdcc46",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "903fe428-7614-4135-801f-da551a492744"
        },
        "item": {
          "id": "489b1f91-11f3-4551-b73e-f82ca9f02c6d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8626ca3a-e3b2-4e70-a5e2-26d13c5c4878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d184c0-6634-4c97-81e6-e58ffeff51fd",
        "cursor": {
          "ref": "efd4219c-cc5e-4c42-85d4-64236001de79",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ebee69da-5b96-4821-a38c-1d6684900cdf"
        },
        "item": {
          "id": "27d184c0-6634-4c97-81e6-e58ffeff51fd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9926d314-5313-413d-99a5-2f162122c68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8d4326-cdee-4247-9c5f-e5c258cd618b",
        "cursor": {
          "ref": "56aeb1c2-f2bc-4a22-b3f3-48b2f35bd9c8",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a0619665-5307-49f5-823a-9bbf03e49516"
        },
        "item": {
          "id": "be8d4326-cdee-4247-9c5f-e5c258cd618b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ca379183-58d1-41c4-b976-88e73bdc5ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a38a14b-f1f7-4603-8fd2-623417c7261c",
        "cursor": {
          "ref": "dd1b48be-5c93-4140-9e60-a792db54ecdd",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b0daef5c-e961-4ae9-ae78-b0b05c77b961"
        },
        "item": {
          "id": "8a38a14b-f1f7-4603-8fd2-623417c7261c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4084cb49-819a-4e96-aece-8e20d587ce63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f3fe87-06b2-410c-9f09-35766bb173a0",
        "cursor": {
          "ref": "8dd4d778-9c55-40d3-9191-011b432ac0ef",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d06d9bf7-2161-40c8-b52c-6e731d767674"
        },
        "item": {
          "id": "40f3fe87-06b2-410c-9f09-35766bb173a0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "00f3c396-b245-4b20-a479-99a82d92daf7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a913256-c38b-48ab-8e84-69f80c81c704",
        "cursor": {
          "ref": "f80ab2c4-d6fd-4c63-8c97-9b9c952d38b7",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b9d22379-a41f-4d5b-9329-7dac1c6adab5"
        },
        "item": {
          "id": "6a913256-c38b-48ab-8e84-69f80c81c704",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "38c24305-305f-4225-ba76-53bc9e9252ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915df006-686b-4a13-8807-40a92d97b597",
        "cursor": {
          "ref": "ffbc47f2-876b-4b4a-8b25-331f98d42cfe",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8ba6a2df-0c8f-4243-9f63-7856261d4e31"
        },
        "item": {
          "id": "915df006-686b-4a13-8807-40a92d97b597",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "31737e70-32dd-439f-ad32-18ca469ef543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d70cb78-9c08-4467-8312-4a5c94feaad3",
        "cursor": {
          "ref": "c2515e61-611e-4af1-89e9-b2d9d22c28d2",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6cb8c30b-7f9b-49af-b0fe-194d6b9873f2"
        },
        "item": {
          "id": "0d70cb78-9c08-4467-8312-4a5c94feaad3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d6a0f1a0-ba7d-404e-a63a-86c168bfda4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146f7cf0-b9a6-4263-9482-9d6841934dee",
        "cursor": {
          "ref": "aac79e30-622a-424f-a582-dd3ba4cb1e2e",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "90a01276-f9f1-4f41-9ef0-18502e25ccd5"
        },
        "item": {
          "id": "146f7cf0-b9a6-4263-9482-9d6841934dee",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8814e605-6c9c-4f9d-a4c8-cfede2d3e10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f29e40-df38-4b4a-9472-a408744f3eb2",
        "cursor": {
          "ref": "cfa072ac-f4ff-4851-9387-332c07b21dff",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "71fa605e-3bc4-41fc-8789-038fc2fb0c81"
        },
        "item": {
          "id": "27f29e40-df38-4b4a-9472-a408744f3eb2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "26eae3f5-70e8-42ef-aa62-f6589c7cd368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4010cc17-f6c8-46a1-8dd7-8129b701d8a8",
        "cursor": {
          "ref": "1b96d85e-b34d-493f-9c89-2adacb58523d",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "071d1e87-f7e4-47a6-b45c-e460856eb1a6"
        },
        "item": {
          "id": "4010cc17-f6c8-46a1-8dd7-8129b701d8a8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c40e29d0-b6fe-436f-9166-1c85eace0565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b32c2e1-9dd1-4e0e-93ac-b2e4465252e3",
        "cursor": {
          "ref": "fd3fb1a7-f3de-43fa-ba30-749c19c6e227",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "aec5f225-9d9a-4775-b70b-76774bfd7773"
        },
        "item": {
          "id": "8b32c2e1-9dd1-4e0e-93ac-b2e4465252e3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2516da82-5108-4676-bc1f-a316ead84025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8522b8-73e7-4877-a714-ba5a030e3b2d",
        "cursor": {
          "ref": "2cf96564-5d6e-4beb-a1db-c9bfabde1234",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7cf6610e-9490-4e66-9489-5970341127b4"
        },
        "item": {
          "id": "df8522b8-73e7-4877-a714-ba5a030e3b2d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3f18d237-4e7e-4274-b2ca-88eebff56953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6a7a4f-2fcd-4f13-a185-6ad9dd69227c",
        "cursor": {
          "ref": "3787365f-064d-4f8e-9c1d-a187643901f3",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4758976a-36f8-4120-94d3-c478bb63bf38"
        },
        "item": {
          "id": "1d6a7a4f-2fcd-4f13-a185-6ad9dd69227c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4c2d2281-7f2a-4642-a8dc-10189c324dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26fd433-369d-41cf-8d7f-95a8e6490b6e",
        "cursor": {
          "ref": "02d6e897-e0ee-4ebb-8e54-393895e5b34a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "915238cb-552b-46a6-a22e-c5d0792edc88"
        },
        "item": {
          "id": "a26fd433-369d-41cf-8d7f-95a8e6490b6e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f4d51e3a-1c08-4917-9314-e225f07c32bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0a33d9-47ea-4be7-b79a-cded659bb70e",
        "cursor": {
          "ref": "177e46ea-8508-4a29-8824-e8651b9874ec",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "21799c38-d387-45ed-b418-2b61b194bde5"
        },
        "item": {
          "id": "dd0a33d9-47ea-4be7-b79a-cded659bb70e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "57948dde-d209-484f-b7d5-57c70ff3cc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1037f8-d126-4e30-8b17-70d1d06dfc9e",
        "cursor": {
          "ref": "cd66bd42-025b-42dc-a8ac-6837ffb41566",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cfafaefe-b9f3-4df6-af47-a7a2802800cf"
        },
        "item": {
          "id": "2f1037f8-d126-4e30-8b17-70d1d06dfc9e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f85bb365-9536-4bd7-b552-05f6d3c2319e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87fcb4c-9b8a-4020-b35e-9f03c5f2414c",
        "cursor": {
          "ref": "d5578c9c-c9af-4271-8b51-2701ac7b45d5",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "87630df4-e93e-4342-9a20-5bf3978721f6"
        },
        "item": {
          "id": "a87fcb4c-9b8a-4020-b35e-9f03c5f2414c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bf911b6b-65a8-434b-9b4b-0ab691350223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bbb411-e094-483c-867e-24c6eefd9e71",
        "cursor": {
          "ref": "6ce7e684-a363-40b3-a5c5-ede17d040730",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "71d398a3-f19b-4ec3-ad86-15f368dec15d"
        },
        "item": {
          "id": "28bbb411-e094-483c-867e-24c6eefd9e71",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6e4cbfe8-0d0a-4d43-a487-fcb2f406ee2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933e5652-b110-41e2-be54-96691a5c66d2",
        "cursor": {
          "ref": "197d5019-0836-4531-934b-054e44d88f2c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "193c0183-c38a-4f86-a6f6-10d80a67a62b"
        },
        "item": {
          "id": "933e5652-b110-41e2-be54-96691a5c66d2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b9c25125-ec59-4daf-bad8-e247d6aa3368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cce3ffc-5099-4281-95cd-c498c721145d",
        "cursor": {
          "ref": "6fbe749b-cc5d-43c2-bb69-e367bcc0dc9d",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "37ad8734-70c6-4619-be99-629564133da2"
        },
        "item": {
          "id": "9cce3ffc-5099-4281-95cd-c498c721145d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4b6526c0-b97d-456f-9d5f-13d1c915c198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4c80b7-9592-4880-aca7-7cc6c93700ff",
        "cursor": {
          "ref": "560c7576-ecdb-4b13-bbd0-f5789343121e",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9a74ffc4-06f8-4b6a-92b1-e6b54c0e47e6"
        },
        "item": {
          "id": "ce4c80b7-9592-4880-aca7-7cc6c93700ff",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5d865afa-3c22-48ed-a50f-d7645bd97f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be2c563-cf0b-4014-a988-1a4883c634fc",
        "cursor": {
          "ref": "de1e2725-cfe5-4000-a5cb-c2de64ba7610",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8beae5fa-540b-4cc5-95fa-e6269cd3d479"
        },
        "item": {
          "id": "3be2c563-cf0b-4014-a988-1a4883c634fc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c6e3f9b0-a74b-4eee-8251-db666f2e913f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb4b786-3efd-40de-8c2d-fc4b96f890b0",
        "cursor": {
          "ref": "418726d8-3efc-4b6d-893b-219d49924e0d",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d8b32618-d5e6-4b49-852b-adab31783990"
        },
        "item": {
          "id": "4eb4b786-3efd-40de-8c2d-fc4b96f890b0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9ab2cda3-d9fe-47cc-8ee7-50f5c5e46c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c321513-5505-4e0e-bc6e-4b46d0438f27",
        "cursor": {
          "ref": "5fc6643b-5ee9-45ac-b0a9-d35680907441",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c66e8631-e82c-47f8-abe8-31ee077ff856"
        },
        "item": {
          "id": "2c321513-5505-4e0e-bc6e-4b46d0438f27",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2fafb8d8-c4cc-4058-b335-c00055b7fe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843440e9-4113-4d21-bc80-b6e5c59d9cd8",
        "cursor": {
          "ref": "66de9b83-cde2-441b-893e-819f03ea8dff",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3b4dea68-a29b-4978-b222-a983cfe6d845"
        },
        "item": {
          "id": "843440e9-4113-4d21-bc80-b6e5c59d9cd8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8c85f60f-851c-455e-bd5d-c9be4b6395fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86b2488-7226-4b9e-b378-3f5d6c143ac8",
        "cursor": {
          "ref": "5dc4a45d-eb26-462f-8555-734afbb74b24",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4b3a9b8d-c418-4fcb-8e6f-3f4bfd2dde02"
        },
        "item": {
          "id": "a86b2488-7226-4b9e-b378-3f5d6c143ac8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2e5dd65a-a293-45d3-838f-c636681a8f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67138c5f-d5d7-4e51-b079-adcc90b1b787",
        "cursor": {
          "ref": "8f9ab209-2fa7-4d37-bb37-41fdf40683de",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "93ed562a-7528-44ea-bea1-03ed21e93616"
        },
        "item": {
          "id": "67138c5f-d5d7-4e51-b079-adcc90b1b787",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "616b802b-7ba3-4255-b408-ed973df0f188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70140cb-02f5-4074-b8f3-603eac878f53",
        "cursor": {
          "ref": "b8ef2dc7-26a9-4efc-afdd-244684fbb702",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "21a43e69-9674-4948-8370-6797ddcf2ae0"
        },
        "item": {
          "id": "f70140cb-02f5-4074-b8f3-603eac878f53",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5e6eab41-b51f-4b9d-914a-e16c3e8d0c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb62e067-6bcd-40d4-90bb-9179ac220248",
        "cursor": {
          "ref": "46a7cbf6-44b2-4fe2-a611-cda2b5245c36",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "24537660-32a2-412a-b9c9-29c99a428dd6"
        },
        "item": {
          "id": "fb62e067-6bcd-40d4-90bb-9179ac220248",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dd9fccdf-b769-4316-a4c8-bccf3f2b2ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05119c0e-b583-43b3-a43f-e4d9b35521e5",
        "cursor": {
          "ref": "3ea09f2e-797d-401e-a8d6-2558588101db",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7c4dfb10-1103-45fe-a562-1829385c9bcd"
        },
        "item": {
          "id": "05119c0e-b583-43b3-a43f-e4d9b35521e5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7960bc1a-7191-47c4-a8ad-d28a73d84380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce0e885-9a0a-4cb0-b509-65f7b31eef3b",
        "cursor": {
          "ref": "d139099c-ee25-40fd-b460-47b718f5fc93",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "750b5a80-44b6-4d6d-8b3f-3cbb46973deb"
        },
        "item": {
          "id": "4ce0e885-9a0a-4cb0-b509-65f7b31eef3b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f18bd7fa-4e65-48f6-b478-300ea3657e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67180aa-1082-40f4-8eb9-49d1217ceacb",
        "cursor": {
          "ref": "e9da1eb9-61a5-4954-83a0-7293f64a666d",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8c1cc56a-94b2-4efe-b43e-c165ee66ac4f"
        },
        "item": {
          "id": "b67180aa-1082-40f4-8eb9-49d1217ceacb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7bc4f09f-767f-45ff-86e4-3d5fbdaca228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35373dd-7e9e-4c5d-87a2-3863df729142",
        "cursor": {
          "ref": "5370e517-8a5f-40c5-912d-426215922fb5",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7b13a7d3-059a-42ae-96cd-980d38eba29f"
        },
        "item": {
          "id": "e35373dd-7e9e-4c5d-87a2-3863df729142",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d3b611fe-4c26-4480-8908-1f461bb57e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3927de-e35d-4f53-b968-6355ac4a1949",
        "cursor": {
          "ref": "6c492ed6-6f4e-4f5e-b535-c8d81b06a04a",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "64f0dcad-56e0-4d27-aac0-3fc8e2f12db8"
        },
        "item": {
          "id": "3f3927de-e35d-4f53-b968-6355ac4a1949",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8a8823c3-9881-4d09-8d61-73c4038b875e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0ccf6e-9ee2-4ecd-a4d7-d8f6c03a8da4",
        "cursor": {
          "ref": "83fd0dbe-8018-4e6e-b32a-27ffd60c4fab",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f46c3a8e-0c4a-4d56-9699-d89bcd4dba5d"
        },
        "item": {
          "id": "bc0ccf6e-9ee2-4ecd-a4d7-d8f6c03a8da4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bd6ad135-4b62-4305-a30f-c4ba2b5cdd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1b0e31-6cce-428d-ace8-dd4e3c8de16d",
        "cursor": {
          "ref": "705f3b7c-794a-4b7c-b89f-b2c653a696f9",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9861e19b-c3e3-46bd-8f19-86d124fd7ff3"
        },
        "item": {
          "id": "aa1b0e31-6cce-428d-ace8-dd4e3c8de16d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3cfc6148-fcf4-45b4-a6a5-88e1be9cd9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c838ef5-c178-4ee9-95f9-46b45314e10b",
        "cursor": {
          "ref": "314f438b-b569-4f81-a7fd-583ac8edddfd",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c0239bb2-be87-4497-80fb-d69aaab1fba5"
        },
        "item": {
          "id": "5c838ef5-c178-4ee9-95f9-46b45314e10b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6131a0e1-cfc2-4d46-9ee9-8a26808822d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d103e3c2-fb77-4313-b2eb-e97d76d7d62b",
        "cursor": {
          "ref": "d6d9bfc0-690c-4332-82b4-fd53d75cea05",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2bfca196-71c2-455a-b662-fa8eef86932e"
        },
        "item": {
          "id": "d103e3c2-fb77-4313-b2eb-e97d76d7d62b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "80c1b919-8c7c-4ade-a999-deecb5dda948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222493df-e3dd-4a7f-8c8e-217aa09d779f",
        "cursor": {
          "ref": "3c014de6-99e6-49f2-88d0-fd6440766715",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6b38215d-c007-4436-ad3e-6a67e4a76534"
        },
        "item": {
          "id": "222493df-e3dd-4a7f-8c8e-217aa09d779f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "702156ea-b4d4-4a59-b27b-3aa204aa5c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b32538a-fe53-48e0-818f-7ff4279dfcfa",
        "cursor": {
          "ref": "d40114dd-9f7a-4743-a50c-89db71e5f6cf",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2ce82dc9-8ba5-4cb5-8060-f33e05ec1334"
        },
        "item": {
          "id": "4b32538a-fe53-48e0-818f-7ff4279dfcfa",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "02006f4f-dcce-453f-8656-bb0d73d61e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770cf61d-3bf9-4927-aa02-21095a86c8d4",
        "cursor": {
          "ref": "92c4ae66-fcb7-4b61-b7fd-a29643f529fc",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "948e12f3-088e-4453-a36c-ab939afefc67"
        },
        "item": {
          "id": "770cf61d-3bf9-4927-aa02-21095a86c8d4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ccf4124f-f7a5-4b41-b7db-6e4da6871dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf9e094-b2e5-47b5-94e0-09a0040bf9cc",
        "cursor": {
          "ref": "f5e6a99c-54e5-4712-9745-a7fe2b1cd583",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b2775878-0cfd-4f9a-873f-00969da6bc6c"
        },
        "item": {
          "id": "5bf9e094-b2e5-47b5-94e0-09a0040bf9cc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c9a215b4-2a52-4a71-9c24-1b13424f9761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab0fa81-a728-4860-9ed8-fd77deb4dad3",
        "cursor": {
          "ref": "b3b5fd2e-82de-4b70-840b-eea1f71ab8a5",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6f41eab8-f0cb-458f-b024-050945520e0d"
        },
        "item": {
          "id": "eab0fa81-a728-4860-9ed8-fd77deb4dad3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d1847226-4396-41bb-9cfe-516722306cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c142cb-cd16-4692-9502-8464d4b26933",
        "cursor": {
          "ref": "e844c436-76f4-4e53-bd07-b3afc1d55109",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8cc4b796-ef24-434b-b3b4-6a9147b48ce6"
        },
        "item": {
          "id": "64c142cb-cd16-4692-9502-8464d4b26933",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "da131635-146d-44c8-93a3-65a2d45e9cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67020ab7-4f71-4d8e-80e2-04fef9810942",
        "cursor": {
          "ref": "4d52f346-a4f4-457b-9118-dbb80c76e424",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bcfecf02-a4ac-4230-858f-610c59cf565d"
        },
        "item": {
          "id": "67020ab7-4f71-4d8e-80e2-04fef9810942",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "64e37c14-b523-47ee-9eaf-fd483b7f8e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b2c78b-4504-4b7c-bdad-28df70113489",
        "cursor": {
          "ref": "e6b059c6-68c3-41e6-ab26-8471e2939200",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "52fddbff-2d11-4b80-b40a-27da8aeea0bd"
        },
        "item": {
          "id": "b6b2c78b-4504-4b7c-bdad-28df70113489",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "58ba69cf-4e82-43fd-9606-2dd35b9338cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a096cf92-6e36-41ec-9fe0-2a120c577683",
        "cursor": {
          "ref": "abc44079-25ff-4446-86ac-86254342689c",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7b1bde5e-c033-4d08-b6ec-42849d877ff8"
        },
        "item": {
          "id": "a096cf92-6e36-41ec-9fe0-2a120c577683",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0e68ccca-c095-4fbb-9cde-2663b837224e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beda1503-c7f7-4806-98b1-aa00135544c9",
        "cursor": {
          "ref": "c1733d56-a8f8-46a2-8f73-9241cb447d0e",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3ff52783-3cf7-4b54-9651-7f2188f5dd62"
        },
        "item": {
          "id": "beda1503-c7f7-4806-98b1-aa00135544c9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "33bbafe2-ad7e-4465-836e-38b7e5544ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373e4023-949c-4190-a10f-79983752176d",
        "cursor": {
          "ref": "8bb082f9-41d9-4179-9a77-91d1e3f99af0",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9574e096-d014-427a-a501-01a7e13c1275"
        },
        "item": {
          "id": "373e4023-949c-4190-a10f-79983752176d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bdba6258-e35f-403d-b4f5-2ac205719b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1152390e-81a3-49b3-97a7-d37985e711b6",
        "cursor": {
          "ref": "ae007b97-886e-4ffd-8dc7-b15eac4f6ec2",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "42f1280d-373f-4327-85dd-73bedb12cd85"
        },
        "item": {
          "id": "1152390e-81a3-49b3-97a7-d37985e711b6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6b5a217f-fcb4-4a6f-b89d-8257b323e600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc757a1-4daa-4f4f-886c-00c855818577",
        "cursor": {
          "ref": "4794354c-ccf5-4ac6-8122-e41e576a1ac3",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "269b44eb-9aff-49b1-8854-35602aaae4a3"
        },
        "item": {
          "id": "efc757a1-4daa-4f4f-886c-00c855818577",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "75af6b74-3190-4bd7-8089-db67cf362f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0fd100-1cba-4eb0-a50d-38c408410fee",
        "cursor": {
          "ref": "33664cb2-be90-42f1-963e-3e3e2bbbf27e",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "93ca74ac-0109-4f92-a151-ac8594d05811"
        },
        "item": {
          "id": "2e0fd100-1cba-4eb0-a50d-38c408410fee",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5df2bdfa-37e4-43b4-a260-4c6573dd181d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f051a8-fdf0-4de3-bf81-e74e0639d6eb",
        "cursor": {
          "ref": "1b58e9c7-6fb0-4b41-990b-0d0d83a440f3",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "add86dbc-57ee-477c-8bb6-5226c7c7ba79"
        },
        "item": {
          "id": "68f051a8-fdf0-4de3-bf81-e74e0639d6eb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e98bc1aa-fcf3-4d54-8481-b19d649670fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33e0c87-1b61-49bb-9dd6-e1b926a96364",
        "cursor": {
          "ref": "829019cb-56d1-4cb4-81b0-918d938d9fee",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7d5ea57a-aba1-49ea-ab4f-679b2962e641"
        },
        "item": {
          "id": "b33e0c87-1b61-49bb-9dd6-e1b926a96364",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "77923407-414e-48b9-ab1d-b5286b9ffa1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9528dc8e-6edf-42cd-9094-0cf4a3ba0f31",
        "cursor": {
          "ref": "f3737dcb-d00b-4ee9-93c0-26b342593dc3",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "149d72f1-fe9d-47bc-8ec4-b229f83cb0d8"
        },
        "item": {
          "id": "9528dc8e-6edf-42cd-9094-0cf4a3ba0f31",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0502bad3-d71c-41d1-849f-85022d029d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3980bea9-df7d-41db-9eb3-2d4956a821ff",
        "cursor": {
          "ref": "6343c450-a3b7-456d-83bd-4296d0f82c68",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "508aa7de-9c06-4fdd-8462-7c514e1b12de"
        },
        "item": {
          "id": "3980bea9-df7d-41db-9eb3-2d4956a821ff",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b93ec72e-cbd8-4dca-beaf-148910753803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bd489d-f44c-4875-8de8-f4d3a5c27523",
        "cursor": {
          "ref": "691bd4ec-6f90-45fc-8cbd-c7e83c46c172",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f51e6e5a-b92f-4933-9778-c05af064a94a"
        },
        "item": {
          "id": "c5bd489d-f44c-4875-8de8-f4d3a5c27523",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "eafa101d-e018-449a-b480-ddd347b4a082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb0fe27-9a0b-4ba0-91b8-e11fa6c37c1b",
        "cursor": {
          "ref": "d56bb29e-4d75-4367-aa87-9e12a10c90f1",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a2fc6198-d94d-409a-abd5-c024f38576a5"
        },
        "item": {
          "id": "5fb0fe27-9a0b-4ba0-91b8-e11fa6c37c1b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d46e1a7a-e3a8-4f13-b051-97a1f43aa560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e594f6-c0ad-4003-a8a7-9e43f720a788",
        "cursor": {
          "ref": "3a07d9fa-a677-4b22-b6b1-08c1c318f5f7",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "37a4c0e8-0737-45d5-b145-52e89e541b78"
        },
        "item": {
          "id": "c4e594f6-c0ad-4003-a8a7-9e43f720a788",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e17c1fb5-19f5-426e-8edd-ff97b89a3a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9319cabf-203c-4167-8218-71b7136ff9da",
        "cursor": {
          "ref": "a4d17270-0dfd-40c8-9fe2-e36a2eeead24",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5475fd62-b549-4691-a873-d724a47ab32c"
        },
        "item": {
          "id": "9319cabf-203c-4167-8218-71b7136ff9da",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8d48f4e1-8ac6-4dd8-8df6-ae07e13374b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd36100-5ee8-4492-a5e2-3ef569a94ece",
        "cursor": {
          "ref": "d271dd11-9009-41ea-b043-d8412a2ab9ee",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3668be21-68b0-4c6f-8f2e-46922d4e61b8"
        },
        "item": {
          "id": "9dd36100-5ee8-4492-a5e2-3ef569a94ece",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d6669942-7a31-4530-87c2-2951fb3f3359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d107b1f5-c0b0-4242-999e-f4531e6125a5",
        "cursor": {
          "ref": "0ff0a576-bea3-49dc-9cec-2c9c7b311a90",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6c7084df-eab9-4d0c-a19e-fa7a87838cda"
        },
        "item": {
          "id": "d107b1f5-c0b0-4242-999e-f4531e6125a5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3f9a8bce-f2af-4c22-908f-514ddfac98c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cefe4bf-4972-479b-94e8-d08a037afb3b",
        "cursor": {
          "ref": "414b016e-c62a-409e-9f2a-cf60c5f80d38",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f8620096-0125-48f2-97dd-318ec74acf60"
        },
        "item": {
          "id": "0cefe4bf-4972-479b-94e8-d08a037afb3b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b7ea2991-1320-4723-b3a5-3193e196315b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52234005-afde-46d6-af90-82fce9a57fe9",
        "cursor": {
          "ref": "040403c2-f490-4c6c-84c6-6fd57c176b11",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "23fd15d9-5ebb-4752-8f37-f56caebc098b"
        },
        "item": {
          "id": "52234005-afde-46d6-af90-82fce9a57fe9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4a20fcd4-3279-4d2f-b23e-07cec651d8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1800125-9114-487c-9d60-bd266ec29e07",
        "cursor": {
          "ref": "5dc2250d-72d5-4079-844c-6371472a3c52",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "33286257-7f49-4fd5-bc58-c0c972a258bc"
        },
        "item": {
          "id": "b1800125-9114-487c-9d60-bd266ec29e07",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6e109efe-b8b2-40ac-88f9-d1ab80f4f154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec57ca8-1628-405b-8704-926e57587e20",
        "cursor": {
          "ref": "49b2ef8a-eff0-465a-9b2e-c80ca810e700",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b7213843-4538-425c-b42c-322846206a6a"
        },
        "item": {
          "id": "eec57ca8-1628-405b-8704-926e57587e20",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "54950653-d1e1-4d17-841a-fbe371f2af36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e07c4c-f84c-4f7f-9ae8-198bbfcce91a",
        "cursor": {
          "ref": "d9df327f-f5f5-428f-840d-f72497de0bfd",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "68bf4e86-46a6-48c2-9b6e-9ad434f9193e"
        },
        "item": {
          "id": "11e07c4c-f84c-4f7f-9ae8-198bbfcce91a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3b16d326-c81e-4e32-875a-d7548bdc1ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f115b3fa-cc02-4488-b834-c1128f23671b",
        "cursor": {
          "ref": "82f19247-95cf-460d-ae06-95175dad308d",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "40d2e1e9-dde7-4c48-9fcd-9516b815dd68"
        },
        "item": {
          "id": "f115b3fa-cc02-4488-b834-c1128f23671b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "26d53506-5a90-4b79-b709-ebd7f9acb4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3ba5d5-327d-4c80-8cba-477ef1754d5f",
        "cursor": {
          "ref": "5a156533-f9e7-432f-9cdb-08e9074f2ea3",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ccf2b1f5-4e6d-4c92-a802-96ee711d194b"
        },
        "item": {
          "id": "9a3ba5d5-327d-4c80-8cba-477ef1754d5f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "21f7f39a-41b6-459d-90ce-bfbcb48994f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbab893-9d90-459a-a19e-140544da4220",
        "cursor": {
          "ref": "04013de2-03bd-424f-b5b1-a0ddaa3ca972",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a0e6c37e-5588-4f8c-bc59-dd99a7ce35e0"
        },
        "item": {
          "id": "fbbab893-9d90-459a-a19e-140544da4220",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "188f2c19-7ff0-4843-b5cb-0fe733c4dceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fe93f3-3bf9-460c-b987-48ff56486c0a",
        "cursor": {
          "ref": "0436c141-e601-4c92-96a1-35003c198546",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3b00d692-ea09-4ca6-88a3-9eeb6d2b53f7"
        },
        "item": {
          "id": "25fe93f3-3bf9-460c-b987-48ff56486c0a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "05f94430-e1ac-401c-b460-9f6dfd865747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c8ac00-4fd9-4162-9bb6-1aa1ab958cf0",
        "cursor": {
          "ref": "ee97c14b-96b4-46cd-bab8-03a82405c177",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "601f1929-279a-45b4-b4fc-83d7ca63c9a0"
        },
        "item": {
          "id": "26c8ac00-4fd9-4162-9bb6-1aa1ab958cf0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c1f972c1-fae1-4aa6-a8ca-3ee0221c2db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01acbb4e-93de-4a37-ba20-72886b8a9308",
        "cursor": {
          "ref": "919fa15a-a5f9-4435-b1ac-edf60a3dce81",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "85385fe3-fd0f-4c9f-9914-3bc249f3969f"
        },
        "item": {
          "id": "01acbb4e-93de-4a37-ba20-72886b8a9308",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f6587ad1-9147-4972-8b58-aceabe43070a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcf19a0-0b70-4aae-99aa-2289fe479979",
        "cursor": {
          "ref": "00c313dc-3056-47f2-88cf-ac1fb097c000",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1c7561b8-a81b-41f0-94f7-2df178e04595"
        },
        "item": {
          "id": "0bcf19a0-0b70-4aae-99aa-2289fe479979",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "06030ddd-ed49-458c-b4ae-cc38ed473030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae631845-2bd5-44be-9197-611c073dbe3b",
        "cursor": {
          "ref": "b12f1175-df5f-4831-be3e-0c79a041f667",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fc80248c-0303-4223-aee1-c93e192f2f57"
        },
        "item": {
          "id": "ae631845-2bd5-44be-9197-611c073dbe3b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ed77a475-0377-49f9-8a1a-14773342b05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a91eb1e-7674-4c5b-93f3-b296b531da05",
        "cursor": {
          "ref": "123e5dcb-9b79-40d6-bdaf-94169eb5f3d8",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c800bdbf-857f-42be-98b8-a048841af0c7"
        },
        "item": {
          "id": "0a91eb1e-7674-4c5b-93f3-b296b531da05",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3fda3a30-c789-4afa-8fb6-0fcf89a5018c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89324403-d10e-4a08-8b61-26a9cc6fdb95",
        "cursor": {
          "ref": "801bfe7b-64d8-46d8-af85-8df5eba957d7",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "555f3fec-df3f-4131-aa16-4f492e805213"
        },
        "item": {
          "id": "89324403-d10e-4a08-8b61-26a9cc6fdb95",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2d821d54-c5b8-457f-b059-2832e144c24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff1fefa-c7e3-488a-a619-c8ea5202d00d",
        "cursor": {
          "ref": "f124863f-6470-4c0c-a260-6c0d7f9db40b",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "cb587700-1d58-457f-9735-e5aa39aa754b"
        },
        "item": {
          "id": "1ff1fefa-c7e3-488a-a619-c8ea5202d00d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5749dd97-fe06-41af-ad75-240b337c7a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca97aa2-5a36-4c77-959a-f583bf08bf4a",
        "cursor": {
          "ref": "8c211ccf-541b-4c5a-bd9c-fde92caf80d0",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "12f0e7e3-3a28-4513-8826-43a20bb2c1b5"
        },
        "item": {
          "id": "6ca97aa2-5a36-4c77-959a-f583bf08bf4a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "465e860d-03ae-4ddf-9c1d-c42591f15bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd74b04-62db-43fe-9b12-dce0db0a9f92",
        "cursor": {
          "ref": "e064364f-87d2-4af3-83b3-dc78592ec236",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7a56c7a0-bdef-4505-9ea0-08d7fcae4a99"
        },
        "item": {
          "id": "1cd74b04-62db-43fe-9b12-dce0db0a9f92",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7b9e509c-2ecf-41ef-8164-0b7428a29c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3051c9-d9d7-41a5-9d48-91d98ac7eb39",
        "cursor": {
          "ref": "c7517dc0-c6f2-47e3-9ed5-183e113636d1",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8797a86d-cce2-4da3-9faf-9988f50c43ef"
        },
        "item": {
          "id": "ef3051c9-d9d7-41a5-9d48-91d98ac7eb39",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "67196365-7b4c-4e21-9864-c141206943af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389b00d5-a9e9-4ee8-b259-12a48c671210",
        "cursor": {
          "ref": "b45eccfb-ea89-4ef5-a1fa-9000696e35c8",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "854b16d0-b2aa-4213-ad1c-0e43e24bd425"
        },
        "item": {
          "id": "389b00d5-a9e9-4ee8-b259-12a48c671210",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2a5ee973-8360-4494-9dd3-e915168d5e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac746e53-336e-4eee-a9a6-82a95b40517e",
        "cursor": {
          "ref": "6c4a1d3a-2a29-4a02-8856-cc92f6bee167",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "fc27beac-3f30-4d13-8c66-6d25f28f7a66"
        },
        "item": {
          "id": "ac746e53-336e-4eee-a9a6-82a95b40517e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4c0e484b-e623-4a2c-a347-2924c612b8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269286ce-3d84-462f-ab06-09b25f9cf2bd",
        "cursor": {
          "ref": "d0c3c9bb-964d-4a86-93f7-62de62d7bb43",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2cbc1888-67a3-4b9a-b285-26f6c7ea136e"
        },
        "item": {
          "id": "269286ce-3d84-462f-ab06-09b25f9cf2bd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8d6e6b3a-7138-4fc7-8021-288721323ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee2ee6f-bd59-4585-bbd0-81b911ee351e",
        "cursor": {
          "ref": "44b43bc1-8fee-4276-8cdf-a8111f8b90b2",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "adaed7e1-8ddb-4185-a639-a1987464a26e"
        },
        "item": {
          "id": "eee2ee6f-bd59-4585-bbd0-81b911ee351e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7a55955d-6599-403d-a305-5de3c6659289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2af3e0e-0f0e-4ade-84c3-84ff4addf022",
        "cursor": {
          "ref": "eafebfe9-5c6f-4f50-82e2-dbe4f1d77bae",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a1393f9c-f095-48b9-926e-4bdc1e949cf2"
        },
        "item": {
          "id": "f2af3e0e-0f0e-4ade-84c3-84ff4addf022",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "974340b2-47be-42b5-99d1-e9d375b94687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e975826-17c8-4622-8f39-4433b9314199",
        "cursor": {
          "ref": "634009ac-f48e-4952-aed4-40f93d2735fe",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "090d5211-85f8-4704-b3a8-fc56a35b58af"
        },
        "item": {
          "id": "5e975826-17c8-4622-8f39-4433b9314199",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "77bddb70-85c8-40b6-91d7-286d5e35e238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534ee628-d721-4470-9fc1-59284c94125c",
        "cursor": {
          "ref": "43b12296-b557-4897-9cf0-bb12bdc0b59c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a43ed256-e0f1-41d5-a8cc-3d53d00565e1"
        },
        "item": {
          "id": "534ee628-d721-4470-9fc1-59284c94125c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "66e120df-0e62-4897-9267-c11b3a6b46df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c3eaa9-260e-44b9-8df1-7815afeea261",
        "cursor": {
          "ref": "260b3cf0-116e-4fc9-a7fe-1aa6e8ec0469",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "16989518-6684-4a1c-83b6-d00d06e07cf7"
        },
        "item": {
          "id": "44c3eaa9-260e-44b9-8df1-7815afeea261",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ef24e600-fb96-468e-9232-1953cf44d307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4467c3c6-6703-467f-84ed-e3e06097fab1",
        "cursor": {
          "ref": "b9a13ff3-0cbd-4e52-9ef1-71e4619e0eb5",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "90ca628a-1971-4cb7-a168-6c5e3de21ed4"
        },
        "item": {
          "id": "4467c3c6-6703-467f-84ed-e3e06097fab1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "df804a92-7f22-41e2-9ad0-989b50150e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf125c2-d67f-4d82-8df0-2f002237f90b",
        "cursor": {
          "ref": "12d72828-f68b-40e9-81ff-96b6fdb8a67d",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4536c15c-23f3-4d69-9a4f-3a358e519625"
        },
        "item": {
          "id": "fcf125c2-d67f-4d82-8df0-2f002237f90b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d4162651-c260-4dfd-9b36-82fd636ca12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec837741-414b-40f9-a288-4955fb402ddb",
        "cursor": {
          "ref": "543e8842-79ea-4c44-9f96-66a8036baa2e",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2f48d9c9-c7da-48b2-9eb7-5adf5d0bb94f"
        },
        "item": {
          "id": "ec837741-414b-40f9-a288-4955fb402ddb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9ca3057f-79fc-489c-b319-731c3a17964e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c93806-30d7-46d6-87da-3385638e2d5b",
        "cursor": {
          "ref": "730692ac-180c-481c-a91c-5fca0e7902cb",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3d94e3ba-2063-4322-8c4e-bff7e2de1e7d"
        },
        "item": {
          "id": "66c93806-30d7-46d6-87da-3385638e2d5b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f6134f29-3a89-4ca9-a9e6-594d8e282ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2baf5d9b-341d-42e5-9196-a503316f3a4e",
        "cursor": {
          "ref": "6ce7766a-39c4-47f4-81e6-ed91ded2fd58",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6e09d5e1-d2f9-4ce1-aeb3-f3a0e16c1552"
        },
        "item": {
          "id": "2baf5d9b-341d-42e5-9196-a503316f3a4e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "704c8a64-7876-4026-9e28-7dc6dd984026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32410d42-4540-4907-a9fc-518a2762403c",
        "cursor": {
          "ref": "f124233c-df56-48c5-af98-99d23ef7918b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "eacaf2f4-193c-47e7-9294-ab4281d23543"
        },
        "item": {
          "id": "32410d42-4540-4907-a9fc-518a2762403c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "889aa280-61ed-4632-9fba-8daa7116325d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca75fd4-151f-4b13-8798-1b5129ad89a4",
        "cursor": {
          "ref": "595d2d3c-7c58-439e-ae14-c480b8a921ef",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1498be64-4a7d-4954-aa69-ed7520f57c54"
        },
        "item": {
          "id": "6ca75fd4-151f-4b13-8798-1b5129ad89a4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3727131c-b1f3-4c8e-9ea7-c788801b43a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1254d20-7206-4598-b3d6-9947531b2ebd",
        "cursor": {
          "ref": "c7a220fb-ff18-4e6c-914c-d9046ff63560",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8d47f5a2-1c9a-4796-bcf6-0fc0e8ebdce1"
        },
        "item": {
          "id": "e1254d20-7206-4598-b3d6-9947531b2ebd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6c9b3f50-33ff-44ba-9440-6f06c1709af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bb2193-fe49-43ad-b495-ab2ae21f0f11",
        "cursor": {
          "ref": "ab1ef8fb-4202-45b8-9e1b-6842f57fd1dd",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "3abfed53-fedf-4090-b21b-dc095ff00bbd"
        },
        "item": {
          "id": "21bb2193-fe49-43ad-b495-ab2ae21f0f11",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "34f3b9bb-cc17-41ac-b74e-e2da6797f08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d44ac1d-6839-4952-89b1-d1ff4be51a33",
        "cursor": {
          "ref": "cad1e492-890d-43ce-a93b-8ba77f50d3fa",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "efe2a2e1-e2e0-4490-bfd3-559465d6dc9d"
        },
        "item": {
          "id": "6d44ac1d-6839-4952-89b1-d1ff4be51a33",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d0abc9c6-0dbc-4ae5-a1c0-6335f1cdf1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938c04a2-08b4-49a0-8e68-b3d6bbf4d5cf",
        "cursor": {
          "ref": "2a079f3a-9317-4b2d-877e-3367aba17424",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "99e98bae-c51b-4b50-985e-1b717238b18e"
        },
        "item": {
          "id": "938c04a2-08b4-49a0-8e68-b3d6bbf4d5cf",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c333c307-bc44-4750-825c-bfa0e099e300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772f1fd2-4cde-4d16-b077-47f32eebe2de",
        "cursor": {
          "ref": "d624c63a-6c2b-4039-a47e-95156bb2da91",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "bd18f272-279f-48e3-a02d-9fd1f9e84078"
        },
        "item": {
          "id": "772f1fd2-4cde-4d16-b077-47f32eebe2de",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4fab10b7-fe64-44d3-ab05-7a145ece1a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39628124-0322-4208-bafe-396e1fda2169",
        "cursor": {
          "ref": "e3714fa0-b722-4580-8b34-fbcc1fc68738",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c9765acf-a775-433d-977b-366ec0db3eda"
        },
        "item": {
          "id": "39628124-0322-4208-bafe-396e1fda2169",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e90a0ad2-9fbc-423d-8271-739395c6900f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43c6a94-552a-498a-a7a7-51b55dc8a04d",
        "cursor": {
          "ref": "2193847e-5fba-4a51-bd3d-2e078433333e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5e2e9a86-9aac-4aa7-bbf9-b6b4bf358dee"
        },
        "item": {
          "id": "c43c6a94-552a-498a-a7a7-51b55dc8a04d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6d2a54dc-6d61-4173-91f3-c15a2eb70524",
          "status": "OK",
          "code": 200,
          "responseTime": 538,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "913c056a-2c6d-4dde-9440-24be2130298e",
        "cursor": {
          "ref": "056a6735-4bb1-4dbb-945f-48559f1b25cb",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9d5432e3-2c7b-4674-9115-bb88f0bc7311"
        },
        "item": {
          "id": "913c056a-2c6d-4dde-9440-24be2130298e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8ad86b28-9e55-4fd0-ad26-6b5d1e4d938a",
          "status": "OK",
          "code": 200,
          "responseTime": 1615,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae1408f-3f46-46d8-8c18-81cbf0537399",
        "cursor": {
          "ref": "165b92a2-cd7c-49c1-b653-f5f3144e9ec8",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b0c19cbf-780f-4ab9-b950-0d1d02e69e4a"
        },
        "item": {
          "id": "8ae1408f-3f46-46d8-8c18-81cbf0537399",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "011fa69c-2f2a-4d22-a3bb-0e792a95cbe1",
          "status": "OK",
          "code": 200,
          "responseTime": 1453,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d272f67-e004-4e49-bfec-868c8be5059d",
        "cursor": {
          "ref": "f719620a-76cc-44dc-a38d-cd95c6f49903",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "77620376-d345-41d1-95ea-629b04aeb487"
        },
        "item": {
          "id": "3d272f67-e004-4e49-bfec-868c8be5059d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de3c4c79-5f46-433a-8305-c7a037d18189",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d272f67-e004-4e49-bfec-868c8be5059d",
        "cursor": {
          "ref": "f719620a-76cc-44dc-a38d-cd95c6f49903",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "77620376-d345-41d1-95ea-629b04aeb487"
        },
        "item": {
          "id": "3d272f67-e004-4e49-bfec-868c8be5059d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de3c4c79-5f46-433a-8305-c7a037d18189",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692e91ef-d6b9-48ce-8844-9c743526d5e5",
        "cursor": {
          "ref": "498b5d94-821c-4b97-acd2-1fe0d5bfd0e7",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2e3b3f86-4445-41c2-a1a3-085b5a073f70"
        },
        "item": {
          "id": "692e91ef-d6b9-48ce-8844-9c743526d5e5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "08b6a4a5-8a65-4c25-961e-4912c5a104d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcbc291-1d0a-4251-926b-f20647d5d83e",
        "cursor": {
          "ref": "7c10544d-8a5d-483b-88d9-9ce6581d8494",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0fe84594-c6d0-4a95-b43f-de41f88d5d76"
        },
        "item": {
          "id": "fdcbc291-1d0a-4251-926b-f20647d5d83e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5d0fc623-fbce-40e9-9893-759fd9769355",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}