{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f16c228d-ad97-4649-9830-cf137be4b28a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "62f6a899-9b6f-43b7-8d46-c30dfaf73d1c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b17eef02-4c5c-431b-aa14-5813c6a40f54",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5b465d1a-4d54-4563-8aee-e965391b8322"
                }
              }
            ]
          },
          {
            "id": "696b6914-5e0b-4de8-91e8-d68d104a30f3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "72cae366-cc11-4666-9b5b-702f879eb946",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "14ec9460-d4ca-405d-a927-ad5cbc7f4346"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "73ac5392-fcc8-4eaf-beea-58582c967e95",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "73a8a4c2-b149-4e5e-a156-c32bfb5d036f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2dab62dc-7935-4293-aabe-400d4e2f6c7a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a511941-3070-4f7a-a80c-a08853ad330e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6fcc0df-60f0-4369-88df-fbc0fa8a8b14"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "873e9e21-b2a0-4ee3-9432-5d2fe44bdcef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49d2510f-84d1-47b5-948d-0c4508de1282"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "81b77bce-415d-45be-9d61-18690abd6091",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25f4641d-d9d2-4237-8bda-f7756932117a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a37f5980-90e3-4d11-9790-adf7492dc8cf",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e300c4ff-3c3c-4d5f-bedf-d5a8d28e0b8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b37b8577-3cfe-423e-a35a-9cb0165f0765",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d536def-80d8-4833-8a06-fa6f81a2c471"
            }
          }
        ]
      },
      {
        "id": "ae136b0c-3da9-4647-9456-f48a9c36910a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ffc8fd3d-fc3a-4944-98b9-3136144ab603",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a55cff3-ebaf-486b-8141-983e12f28443",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a6293fe1-ef42-4189-aed1-9d9fb86ff51c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99dfd3c7-b221-4dfd-9d11-52664f1e017d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f94fc8ed-b11b-4582-8cdf-b6cc0d7efab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4758a08d-e040-410c-9728-945e61720c01",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55b97d3-3e91-4d6c-87f3-8f24c2a05679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78c32a24-357b-45d6-ad56-f74b687e7601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcc65cb-e1ba-4449-95ee-8de7041425d2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e135b58e-e227-426d-a10e-678f604ecdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64345716-d8d6-4e20-8134-af75af7d834b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0112b99e-684b-4cbc-8137-0f0c21c7def7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc0363a1-57cd-4335-b620-4a857c591dd7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa878e6-308a-4f1a-9c16-6cfd9aa0b498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbed5e21-d96f-454a-9b73-37f0495c014a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c866160-f24b-474c-9fbd-415e90b1cff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f7579c-e9be-4c89-a958-45003d296d32"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ba1eb779-5a98-4c68-9be5-f923d1fc038d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "078a955b-afec-42b3-8151-368813745cff",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4009d5e0-4b77-40da-94ac-218842ac6cb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "46a9532d-c2d9-470b-b15a-8b450fb069ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ad99fc2-3749-4954-aa45-0fe806a0b17f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fa075483-8e1a-4017-a43b-b6fc2a7d08cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e20fb8ad-f5e3-4ea1-8184-d6e94eb3bfd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02a48fc3-9ba2-477f-935c-54723da40474"
            }
          }
        ]
      },
      {
        "id": "835baaee-49e0-4c2f-bff5-dd627cf8b2f1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b682c8e3-70de-4b23-9deb-89be9a2880ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db713bf5-aa9e-491e-9cfc-6238d2263365",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1cb80086-f3e8-44ed-a885-19dcf7c3eb29",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edaa862f-7a31-4b9b-ad40-6b2575f0e8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e15ddc-05ba-4144-8238-32775e281065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3c5946-f69c-4bff-ab19-23602209b3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c82f2812-2796-44d7-ac4e-c93f71c60e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969815dc-0af3-4174-9e25-ce6e6edbf4b9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f51da0d-2bb9-4d65-8568-2175a2d305f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b07e6c-a9cc-4f93-9cd6-f013b89bb13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be03513e-7c22-4fda-a7c7-5a1b4a145332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d167154-8bf1-4270-9e78-c5150d5be2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc22e474-223e-40f8-834f-d96809f63025",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a267d917-e1ad-4084-88e6-a1beb1ec63b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f42a439-9935-4ed3-abe5-23d50b28e283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbf38f4-9c1f-4b81-8a94-d15422b753ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e94b53dc-73fa-4cc7-ab99-deeebc16922c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f50f6b-dee3-4ecb-a519-6f73746f30c1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16439785-ac36-4486-a106-278192b04a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297c887d-14bf-4386-96ad-6b2b28005661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0e19b9-7105-45b2-8b97-a59495e81bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "154f03bc-8596-4087-9be5-1200f0b49669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bda1c9-f331-4e99-a9a0-8b4c56829d60",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4308740-717a-4266-8f08-fb08131f8418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf997c9d-34fb-4164-9f2a-e24afd6e56ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6594cba9-421e-46df-883e-5c22aa990d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "113f7a23-dd42-4cc2-a2bc-66b7d1fa6f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f07f957-0107-4847-8ed1-277f0df39f83",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ac8837-2048-41fc-a909-531ee00c00b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b592fc0-e58b-4818-bf2c-35bff0ab9f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b301f43c-0538-48bc-b7e6-4b5af63ec4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c00e4995-cbf2-4c67-bf82-7e3f4d136371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39631368-99de-4de0-90b9-ddcf7ca8111c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcafa68-6f9c-47da-a578-101adca1d23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02bbeca-be80-45a7-9895-968398284f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a320cb91-79bf-42c9-944e-fd5854903864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7fc55ad-be84-46cb-9309-0e6a2053abef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc21bbe-57d8-4b88-a75c-a8f510ab4a88",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51d80f3-1392-4883-8e3d-68436301117b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bbaada-686f-4f7c-a143-dca4744bdc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472f8450-6d19-4419-bc66-dedfc75962e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8f1bd5b-ec75-4c8f-83d4-5ad431f65997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad87976-a11a-40bb-b138-82a055363511",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74da412a-46f7-4d12-99ed-685b81c5054b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4c111d-9a7a-4458-878d-86648e24df01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263fa1b7-558a-4cd7-bcab-b6081dd96495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87d57fd8-290b-4838-9291-656be7cff346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e115dd5-6e5c-4024-995f-e06014ba5796",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b1424c-455c-4509-99c7-86a1433fc335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1a68d7-6e76-441e-8f66-6dd377617900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574ec91a-9cef-4b99-8812-8bee9a825dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7bfbc29-5051-4004-a1cd-5ea5501514ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2ecf13-4db6-4850-b2af-4c2e12b28577",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1567e1-3f84-41e9-b0d3-fa25c473bd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5999b6e3-d4c1-48ab-a5a1-1aea83f658d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282edd22-459d-4471-9527-982d9850652d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "280b7855-0b96-4cbc-b120-79f55aa734a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97f14e4-843c-4c31-b022-6fc65796f96d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008b89a0-85b4-4ea6-b6ed-613ff4f6e7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00351ce-69fd-46c6-bb5d-a286511e0220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37095c95-69e1-4781-bac5-c8e2b8e7aaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31a2d4c7-853f-460a-a390-8f4c2d434e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a16e8c0-134c-4fd0-9393-6a9ab8630111",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f8b667-8987-447a-a1ed-5dbe91fe7173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8671e18-ed7a-476a-b934-4e23dc86e8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5235e45-d157-4b25-9ec6-a9991d8cf1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66117a68-bb20-4f9c-bb92-7761fd423e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fb7c97-b6d6-4545-9bbe-e765236f15d7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a712d5b-f43b-4a82-ab0e-816a2d35b661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6454543-0a0c-4c6f-86f4-23fb2060d961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401d9c4c-b0a4-4ca9-bf7d-e525bca6ef50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ee6a565-5a60-4cff-9ab7-4925cda323ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7643908b-ce9a-4b52-bd7f-2da7c6ff9e97",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858c2f36-99b6-4e75-be66-eae1968c4b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47302609-0e0c-4759-a1af-461c1be13998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496489de-664a-488d-88b0-81333c8d0253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad4842bc-9cf6-4282-9cb9-33f0a4bda6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a19b44-58fa-42ea-8ccd-ebbd6dfa691e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67e9c20-44b7-44cf-a55d-b50ca7e5e2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2deaddfd-be1d-4c54-9865-8837ab93b6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fda252-6684-497c-a3e5-48b31e9490b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "352c9740-66d9-4a22-94ec-ad4e590adca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6ec750-0ef5-40d3-a25e-402600f9e7fd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24ce23f-69ca-4aeb-97f3-2f514d97bd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe713b2-35bd-40e8-926e-29c2ca1db5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a954bcc-c700-4cfe-9386-7064a2982d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "671abccd-e364-4b6c-a9ab-7f5e81499667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61000824-1cc2-460d-b9fd-85565fecca2b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59911313-2fb4-4347-9689-282a408800e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd41c718-806e-455b-8b6f-203c671c7b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2353cb7-ca5f-413e-af8b-227e14952455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c05d476-aa9c-44cf-bc42-07373b347c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f5e3d3-0839-43ef-a638-a581979c5c57",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0aa6b5-9747-4b3e-8d6f-84b0bde600e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b389452d-c8c2-418f-b336-673dd5878627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f660ad74-c54a-410c-ba62-16c7b98e77e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f978963-428b-4107-b8c9-92a9a940fd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d07294-b446-4a84-bc88-808cb6112602",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725cbfeb-52b7-46a8-acb7-42b2adaea296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd476da8-718b-4f4f-94ae-28d5792795bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c2ad75-55fb-47d0-ace7-468c520d5f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2fe1356-3f3b-487a-85dc-d94b9813b49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7da377a-0979-4f7f-8dc0-e9632f412e70",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5870ee-4265-4736-a99b-243eebf927ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5a78c3-8dcd-46eb-9322-e2233ea46697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8394122f-1149-4643-80f3-953075b9b305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59a8656a-fa14-40c5-ad48-f06452f2a74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0eb3e3f-4391-4b73-859b-6c263b6dd624",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15511d2d-21e3-474c-bbcf-216e2cec58f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b42727-cb70-4119-8cc2-afcac3649819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516400cd-8cfa-440d-b865-66a9f144e45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb210107-ff0f-4c39-af56-c4d8f0c94283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a88d07f-c949-4467-ad82-2151cc6aac10",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851311bf-c381-4282-b22d-6cc9fff88769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17611fed-32f5-43bc-a397-11757ac50f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec80f50-c51a-4370-bcff-3ef9d67279b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65c7fb56-4e63-4ce9-9196-5f84b0b0ae6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446735f0-ff4a-4a0b-9160-a343de1f45ef",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d707df7-1cde-4ec4-aaf6-e13b6e3d4ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d466d8b-3ff7-4b2e-8375-3da5d2ade1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e3508a-9169-4f7c-9550-c9e336d0ede0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "314980b4-28dc-4b34-aaf1-84d20fb241fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3719c796-4983-4795-a8f1-e9d8ae132a72",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3725a5-2049-43cf-b368-6499fa10ecaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8838607-3db4-465c-913b-25dfef7c91f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190215f0-b23d-4a49-a97a-ed12e0c67103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d23ff172-54e7-480d-8fdd-066b8b1b5be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fb132a-e756-4288-98a5-cddf2e56d817",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce4abf1-f497-49d9-84e7-9cbe1a934fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd890fba-fe65-4937-9143-10efef5865fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae39123-16fa-4e86-809b-e00096434f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "657aaa9a-6143-4bf8-af7b-74176ea7354f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23abeeea-9b7a-40b9-845b-931663138210",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcb64ee-c479-460c-abe2-42f05f61ddd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e496e3-9e53-432f-b9f7-0841738bbd18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35fb9ca-96f9-4dd2-b152-bfcf15caeec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cab96d19-a05c-427f-a1ef-3063316fdc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8f4458-f150-47ab-b903-19a8ca544d82",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d25b18-ab96-4e00-8311-c74a853c286d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207a2d9d-3615-423d-abf7-d62765f1375d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c27c4a-9bc5-43db-a297-814eafd6ad89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a25c44fb-10be-4430-9d70-cc0b6c3a2315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9b431c-6e11-4614-9fb8-8e3e5d75ba40",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc41a6c-86a8-4294-9f7f-9e8562d044cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75ce61b-ac23-41bf-b93a-7bea40d7b801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bc1047-d824-4e5e-9dd9-3e95f23a4e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe2f05c-8015-450c-bf7f-fe6763fcc74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a580a127-bd36-45f5-a89c-5cf26d2d6aeb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6fcc6e-d5ee-4946-ae24-f673c8e10caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d502a6a-a33c-44da-be32-bfdaef496f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ded22c-9d8d-4167-bcef-22bec2b841fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "38d16cb3-a929-4e2c-8f2f-c2c32772adb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad24503-074e-4d84-9e21-e331a1dd7100",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dede7a-bee0-4f36-90dc-7a037fc4df1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2307b280-4dce-47d2-9b94-73ec566817c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85eab31-f0a6-4a75-8d2c-2651a1daea5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "478e0e12-da82-4a82-9ddd-202cbc5732c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8b85ce-7788-445e-a535-f0bc0fbc168f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902fc23a-1dc8-4b12-b315-644e9f74b896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce772a3-e796-4f5e-8d80-f49b956d8baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68fa064-38f0-4d99-9a3b-3d87fa75dadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "baab4072-8078-436f-b2b1-7438e661734c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59de174-40e4-4eaa-b4d0-0f401040530b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bc3eba-98e3-4067-936c-5136db941c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc6c4325-5114-46b4-a629-80db30690cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfecdcca-6c49-4604-acd2-d81ae38af6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "424e8fbe-0c00-401f-bf00-b6e1afba1a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a508baed-697e-421e-8024-1812d8ccc562",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aac3cc8-5097-4a42-8feb-651ec2119134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83814709-a843-4322-a326-ec6c6d55e287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bb03d9-5a61-4ba8-8518-796af85d4548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b426347b-0899-44aa-bc89-3c8bfca63b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921cb90e-db9a-4bb6-ae06-723ca49eab34",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f54fde3-a7e3-4717-9671-ffee8e0cc9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fdf1849-4f5c-4b72-8ec3-a377c43d9ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc06ed33-7c38-429c-9804-aa85169593f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "51caea6a-775e-4afc-8e44-90a93cecfac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cef1418-f16b-432c-ad43-74afb0c6e3e1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263e5a30-5ff9-4adf-bd76-8e85df0fc6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e7d2c08-9f80-4861-b65c-867c2da985b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a6c824-1174-40d1-81e4-61e62eedf428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8cc2d5d-4221-4f35-8e42-07bce7cfba93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f18198-c2c1-486a-8029-d46ea3e309f0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49be2536-5800-44e3-9fae-c6c865e8f4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a931813-4508-42e5-a5eb-9aa2b4a8daba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f8bb06-60dd-4869-af0f-ebaa3c714454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d92075ee-3a6f-4933-bae2-cb25575153d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a473019-b061-492f-b287-9ef589bdc8ed",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c481382b-ca19-44a0-8252-ba830897540a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76bf0bc-b84c-457f-87a7-49cf769cba5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63efddb-1fdb-4682-bee0-be000a667a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "08512435-138d-400b-ac1b-deb20e2e0e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af644ca5-338e-4304-86a0-6d02358ec094",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92627914-b173-410e-a9c6-4e118a79fb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c89fa6-f885-42a2-b07b-1818755bde2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8243cf70-1fb3-4a4f-9654-1d2ba768dd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bc03d3-2adb-4454-88e4-fe374e812998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4564a69e-d10e-49e7-9da6-af6122e82d11",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afee049-82fb-49cd-910d-b154773e8637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2e274b-b8cd-4d6a-8d7d-a249df923910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821c726d-6f26-4bca-b80b-3d07d1a86ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e9cad2-bd13-4059-a725-7a7deeaa6bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90153ba-cadd-4bfe-9d4b-82363a985fdf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d051699-d89a-4cdf-bdc0-f9a8e758b2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03572503-419c-46ec-a22b-88dca54d1d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8003295c-e4bc-4fa9-822a-754a4a575560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8bb453-ee4d-4b4c-817b-17329fe19e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76dbb217-32a5-481f-a816-ca0d807a36ea",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f7d220-f323-48ac-80aa-a8c844223d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a016ccd3-a48a-404f-b7a2-4bbb7170b34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d72e76d-74ff-48b5-a446-ebbda6285220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c8974139-17f8-4198-8a69-f3fbcaabe7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f81b31b-6b78-47a8-8726-8d7657440bda",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c348b0cc-c287-43d9-9b0a-bab9b49977ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e3f48d-4e96-4fc9-a841-de44907e8fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f800666-627a-42f7-9a64-3991ae2c11f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e157811-3c79-478e-9259-a3de90a3d14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e749ef-eb44-4f44-9096-764c25dd6d0a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70748f4f-5e4e-4384-819d-f08440ddaf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9f0c93-701c-44dd-9617-9029d4e08885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1db0f6c-0975-4625-843f-7ee365f52d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "32ae7b7d-1c04-4091-9ab2-b6f3987a5d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965d4d1d-b03d-4354-9d74-7a7276a47f9a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c39058-d9cf-4116-8159-5878aa4000d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aedb11f-af2d-44c3-99d4-d768b126d865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de52fae-d826-4086-b5c5-7872720eff5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e524414c-b1d4-4d2d-b680-412faaa80f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0815ab53-9b8a-4519-b074-eecae9fa7b90",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb52161c-4a34-420d-864c-aee329f5c44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf970e6-5c0d-4ad1-b630-bacc6534e29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d936b39-b104-4275-9db2-6c41a23dbe91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b92f1c0e-b177-4f9e-9a8c-56fc69d607de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8235a687-d583-4004-baa4-d1dcefff102c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b66b0d3-544e-4009-af68-f41f5c40dd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753cc1f4-07cb-4d1c-9f85-35509ad34362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77347758-9545-4400-82e1-afe05aa58722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7101b0-1fd1-4ae1-8554-038668ebb14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79309cb0-d175-4816-8d61-dfb3c49839fe",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d82bf9-1b63-4a17-a8df-dd524b26f3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac11475-2499-4d53-bcf8-4386cc0228a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8d28ce-2e3e-4ac4-807f-66ecb09c3404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c71c18d-3b84-44fc-a0e3-e50817684ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7821dc5e-1c30-4a2f-9e8a-7d10c3b27cef",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a25a242-3c35-4138-88d7-e03a6ab409a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394b2930-a227-4843-ad28-61a291fe5ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2392c7f1-62c4-44f3-a456-82e5202329b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b55ef030-c0c9-46ab-96f5-860e3314d71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66610cc2-0b2b-4f89-815c-365c243c85d7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb63febf-48f8-44ca-bcff-dd62bfb68c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d56fe93-077b-4306-a394-131048d6eda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5593df-7aea-44a6-8173-fc33ead533f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c121d2e-bc75-484d-810b-55d863cfa9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33e0fc3-f0ea-44ad-bb87-05bd6a700a7c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02da66d3-fb3b-4d9b-9ea0-df2034d93ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d794517-c2eb-4d5b-bc4d-73b8e0eb63f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3a2e2a-a99a-492c-bc99-02ff417f0ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "038d2df2-b584-4836-9401-31c2b4a79b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa06d001-3a29-4ef4-9168-66f05dfc096d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4baaf1-23f9-42c0-9cdc-280a39d72952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229c3caa-e6c7-45af-bb9d-ef42427e04f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99c374f-0578-471a-8833-87ba0f9b06bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f95c653-5dc2-4382-a415-7009084377cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98be660-8b1c-4cf2-a928-17c963344111",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788ea841-41c0-4804-9480-b88eff21c24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3bac0d-0cb2-485b-9cc5-08657613ece0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c12ce4-45e0-4d6b-a7cd-708af8d21d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "403a2e3e-d2d7-496e-bd5f-3c60d225cbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc20b84-496e-4216-a6e9-c468836e25b9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e724af50-6745-4071-8ec2-32a597856241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a959cdd6-b94c-4467-b879-f495ef910403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e1b691-47e0-4397-b585-67dff3408d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d107cf11-4b4f-46cc-ac1d-a9041d4bbb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e024126d-c063-4835-8add-8dfd8d3cba3c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3bd07a-1b83-4179-ab77-9c4e4f648408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53639c1-fdfd-434f-913a-6e2aefeafd0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc79136-5089-4093-8d07-06c7c68625f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20dba47b-351a-47a3-823a-0ac4f47d7756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252e2b8d-4702-4de6-81e2-4bf31206c1de",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe518f4e-3a8f-4040-8d3f-098d90aea6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420d06c2-d3c2-4397-b6a9-d645a006c206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ede9b93-9995-40af-ab41-0a5cccc0be0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8f91adbf-060d-4682-9a1f-7dacb1a38d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9fd62e-220f-497e-afec-5b81ae279e52",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575160bd-ee4f-457a-b9a2-ad5076491645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4265a44-569e-451b-838c-4489931f3d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d865cb9-e3a0-45db-b07b-17d420025a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "882db2ec-ad93-4411-8ba1-b9ad135c651f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0199b8af-29c3-4185-932d-fd15b468dfef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66363eda-362a-416d-aa8f-0282d9c8c312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ca8055-d709-4e6f-a693-6742ad29ec01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b83037-9f08-43a9-90bb-4243b6b0e984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd94a7a4-9766-48b7-b521-560a22955e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20473ae6-4cef-4475-a71c-f0b14c923b29",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d15da6e-73bf-4bd8-81fc-397b09a063c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb54a09-8ff6-480c-bd85-ff0b396e67a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3a2d52-a969-4cee-9fb9-57702ee550ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a826442-fe15-44c3-8dc5-cf5a0f430267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76930d2-249f-416c-be08-87ded7d08840",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc07ba7-0c83-4a56-b32b-910bcf9d5162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34bc43e0-90fb-434c-8bbc-cdcf6ea7fde9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9990d343-ce87-4c5c-9334-e01280ff372f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "efd6ee06-71bd-4a20-aa07-7b05463622f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f9b2e2-f947-4049-8378-a5e2455bd1ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc6b6f9-1ba0-48a9-a357-e54f1a082798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342c8de0-17f8-4824-b20c-372865b3c87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82087f43-0b37-4afa-ad46-9f0e473068b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a73bc0-3842-4887-9ca3-0fba65b67de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d792c16b-91c4-4cf2-aada-76bcc0fd6684",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9efeaa-6901-44a7-9c71-dc47b10e6ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b722bd-21b3-4ea3-ada7-f45744a47f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4491dbf5-7451-4f88-87b4-8e117090ce90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a316149-91b7-448e-b0fb-7e7f7b2c3c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc37483-5e5f-45ea-a2de-e774aa443bdc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cf0acc-7f6f-4663-8aea-83379f81f706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933d5a6b-daeb-4ba5-94dc-2c435c2019fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8744b1d7-47a4-4709-8afe-fc42ca722a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "25fae45b-45d3-4352-b99b-cea8e4a6a55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af45af74-c5d0-4393-8f51-ca2122cdf908",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea3475f-8da4-444a-abb4-9e78e0e6a61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787ec3f0-e6f7-4028-acf2-2d8cecb9f198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf74fad5-2c81-4f44-b6c4-5965428fb4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8400eb-ab16-47f8-bf30-5dc71e465f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f057080d-8e21-4e2e-9a50-2588fed4e1c9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a125908a-fa39-4c2d-a001-54a28cdb472e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21117fed-c626-4b38-b9ba-8f07880907b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c53cff-2c11-4686-9839-4396c060e3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9783704d-ffce-46e9-82b3-1c8e7a3fd4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc0f8e6-b701-4320-9633-b0e1841e30ef",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5449254-7ecc-491e-9f0b-ef9ab9116c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bfb962-0636-4ccb-bc44-c10b553fed56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10eeb540-1189-4e50-8560-cd397ce26dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afe4c95f-aaef-475b-96fd-2d657e8f1f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f72076c-942b-4a25-8b91-be78ca291825",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf84c3b-065c-437c-869c-d3dfccdc8b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380eb705-5b63-4c92-b464-c7e66087c1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8643b3-4301-4be2-80c9-011448b640b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "caf7ef64-c6f7-48ed-b34d-d1f0f331ff10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c3b631-1a7b-4b21-b890-669f67197ba5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22800b90-1979-4d25-87f5-810b9760ce41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bddd91a7-ac09-437b-8f70-05553f75b938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe726620-c87c-4723-b111-0271316ae19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d83f1c5e-54a0-4b0c-95de-758952eecf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529463b9-3151-4a19-96c1-127c3ac36968",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e1a04c-2f1b-49d1-8ae1-fe98a49466e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b651f7-f880-4680-97b6-25b56f63433f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f62692-b73d-4d49-8a21-a88efd111d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a862cabf-4704-4e5b-845c-f11bd80909a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f52056e-7831-4727-8a26-56958565c453",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cacb67a-7b33-4051-8f64-27679c251109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f43af9-777c-4af2-9854-7abbf371e7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cffc055-c8ba-4ab4-bb89-c088a3bc660b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1580f9-2324-49de-a05b-0799b8625caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e198b064-0e4f-4d29-b035-c6fbae6ef821",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50013a97-f85b-430b-9271-ae38d19286c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3da321c-2707-484a-bc9d-c813e43c57aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f3bc41-37ee-45d0-a641-dc1c901524a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e726999-ac31-4349-be0d-a36851f0b69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30cc6c8-7d9a-47b5-9d00-bfe36ff9e1e8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70300952-2b22-4d26-81ea-5c7290e04722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae19dfc4-a0aa-4661-839a-ba99a5416a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc62567-3f29-46bc-8c0c-0485a59b7608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1df1972f-be6b-4dd1-acd5-4d738b39ac01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13591c76-3ed9-4f8a-84f3-338d13c85e32",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1846e128-c68f-4a55-8026-81fc4527c27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc97652f-0945-46d1-a6e0-f399946586ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1235a30e-abc2-4c97-a443-cd630984915c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd10c0a1-88ab-4be1-a2f8-082dba8094f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd53cda-9d7e-45a7-b40d-928596975f08",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4ce7d9-3c2c-4064-9cfb-cf10b3c16da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b0d261-b0fa-43d3-a620-29f59a1467e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1653fc50-8bfb-4d51-a82a-90bdd92bdbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f82eca61-c772-4bc5-99b1-9469d32939a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbb775e-bbff-4837-bc9f-df1922c4b152",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ade7b1-9704-4083-8ff6-80130c6b52dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d10b275-7d3a-49d3-9e99-3ef35cdbf4f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c526668d-8d11-4f54-b5f8-cef0fdcfbbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cdae68a-a9c5-4976-9477-64d17657a8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3da393-12b0-4a47-9a75-88aa2ffb7834",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b595357-4023-4a44-a8c6-f3fd88171b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686691e6-df03-49e8-8594-8cd56975f102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c8249c-0727-48ba-bbb4-c64fd8d8d429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e7bb60-858b-4705-8720-68c0982c384f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e60ea0-f742-4758-865b-f2e559310695",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd61a08-e552-4035-9d5f-476c6ea6cd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d116cc-f5d4-4824-ba59-bbb4e3bfc0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda3a775-5c8f-49d8-a2f5-ff6eb5b2da42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa2c153-fcec-4dca-9d2c-266d28b7682f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e1fec5-d887-441e-812a-33f925dfa779",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40256fed-5d0c-4829-bdfa-d30898823f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55234dc-65dc-44b4-ba21-dbaefe54ba68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a9f282-3b39-44f2-9502-bbc183f6a386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "700f4f54-0610-4876-b902-79dc96acabfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c180028-8d6a-4c1a-83cf-cb7cb1fb82a2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a109ca71-1532-4502-ad07-314fe54ee27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "042e6280-1d79-4c0c-8840-2f0ae1bb7812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b328d9-3959-4059-96a1-2b7df55e96dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "940a52c1-a108-4bfd-9cd8-81ea00da3a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7074cc5c-690f-4406-bf1c-27efdaafd90a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e299488-4091-4d6e-b014-24a0ba76a8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbec8a24-d565-4d66-b05f-b506b2d04978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d39abfb-fde5-4870-95b0-acad58b677d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33db028a-cc5b-418f-bb6c-9294fe6db231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3720a09-1387-47f9-89e8-f825fd02b363",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0de4389-fed1-4d84-b6c6-483468897dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd61ebd3-4ab0-42e1-9172-e1ec737c05c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca52c6f7-634c-40f1-9a55-c72f0a46ef52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f98d55e9-e1b3-4251-9dca-036024196f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fc42b3-ddd2-4f18-9b02-208667c710e7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea259dff-6d18-43da-aa7e-29818ce199d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28cc3aa-ff0f-4bf9-93d5-0ee51d1a58a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55db78db-fe4f-4f66-a25f-530d16125e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b11d596-dc17-4922-8654-727fafa9d762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f13a45-3446-4765-8a1e-71f796e45378",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6f0e96-57d7-4529-b4e6-ebdd109faa76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeba447a-ea2e-429a-bd29-6a5eaf8c8545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc0a6d1-dd5b-4ecd-a271-742759473f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dede0e69-3832-498b-baee-7492d1e93b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f8afab-8f1f-41fd-bd96-e2f59a00f17f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06e0c0d-149f-42b5-93e2-f3cdf60ea978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "089b4511-9294-4593-b5b6-33d1c29bf7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d15722-c02e-4032-9d8e-846514b10be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd86c8ed-3e8b-4903-867e-48ebe0cdd53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca051091-06dd-4b41-9b28-20614246a22d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b26a96-4f8f-46f0-8527-cdabd29865d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db72ddf4-f1cf-424e-8f00-c57c5ea2d1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640680dc-ef6f-4350-9779-2b9678033964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47b246e8-937b-4a47-a3f8-f972922fb84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff77804-019b-4247-a1c5-0d0d57754358",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37e4ffb-6b62-4f6c-99a0-4dd326383c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287c496f-6bd1-47f8-9a59-ad664d171988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c11949-51dd-4782-8db0-9ee2a073e992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1690f464-966e-4778-9880-e707cd02e891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2074347c-92d8-42dd-896a-7f067514eda9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f81f840-e4fb-45a4-bc2f-cf60bdc00348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04677d73-cd34-4ac9-8950-9c40445c4386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d235233-4273-4468-afe9-1c9813c3a43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "534c876d-f846-41dc-bd71-99acb202b017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1543c8e4-5b23-4aaa-a60c-afb6df7d516f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e648526e-19ba-4492-9b50-65bbc627f540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4402dbc8-65d7-4617-9bb4-c2e0fac8b3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ecbe28-6382-4df8-9692-0aa8cc229f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7ecbfa-2751-4e89-acb3-4efbd67f9689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8a8d15-d8a6-4fe0-82e0-69677cf2eb37",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47646388-bb1c-49f3-a0f4-fa105fca9e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cff3219-0fc2-4b96-a898-1c7bdf4a5ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997ebd0f-1eb0-46d1-a4cf-132149b0894f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "37f20ceb-7394-4480-9282-28dd64d2b4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd07a9a-9066-4cf0-acf8-1e5dc457e587",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22553332-f88d-46a4-a029-3e2fab80f967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f038b777-5c54-46a6-b054-8a7da9b107a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1ff72f-5fce-4533-a36e-c61252bd2e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d63e1748-d9be-4c33-956e-4556adca4acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2076c34-e5e4-4e59-a253-6a468c18a49c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d653153-c1a6-4451-80b0-e5c54820094d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb725761-a9ad-4135-b0e5-e77ca8476d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadd9f1b-2b67-4e81-876d-142d8f4cbd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "98dbb3c3-3d69-469f-8322-741067baf21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43877f37-d725-4b9f-9e95-d3e751672419",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78812ba6-ea86-4a15-9179-d5c68c57bdcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5a28c3c1-828c-4cc9-88b9-cab2a83d2091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7d4252-cb1e-471f-868b-6babbfdd22ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab6c1fd-b058-4b95-ab15-5aadb20a10f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "52ad1a1e-ae1c-4601-a49f-07eedd5b67b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48856df8-d131-400d-ade1-92762eaa542f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186fa938-d079-4527-a21b-9570268eb53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "beb66c4b-f48f-4279-ad1d-6536f23ba273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090cfc81-816a-4373-8ce1-7c0a6d342fa8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f25ff29-9922-419b-a1ed-a68751ab8c83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff5cbf6b-7239-40ba-a685-c96b51ee92a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d741aa27-31ed-4c96-9d32-fc9ffebbca27"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97f6c756-e5c1-4737-801b-e4a02adb786c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e23b667f-5e45-4ac2-847e-85522e657e68"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "77dd1cda-f86d-4c99-b07a-b559b2d386f9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e6f5e71-589c-4924-a6bc-2514a440d6b6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a6f49a88-8f71-4bf6-8900-ae62c99adfed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59dcec1f-c13a-49a3-aac1-f3c9f6a71796"
                }
              }
            ]
          },
          {
            "id": "7de80105-7680-48dd-9011-e1e54505a485",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e4e18b77-1abe-4a7c-8737-368d28a8e5d1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "301e2fb3-4d39-4995-8f48-4b1459ebc3cd",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cf3df4-266d-4d4d-a999-42eb2dd84338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "346542d4-58d9-4885-89f8-24f677c0a987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bfdfe8-976b-49dd-81bb-a79656f3973e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e107a7-2bac-4014-97f6-e84b7dcb1fdc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ffe1c38d-568a-4fe3-8a08-b37a649f6fa2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0795dc3a-713f-4094-a2f8-ad8d1a28af65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4baf5d63-3c87-4bdf-996b-33735449afac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ac6d8ed-d67f-41f9-9273-5aada8b66d93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7b3a1e28-302c-473f-831b-220f311985f0"
                    }
                  }
                ]
              },
              {
                "id": "4019fa7e-7650-418e-8e91-08c07008f024",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0ee92b1-8ec8-4a0d-912f-a0a32c7b86db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0be5e5d-45f5-420c-a4bd-8645da25f459"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b605601-f5fb-4a88-acf8-5ce984d52b8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c4d2e762-0885-4913-a9cd-457615db169e"
                    }
                  }
                ]
              },
              {
                "id": "6f22e3ce-a0ea-4eb2-a2ae-32f3dbac57d5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea344201-0b5a-4a1c-ab3b-881cceac9327",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "702bfd87-d073-4d30-a7cf-c5cdb4cae9dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c07f938-9f2c-44d1-97b7-9da863068b7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd2de470-e493-4a2a-9f19-9cdf6a74800e"
                    }
                  }
                ]
              },
              {
                "id": "61490eb4-3122-421f-a341-6f9a7e961217",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "222f541c-7720-4583-bac6-828989f5788b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93e2b5f6-ab84-41c6-9040-3267dbe287e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a76ebae8-0360-4188-9f10-d941321e40a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b78735dd-96ed-4ed1-8fd1-e8b0ca0645e8"
                    }
                  }
                ]
              },
              {
                "id": "d78f377d-85cb-4082-b033-e26fd2576c84",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58faa8e2-3503-456d-adee-7db4a082c8e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91656f1f-89cd-40ab-84de-17ea9223ee95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "276afeeb-1e72-46a5-9802-36846f9d3f52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5db9839e-ce5e-4227-8f3d-03b730981e59"
                    }
                  }
                ]
              },
              {
                "id": "0e712fdc-4578-4eee-86c2-3704a2e26c3c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8eeca48-0bcf-4319-9b68-28617b611151",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "faf68852-f28f-46bf-b919-23790dfbe082"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21756425-067f-4488-b54f-d42d021db684",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c3aa779-b904-4b6a-8240-177ba3b267bc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cf155092-37c3-4132-9975-42073d34fccc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3468a5f9-2e35-40d2-8d25-3ecb6c71eef3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6ae5d84b-be18-4d19-bf9d-c43078379789",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77797619-5dfa-429f-bc2a-3d7f7b0ec58a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d09dc630-1f55-498f-b03a-72615849ee7c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f49a2743-7d1e-4c2f-98de-a9415d943d8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7e5ea56-6079-4e50-832e-f9acb9ee3190",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94328dba-4af7-4e4d-9840-ef847c20cddc"
            }
          }
        ]
      },
      {
        "id": "50df068f-a710-4e7b-90f5-9ab3dd19d67f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4a4310ed-8778-4766-ad38-d37d70994fe4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e424de5a-ab79-47dc-a2bb-6d8ab66dcece",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "99bacf0e-81ec-4f36-a0f9-9a10c9f5ad5f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e26c37-05f7-41dd-8951-b4b9809b1d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f19fa9-7032-4944-98ea-8019e23341f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ba098a-33ac-4f7d-ba3a-5b5279137c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "652fb796-f34a-49ee-8ea9-b0818d4f9c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6404a254-a052-47f4-98bb-09544213e816",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5059a443-3fbd-4d67-83d0-445d94c5787c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571a449b-2a52-4960-b148-b082a633617f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bd4563-53a3-4228-a8dd-b9cd1e3a5f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5090f4e8-f4f5-4090-b36b-03cc5c4a9d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc90ae46-5428-4549-ac65-4fad45fa84fc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a31a2c2-707f-4b9a-a9b5-6aaad3ebfe1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7e200c-8698-4dc5-a8d6-7a3d165c507c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c894ac1d-9a6a-4730-9940-c5b2b4438756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "034c8f40-68ef-402c-a99a-d77bbccc8e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a17b0c-c0de-43aa-815c-2e086c423f67",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e9269f-478b-496a-8b39-04a7500b67d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a7a896a-4919-4af6-b443-cf82b9b095f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b4c9c0-a028-4143-8621-3d9f217271b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23b1b578-5d5b-400c-ad81-cbe71a12ceae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3b42aa-5f46-4c6a-bcea-e46f673e4424",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75618c8e-9fc6-4cb4-a0d9-6e80935f7b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0163557b-ecb7-43ae-8748-b6600e561b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc85865-ed94-410f-98d2-bcbf783db2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "216b0f9c-3b9d-4a49-99a8-d4f504c79624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e075fc1-0ebb-408e-b368-ec47e92fdfac",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54f86be-fc95-4107-a389-c7c1195106ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50988498-5089-437a-bfcb-0268b9020edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b35ec4-d665-4f5f-be6c-08cd695ff8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16e35375-c552-44a1-a507-e9ab622899fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909522b0-efe2-4f2c-9cb9-91885e90f365",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31747d2c-50e2-4460-b33c-77989db3cb68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d22ec7-0607-474c-a2de-89f490afe6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd6946a-b9ec-4177-9c7e-51602b7a8f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "265ea75f-fa71-4e9d-acca-4dda0ae451c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f9ca8b-d853-4fde-b2f5-7d4a6a8e93ca",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34b0179-9116-48ac-886f-c8b7cc1afad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747ccef5-3c61-4ccb-b4ee-8a638c3a745f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fd0301-a668-4230-b97a-da86e84f1a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d96699a-1dfa-42c3-990c-95ca495cb68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12acde5e-e929-4608-b80d-e8f6c1e0390f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0b73fa-9e8b-4afe-b941-1c5801e124e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fac254-c1ff-453f-84ca-69fda8e7c968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5c75df-7977-41aa-a5fc-64bb4fc5c950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1209191-243f-476a-97a3-a5dc26fde547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910966bf-d2e2-4943-bdd4-6d65bc1810c6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd5813d-5c57-48bf-b76d-f8b682627213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ebcc63-d17d-4b06-ad30-d52d7b9766a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7186c537-fa1b-4f8b-affa-06246dba1cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3de3dd48-69d3-403c-8175-23c5a8fe0b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5158c8-dc7f-42df-8bf0-f11246f4fd6d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30a2869-e597-4eb8-98f4-6d937363552c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2d5808-6841-4c78-8c0f-aa174e225ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f861f473-091c-44b8-84f2-98a19637575a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8210d1-248e-442e-83be-3e44e098e8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348ab05c-918c-48d2-b487-a73fb2ed7f17",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99a252e-90b4-4ab8-ad22-8add61faf08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd0526d-a8a0-4d3f-b678-1d492d0e3515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30322f2-2eb2-46cd-89e2-a5a70222fd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49265e0d-a734-41b9-a2f7-834a1d65c9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bd9dba-d2cf-4659-a74f-707650e45577",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979255b3-2897-454a-b29a-000baea07a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974e744d-2919-4031-ac17-6d22deb11e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47f2a1b-86e4-4271-8393-f241b5dcc1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ba0dcf-e8d4-4f20-b568-3c476817c666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1855da-a6c1-45d1-bbf8-5e19762b5759",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b94d611-6ef8-4c6f-9eec-17e067b1de5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1836f61-1487-475f-903a-cc66f1deac39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d257b4dc-2ccb-4e45-b6ac-f4b3ce39616a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fb9b4c-312b-4673-b4b2-d7cc21c21952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0bc003-1afa-4851-8e3c-d9deee5092da",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67542bbf-9988-4086-817d-6a7cae7f49e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a9cd0e-e7ac-4675-a1ac-a5c29f408417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a39bb4a-fa7e-48fb-9e35-f9ae09b612c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "02d1d837-ab99-47cb-876a-2c9cdaa1c69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5b7583-2d9f-4c6f-b84c-ae519df90f35",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9046de-59c7-457d-9295-84f7db8aac8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa41d96d-9fef-4036-af18-4d2870b3078c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad102974-7856-4637-a137-f6bdff833927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b13960-154b-418c-98a7-fff5373c9412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ba3d9e-8090-4c2c-9ce5-844607142ee9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5c6507-a3c2-46ec-b366-8b25a6340463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3c1d40-073a-4554-b023-66b00f766397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98daead-d08a-4350-9f7a-4b60126e6c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a21ccace-4d28-42cf-a1df-74e97e517f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ca5378-4cd5-40c7-9af9-b2d7e8f5e48b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69175e04-458b-4c71-a2a5-8d80b01a0b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca61198-5cee-4272-a85d-58b45c3cec5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37903f3f-477a-4b28-b133-0ab4b1895473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce3b56d1-ee66-4eb4-860a-0b6ff5546afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c203aa4-9878-4970-9394-5341290b3c24",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc759e27-42f2-40a3-9c75-027709d88d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd574a7f-7ea4-4bf4-a90e-d057e22b4d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d4aeb5-1f99-490c-b553-8bde48d4eb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e09eed9-b68d-41e5-aba4-bee5d904e48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5079e6e-254a-46c2-999a-9f7f0d5fe1b3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12ae5db-ce08-40a4-acec-97ac39912533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a44667-9682-4bee-b875-a6f61655859b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e040c09-8095-468e-9e14-0dcc82f6525b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6492d160-7383-4ecc-a75f-c18f3c1c70aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2047cae1-d4c5-4e1e-a0a3-d33b399d7fd0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ebfa1c-83f3-4468-83f9-e0301e46b7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54676376-23a3-45b3-bac6-28beade0ce16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e3a88d-6a8d-439f-8787-87b70c4549a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be716bc5-75b9-401f-a418-0768a294436a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752c9add-9e5d-4d4c-934e-b7af6f82ce75",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6038c059-281f-4534-8b98-f6a2cbd24e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9761bbc0-1e2f-4bc7-a6a3-6d590593889e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd36686d-6a3f-437b-808d-3acdd63f47a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a98418cb-c672-490f-89eb-6fe09d817bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f31947-b802-4766-aaae-39c5f1b073d6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ecf8fa-8abf-4672-baba-270957bc5da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fcc43e1-0543-4263-833d-eebd1294bbb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7dfcfa-ce9c-4c0f-9807-1f5fa744ec9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b60c5ea9-2311-4618-94d3-3dc0ffc65421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6ddefd-eb0c-481a-8d0c-5f4935b567d5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ecd5bf-b7f3-4457-a2e5-bbacc52970ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a79de1-437c-4ac4-9bb1-8472e051e7ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027fe2c7-014e-4f7a-93ef-2e1a5e76aac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f22f49a-9657-491e-bb1a-9afe32c9aaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773fb7c0-387b-47dd-bdcd-70c1f76e89db",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044666e4-1fa7-4210-a98a-d5595166d914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0129ae-32b1-437d-bfa8-17178458b3c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159d65d0-42d6-4fd0-9c18-daac51b3b257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "debc2f68-0575-492d-960f-18e5e964e732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70952b09-3fec-4e05-81ba-53e83116a947",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1e6e53-2597-49b7-95c4-e77864c6fe06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68dd50ea-b6f8-4066-99ca-d6e3807654d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d54f5b-c08b-456a-82f8-75064febe308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8425128-7092-4e9f-ba9c-1f95479980c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a28631-ea1c-4280-851c-5bb05248a175",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f325197-d643-4b01-a3a2-7207879b9036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f89ae0-9d9e-4a48-96be-726d14ebfa69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4150b8b-86ce-4a8d-851f-fc1daa2d4dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5db3a59-d4d6-4efa-a3b8-64473309a48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2dfb0b-5a80-4f07-bf56-8676c3ee3b68",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0a8b1c-49a8-4d7a-8167-a84bf0624c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a70626-f6d9-40b8-9e96-c55dea2b2475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7afb8b-c2cd-479f-9d0e-c2a267566951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59ae162d-4c1f-4fbd-8cba-f62d1e3088f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dea748-f544-4db6-a8a8-c2771a84dee2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ed8923-71e5-4f49-83a4-4f04b0f42d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7182a60-55f7-4e1e-963f-409149d99998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9726e78-1d17-42f5-b4df-4e362ab8f3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f45ec8e-dbd9-498f-8d6b-c069817868ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f84b428-5b32-45e9-8f00-0e10f56d1af8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0712dec3-fa0e-4f3e-a134-40bf5666d683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488dd8b0-46c2-4d3e-a467-827b5a0d6f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a678d68-2913-485e-b15a-8e740b6cba59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75e65959-d657-4a54-a8d2-798f769fc5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f185de15-89f0-43bd-a81c-1c2f8faeefa7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159d3c73-abcb-4c25-b4e4-78877420d6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8864a3fe-ea7c-4da4-ba53-d9b06c4ac85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef779a7-5cd1-4221-b346-4cc3d69b1520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "601c637c-1ae1-46ca-a699-59fee95c307d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5503145c-252c-43db-865e-ee38ca428a3d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f408c8-50fe-41b8-9dda-7e7583812d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad96f22-be92-486a-96c7-9f83477e3084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a29ddd-f11e-42f6-8dc2-9232b0386bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96823a52-f1fa-4069-8731-5c8e399f2f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6199e0e3-f7d1-467a-8728-13b7449903a2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf65c18-255f-4a24-bd39-dfe4e22d6c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8bdeb5-2646-40b9-828d-d1de4c83a267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b490789-5131-48cc-b299-cd5316d02960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e61c46c7-feb8-4a75-82ba-626fc75d71fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c7dc61-68e8-470b-b8b8-2fd9f0feb88a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77cefdb-0557-402b-a03b-772d376c2787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fa4a7d-7cb3-479a-a61a-dceb8d8b71c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf65cf9-9712-4e64-9c7c-5b88e4a52d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e511096-ef19-43cc-b2fe-653da53d2784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2748ff79-4261-447a-b141-3e8b0e4d4387",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90909f94-a4b0-44c5-9a2a-4f223ace50c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e780e62c-444d-4028-aa1c-119f76104310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493f56e3-8ec9-41d8-91a0-46fca7c588db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ba054b-2985-421d-bac4-90b9ce1a082f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e3abda-f548-4568-8b27-2d1cd4c84924",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bb6966-c5df-4a88-9bf9-a474d8494227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fce1de-e5be-4c38-8415-5b4160f9090b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96dd5039-949f-4702-ba41-17f3b7c42284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbaa9b3-ff2e-42c9-bafd-425e6f4132e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d95599-4e21-4ef2-9f7c-3dc8fe502ac8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8764effd-66a1-40a1-8f98-fd34c54f07ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a7fd67-1778-4dc0-8027-6ff751f4f54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a977cd99-686b-415f-b40a-266930d939dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b02eb0-cc60-4d5f-aa14-903e2867447f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "356f1227-1d3e-4dcc-a300-fc1d2174ad40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c88d93f2-d560-4745-bc7c-b5a3b1ba0f22",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e75148-5525-459b-903a-81307143ad09",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6c61330d-fe7f-49e3-832c-1a8561403b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb15c2d-892d-4b6c-a500-0e38751b3b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02fc7fbf-4902-4dc1-9cc9-45c34a206264"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0410dae-b76b-473f-a4f5-97a204016ad9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e919556c-3ca0-499b-a306-04230d223ec9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3273f78e-f752-4d6d-a94e-c4bce3b74159",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a882ddf-ba51-44fc-960d-37f3636206f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f827e450-9b16-45fd-8139-4d3058325bd0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a556dc9c-d771-4cc5-82f7-89ec209222cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2cf0e73-7925-48d7-8054-7fd5f66e6658",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ca36f70-0483-447c-8b20-00c1f5487883"
            }
          }
        ]
      },
      {
        "id": "463b8a53-d9d8-4e26-9724-8686cecbbce7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "be1bdcf5-401e-41e4-be45-263ebe3aea22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f48bfa83-ab8d-42a5-a58b-344ef5ac3c90",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "09538cd2-f1e6-412f-a002-c2643eeed30b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4107d4de-ed29-4621-bc40-683b43dcdd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd717fb7-b5f3-48ee-84ad-e851153ae3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13ff4a4-5004-4f53-820f-3436b7534210",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7e4a34-2c1e-4ba2-afbb-7c4413605793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de234750-97da-486e-9d1e-d7d0018a6beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcb60d7-7f1c-4e82-bc8e-ed80b7169caa",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e229c89b-0fde-4710-9e70-567eaf1277ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef2a76d-6d27-4d39-8b45-d09f91d208eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe16485-ec02-4c3f-ab1d-d9e009f36260",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45401fa2-689f-4ed8-8560-d6cbb8b5790f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d592f298-5323-4bff-a52c-d400d8f33da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af021881-fb00-4305-87fc-301a6d31ac82",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da5f344-a516-41fd-9c6a-37b05e9fc071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e26b1b-8b2c-4e62-86f3-2babe2ba6b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4c005f-5bfc-4aac-aea8-942eaf0d4f9f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6144e9d-9657-4a99-97bf-a86b14d21d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7322d7be-325e-475c-9ff2-300b3912c93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21920ec2-eb09-4b3f-8cfc-fd18dbec13c9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e14ffc2-1799-42e5-8869-b0689965e02f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d262b4d9-ced1-43b2-8bcd-3b89979c5946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa3b8e7-836f-4ea0-94dc-0eca2aa5bdba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436fb640-fee9-4056-a4c2-d3a3433d9dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4353fb4-dd33-4ec8-ab02-4edcb15d8a4b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0fe97c-b14f-4ec3-8d35-98fe27c6b87d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dae820b9-0eb2-4d70-a9c6-aed071b5a24f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29743013-6f7e-4501-b97a-e5875e658f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d58f60-4cb9-4379-823d-f7ffd01aed57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38378202-2780-46fe-a3d7-ba7feebb40f2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a482ad2-8570-4915-a6a8-64714ab0799f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ea8f143-034b-4e5f-8116-1ff04f616f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "794d9a59-7ff9-4e7e-a467-9e73d6a49112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8926a71a-97f8-4247-81f5-a73ac3fbdf6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b38d3c0-32f0-4d1f-a83f-17f4b2c332f0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4505ec-3ec1-4f95-ae3d-379037844008",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53d038da-0114-429a-be6b-6d9cb9c7ca25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5611ed-554e-4252-8910-476474d98d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c4af0c-cb5e-4304-a2f7-072223fb61d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6b1bf8-ae60-4d5f-92dd-339ad4384031",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bb9d91-22f7-4ca7-a8d6-3873d32fab7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f142b29-411b-4849-b2aa-abcc25d1001a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebf01da-1784-460c-9ab2-ba77e62f872f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303f9b58-f51f-4d02-abc3-b61c5adfb28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd3fa82-1d13-4133-9f46-d593beba9faf",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52da0be4-e6dc-412f-bf12-c133416aaf09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa19fff1-0afa-462c-8cc5-d455afe2e212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59e7342-774a-45b1-85be-99448fea0311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd2a268-8e94-4a29-885d-3f88dcdd8fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8951bd-076a-4dca-ad9a-34ea514c363c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b219f6b-f89e-45bc-8452-520cb27cb417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21e72058-ee97-49d6-9608-6f736087bbc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6445f38-6dfb-49a4-a580-5bc2c848ccfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429afa6c-9aa9-4eee-bb91-474dc96d7851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a3b09a-35ad-4c18-a55c-cb0e67c0f28c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4426932f-889d-456c-94d3-9366d4e16f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d657f5b9-dce9-4ba4-a54e-819d49012733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9607d477-b730-4376-bfe0-ffd22ac781ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31b96cb-0c49-494a-b945-7c07fb300ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c9d2ec-6f5a-488e-a0db-54c539a7fe5e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8c9a2e-4a4c-499d-8ce2-814673e0eb2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09990c64-f2fe-47fd-a88f-9c9c39ea67e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "191e46a8-0596-4196-8e37-bb2b8620cf72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55dd7df-c9c5-4b85-acb8-452e1594df6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bba8f6-b853-4e39-a575-5b485d6a5102",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f80bd19-45ac-45ca-8589-fab863819352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "110b6b90-abde-40b6-96d8-2a164ee0d671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fba952-19e2-4fb2-bd4a-4e2b114b2845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e2f564-3438-4f60-91a7-d29386001183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac8f544-fbb6-4797-afb3-ca56dfeaf4e0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb62da73-1c89-4200-8cfb-2b3e08b00d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4073b79c-525b-459c-8895-ee48f1c233e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bddf92-ad8d-465d-8e05-8603f06bf3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c4d2df-13e1-40cd-9fc0-3dcb038ca9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439caa3c-89c8-4e97-88d1-781bca0e68d8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ef1b73-792a-43a5-98ac-cf2e3c5c48f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81739815-8de9-4a04-a67c-d917a93d60fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6bf3df-e990-407c-9422-2b7729bc40e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e044a23a-7d1d-4b00-86b7-d9559bafd59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea60e731-580c-49ff-a064-ee9198ce1023",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740c0790-98bf-45ea-9dc7-c6c2388e6c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6994782-1b5a-43db-8181-ac33481f7756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7112cc9f-fff3-4a5f-b892-f6b10bbdbbb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ff450f-586d-4a0d-ac42-6c51d6c62c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734c9d30-845d-4dcd-b02a-57e08399e933",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b8be52-448b-4c8d-9e9e-1d363ed534c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7190eb67-57e6-4beb-b443-a179971f865f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da63058-9656-4cfa-b0af-4c70f2f54085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2134de8c-d8c8-4cd9-99f4-2679ceb51a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96eb6bd8-c01e-4057-9853-1d4d291020f3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bf6ee7-9321-483c-846d-8ed998010a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635ca0c3-a368-4a23-ae51-a63f5bb37334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a24c2d0-26a7-417c-a0fd-99fc8fbe772d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773aaf98-4760-4194-8e76-32c1b4c8747f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea34b3b5-930d-46f9-9b81-3bbb389bd8dc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52043587-fee8-4ea0-9a35-7850a1b29287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671614db-8e97-4835-9cfc-10c1400111b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c21e70-a6d8-43a8-887d-81f4284f41c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9419a6-8c7c-4dc8-8e15-c6bedc664504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f185cb5-5c7a-4889-a501-7025b38d063a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ec960c-1a15-494c-a5b7-e17fdd64b35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2e9df8-8938-4770-b9d4-2965ec58cc84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61214cf9-1b1e-4b68-b814-fe78cd0a4f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d6a199-f506-40df-8547-5e8ddee3af1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6d55bc-f6b6-45fd-bcef-ccba6c8c4608",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d42c79d-a0b6-4613-bfdc-84b376e6efb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe5e1b72-591c-4bba-a29a-a528948b1ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63313dd3-b3cf-44e2-9db9-9f1f0ee9cbaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a298ed-8fed-4986-bfbc-60984eb8bda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7961e5f-9a8b-4ea8-808d-12533d69af20",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a78bc79-2a81-4a5f-95f4-46083667949f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "909ff59d-ce19-44b1-add2-91a6c7771a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77df3651-7246-4f5e-9ee6-626f785c47b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765ddff7-452b-4bbf-8172-b37e0162d948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83cd4b8-7442-4774-a1e3-a96f4ae79df6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795ab69d-d82d-4f0f-a269-ee0c97eb9c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0779df30-8d5b-4e02-8dc9-51e80f7c23a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e441276-71bc-42ab-8748-ea224a4e0fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18a1b8d-eb59-4051-87f6-a85007daedfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82d4e02-4170-4983-baf9-5555b604eb4f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44ea8e2-64a8-45dc-9e51-6aeb2461bb34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61ec5de6-79d2-438d-b7e6-2ee56c6ddbf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "207e44e0-a345-4a90-81f9-6c264ff1138d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c5f89a-de58-44b1-a6a4-0f7a9a87c782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2126a6-95a5-44f9-a0ad-1c777f2e6915",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3f9a60-4def-47fd-80b7-f521aa4d65ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca2cd92-7174-411a-ab0f-0090647eabe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb57e63c-567f-454b-b161-c6d13f37a0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667bcbd1-4b39-4b5b-b59d-a9a1c7d10c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55e0345-c2a9-455c-964f-2f9989472391",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca810943-a181-40e3-8076-7127f2478697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b55215c3-a0cf-40ac-91f0-6eeb36a90467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "490775d5-6f69-44bf-9782-552945b983a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16a7d29-0ebf-4bd1-8c06-92c6d8e26a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83e6768-f6c3-4959-ac63-4402ea62677a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8e596e-4c26-4033-ac6d-0c16a8fcdf9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6ed5669-6602-4b63-a663-78492326ecd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ac3159-a297-4f82-a277-07ba2c1f61f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b5722e-3732-4394-903e-29cde115cacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959bfbbf-275b-47b1-886d-fd993b619916",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95cb850-e5c1-4a57-9974-950c725bacd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14fe3fb9-775b-4e47-a642-39259924084f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb6e184-64e5-4075-9286-e7a93123ce5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ca6581-a9db-489f-b4db-8b3836122c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dd94d3-4467-410f-817e-b787c88b1f52",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589625d6-aada-4caa-b67b-28494838bed6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "404bacd2-fd44-48ab-bf38-60d08f6c0979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc76b8d-f877-4f19-98f4-8d88ef7005e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3246091-cafa-4ecd-8802-88c05fe9c9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc877317-6eb4-4e62-b948-19ad7f2ed9d8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa3032d-66e9-43c4-b313-f40381f798cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f48d6c2-34b1-4c16-878d-fce89b134122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dcaf37-a904-4e6f-b36c-305dfa5054f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c65ed6-0bb2-4df5-92d4-356c4b57dba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdcdc77-e03e-40ee-beb1-e6be67a1b9ed",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e21974-cdea-409a-a283-9a7318f89ea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cec0d08-5e59-48f1-97aa-4fd45e9f9b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7762b3-d0af-4cde-a81b-cfb65d3f2767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36afe5e4-7fdf-43d3-babe-96ac153fcc38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91450364-2d41-4907-9ab0-57dd7604307d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30be2c4-6117-4dc5-8451-8f279e33c360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e61d6a-b2e0-4e39-8922-281dccc81a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bac2de3-4e42-4b4c-a49d-2d626eb63aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7c8e33-7a9d-42aa-b9e5-8198cec3c9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3521062d-002c-4e08-a34c-feee466ceba2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845d9180-5f80-414c-8aca-5a02dbe13a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f9f6b1-2e30-490e-9c18-07f51f716962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bafb7fe-d84e-497f-a6e8-6972edcd92fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09264d2-f87d-440d-9ed0-b5aba18d0f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b76a4ae-e9ce-411c-b7bf-1eeba9c30035",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111dc803-e6b4-4f5e-b77c-3c1c3a0d7724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3b3ed6-299b-47f0-bea5-6c53c879fd39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec4a76c-44f6-4bf9-a452-0afff97d3d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6ddc6e-f8c5-47a4-b61c-6f8e669ab3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee552c24-fe8f-4a30-8c3b-193b2bffd7ad",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f67553-79db-4db1-a7c5-cb0452846fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721951df-d912-4553-a4d6-7a688fc5d646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b483fece-30ad-4856-b16e-1c14c3e11b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a25ef44-c2a6-4558-ae8e-3d1ae00aadf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53da13fd-1a84-4ee8-bfc9-3c8442d08786",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13f97c0-f68a-40dc-9eba-589d4006f55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2a4e91-19f7-4fd2-8d37-d77aa4ef45e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb64bb-c943-4068-b83e-79045828c6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc86dc2-5356-40c2-89fe-cdc760f2bc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e7ff23-6bfe-42d1-88a5-7de6fd120d8b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d866db-b76e-4b76-8da3-26fd725ff6fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c545b6-401f-4616-b700-1535e3dfa70d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b41275-5fe6-4710-b011-a92c8ec53e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb9be3b-a519-4e88-9505-274cb0f28226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25e2dcf-2ddc-4e7d-80b1-0cfe34fca29c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222db824-67cb-42d4-bec6-06cbf8f62587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31fadb5a-d1d3-4820-a951-32ffbc493d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9e0132-1274-4b78-a91b-4ecdeec43728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb22045-df21-4521-a424-21d3f57a8251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f2c1f9-3a9a-4e8b-92e7-7e8b86927caa",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7494db-5c67-49d2-9de0-02de3e149d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc3d7f7-39a4-46b3-9048-bead1de82f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d0e751-8bc2-4958-bbbf-7510734ec47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a258071-befd-488d-a6fd-4dd617c1e6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68783c5a-caa1-4e94-bbc3-2765a328b411",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35eb4647-597b-44d5-a451-c45a4dbd348c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece0d1c7-cb14-411f-99d7-7df3b44440a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4f68e6-f6b3-4ea1-ae5d-51d57ad5854a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c25ba8f-13c2-4fcd-b704-8e8210157eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9955aa-184b-4765-8f4b-77765cbe847a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47c6717-14b6-429e-92e2-455548c5f0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c0fb49-5fe8-4869-a0af-d04cabbe464a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f6faf1-19a1-431b-9843-cb7c70594119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35fb3afb-0c7f-45bb-91da-81b21a82ad68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0827e25-c57f-4fd0-815f-90e8031872ff",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3e8f02-7e96-4184-9d1f-0a375dc4115b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c47c7c0-c0cd-4f57-9ed3-9279bf27be03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd062f2a-0bbf-4c00-91cb-e0bc8686aa71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e403d985-0aa5-4db9-92a6-6ebc6a79313f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd56de8e-b588-472b-a0a3-8c8db33fe2aa",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1d7715-7746-419a-b366-71fdf9eea0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902c44c0-9fa7-4244-bbc8-3be332f44929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18582bfa-a97b-499b-9d76-ecc4f742d220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1599e26a-5c36-462c-bd3f-07151e2bfcb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2276a81a-6b68-4a17-9051-0c2d38eadf8a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ab429f-cb79-43f3-af48-ed45d8fba365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ca9ad3-c634-46a7-9115-16b70c70af44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "858a9f7e-8424-4fa0-8e92-9b68956afc0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7261f4b-b2f8-4064-8e07-6fdd13307a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40436e06-f98a-4173-b565-a1d6cbf1fe0d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf9b287-ae65-411d-a709-a29b804599be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0a4111-35f8-4295-b56b-d2c191d997ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077c086b-8616-4754-9136-4c49cfd75d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945bbcd7-7132-4103-8e88-bada8caa34a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e66b6d0-7fcc-4b9d-ba35-83198173a6fa",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6d5c95-3003-4114-8eb6-7f979aa5b524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6cb824-f9e6-4f3b-b8a0-4e945b2d2512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04947a13-3524-4bae-a869-535c88401809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46727953-0378-432b-ab6c-5678081ed3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af2d987-42c1-4544-81c5-414540d4c14a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d69bce3-10d4-46c8-b769-55f28288e297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600abb5e-6654-459d-afd0-537ccccaae38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50160b04-dc3f-4f26-9ba5-9c11fc223dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857a1dba-6414-402e-b5bb-d8143a168054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799c5d11-5316-4a28-b874-181a52bf4efc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f58459-c34c-47e0-b233-d8baed655419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338c2614-2333-4ce7-8909-651a1ac38f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d96f727-416f-43ab-9c6a-1a8efea8418d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687ea7f4-3cfe-4525-b094-3d9e2b459a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c55728a-0921-47ea-9f84-d169f804f294",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6511a2b5-ad76-432d-8e47-863711804cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8064b2c-e502-4f2b-8626-93a350148e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bd0e8e-1812-4a19-9cca-24611bdb53a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d89e01-7e23-4fa8-b12c-fd84021e09bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6b57da-f30d-4a14-8525-963e86b505a5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ca3fe3-b81e-46df-8ee9-bd587c984fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a104ceb-6a7c-42d3-89ec-ad5529291150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0ec743-dcc7-45a6-95cc-45afd331c927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03d30d4-efe1-46ec-bec7-f018e1e634b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb576eb-dae9-49ff-8a1d-5379125d5854",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c757085e-58cf-4bfe-b7e2-4ddd4380f472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145d80f4-1064-4673-b5cf-7d1c679bf9db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f597035a-4fc4-4faf-a349-7ab64660f563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6dbfac-7865-47e2-bddb-0b6e953a4d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277be82f-40ef-4c8a-b8bf-21c7e83f62ce",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c507ad-4e74-49e6-940a-d98563f3b690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68333ce0-9485-4bd9-b2f6-687ad50d6ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34e8b63-9b60-471e-ae3e-425c6438933a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c571c5-eedc-4fb6-84d8-56bd2a0283b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f85f79-a565-49da-8727-614022811a6d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34298125-bbad-47b4-a337-97e2d199b53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f6bfed-32aa-4731-98c7-14ce1b192630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa77a8f-dabf-4fee-9a57-e528cd821127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2006c71-9b1b-4331-8409-06ca66cb721e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7aa812-d231-4139-817f-63f5a5ee5d6f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6cc137-e09a-4e31-9f3f-4241ce6b5e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9858dc-decb-45b2-a18f-14a7d92537a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cda2b46-b4f7-43dd-a802-8f3b26289266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e80918a-0399-40b3-a7de-85bd35e04f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460785a6-4b9b-46e3-817a-258b4ded8d83",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f4700a-ce59-4b57-a7dc-ed9b1964b177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee1c53e-075f-4537-9500-dbfce3ad63f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb7b702-e187-4822-a003-b510c1cc35b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dcb9627-a19e-4f84-84fb-1c7b60a934a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141921ba-d674-44e2-b46a-92808389c54f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d27f6d7-90d5-4d1c-bf5b-7c82b50c3554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca26588-c309-4e5c-aa50-b21e3013fd30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d66acc5-9cda-47eb-a8af-0d986f9d0671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca97de82-137d-4cdb-b5c6-1455ce31e01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ff280c-5c6a-48d7-bc5d-d35ae03a4318",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b6d276-ae33-4231-be75-37cf4a634e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1564f3a2-c33a-411e-88b1-a270d23aee79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5112552d-294e-4405-8233-da6a4fd9b8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd0ba9a-ac37-4288-be48-a474ccc22034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f29f20-7cf8-464d-966b-4f8015676545",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95dd3a1-44f4-45c7-a5ae-37b0269d6156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982b993d-83b8-420e-82a4-eeecd9b6ad6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785b15ca-6586-4cb1-8eab-2bf3178218a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac35ea19-9699-491b-b25f-df35619b2859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d667a62-bf3b-49fc-b1db-8eead0e80d77",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f585c3-9384-4fc6-a18e-ef313f8711d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461fcc7e-cdd0-452e-95fe-700b5c5768ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25f1f67-c86b-4d55-b95c-b2a2dda5da2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "036abf8f-9cf5-4643-80d4-e41c4dcf67cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466ca383-b247-4879-a91b-7033b1700d9e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b3d54d-511e-4d98-865b-8b1d7361074a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501646fe-f248-4881-8bc9-496e5a4c618a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ed96bc-ec99-4da8-ae79-6d4f58f95859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22cefa09-8160-46e5-9a1e-d01b7797fd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf6679b-11cd-466e-91a9-99714645065a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d26a3a0-81aa-471c-a7da-23b05c0de024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bbe38b8-ef6c-4ec2-a908-d5f44ac8660f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff894e8e-8d00-4d0f-90f3-f26af04f6caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f7a328-0290-42dd-8343-639549051a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2128ab-1359-43ed-a5c8-7012bd0c3cf3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053880bb-83c0-405e-9324-b09b6e9d04e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc343d2-e3bb-43ed-a2e2-c22031fa61fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b41bcb3-5934-4914-8290-edc588d04fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ef5394-7146-4c47-b486-38369915fe79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0e7da8-3bac-4cb5-a89e-e9c21b8ef383",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75456bc1-ddca-4c59-be62-893e25bacd64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26c02cb3-59b2-478c-857f-9ea3fe7e2b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4472e0a-6e41-4975-b529-d5534b896367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796f9c9f-0969-45b9-8981-5f7adc873f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a08d14c-2353-4d11-be55-87518f570cf8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229c98a2-9410-42c8-9911-c2b37024c865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3f71259-b0fb-4be6-a323-f60ccba7176c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1b258b-f138-408c-852f-554b77bbbb81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a6a9b3-31e3-4fdb-86e0-82040dee7193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8b2a51-737f-49ae-a9c4-765685bea0b0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9485050d-0b34-4463-822a-d143d99f6f7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02bb8e1a-d343-43a2-9039-0aaeba8d1b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffdc771-807f-43f2-8364-5e59a2704c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b192f468-88fe-4556-bf0a-68695203a2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab9dc01-6300-451a-9979-542f4c9f8d31",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e2ceec-69c4-4c4a-8a8f-c720a22bbdf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8c7062e-5ca6-4bfd-a4e8-3d45b95b2898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3092de1e-a90e-410a-9064-4ef8caa7eca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf38ef7-5e82-4a37-9f3f-8c8148ae9262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c21a2a5-a665-451c-9861-18a0e06c9da1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1793f84-4784-4417-8b5e-e371bcd0439f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12373f7d-e609-439d-a543-67f120b5aece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177211b9-7236-4f74-93ae-c48db7d9aa3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fadb9d1-0d74-4edc-8bdc-c9160f3cfc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302089d5-4fb6-4f96-b0c3-755481426247",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3368c1a1-863e-4332-a825-4e8bb6e19542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "076e1114-1d32-4903-ba90-5bf1333347ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc9e745-2229-4e4f-bf1a-8309fabc829f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a6ea35-662d-4a1f-a93e-1dc283d61f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16e1b9f-2443-4b4b-91ab-02d5548f1b08",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa9a46f-8baa-4ad5-b542-56f4024e2ecc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4193db5-78f5-4eb2-a6da-2d7578f0912b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7325e5-3c64-468a-a12b-97e0380cc9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffee3fcd-f41e-4e63-8a68-8a982cf60cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f451c2c-5a90-494c-be2b-42dfbe0b970b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ce2fc2-8594-4286-9f15-0225a696bf17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c8a1d3-3afb-4241-b274-953cd04154eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70030255-71ee-493d-8599-5043c72bfa51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1439b18d-2981-408a-9b99-add92a1d5b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363e3abf-a3b0-4bdf-bdd7-a4edd4c7a17d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9c680d-8355-447d-9a11-1d4e35aa0d5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b8fb7a2-c588-4b45-b47d-a7e2d5f0da98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a98f5b-2af6-427a-8891-62c5a2d55070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723fb6bc-2abd-4758-ab5a-140a92578313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b4e846-833c-488b-8b1c-a30d761e9dd9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f16f11d-a3db-40af-ab9d-8cea759d8e72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f231700-3453-4028-b7ee-328d8fe50d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcf5e45-1e35-431b-96b3-4d095dff6558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7507226-e0c4-419e-ad3a-ab74fb4e3aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f82a619-8ab7-4ef3-afef-d5445ff6c039",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d3f295-3b40-403a-b675-0e9d5a83314a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4856fdb3-f06a-48e9-8cdb-234856624cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43a6a05-a01a-4cfd-9b6d-2a0038dfdd31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3493d9-bef7-43af-88f4-ef0625bc7287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176f96e1-5ab6-418b-994f-93a93139ea50",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d343564-6d92-41f5-a990-5a1f37d24158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b06fb37-80e4-459d-908d-841d9b2874e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acd9914-3c8b-4100-85a2-4f1753b3cceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbb8de1-f652-4b5c-8429-1ea38a66a8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbbf622-f748-4e00-8e24-8a674395fbf8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16eb3ff3-d313-4f2d-83a5-5f7fb97d7107",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e79f791d-f5fa-4060-bac2-cdbfa7e60aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d34f268-ac32-4ea9-8261-b0e459061775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73713a11-f003-4e74-af0c-fd62f19a7b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9cee0d-a5de-4bbe-8175-b99f1ca26983",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c71a20-7dd9-442d-a143-c59a24638aa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cd81e4c-6850-41b3-82d6-41ee25a9f6f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ba482f-7dce-4322-895a-91105f92cc80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdd288a-86de-4f71-874c-35cc1d4799e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d0f071-dee4-4979-88b2-03804d9f7424",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdb88ec-4a3d-4158-8940-d3deef67d703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84e6b3d8-ebe8-4110-b46b-0c31a077d35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40e6a76-1736-4417-9d9e-958ffb9b704e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b66af4-883f-4730-95a3-36bfbdccafcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba50d12-9ca3-40ab-9e58-a92f02a4c13f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314a915a-96e1-4e19-8d7c-7842da534be6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4dfabe6-80d5-486e-a782-a02d9e455b83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b06ad7-eca5-4d43-b73d-2b4174d77db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55aaa28-1dde-4b16-9ba0-8483af28043e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0825c534-112e-4c75-8313-19b059fbf693",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2a15ee-aedd-408b-8ea5-ad5d2d1d1267",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f016b339-34e4-4a0c-aa6b-7570b6bbbb87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5673cb0c-9948-401e-b2c6-58afb9a9c07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7a0f83-0140-4aed-b3d0-cd691f617446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32c5001-045e-45bd-96cc-495e5d94db7a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c9cdb6-81a8-48a5-9f50-49c6201fae1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e1b3a5b-1cc9-41da-a35d-c69274833eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ed947f-f7a5-47bb-91a0-ad9618b326b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4a3d74-37f3-4fc7-93a5-19552abb989f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80cdf43-6661-4e79-b8d3-f7bf59e2ace0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5792c35f-de55-4b7d-b040-5912bb47edc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f663ee4a-4f35-453a-8c84-d0e643828be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cce3b8-da90-4b64-aefc-2c9f6ebd3082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b6bcf1-1f39-42c3-aa1c-fc6017a79901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b1c083-1d0d-425a-9d2c-b1d68ff67151",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d4ee97-a21f-474d-9a78-6e82fba0902d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8305cb13-6795-43b2-9972-f1b1deef70df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ac1759-43ad-46eb-9d27-4ca4bd985d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8c8fe9-6384-4186-9e48-d9e59a0e0d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bcbead-adf1-41e6-a913-d8b4a42efd8b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b914179c-0260-4c5f-a9f5-7c838dbd2c70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96bc894-3fa5-45eb-ad6e-d2c95fc4c2bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c4bf62-4c2f-4a21-a8e0-36e216fff1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2afa2c9c-0431-4b50-9a02-44448fe5a730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675e0b69-5885-48d6-a6d5-9909ba5cfd12",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7083475-fe27-4afb-886b-c59ada41eccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b9b441a-1934-4a4a-9c03-a6bc2a37ae95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "638d90f9-f4b9-46a9-a7b2-92712bc8184e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40647692-c1a9-4518-a6a3-c350087701ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde87081-a380-43cd-8487-c1b1df1180b7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0867b171-4ebe-478e-918a-bf2b269f267d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bedd455b-5687-4273-a342-385c4a243507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba378b42-719e-4cd1-884d-5dd39c0fb0ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e41cd7-2d45-4f32-9538-8129507385d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5774ffc8-5b24-4b59-8d37-7924da279d3e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21e8e62-cc13-4e49-8508-2528b24220b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b33fd62-71fa-4877-8b36-a642192e6cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2063696-4504-40ed-83f9-d55b4fc99848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2490feb7-1185-4c1e-9a30-a21bb8afccec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cace4e-8282-4dbc-8546-61d42c910f2d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b853a2-fdcb-405c-b0d1-4e27ce5d24f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9189013b-0531-479d-9f0b-a5c6f8f0148e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc2e282-5d7a-4c5d-a23f-a833c1b55835",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5210d37a-5d0a-4589-8c6c-e37c3978f4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e28684-12c0-4aaf-a46a-63dd8b3c0784",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f83775-59d3-498a-bfda-d4b9a5c2188c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5845cb36-d844-40ce-8529-aed3e63a7ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc3862e-db3b-438e-ad92-93ffc98fa57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3878ea-9513-4ce2-897d-e6921c4ad6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f73e935-00e7-4448-b0e3-a64f1cf8b9b0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5d40c9-9317-441b-87b6-d63d76718b8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95938b8c-c668-47f0-85db-0765b2a454d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606e8033-16e2-4662-a229-84f2e8d363f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9846c6-bc40-486e-a308-803a63ee239d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51273c13-3f0f-4580-8132-122cd8611222",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b39e09-4912-4242-9b8b-d20dae4020a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dc5c978-1c32-4c70-9348-8284d2bc4b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1531356-e34f-4fdd-a848-f8ece6fe1203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d37cce2-805e-4e5d-a5b2-2c3ef605297f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c61846-9c1f-4a7b-afb2-22e737aca110",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c076fd2-e149-4f11-a0c0-b8abeacf343b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72847e6b-2067-4859-928a-757b3949c138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce864356-c87d-43a9-bfef-391330dab8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809594c2-03bf-4e52-89ce-bbd6f79d8c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dfaf3c-eb3a-49b0-a233-bf7a26adb983",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d36ebb-e7bf-48cf-85f1-ddea02039a09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1771cf0-844f-482c-9802-c3b816e84b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c26700-3982-43ef-b181-ef4a1ec3c6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb79ae5-9e3a-4239-aafe-189c6ac92409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4cf389-55bb-487b-a9b4-ca5951506b0b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314db7a2-4f3a-441d-bb4d-a51d629da5a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78de198f-c2e8-4a59-afd9-581f46c42d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ea3cea-2b21-4416-aac2-c5388834e67b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f4c74e-5b65-43ca-a459-44ab98acbd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8d9c76-d8c7-46a5-bae4-5bb882126598",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8b71b8-f5a9-4f21-8ad0-2215480536f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e20e017-2b7a-4dfe-9954-507312d2b3f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c968cd8b-6939-4e20-ac6b-99943958647f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41288ad-c52b-4ef9-9b21-d228bc217f48"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eeba430f-9d01-48de-9860-ced543904a51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c5ded04-1ba4-436f-ad69-05855f22c35b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "739aeecc-6272-46e6-9518-06e6da7f3403",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15f520cb-6144-4193-aa8a-82cad8df0ece"
                    }
                  }
                ]
              },
              {
                "id": "9521590f-bbab-48e0-91bf-0d65d841e10c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4aded3ff-dfdf-4352-a100-edbde885ecbc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279c6cda-32e3-40f2-bce7-5a144af9a783",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9569d117-27f7-4fb8-9493-8bf6c11969ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fe091c-bc27-49b7-bd9c-18657c4903d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14783eb8-a7d8-4634-8b60-f2f0161e91f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "490cbbd2-fb39-41ad-8287-788c4d9bd4d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e8e89f1-06ca-408a-8fe0-bd6c76323e20"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10917dd0-cbce-4d5d-8ead-a454e2f3d423",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04a96cca-8152-4228-876d-3813f2427538"
                    }
                  }
                ]
              },
              {
                "id": "55520d0c-9848-4181-9a40-ae82792369eb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6f5c271c-8b6e-4502-bb8a-088a7e162319",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0d5f89-678b-4bc2-8eff-3f4e78647c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "90fbfd4a-4f56-4c4d-abc5-667c1c3e32ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d81acf-30af-47e0-8f65-7cc906cc17d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1d27c0-8fb7-47ef-b48f-3be362871820"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "369a307d-f7d1-48cd-870e-a33142148b3d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e2cb025d-a1e2-43b0-9682-24052c5fe497",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86f190e4-4f5a-442e-bd2f-01c652ba645d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "38a42e4f-e73a-47c8-82bd-dd908e7c354c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b94d260-8591-4158-b3ba-b5d55c8d6d93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b772b3ed-543e-45c7-b41e-3ead0201e93e"
                    }
                  }
                ]
              },
              {
                "id": "6e07c538-79ec-4d04-9670-2e4518b5f2e7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3f58406-46fa-490f-a401-3d2b13b4d276",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d97da12f-ee4c-4b6e-b28a-d759b00d26ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "283259ea-f7fc-4d20-9cf9-1fb18578f90b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea07020b-2cd7-4eac-87dc-8566e0841d4b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b6810c9-93cd-4066-ae3a-bcb0a69759d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "42153fd9-146a-4f2f-b715-e327064120b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4f5138a-b5d5-4a3c-9f8d-43631e020037",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18fed383-765f-4853-93b5-2dc68915611e"
            }
          }
        ]
      },
      {
        "id": "566b0ce6-8c3d-4d6e-8671-5f2dd88d6810",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "add5fade-3000-46fe-980d-49566a3584c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4a9d8ef-0aff-4d65-ade8-396b29676051",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df7bda70-c609-4a54-a5f8-ccdf9caa01ed",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b854bb-5c99-4ab2-9fce-cee4f635aeb7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "06287938-4236-42ea-b47f-28e1545f812b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88596e2d-b9a2-4bea-8306-835adff2f9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea4cb420-d61a-44dc-b49f-6fd7dabf6176"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23a85a68-cec9-4889-bd40-1e4de49d48f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9dd68a7f-a6af-4c29-8b37-3228e7247a53"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30f87588-6c29-4d93-aea3-45eba0fa0fc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fca23b5-e80e-4ca0-9804-ee878c43c2dc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed4db0ab-48c2-4884-979e-cf20258ebc47",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b752dfc9-09de-46cd-9bf5-ad98ab746b74"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f5d3cce-9e12-43e6-8d44-260834db95b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be07ed19-d8d2-4b27-93b1-fcedf56b92bf"
            }
          }
        ]
      },
      {
        "id": "83c7f87c-1c97-406a-8b8e-2290f62e477b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "514ff9ff-4a31-436b-9164-1ea9d6cae1f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb4de216-583c-4d9e-847a-fcde9bf54962",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8dfc2929-b9c6-4ea3-bb90-66b86b64681b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b406cda-4d57-41d4-b747-3a35c5580986",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dc21384-cde2-4101-9612-1aeae6fcd34a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c858afc2-40ec-4a78-8833-2922505da201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5efbf301-53b1-4bc7-b1e1-4009e935bb91"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fac0524-3361-43d6-ac07-77c67bf3ddb6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd6c9859-d8d6-48aa-90b6-47f915641b09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "293be247-b129-445f-a28a-faee5d4dda77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d425cf8-58d3-443f-b768-e4c9f44f5d0e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18cbd28d-9d91-4352-9214-20d0be261803",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bba7a074-266b-40ee-a361-3d2bcf3efa0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bb4a828-22d3-4f31-ac22-e88d6a60e3a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36b61cd3-c0ef-4c41-9db7-53057aa29c4b"
            }
          }
        ]
      },
      {
        "id": "975eaa89-5cda-4cdd-bd8f-bbeea596f8b5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0250d100-7d71-4bd6-8992-d8bbc9fab4f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78952afb-82a3-4c73-baaa-c7acf3fad3fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a08916d-79a1-4f54-bbbb-a1b23aa142a1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7b4fb0-c609-4462-b361-809e1773cba0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef1a2330-5ae6-4e6d-885d-6e8d27db3bed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f96433b-0480-4fdd-b6f9-11c4173cc534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e152a5b8-f9bf-480b-8cd4-cfa74d3bb93a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5f910d3-e6c0-4eea-970d-04a7d161bf25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7649c52b-d907-43fc-8fcb-2ab13eaaa763"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c0c6daa-14f6-4562-9996-0de54e0d4bb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b7b78b5-9114-400a-96cd-cefbd33f77ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f49c6e26-75a2-4b02-bb58-af7b63da8d3f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "98b0e561-efea-4c55-94df-f3aa514a72ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "269fc910-5715-4f1b-aba5-e433595018e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e2ab8cb-8e8d-4eca-a1bf-10a04337a6cc"
            }
          }
        ]
      },
      {
        "id": "7c4f6492-19e5-4630-8bb8-eec384ed7f43",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d487f12-7893-4aeb-b824-f514f981b469",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc8dc486-851c-4d7f-88a4-0093c846248f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c53b227c-c1fd-46cb-8b5c-038e2e6d596f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ee60ffb-b002-464f-9ed9-af95add29386",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "861b10db-ccc7-4b1b-91c5-23cee5a6e35f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 677.6388888888889,
      "responseMin": 24,
      "responseMax": 22910,
      "responseSd": 3412.6905982814765,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728002718474,
      "completed": 1728002897731
    },
    "executions": [
      {
        "id": "62f6a899-9b6f-43b7-8d46-c30dfaf73d1c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9ca32556-da26-4a59-a30a-e34d08784bcd",
          "httpRequestId": "f9d7f380-0623-4981-bc65-a0397d4d0b59"
        },
        "item": {
          "id": "62f6a899-9b6f-43b7-8d46-c30dfaf73d1c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8740af4a-f307-4bcb-83c8-9eefc3ab4f02",
          "status": "OK",
          "code": 200,
          "responseTime": 137,
          "responseSize": 0
        }
      },
      {
        "id": "696b6914-5e0b-4de8-91e8-d68d104a30f3",
        "cursor": {
          "ref": "a7a31546-b026-4c26-97be-a1bb9935d567",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1ab5b7f9-7834-49a5-95e6-05f3b5bf09e9"
        },
        "item": {
          "id": "696b6914-5e0b-4de8-91e8-d68d104a30f3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "60f54ac5-0150-42a1-9474-1f428be57387",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 0
        }
      },
      {
        "id": "2dab62dc-7935-4293-aabe-400d4e2f6c7a",
        "cursor": {
          "ref": "92fff873-a2ba-4694-99e3-00ad7d6c1989",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "29cf765c-a780-4961-9d7f-beb1e39c834b"
        },
        "item": {
          "id": "2dab62dc-7935-4293-aabe-400d4e2f6c7a",
          "name": "did_json"
        },
        "response": {
          "id": "ac21c3e1-27a6-4ca4-a7c8-c7f6c2206068",
          "status": "OK",
          "code": 200,
          "responseTime": 464,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6293fe1-ef42-4189-aed1-9d9fb86ff51c",
        "cursor": {
          "ref": "1e41deb6-c878-4a04-b55a-c4d89ba99c46",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cf504b93-3009-4273-9f5d-3fa70b20ba4d"
        },
        "item": {
          "id": "a6293fe1-ef42-4189-aed1-9d9fb86ff51c",
          "name": "did:invalid"
        },
        "response": {
          "id": "48f498d3-10a0-40a5-9e5a-28bb916c784b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2118,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6293fe1-ef42-4189-aed1-9d9fb86ff51c",
        "cursor": {
          "ref": "1e41deb6-c878-4a04-b55a-c4d89ba99c46",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cf504b93-3009-4273-9f5d-3fa70b20ba4d"
        },
        "item": {
          "id": "a6293fe1-ef42-4189-aed1-9d9fb86ff51c",
          "name": "did:invalid"
        },
        "response": {
          "id": "48f498d3-10a0-40a5-9e5a-28bb916c784b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2118,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4758a08d-e040-410c-9728-945e61720c01",
        "cursor": {
          "ref": "471be81b-8cc6-4d06-a101-5b21ac92538b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e4f57187-28f9-48cf-9691-3af751391997"
        },
        "item": {
          "id": "4758a08d-e040-410c-9728-945e61720c01",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2c0b39ee-5dfc-49f5-bce8-b33f7f00d645",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2458,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcc65cb-e1ba-4449-95ee-8de7041425d2",
        "cursor": {
          "ref": "a9029723-a7e0-40fa-8610-5cac83825335",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b7c0a3de-bb56-4bbf-8b80-fb367c11639c"
        },
        "item": {
          "id": "5bcc65cb-e1ba-4449-95ee-8de7041425d2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9e6c0b9a-48eb-464b-ac65-8aff00d853d2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2233,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0363a1-57cd-4335-b620-4a857c591dd7",
        "cursor": {
          "ref": "cf97d0d2-b9d6-4361-b097-7b127fc2470b",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f0ead362-de61-4718-95a3-e87987f84803"
        },
        "item": {
          "id": "bc0363a1-57cd-4335-b620-4a857c591dd7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "da0c92cd-9076-454c-a288-092b90f577e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078a955b-afec-42b3-8151-368813745cff",
        "cursor": {
          "ref": "a7715596-0085-4f61-8407-a62a42048a0c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0f19a3e6-6c40-4af6-b5d9-bc2abc0dd7ef"
        },
        "item": {
          "id": "078a955b-afec-42b3-8151-368813745cff",
          "name": "identifiers"
        },
        "response": {
          "id": "bde197b6-7e0b-45e4-b27a-77e2ad37f037",
          "status": "OK",
          "code": 200,
          "responseTime": 2216,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb80086-f3e8-44ed-a885-19dcf7c3eb29",
        "cursor": {
          "ref": "0319ef9e-8a90-4c81-8fb6-de4a46733369",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "89a8e5d1-1853-498b-a032-92539d27dd06"
        },
        "item": {
          "id": "1cb80086-f3e8-44ed-a885-19dcf7c3eb29",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4c54b8c6-2ad2-45c8-a5f5-df1f697d92a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969815dc-0af3-4174-9e25-ce6e6edbf4b9",
        "cursor": {
          "ref": "f24cd9e3-b281-41cf-9360-43ca9ea9f796",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3e9f5fa5-2d55-452e-acbd-0a505cab63b7"
        },
        "item": {
          "id": "969815dc-0af3-4174-9e25-ce6e6edbf4b9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "56edc6e1-6dd2-4298-955b-1ab5d1664dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc22e474-223e-40f8-834f-d96809f63025",
        "cursor": {
          "ref": "e6ae503f-034f-48d3-8fdb-91c030b42afe",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e13a29a7-9baa-4de0-a251-a62fe93deab4"
        },
        "item": {
          "id": "cc22e474-223e-40f8-834f-d96809f63025",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "176fef55-f21a-4e93-968b-8980e0592828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f50f6b-dee3-4ecb-a519-6f73746f30c1",
        "cursor": {
          "ref": "b8ddacc0-2323-4703-90b2-088693ada60e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4766a58a-d151-4503-9d98-d5aefa552e5e"
        },
        "item": {
          "id": "a6f50f6b-dee3-4ecb-a519-6f73746f30c1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "66d14d23-87b8-41e6-b914-654277c852fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bda1c9-f331-4e99-a9a0-8b4c56829d60",
        "cursor": {
          "ref": "52b54afc-f5ae-419f-b9df-78b714ed7bbc",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0791b545-dee1-4ec2-b5c9-6c3cf2d286f2"
        },
        "item": {
          "id": "61bda1c9-f331-4e99-a9a0-8b4c56829d60",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bb71627d-a2ce-4628-bf64-fab2db378e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f07f957-0107-4847-8ed1-277f0df39f83",
        "cursor": {
          "ref": "d8701fbc-27fc-48e4-a945-1852b1765fd2",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a6f6039a-d4e3-493a-a628-e0745d49941f"
        },
        "item": {
          "id": "9f07f957-0107-4847-8ed1-277f0df39f83",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d69dd011-b5bd-47f5-8ac6-39ff80e7cb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39631368-99de-4de0-90b9-ddcf7ca8111c",
        "cursor": {
          "ref": "bf612284-afcc-42e3-a8fb-c38add5a23ea",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "14ffeb26-90a6-4cdd-869e-f503d1f3f465"
        },
        "item": {
          "id": "39631368-99de-4de0-90b9-ddcf7ca8111c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3e42c87e-a272-408d-87b3-5264fdc019ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc21bbe-57d8-4b88-a75c-a8f510ab4a88",
        "cursor": {
          "ref": "1b9b16c1-9494-47b5-9648-3d974874522b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e4023f4a-766b-4409-802c-f1e1b93c921c"
        },
        "item": {
          "id": "1cc21bbe-57d8-4b88-a75c-a8f510ab4a88",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "812467b2-2ad5-4cda-8e6a-5f23e9cae266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad87976-a11a-40bb-b138-82a055363511",
        "cursor": {
          "ref": "b0fe693c-88c9-4f1a-9d29-3002b1a61d92",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b5063b3b-27b4-4b2e-96a7-5eadbc83f2cf"
        },
        "item": {
          "id": "7ad87976-a11a-40bb-b138-82a055363511",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9edbd916-4fb2-4584-8793-e4b8c474c150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e115dd5-6e5c-4024-995f-e06014ba5796",
        "cursor": {
          "ref": "42b56bc7-1d2d-44c8-961f-b32757eb28c7",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dc6aa03e-fcdb-4a6e-8694-2ae7a97089e0"
        },
        "item": {
          "id": "0e115dd5-6e5c-4024-995f-e06014ba5796",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "26ff5cad-7abe-493b-abb9-78ad30dfab13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2ecf13-4db6-4850-b2af-4c2e12b28577",
        "cursor": {
          "ref": "c0a09fc6-f36a-4ff2-a7b6-c7fddaf859dc",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "34065b3b-53ef-4bdd-b41a-08345339347c"
        },
        "item": {
          "id": "3b2ecf13-4db6-4850-b2af-4c2e12b28577",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "eef1723d-b381-4845-8222-27dd450f7382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97f14e4-843c-4c31-b022-6fc65796f96d",
        "cursor": {
          "ref": "5e4e2965-cd37-404a-9623-bdd9795972d0",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "955638ee-9242-46aa-9bc3-41882267cd01"
        },
        "item": {
          "id": "d97f14e4-843c-4c31-b022-6fc65796f96d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d514a4eb-79a6-4395-b381-f6465196cd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a16e8c0-134c-4fd0-9393-6a9ab8630111",
        "cursor": {
          "ref": "310098fc-8220-45a6-b091-0bc3165c9395",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "99d27b58-f6f7-42b4-80f3-eb0daf0bb1ec"
        },
        "item": {
          "id": "0a16e8c0-134c-4fd0-9393-6a9ab8630111",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dbe5862a-f6c2-4a99-acba-7be00e8104f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fb7c97-b6d6-4545-9bbe-e765236f15d7",
        "cursor": {
          "ref": "f54dc825-f643-4823-8fa6-4fa08791908a",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6977dd1c-0bc3-4783-91ac-3ba8186efb55"
        },
        "item": {
          "id": "31fb7c97-b6d6-4545-9bbe-e765236f15d7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b85685b9-faa6-46d5-a085-2664e241b6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7643908b-ce9a-4b52-bd7f-2da7c6ff9e97",
        "cursor": {
          "ref": "2ff4d660-1890-45f3-a49d-620f4ab05d9c",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c4082f4a-495b-4ac0-8e12-baa326d1d8e4"
        },
        "item": {
          "id": "7643908b-ce9a-4b52-bd7f-2da7c6ff9e97",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a281546d-8b62-426c-b9b1-a6a6e8da1943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a19b44-58fa-42ea-8ccd-ebbd6dfa691e",
        "cursor": {
          "ref": "31cc466b-9156-4311-9299-ae21ece538be",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a8785c3d-6a3d-433d-b2cf-f03b7e70a69f"
        },
        "item": {
          "id": "66a19b44-58fa-42ea-8ccd-ebbd6dfa691e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2696512d-5615-4425-adca-4ade55a6c30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6ec750-0ef5-40d3-a25e-402600f9e7fd",
        "cursor": {
          "ref": "bcf82545-abae-4d65-a13a-2f3b944b7b02",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "42aebc60-4ba6-45e9-ae64-f1e8be2cd580"
        },
        "item": {
          "id": "6d6ec750-0ef5-40d3-a25e-402600f9e7fd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1c72cd0a-33bc-40fa-aa13-fb5a5d3e51db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61000824-1cc2-460d-b9fd-85565fecca2b",
        "cursor": {
          "ref": "931d7c62-cee6-45ba-988d-e67a49913a8b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5962e567-8024-48ef-a785-6e8301467596"
        },
        "item": {
          "id": "61000824-1cc2-460d-b9fd-85565fecca2b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1eb9500d-2e26-45ac-a874-3ced50542881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f5e3d3-0839-43ef-a638-a581979c5c57",
        "cursor": {
          "ref": "eec2303d-4c2b-4090-9308-698924e545a6",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ea073e44-5e5d-4d98-a5ba-79238283c7b3"
        },
        "item": {
          "id": "88f5e3d3-0839-43ef-a638-a581979c5c57",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4b89188e-6ca9-4c84-a20b-ea58f029a8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d07294-b446-4a84-bc88-808cb6112602",
        "cursor": {
          "ref": "6dfe4ed3-c85d-43dd-973f-7846a762a632",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "446e7fca-ff8e-4ecb-b08c-f82c19627a0b"
        },
        "item": {
          "id": "80d07294-b446-4a84-bc88-808cb6112602",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "aa7ff04c-e22a-45ca-a485-5dadb4e2a5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7da377a-0979-4f7f-8dc0-e9632f412e70",
        "cursor": {
          "ref": "f49672d8-a2f5-41c2-aa35-2efa938554d1",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "163a14e8-7303-45f9-9224-1e0c520203b9"
        },
        "item": {
          "id": "d7da377a-0979-4f7f-8dc0-e9632f412e70",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "11b423b3-f51e-4ed1-b536-7e461f04818e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0eb3e3f-4391-4b73-859b-6c263b6dd624",
        "cursor": {
          "ref": "cd962a08-2a61-4548-b5eb-dc769240ae27",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "63b722e6-4e36-4eb1-964d-72a9fce31a01"
        },
        "item": {
          "id": "f0eb3e3f-4391-4b73-859b-6c263b6dd624",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "54be732f-9fe4-460d-8a7f-d6b61e708b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a88d07f-c949-4467-ad82-2151cc6aac10",
        "cursor": {
          "ref": "66a6ef18-b6cf-45bb-878f-09e201ae3eb5",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3bc5a053-f3ea-4f26-9528-06481b61c891"
        },
        "item": {
          "id": "6a88d07f-c949-4467-ad82-2151cc6aac10",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d36f867e-7d2d-42af-80f7-687557f447e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446735f0-ff4a-4a0b-9160-a343de1f45ef",
        "cursor": {
          "ref": "35898138-3d38-4505-9ce8-3113142fcfb1",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3c3992e2-3ce6-4c9f-b0c1-ebe648f6fa1b"
        },
        "item": {
          "id": "446735f0-ff4a-4a0b-9160-a343de1f45ef",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1c77fd9f-6307-4ae2-9626-bad2328379eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3719c796-4983-4795-a8f1-e9d8ae132a72",
        "cursor": {
          "ref": "1bed4028-54b1-475c-9fa1-a1416587647d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5cc0924d-adec-4a90-a1c2-40eabbd19670"
        },
        "item": {
          "id": "3719c796-4983-4795-a8f1-e9d8ae132a72",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "76854775-0a9b-4b59-a510-47791739987a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fb132a-e756-4288-98a5-cddf2e56d817",
        "cursor": {
          "ref": "43e9c05c-4ec9-4512-b151-565a12a5a108",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8f5802d8-4071-46d6-a531-13a32c04f7ac"
        },
        "item": {
          "id": "c8fb132a-e756-4288-98a5-cddf2e56d817",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7461b239-3c08-4fb7-8300-c6ee79122d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23abeeea-9b7a-40b9-845b-931663138210",
        "cursor": {
          "ref": "2f281e33-859f-4fb4-b691-d61e6a7fd7af",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "18a2fc77-fcab-48a9-9913-04780fd75ae8"
        },
        "item": {
          "id": "23abeeea-9b7a-40b9-845b-931663138210",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "838e7ff7-e3a0-4553-8f46-8fa640fde726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8f4458-f150-47ab-b903-19a8ca544d82",
        "cursor": {
          "ref": "8428e93b-0652-4bcb-bad1-8988338ab05e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5f2a00a0-ead3-4ca5-a5fb-29e6d5ce1064"
        },
        "item": {
          "id": "0f8f4458-f150-47ab-b903-19a8ca544d82",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c7293195-1f4e-4c86-8f26-8a70d680b8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9b431c-6e11-4614-9fb8-8e3e5d75ba40",
        "cursor": {
          "ref": "ab949150-a709-4a1a-b21a-ddb7ba50a573",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4d5152ab-a176-485a-adc0-5ae6b889b647"
        },
        "item": {
          "id": "2d9b431c-6e11-4614-9fb8-8e3e5d75ba40",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1f031a6b-4d36-42c5-b4cc-dd1344ed5906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a580a127-bd36-45f5-a89c-5cf26d2d6aeb",
        "cursor": {
          "ref": "ef7d1976-e8d2-4d6c-a009-c75d87d0116c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "418fc3ed-4ee8-4f5b-8b3c-f613376ddbd5"
        },
        "item": {
          "id": "a580a127-bd36-45f5-a89c-5cf26d2d6aeb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0dd9efa8-e269-4d6c-89b9-dc2718af063c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad24503-074e-4d84-9e21-e331a1dd7100",
        "cursor": {
          "ref": "6f9008e5-dcbd-489b-80c2-56b47baf8e90",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "eb34c9ed-7a47-47f3-a4fa-969366af3d96"
        },
        "item": {
          "id": "1ad24503-074e-4d84-9e21-e331a1dd7100",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "07cc92d7-9857-4ba7-af5d-fb2e54a31998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8b85ce-7788-445e-a535-f0bc0fbc168f",
        "cursor": {
          "ref": "7061057b-a125-4048-a213-5b2cbca96831",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "285fd817-009e-4f2f-9c4b-67ce2ec2b241"
        },
        "item": {
          "id": "8f8b85ce-7788-445e-a535-f0bc0fbc168f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f82a2409-fef8-4100-8a45-dcaefcf77d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59de174-40e4-4eaa-b4d0-0f401040530b",
        "cursor": {
          "ref": "b4f7df5b-83b9-4183-abb9-f6fd9029a25e",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1f89ba68-d052-4d0e-b500-b36534655b80"
        },
        "item": {
          "id": "d59de174-40e4-4eaa-b4d0-0f401040530b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "73a01f7e-13e1-42a1-9b11-9f2627766c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a508baed-697e-421e-8024-1812d8ccc562",
        "cursor": {
          "ref": "de792564-3931-4619-a7fc-6d3a2c868a22",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "abd00d21-ae13-4ff7-a6ee-adbc4db778bc"
        },
        "item": {
          "id": "a508baed-697e-421e-8024-1812d8ccc562",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b994a85d-fb8b-4578-9859-a0e7a28713b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921cb90e-db9a-4bb6-ae06-723ca49eab34",
        "cursor": {
          "ref": "311ba88a-3042-4970-a1f1-dceed66b8b91",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "30df4ece-9dd6-4981-adb1-7c5e89900122"
        },
        "item": {
          "id": "921cb90e-db9a-4bb6-ae06-723ca49eab34",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e4c826e7-6b02-4d8c-b18f-ff3dd8751102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cef1418-f16b-432c-ad43-74afb0c6e3e1",
        "cursor": {
          "ref": "0dd1330a-cf58-469c-9313-4ac2adc71be6",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "05c3ec1b-9e14-4b8e-bf1e-c0a561f6ec15"
        },
        "item": {
          "id": "4cef1418-f16b-432c-ad43-74afb0c6e3e1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "94a2f16e-9a4f-4c65-8831-b8b2a6f8b3cc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 75,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f18198-c2c1-486a-8029-d46ea3e309f0",
        "cursor": {
          "ref": "a83e6e92-e7fb-4929-8e21-0ac135b99279",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9a972940-831e-4f03-8961-44a07b13ec13"
        },
        "item": {
          "id": "a6f18198-c2c1-486a-8029-d46ea3e309f0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9b14d11b-3c32-4120-9257-8a1aa5dfe570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a473019-b061-492f-b287-9ef589bdc8ed",
        "cursor": {
          "ref": "6862b62b-58a9-4057-a6b0-a86a13f4de68",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "953c9b99-7e97-4fff-8117-7be6aa3e8e8f"
        },
        "item": {
          "id": "9a473019-b061-492f-b287-9ef589bdc8ed",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "42fb4a6b-7231-44bb-bbd5-5a9a851aed95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af644ca5-338e-4304-86a0-6d02358ec094",
        "cursor": {
          "ref": "65aa2d58-db08-4a58-a963-9669ff4cdaa6",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0143baf7-d4c9-4f97-a7ac-0e546a8d9f77"
        },
        "item": {
          "id": "af644ca5-338e-4304-86a0-6d02358ec094",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6d614d80-17bc-42f5-8f52-b66bdec2643e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4564a69e-d10e-49e7-9da6-af6122e82d11",
        "cursor": {
          "ref": "f23db3ae-f38d-4ea0-b09c-7f0ef3ae5ff7",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fd751765-9086-4c97-b616-c41f5f7e86b9"
        },
        "item": {
          "id": "4564a69e-d10e-49e7-9da6-af6122e82d11",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "13af1f4c-2243-4773-89bb-89d2816b03ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90153ba-cadd-4bfe-9d4b-82363a985fdf",
        "cursor": {
          "ref": "e9cb8990-f0dc-4618-bacc-446f10c3df28",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1f18567a-cc38-4906-9a98-e3e4189b27bd"
        },
        "item": {
          "id": "c90153ba-cadd-4bfe-9d4b-82363a985fdf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3d14030b-daf7-4580-9294-487f9a085d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76dbb217-32a5-481f-a816-ca0d807a36ea",
        "cursor": {
          "ref": "d5aeac70-e955-43a6-9a23-4597e305281f",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a95e6795-8e99-499a-9eca-4dc051e4d7a3"
        },
        "item": {
          "id": "76dbb217-32a5-481f-a816-ca0d807a36ea",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3cb0f8ba-fa71-48bc-bdc5-0c2f90831a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f81b31b-6b78-47a8-8726-8d7657440bda",
        "cursor": {
          "ref": "4bd04245-0f2d-4d9e-a697-e5f87683d17f",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6564c572-5ca1-421b-8108-66014bd4d825"
        },
        "item": {
          "id": "7f81b31b-6b78-47a8-8726-8d7657440bda",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d73e8d44-856d-4d50-8566-93dc8efadf38",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e749ef-eb44-4f44-9096-764c25dd6d0a",
        "cursor": {
          "ref": "f226e446-2c29-40a4-9711-d54eef6afebe",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4174cf73-4f7b-4486-93b0-bdc25c52ceb1"
        },
        "item": {
          "id": "a8e749ef-eb44-4f44-9096-764c25dd6d0a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2e83acdc-0ceb-4c3d-bf20-ca5e2249172f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965d4d1d-b03d-4354-9d74-7a7276a47f9a",
        "cursor": {
          "ref": "bdfa4bd9-b618-4b09-8779-5c2d92966f9f",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fc03b31c-f46c-4a91-809c-c82eb7bc9cd9"
        },
        "item": {
          "id": "965d4d1d-b03d-4354-9d74-7a7276a47f9a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ad22831d-db3e-464f-a088-3e7f84d2bc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0815ab53-9b8a-4519-b074-eecae9fa7b90",
        "cursor": {
          "ref": "9ad4bc3a-8d27-4922-ab19-55a82e5a12d5",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d71ea515-0a88-444f-a7ee-c0c5bd4db417"
        },
        "item": {
          "id": "0815ab53-9b8a-4519-b074-eecae9fa7b90",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "db32f983-95e5-46cf-89ec-6e313b30e524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8235a687-d583-4004-baa4-d1dcefff102c",
        "cursor": {
          "ref": "21a576c2-d1a5-43b6-a8d8-2e42aa035de5",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "997ee7a4-c1ec-4445-a61e-f475b6cdbb19"
        },
        "item": {
          "id": "8235a687-d583-4004-baa4-d1dcefff102c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "11a22946-662a-4bb4-94bd-752134cfccde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79309cb0-d175-4816-8d61-dfb3c49839fe",
        "cursor": {
          "ref": "c3997201-5b20-45a5-b5cb-21e46a5eb9ff",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1a566103-7cb5-4404-9af8-3a186edd0dbc"
        },
        "item": {
          "id": "79309cb0-d175-4816-8d61-dfb3c49839fe",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "36783dc9-4185-4765-abc0-666b76b2c4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7821dc5e-1c30-4a2f-9e8a-7d10c3b27cef",
        "cursor": {
          "ref": "d5163895-a952-46e3-b2a2-10494698a207",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "853f0a50-cee9-419d-9939-b007ea1a712a"
        },
        "item": {
          "id": "7821dc5e-1c30-4a2f-9e8a-7d10c3b27cef",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d8ced7d3-08ee-4c2d-8307-3ce58de38656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66610cc2-0b2b-4f89-815c-365c243c85d7",
        "cursor": {
          "ref": "50687fa9-aa30-418c-b071-cd28d623df70",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b5f30ecb-dbe1-444c-90fa-3799b5b9cb71"
        },
        "item": {
          "id": "66610cc2-0b2b-4f89-815c-365c243c85d7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4df28153-6466-46d5-a728-918320ee12e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33e0fc3-f0ea-44ad-bb87-05bd6a700a7c",
        "cursor": {
          "ref": "d7584199-db23-4c86-b3d7-121f4c3fa761",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7d53efb6-c74d-4413-b2bc-4c55f0d8ebac"
        },
        "item": {
          "id": "e33e0fc3-f0ea-44ad-bb87-05bd6a700a7c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2313b23b-8fba-4b5f-a355-fc8a527212a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa06d001-3a29-4ef4-9168-66f05dfc096d",
        "cursor": {
          "ref": "c302cbc6-3be6-4440-8c1e-6220a86e7ad9",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "802a15ea-ac32-481f-ad9f-86f9a2e43ca7"
        },
        "item": {
          "id": "aa06d001-3a29-4ef4-9168-66f05dfc096d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7ba1227f-1589-4561-be11-4bfc5713f644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98be660-8b1c-4cf2-a928-17c963344111",
        "cursor": {
          "ref": "9cdc4a81-7487-4ef5-b5ae-dd4f791705be",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7030b493-eb74-4752-b621-96656a7b4b02"
        },
        "item": {
          "id": "d98be660-8b1c-4cf2-a928-17c963344111",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5961526c-cc82-44b5-afe6-788d8be68dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc20b84-496e-4216-a6e9-c468836e25b9",
        "cursor": {
          "ref": "b7000704-3601-4591-98d3-980ddb274d80",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "47b22b33-9a1b-4312-8c78-77f35d2fdc81"
        },
        "item": {
          "id": "ccc20b84-496e-4216-a6e9-c468836e25b9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9ed4d023-d611-40ef-8f65-be72f13a7818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e024126d-c063-4835-8add-8dfd8d3cba3c",
        "cursor": {
          "ref": "26c25937-e0d6-42b4-b8b1-8cb2430169c9",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "589740a6-6606-4eeb-9e52-1f418f27bef0"
        },
        "item": {
          "id": "e024126d-c063-4835-8add-8dfd8d3cba3c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7a209245-091c-46ce-aca3-dfd23a46fa3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252e2b8d-4702-4de6-81e2-4bf31206c1de",
        "cursor": {
          "ref": "ed6116c0-301a-43a8-b015-af0579b97fe2",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cdef4094-7f71-4974-b551-c187bff061af"
        },
        "item": {
          "id": "252e2b8d-4702-4de6-81e2-4bf31206c1de",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1f9f436b-157e-449a-88d7-e1dbad8562c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9fd62e-220f-497e-afec-5b81ae279e52",
        "cursor": {
          "ref": "b331293f-5c34-485c-8917-e799cde31425",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "337e3350-1ac0-4539-b9eb-2c56b6bcfb21"
        },
        "item": {
          "id": "fe9fd62e-220f-497e-afec-5b81ae279e52",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "dc19419a-b3c8-47e8-9004-50f45f3a085c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0199b8af-29c3-4185-932d-fd15b468dfef",
        "cursor": {
          "ref": "98fd1d4b-f73c-49c0-b75f-4dd802f8bd2f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1efe2a8a-379d-415d-a3eb-a55018c9291b"
        },
        "item": {
          "id": "0199b8af-29c3-4185-932d-fd15b468dfef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "846e51e6-9417-4df3-8f2e-45498a5fa79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20473ae6-4cef-4475-a71c-f0b14c923b29",
        "cursor": {
          "ref": "d34b1470-0f80-496d-80f4-e3e51bb51f56",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "290c3bb5-e06f-4c27-842f-fe0a24748331"
        },
        "item": {
          "id": "20473ae6-4cef-4475-a71c-f0b14c923b29",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0449a36a-0141-42ed-8eee-1d13478ae21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76930d2-249f-416c-be08-87ded7d08840",
        "cursor": {
          "ref": "bed397f7-90ae-43ec-a2df-139e34b2ffe7",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1c2b8b49-9998-492f-ada6-aefbcb3f90f6"
        },
        "item": {
          "id": "c76930d2-249f-416c-be08-87ded7d08840",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "493ea552-8dbd-45f8-a1cb-33c4879eb95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f9b2e2-f947-4049-8378-a5e2455bd1ea",
        "cursor": {
          "ref": "9cd84379-9516-455d-9586-e87f9cdcc9b1",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fdd294df-3970-4367-99be-b8885f64c93d"
        },
        "item": {
          "id": "62f9b2e2-f947-4049-8378-a5e2455bd1ea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f6637077-200c-4e08-a293-4abbb31e9b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d792c16b-91c4-4cf2-aada-76bcc0fd6684",
        "cursor": {
          "ref": "d45c397d-b94a-4699-9658-5cfe8d7954a5",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7fca2b9a-dc21-459b-a5d2-d4c6ab06bd62"
        },
        "item": {
          "id": "d792c16b-91c4-4cf2-aada-76bcc0fd6684",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f8930be6-e71b-4252-b28d-a1029a1ce4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc37483-5e5f-45ea-a2de-e774aa443bdc",
        "cursor": {
          "ref": "31d7ec7d-af66-48d5-8d60-0195db4657cc",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9732f109-cf39-4a11-ae22-ca3fe24f18ee"
        },
        "item": {
          "id": "abc37483-5e5f-45ea-a2de-e774aa443bdc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "723b3d3e-d8d8-4e5b-a81f-cea814239304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af45af74-c5d0-4393-8f51-ca2122cdf908",
        "cursor": {
          "ref": "00a02927-676b-4399-8ffb-621fb218c6c3",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d622b4a8-77ae-485e-ab08-9d9a64d5d349"
        },
        "item": {
          "id": "af45af74-c5d0-4393-8f51-ca2122cdf908",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1c97cd1c-b680-4ef2-a691-9045ad37db64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f057080d-8e21-4e2e-9a50-2588fed4e1c9",
        "cursor": {
          "ref": "d32ebf9d-2901-4490-af27-102d63793d30",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1a7142d8-c436-471d-9773-5e5bd99e2146"
        },
        "item": {
          "id": "f057080d-8e21-4e2e-9a50-2588fed4e1c9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e33473ba-8288-47da-9d5e-072a22027a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc0f8e6-b701-4320-9633-b0e1841e30ef",
        "cursor": {
          "ref": "0f705680-ce81-4981-a801-d2a67e995c4c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "72d146b2-8e34-4c53-b204-29ecd57a701c"
        },
        "item": {
          "id": "ddc0f8e6-b701-4320-9633-b0e1841e30ef",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f951f25d-3d02-47b4-91f7-9300da348e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f72076c-942b-4a25-8b91-be78ca291825",
        "cursor": {
          "ref": "8e1439e9-f957-4b40-9095-63882b8b93eb",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "64f2ad18-e794-4b4f-ad61-316245165037"
        },
        "item": {
          "id": "4f72076c-942b-4a25-8b91-be78ca291825",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "670c735b-0b43-4e1e-977c-fd8579544f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c3b631-1a7b-4b21-b890-669f67197ba5",
        "cursor": {
          "ref": "c82f1be1-209b-4a90-b640-e60ef560d24e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4efb7d79-309d-4bdd-b460-fe3cb6114e8b"
        },
        "item": {
          "id": "93c3b631-1a7b-4b21-b890-669f67197ba5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d2a193f6-b850-4890-b9a1-8babc298af9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529463b9-3151-4a19-96c1-127c3ac36968",
        "cursor": {
          "ref": "490c828a-a655-4415-9d59-f3aab6fedad8",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fd882aab-4602-45d2-a153-2b6f7065bdfb"
        },
        "item": {
          "id": "529463b9-3151-4a19-96c1-127c3ac36968",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ebdb4bb8-d26e-42fc-a7af-c90da6586aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f52056e-7831-4727-8a26-56958565c453",
        "cursor": {
          "ref": "6fbcf2b6-6084-4dc5-b1e6-975a1e348907",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4415a7ba-96ab-4b1b-8018-dbea8e3a3eed"
        },
        "item": {
          "id": "7f52056e-7831-4727-8a26-56958565c453",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4c583cb7-6ce1-4024-82b9-5da28b05b236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e198b064-0e4f-4d29-b035-c6fbae6ef821",
        "cursor": {
          "ref": "4b6cc02a-4d40-47b3-bcf3-1e0960cbdff6",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b8e8dc04-48bb-48d2-9237-6c1117d42a6d"
        },
        "item": {
          "id": "e198b064-0e4f-4d29-b035-c6fbae6ef821",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6777a0ee-4331-4117-88d7-f05e3bc741de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30cc6c8-7d9a-47b5-9d00-bfe36ff9e1e8",
        "cursor": {
          "ref": "4796afa5-c6f7-4882-b616-e30a1550f584",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3a0b1cdf-93f6-49ad-996a-d691263bc1d3"
        },
        "item": {
          "id": "c30cc6c8-7d9a-47b5-9d00-bfe36ff9e1e8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c6d37012-9ab9-4154-a2a5-4936321ec558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13591c76-3ed9-4f8a-84f3-338d13c85e32",
        "cursor": {
          "ref": "f40b9e9f-f9f1-41ff-8ced-2b46ac1c2669",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3ceded65-9e6b-42cd-8566-23392938b9ee"
        },
        "item": {
          "id": "13591c76-3ed9-4f8a-84f3-338d13c85e32",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8a276354-09ed-461b-bcdf-a40b078446c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd53cda-9d7e-45a7-b40d-928596975f08",
        "cursor": {
          "ref": "d1bf4be3-1570-42d7-ba45-905a2ff708ef",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7913c534-8f94-4ebe-b243-29eb308e4884"
        },
        "item": {
          "id": "8cd53cda-9d7e-45a7-b40d-928596975f08",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "712dd7de-8b0e-4e3a-8f65-20645ba03629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbb775e-bbff-4837-bc9f-df1922c4b152",
        "cursor": {
          "ref": "0a388217-39a3-4325-9cb5-72fb4aad7860",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a618aeba-ea27-4197-8fbe-d53e61ac0a19"
        },
        "item": {
          "id": "8fbb775e-bbff-4837-bc9f-df1922c4b152",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "98c97fbf-d4d9-4f33-b419-51e3f386fa6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3da393-12b0-4a47-9a75-88aa2ffb7834",
        "cursor": {
          "ref": "884f7584-18fb-406c-87e4-a63b73ab4d6a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6821bae3-153b-45f9-95b5-00271541c69f"
        },
        "item": {
          "id": "9d3da393-12b0-4a47-9a75-88aa2ffb7834",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5115d218-92ca-4fcb-b94b-ff4d093c2031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e60ea0-f742-4758-865b-f2e559310695",
        "cursor": {
          "ref": "4cac8260-aad5-4482-b5b2-2370aa57414f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d6dfa2d7-0eb7-4727-a3f1-ea1eff788fff"
        },
        "item": {
          "id": "75e60ea0-f742-4758-865b-f2e559310695",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0c3dd342-edbd-4ecc-9979-6e13645262d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e1fec5-d887-441e-812a-33f925dfa779",
        "cursor": {
          "ref": "d5b12720-add9-44b2-b920-cbf10b5331c0",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0bc1c121-33e8-4f17-af17-6426ea2f3494"
        },
        "item": {
          "id": "00e1fec5-d887-441e-812a-33f925dfa779",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0a030655-fc4b-4474-8651-a1d90caaa9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c180028-8d6a-4c1a-83cf-cb7cb1fb82a2",
        "cursor": {
          "ref": "1bcd6d1d-02e3-487c-b06d-97197440d023",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e49e3365-0bc1-4cf4-a1be-a080effef614"
        },
        "item": {
          "id": "1c180028-8d6a-4c1a-83cf-cb7cb1fb82a2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c40df403-9ada-4e7f-bd09-b629eb740b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7074cc5c-690f-4406-bf1c-27efdaafd90a",
        "cursor": {
          "ref": "83bb8e92-eb8c-4484-8898-56ab2c77e976",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1922cecb-df40-4327-97b6-31e239d3a9d3"
        },
        "item": {
          "id": "7074cc5c-690f-4406-bf1c-27efdaafd90a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d2e6fc56-78b1-44aa-9dd8-5d1612525f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3720a09-1387-47f9-89e8-f825fd02b363",
        "cursor": {
          "ref": "9098f8ec-ed86-4077-8392-dde0dbd0ca82",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8c202fee-3a90-4069-8ff4-37fb81b83a75"
        },
        "item": {
          "id": "d3720a09-1387-47f9-89e8-f825fd02b363",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "357e32c1-a4d4-4eaf-a069-43796ae26255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fc42b3-ddd2-4f18-9b02-208667c710e7",
        "cursor": {
          "ref": "15207025-c8ca-448a-bb8c-b54f7d263232",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "16dc9ece-5d4b-4b68-a694-dc05363ded25"
        },
        "item": {
          "id": "b2fc42b3-ddd2-4f18-9b02-208667c710e7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bbc6a543-68de-4998-a7f2-eb8321cbf3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f13a45-3446-4765-8a1e-71f796e45378",
        "cursor": {
          "ref": "94fbff88-12a6-4708-8e4a-224a48e8ff47",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c727d7f5-f7d7-42f2-9838-3113961afa0b"
        },
        "item": {
          "id": "52f13a45-3446-4765-8a1e-71f796e45378",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "54af5afd-29ec-4b29-9aa7-e88c46b0c6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f8afab-8f1f-41fd-bd96-e2f59a00f17f",
        "cursor": {
          "ref": "2ea3674f-6ae1-4c45-ad8b-75aa8ce3d983",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "04923539-1b00-43b0-b249-a8f0f2df8fe1"
        },
        "item": {
          "id": "42f8afab-8f1f-41fd-bd96-e2f59a00f17f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "378a84be-f36a-4c83-875e-b48388fc13dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca051091-06dd-4b41-9b28-20614246a22d",
        "cursor": {
          "ref": "483d0479-fdfc-4f06-8315-e8882b25b63f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8500fece-8999-45dd-8814-21e7d120aace"
        },
        "item": {
          "id": "ca051091-06dd-4b41-9b28-20614246a22d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5096d267-f7b8-4762-b946-61ff7a4d7bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff77804-019b-4247-a1c5-0d0d57754358",
        "cursor": {
          "ref": "ed46e128-c376-4fd8-a8d5-35b557586082",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d3cb0aa9-596e-447b-942a-7109161f1003"
        },
        "item": {
          "id": "0ff77804-019b-4247-a1c5-0d0d57754358",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2665c618-75ad-453d-9ab5-5ca5237b2fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2074347c-92d8-42dd-896a-7f067514eda9",
        "cursor": {
          "ref": "a30c6087-f1d7-4c28-bf6d-6994d08fb467",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f07cd90b-c244-44f8-be11-6989efae2114"
        },
        "item": {
          "id": "2074347c-92d8-42dd-896a-7f067514eda9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dbfe5579-18d6-49aa-9f3a-5eea26bb384f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1543c8e4-5b23-4aaa-a60c-afb6df7d516f",
        "cursor": {
          "ref": "c776869b-b473-4456-b124-37c69caa665a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7e37afcc-4085-4aef-ab60-ebb3a67e3edc"
        },
        "item": {
          "id": "1543c8e4-5b23-4aaa-a60c-afb6df7d516f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "47b398da-af65-4f92-ac2c-3a8bc0c7001d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8a8d15-d8a6-4fe0-82e0-69677cf2eb37",
        "cursor": {
          "ref": "0c205168-fda1-4a93-bb38-d8557451c975",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7dd5e77c-5526-4877-9726-ccfdd4fdb2b4"
        },
        "item": {
          "id": "ac8a8d15-d8a6-4fe0-82e0-69677cf2eb37",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "89626c40-db0f-402e-9f31-e49d3038b7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd07a9a-9066-4cf0-acf8-1e5dc457e587",
        "cursor": {
          "ref": "00cd9b65-3501-4da0-ad88-f720d056187e",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "09ac03e6-fe0c-4042-a96e-7e341a17a404"
        },
        "item": {
          "id": "4bd07a9a-9066-4cf0-acf8-1e5dc457e587",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6e85cdcd-a567-4043-bace-0972f59db239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2076c34-e5e4-4e59-a253-6a468c18a49c",
        "cursor": {
          "ref": "27fe9245-c142-42c3-a60b-8f2d9207f09e",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "67766fd1-1142-4f5f-9888-c76f2aa201ba"
        },
        "item": {
          "id": "a2076c34-e5e4-4e59-a253-6a468c18a49c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "82c01075-1312-4af0-8076-cd40c8277bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43877f37-d725-4b9f-9e95-d3e751672419",
        "cursor": {
          "ref": "29541a6a-819f-491b-83aa-b0f5cc47615b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1612ec73-7ce9-4608-8ffc-ef203b70db6d"
        },
        "item": {
          "id": "43877f37-d725-4b9f-9e95-d3e751672419",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2abc7f2a-0029-4b2d-9464-f9572484e374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48856df8-d131-400d-ade1-92762eaa542f",
        "cursor": {
          "ref": "48c11364-09cd-4e7d-b0ad-3c82ebe700d7",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9eec9200-0f4c-4d58-b864-dd0f1991c7f7"
        },
        "item": {
          "id": "48856df8-d131-400d-ade1-92762eaa542f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "59c1b457-48fb-4a25-aefc-55a2d148b285",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301e2fb3-4d39-4995-8f48-4b1459ebc3cd",
        "cursor": {
          "ref": "047e2677-e2f4-41f0-993b-50e0bbd454bf",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4a6461c9-68c3-4882-b8c3-cbd992860fa3"
        },
        "item": {
          "id": "301e2fb3-4d39-4995-8f48-4b1459ebc3cd",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9ccb37ab-595b-4a51-97c1-f69ac94634a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ffe1c38d-568a-4fe3-8a08-b37a649f6fa2",
        "cursor": {
          "ref": "69cba66b-ecef-4137-93df-ad0ac878ec47",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "36d4d43c-a4ae-4759-bd75-431a10878e5a"
        },
        "item": {
          "id": "ffe1c38d-568a-4fe3-8a08-b37a649f6fa2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b62cb45e-b15a-47b0-a3c8-b1f718b0df41",
          "status": "Created",
          "code": 201,
          "responseTime": 22910,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4019fa7e-7650-418e-8e91-08c07008f024",
        "cursor": {
          "ref": "3e887963-7921-4914-b50d-1e41d717371c",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "517e15b4-4c6b-4730-a2a4-81c7a47a8faa"
        },
        "item": {
          "id": "4019fa7e-7650-418e-8e91-08c07008f024",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "98b21b6b-805c-470e-8054-ef9fa4300adc",
          "status": "Created",
          "code": 201,
          "responseTime": 22191,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f22e3ce-a0ea-4eb2-a2ae-32f3dbac57d5",
        "cursor": {
          "ref": "ffe22e24-8583-4f70-86a4-88bde7525fb9",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7c67fe9d-0a98-45fe-b276-a83fe7d8182c"
        },
        "item": {
          "id": "6f22e3ce-a0ea-4eb2-a2ae-32f3dbac57d5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9b044ce8-793d-49dc-ac5c-cbdd99315c03",
          "status": "Created",
          "code": 201,
          "responseTime": 22600,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "61490eb4-3122-421f-a341-6f9a7e961217",
        "cursor": {
          "ref": "0a78427b-7fce-486e-a27e-b564207c6f54",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "90315f19-1987-4052-bd3b-96d53a23b21a"
        },
        "item": {
          "id": "61490eb4-3122-421f-a341-6f9a7e961217",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d849ad9c-5b5c-4a82-9a23-011b30e05c25",
          "status": "Created",
          "code": 201,
          "responseTime": 21971,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78f377d-85cb-4082-b033-e26fd2576c84",
        "cursor": {
          "ref": "921227c3-0293-4ba9-9e38-6d28a88efb5e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bc348059-ed48-4d7b-a76a-de01764f8de6"
        },
        "item": {
          "id": "d78f377d-85cb-4082-b033-e26fd2576c84",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "07911366-447f-4308-8d9c-11ca4756d315",
          "status": "Created",
          "code": 201,
          "responseTime": 22172,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-10-04T00:47:30Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-10-04T00:47:30Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0e712fdc-4578-4eee-86c2-3704a2e26c3c",
        "cursor": {
          "ref": "c1fb8cc7-439d-4fc5-9ee6-f7365745b419",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6184c873-db39-4783-8433-f39ae1c02940"
        },
        "item": {
          "id": "0e712fdc-4578-4eee-86c2-3704a2e26c3c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e5ce1d4b-abe2-4163-9c6f-a16ea465bf91",
          "status": "Created",
          "code": 201,
          "responseTime": 22249,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bacf0e-81ec-4f36-a0f9-9a10c9f5ad5f",
        "cursor": {
          "ref": "6fd34053-e579-463a-85bd-558067f38837",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6b57dcde-f991-484e-9fcb-af434aaadd9e"
        },
        "item": {
          "id": "99bacf0e-81ec-4f36-a0f9-9a10c9f5ad5f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "09dd7bf8-8d41-4f8c-bb46-0be257168213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6404a254-a052-47f4-98bb-09544213e816",
        "cursor": {
          "ref": "3fa08533-652a-41e8-8424-1463e6bfe65d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c717eff5-064d-4179-a621-b8be16f89b52"
        },
        "item": {
          "id": "6404a254-a052-47f4-98bb-09544213e816",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "084bedc4-0a3d-4a47-922d-aba8e79aee51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc90ae46-5428-4549-ac65-4fad45fa84fc",
        "cursor": {
          "ref": "449e957f-954d-448a-a642-a9427f13f18f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2f578bb4-d5cb-4f1d-a3a4-98f16f2b0365"
        },
        "item": {
          "id": "cc90ae46-5428-4549-ac65-4fad45fa84fc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "527fd1a9-137f-4e0f-9f74-5c7ef573ce10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a17b0c-c0de-43aa-815c-2e086c423f67",
        "cursor": {
          "ref": "ab0da09f-ce39-47e3-a9c8-bd2e2536e94b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e07b9c3b-0e71-412d-9b3b-2bc26333f887"
        },
        "item": {
          "id": "47a17b0c-c0de-43aa-815c-2e086c423f67",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4b9a1b3f-ccd9-45d4-af42-9832d11cded9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3b42aa-5f46-4c6a-bcea-e46f673e4424",
        "cursor": {
          "ref": "e1d7293e-7086-45f5-b618-1c15f7da1679",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c61eb3a5-9ad1-4dfd-9591-a31f644ef069"
        },
        "item": {
          "id": "bc3b42aa-5f46-4c6a-bcea-e46f673e4424",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b90e9e31-080d-4a5e-aff6-dbd5e22d66c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e075fc1-0ebb-408e-b368-ec47e92fdfac",
        "cursor": {
          "ref": "a04362b4-0f5f-420d-989b-6a0b54f3ee4f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "77062e87-9e59-4be2-b29e-157f4e32c592"
        },
        "item": {
          "id": "5e075fc1-0ebb-408e-b368-ec47e92fdfac",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "32889a12-9a2c-452f-859e-087be859a950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909522b0-efe2-4f2c-9cb9-91885e90f365",
        "cursor": {
          "ref": "517ce16f-6b8f-4e57-9eb0-ac433c3f8782",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ea6ecb39-4933-4f7d-ab24-ddf9d975f472"
        },
        "item": {
          "id": "909522b0-efe2-4f2c-9cb9-91885e90f365",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "df727765-105e-48db-b3c8-b602f94078de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f9ca8b-d853-4fde-b2f5-7d4a6a8e93ca",
        "cursor": {
          "ref": "7e783e0b-4a76-4922-b323-f1dde39fd11a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5c5c2165-8f76-4868-af06-539320b17483"
        },
        "item": {
          "id": "36f9ca8b-d853-4fde-b2f5-7d4a6a8e93ca",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "610e7507-b92b-4125-8e4d-aa267b47c36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12acde5e-e929-4608-b80d-e8f6c1e0390f",
        "cursor": {
          "ref": "76dc30dc-bdc7-41ae-8fd3-014ce74c0f10",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f275bc31-1303-4aae-9020-f0f6d4b01712"
        },
        "item": {
          "id": "12acde5e-e929-4608-b80d-e8f6c1e0390f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "afe16cca-86a7-493e-a1bf-29bc462d8d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910966bf-d2e2-4943-bdd4-6d65bc1810c6",
        "cursor": {
          "ref": "2d4f7f14-108d-4051-ba92-321e10ff0061",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bdbd2ac6-316a-4bee-a3bc-e58479445ef6"
        },
        "item": {
          "id": "910966bf-d2e2-4943-bdd4-6d65bc1810c6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f33c5252-4c7d-493e-b4d3-8eae4a3940e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5158c8-dc7f-42df-8bf0-f11246f4fd6d",
        "cursor": {
          "ref": "333b858e-4382-4619-840c-5cb1294631c7",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "04abc223-de44-4991-9ceb-b86df3e1027c"
        },
        "item": {
          "id": "9a5158c8-dc7f-42df-8bf0-f11246f4fd6d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e74e4ee7-8b53-4a38-8655-5592cceaeb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348ab05c-918c-48d2-b487-a73fb2ed7f17",
        "cursor": {
          "ref": "124b982b-397c-4f90-bf3c-98bacdd1ea61",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "aa862670-48a2-4ee2-9905-06c96609c963"
        },
        "item": {
          "id": "348ab05c-918c-48d2-b487-a73fb2ed7f17",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7da45fb8-4773-4721-91dd-a447694d447f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bd9dba-d2cf-4659-a74f-707650e45577",
        "cursor": {
          "ref": "5afe5fd5-b3e1-44be-920e-4217dce22568",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7bba9a87-7ba3-41f6-9f9f-ca2061356168"
        },
        "item": {
          "id": "10bd9dba-d2cf-4659-a74f-707650e45577",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fb221740-0089-4e3b-b473-f74ebaa08c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1855da-a6c1-45d1-bbf8-5e19762b5759",
        "cursor": {
          "ref": "25eb15e5-24e8-425e-af5b-6cecd21e839d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "aeadfa3c-456c-4198-a125-819fc66b7e83"
        },
        "item": {
          "id": "3d1855da-a6c1-45d1-bbf8-5e19762b5759",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9d2ef6c2-f790-4f9d-ab9f-2dbea46531c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0bc003-1afa-4851-8e3c-d9deee5092da",
        "cursor": {
          "ref": "6f780401-f8c8-498f-b955-f864201d3ce2",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f0ee8534-273a-4ded-a26a-46c99d0d32e0"
        },
        "item": {
          "id": "9c0bc003-1afa-4851-8e3c-d9deee5092da",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6dd5971a-3465-42a1-b624-705100a77995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5b7583-2d9f-4c6f-b84c-ae519df90f35",
        "cursor": {
          "ref": "c4b7a54d-f0d5-475c-adda-f1f3ad108d3e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8945184d-f36d-4ac9-803c-ba8729df4adf"
        },
        "item": {
          "id": "0a5b7583-2d9f-4c6f-b84c-ae519df90f35",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1bd36d57-f7cf-4922-8ceb-192e719d57e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ba3d9e-8090-4c2c-9ce5-844607142ee9",
        "cursor": {
          "ref": "fbc97139-0793-435e-9854-0743ab4b87ce",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ccbc3746-e63c-46bf-b40d-f58b33b6080e"
        },
        "item": {
          "id": "c7ba3d9e-8090-4c2c-9ce5-844607142ee9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f3e171e1-6c04-46bb-a937-c885499970a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ca5378-4cd5-40c7-9af9-b2d7e8f5e48b",
        "cursor": {
          "ref": "a5723806-0175-4f79-b62c-42b4e1417c6f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bb530d36-0ad0-43fa-80ba-a23d73da8364"
        },
        "item": {
          "id": "e7ca5378-4cd5-40c7-9af9-b2d7e8f5e48b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c795365e-67df-432c-8861-5c650c66dfbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c203aa4-9878-4970-9394-5341290b3c24",
        "cursor": {
          "ref": "e00fc043-8fe8-41e1-ab3c-dd2aea36bda4",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2eb783cf-673e-4142-a301-89f5fa048757"
        },
        "item": {
          "id": "0c203aa4-9878-4970-9394-5341290b3c24",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fab659bd-ef6d-4fcc-88b7-7ed4a3ae252a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5079e6e-254a-46c2-999a-9f7f0d5fe1b3",
        "cursor": {
          "ref": "b7edadd2-0bea-448a-bb56-9a2aacd2b61d",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2b6ea622-194b-473c-b46b-6bac28f35d16"
        },
        "item": {
          "id": "f5079e6e-254a-46c2-999a-9f7f0d5fe1b3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f80afc55-c48f-4546-bdba-904527b43433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2047cae1-d4c5-4e1e-a0a3-d33b399d7fd0",
        "cursor": {
          "ref": "a415d72e-c1d3-4d80-a67c-9fb833bd9c45",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c25c013a-d44c-49d3-961d-01688d82fc1c"
        },
        "item": {
          "id": "2047cae1-d4c5-4e1e-a0a3-d33b399d7fd0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0f19a968-1887-4d6b-b268-eca7702e85c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752c9add-9e5d-4d4c-934e-b7af6f82ce75",
        "cursor": {
          "ref": "e3c719e1-f8c9-424a-8923-0a49e205bf39",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2e86e029-98d2-4834-8f20-5319d07083d7"
        },
        "item": {
          "id": "752c9add-9e5d-4d4c-934e-b7af6f82ce75",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6439eaae-cc14-4533-a99a-942da56b2c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f31947-b802-4766-aaae-39c5f1b073d6",
        "cursor": {
          "ref": "52919bea-bb09-4f8f-812e-98bce538ee5e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "45701523-df55-4dbe-82e6-1982d6a1dbee"
        },
        "item": {
          "id": "e6f31947-b802-4766-aaae-39c5f1b073d6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b8d9bd71-c32d-4a8b-ac7c-2d6a80391459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6ddefd-eb0c-481a-8d0c-5f4935b567d5",
        "cursor": {
          "ref": "395ab419-28c9-428f-881d-29743bc10ee2",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a9f578fc-4706-4204-8b23-f61a0a5bc6b4"
        },
        "item": {
          "id": "ed6ddefd-eb0c-481a-8d0c-5f4935b567d5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "57ea5dbc-2c7a-469c-a8d5-b9caae92bf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773fb7c0-387b-47dd-bdcd-70c1f76e89db",
        "cursor": {
          "ref": "501df5e9-494c-42b0-8bb0-06d5d4366ec8",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7a731f95-a2ec-4756-a3b6-895f53677c6d"
        },
        "item": {
          "id": "773fb7c0-387b-47dd-bdcd-70c1f76e89db",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6753f31f-6b41-4f08-ba48-0e1bd2267fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70952b09-3fec-4e05-81ba-53e83116a947",
        "cursor": {
          "ref": "96625751-0400-40ee-b302-7e68a7b83d02",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "66643347-d83e-4657-97cc-399b54ceca56"
        },
        "item": {
          "id": "70952b09-3fec-4e05-81ba-53e83116a947",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6c0c3fa8-588f-4456-979f-14f243c44474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a28631-ea1c-4280-851c-5bb05248a175",
        "cursor": {
          "ref": "730e27d0-bd18-4648-b1ec-4a19d4ff866d",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c0b788bc-b791-4ac6-b8e6-eee1c810c6e3"
        },
        "item": {
          "id": "76a28631-ea1c-4280-851c-5bb05248a175",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "856b1b20-8914-4b6b-ba31-3a723515a208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2dfb0b-5a80-4f07-bf56-8676c3ee3b68",
        "cursor": {
          "ref": "60f26729-70dd-4d57-a81f-f646f70bfd0e",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dbb83048-c6b3-4285-ad45-2f2ad3d45ef6"
        },
        "item": {
          "id": "4b2dfb0b-5a80-4f07-bf56-8676c3ee3b68",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7e1e2f9c-5bac-489f-ba64-9e62e6c220f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dea748-f544-4db6-a8a8-c2771a84dee2",
        "cursor": {
          "ref": "052463d9-82c2-455e-add0-84027c057d02",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ecbb7a78-f711-4fc6-8e0b-9d2ade88e272"
        },
        "item": {
          "id": "12dea748-f544-4db6-a8a8-c2771a84dee2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "caf0a2ae-cbbb-4c94-90a6-67a82d211677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f84b428-5b32-45e9-8f00-0e10f56d1af8",
        "cursor": {
          "ref": "a5238cd0-1f1a-41ee-81fc-11e3e55c8507",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6b56c55f-8acb-4afd-b04c-e96db31b022d"
        },
        "item": {
          "id": "3f84b428-5b32-45e9-8f00-0e10f56d1af8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4d941800-df7d-4670-88cc-37a95a81efc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f185de15-89f0-43bd-a81c-1c2f8faeefa7",
        "cursor": {
          "ref": "5b9b201e-c269-4638-a3c7-0e9d61581592",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5b169a68-97a7-4fe9-9c32-e86300d1029d"
        },
        "item": {
          "id": "f185de15-89f0-43bd-a81c-1c2f8faeefa7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5d06fff4-d0d9-49ae-bcee-ddc3fc74819d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5503145c-252c-43db-865e-ee38ca428a3d",
        "cursor": {
          "ref": "a067bffd-c7d3-48ef-bc43-3cf4b27b4fdc",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7e4de8c5-a93b-46e9-8e84-db57da847dd4"
        },
        "item": {
          "id": "5503145c-252c-43db-865e-ee38ca428a3d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8738bd97-d181-4508-9160-06ea00cc3945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6199e0e3-f7d1-467a-8728-13b7449903a2",
        "cursor": {
          "ref": "f021785a-c39c-40cb-8ae7-9b861c712595",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e8d11ab9-6a20-44e7-8df6-dec1f808102b"
        },
        "item": {
          "id": "6199e0e3-f7d1-467a-8728-13b7449903a2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b75f086b-723a-4031-8326-fe9c5b54197f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c7dc61-68e8-470b-b8b8-2fd9f0feb88a",
        "cursor": {
          "ref": "8994b835-7509-48ca-a417-6e268f96abdb",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b0e7ea80-bf24-44b5-bf1d-7d7150e3c85a"
        },
        "item": {
          "id": "68c7dc61-68e8-470b-b8b8-2fd9f0feb88a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d3a4d629-5c42-4f6e-ab18-c5083cb8acbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2748ff79-4261-447a-b141-3e8b0e4d4387",
        "cursor": {
          "ref": "e6a015c1-5bc4-4267-b577-827672080b75",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "503ec6ed-5e22-4c18-abaf-32d78c4d83ff"
        },
        "item": {
          "id": "2748ff79-4261-447a-b141-3e8b0e4d4387",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "eda82d13-5fe5-488a-b14c-b71dc83e202c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e3abda-f548-4568-8b27-2d1cd4c84924",
        "cursor": {
          "ref": "9c960ef0-7f6d-4046-9d31-7fed265c5606",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e0075dfc-e001-4958-945c-e9f7e2f86ba4"
        },
        "item": {
          "id": "95e3abda-f548-4568-8b27-2d1cd4c84924",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d6a339ee-7d9e-4e5a-bf1d-eebd95b00256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d95599-4e21-4ef2-9f7c-3dc8fe502ac8",
        "cursor": {
          "ref": "eeae28ab-0d13-4507-902d-7bbf200f4cb0",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "28cae38b-ec62-4b6b-83ca-4f370c42471b"
        },
        "item": {
          "id": "90d95599-4e21-4ef2-9f7c-3dc8fe502ac8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "463a4063-7b96-41be-a48f-093389a5f2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88d93f2-d560-4745-bc7c-b5a3b1ba0f22",
        "cursor": {
          "ref": "bfa6f7de-01c7-4d99-8a0a-8ee80bb5298f",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2a5ae02a-182b-47fb-a013-aaba8dbc7494"
        },
        "item": {
          "id": "c88d93f2-d560-4745-bc7c-b5a3b1ba0f22",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5cc12280-b05c-4eb2-bdaf-6acaf78786f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09538cd2-f1e6-412f-a002-c2643eeed30b",
        "cursor": {
          "ref": "d316f12d-c2b8-4402-b9b0-bdddcb05924c",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2dded06b-e463-4074-af2b-ea15446e3d13"
        },
        "item": {
          "id": "09538cd2-f1e6-412f-a002-c2643eeed30b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a0183181-aa17-4c60-8acf-f37e329cd2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13ff4a4-5004-4f53-820f-3436b7534210",
        "cursor": {
          "ref": "aa817064-668f-4c6d-a003-36be05a6a211",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b74b728f-cdbd-4ef4-8135-78e2a007b179"
        },
        "item": {
          "id": "c13ff4a4-5004-4f53-820f-3436b7534210",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a89cefed-b51a-4f35-a542-7d1df48e54fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcb60d7-7f1c-4e82-bc8e-ed80b7169caa",
        "cursor": {
          "ref": "a4298165-1279-4527-b1f7-4ca5749ea7b8",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "272905a4-5fe4-4159-968d-a9a089f5fa39"
        },
        "item": {
          "id": "bfcb60d7-7f1c-4e82-bc8e-ed80b7169caa",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8a989450-1a6f-4737-a73d-6d16fba25f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe16485-ec02-4c3f-ab1d-d9e009f36260",
        "cursor": {
          "ref": "7ddd884f-b08e-4788-8389-348d59365828",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9f086918-e531-4244-b372-e344c81ada9e"
        },
        "item": {
          "id": "6fe16485-ec02-4c3f-ab1d-d9e009f36260",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "937cef44-9d0c-4bea-8979-ba0b38c9dec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af021881-fb00-4305-87fc-301a6d31ac82",
        "cursor": {
          "ref": "f82f1f87-33fb-4254-b02e-f61d5b51e035",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2cd68d06-be2c-4e29-aa29-1be7e90f5837"
        },
        "item": {
          "id": "af021881-fb00-4305-87fc-301a6d31ac82",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "00266f16-d194-40fb-b52a-9729ba54b497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4c005f-5bfc-4aac-aea8-942eaf0d4f9f",
        "cursor": {
          "ref": "7ae483c7-35ef-458b-b03d-ced9ac48daae",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8eb0e802-1c71-498d-ac41-aaf6acf10cbc"
        },
        "item": {
          "id": "9c4c005f-5bfc-4aac-aea8-942eaf0d4f9f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c253526b-6c45-4e26-bf25-5c0561184b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21920ec2-eb09-4b3f-8cfc-fd18dbec13c9",
        "cursor": {
          "ref": "2eb1619d-c597-4fd4-bc32-5ec62ec85767",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0a668f06-06f1-4200-b417-ab458c0e7e17"
        },
        "item": {
          "id": "21920ec2-eb09-4b3f-8cfc-fd18dbec13c9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4f2374aa-e27a-4482-a250-401b658da9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4353fb4-dd33-4ec8-ab02-4edcb15d8a4b",
        "cursor": {
          "ref": "5ad418a7-1a29-4856-9912-44677d8ebef9",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5c71eec0-3926-4570-8558-b4041a2d7314"
        },
        "item": {
          "id": "a4353fb4-dd33-4ec8-ab02-4edcb15d8a4b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8a33b3dd-6de2-4e68-8199-096e7ad40d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38378202-2780-46fe-a3d7-ba7feebb40f2",
        "cursor": {
          "ref": "3f960957-5287-4ba1-bc1c-f2d1fd85c498",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5ff13401-2c44-4ba6-8818-a5320077e5df"
        },
        "item": {
          "id": "38378202-2780-46fe-a3d7-ba7feebb40f2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fc2059ae-ce89-4aaa-b5da-f06537192e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b38d3c0-32f0-4d1f-a83f-17f4b2c332f0",
        "cursor": {
          "ref": "e49ba868-4b37-4da0-bc3d-4902474671bf",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ee8a8aca-774a-4d51-bc4b-4b899237dc95"
        },
        "item": {
          "id": "9b38d3c0-32f0-4d1f-a83f-17f4b2c332f0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "15925e1c-fb08-4d63-9bef-4fb8e2af8d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6b1bf8-ae60-4d5f-92dd-339ad4384031",
        "cursor": {
          "ref": "f3ea5f59-703e-46f8-bb24-204954fa23c3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1bb4b32b-1370-4faf-9cf7-ab06ee0df80b"
        },
        "item": {
          "id": "0f6b1bf8-ae60-4d5f-92dd-339ad4384031",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "474367f3-cf70-4194-a45a-77f2eecc2cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd3fa82-1d13-4133-9f46-d593beba9faf",
        "cursor": {
          "ref": "2c4e2cc7-6fd3-476a-a3c1-580e9dd91995",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "720d4699-d56b-4b7c-a620-ab0304bf4ea6"
        },
        "item": {
          "id": "9fd3fa82-1d13-4133-9f46-d593beba9faf",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "dc88db69-b4e6-403c-8fc6-ed1aa2999a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8951bd-076a-4dca-ad9a-34ea514c363c",
        "cursor": {
          "ref": "abf4d7b0-28d3-46a8-89fa-4eef269b9ebd",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "79f45dec-9bed-4ba6-92ab-e2d1e4aa842c"
        },
        "item": {
          "id": "dc8951bd-076a-4dca-ad9a-34ea514c363c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e89c9b8d-460e-4a6f-9001-4b64e2425c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a3b09a-35ad-4c18-a55c-cb0e67c0f28c",
        "cursor": {
          "ref": "dd3e32d9-fabe-491e-8edb-12b915f26961",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5c515a96-ca5b-48e2-8879-69f357afe6b4"
        },
        "item": {
          "id": "38a3b09a-35ad-4c18-a55c-cb0e67c0f28c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4192d3e8-61aa-4fae-8001-7a9d9d5164af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c9d2ec-6f5a-488e-a0db-54c539a7fe5e",
        "cursor": {
          "ref": "e22a777e-04a2-4e01-838f-2bb91acd11e5",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "427ce519-93d9-49fc-99e5-a14590400709"
        },
        "item": {
          "id": "a0c9d2ec-6f5a-488e-a0db-54c539a7fe5e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "40b714c5-0b5e-47bb-b0fb-81242bd15478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bba8f6-b853-4e39-a575-5b485d6a5102",
        "cursor": {
          "ref": "d3fb9490-88d6-45b2-b740-7c81d89e8a44",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bc549332-6e0a-49a0-a431-1c4aea353a49"
        },
        "item": {
          "id": "91bba8f6-b853-4e39-a575-5b485d6a5102",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "835f400b-af5c-49d0-9594-87e97857e560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac8f544-fbb6-4797-afb3-ca56dfeaf4e0",
        "cursor": {
          "ref": "68404210-061f-4e1c-8de7-562946056bd2",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "16d91fcc-bdc7-4e68-a399-0754d215214e"
        },
        "item": {
          "id": "4ac8f544-fbb6-4797-afb3-ca56dfeaf4e0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f4537172-876d-4b7b-9dc4-aa7875b1fc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439caa3c-89c8-4e97-88d1-781bca0e68d8",
        "cursor": {
          "ref": "d5e4c51e-3403-4944-b552-0a85f03fc5d7",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a32e507a-2c1e-41ef-8877-1e216b0738a8"
        },
        "item": {
          "id": "439caa3c-89c8-4e97-88d1-781bca0e68d8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "606d2d94-7a83-431f-84ab-9b5598d7c6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea60e731-580c-49ff-a064-ee9198ce1023",
        "cursor": {
          "ref": "a553787c-e63d-46ec-8e39-9182ce45024a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b32866f0-1c3d-4912-9c88-e1526193e9c1"
        },
        "item": {
          "id": "ea60e731-580c-49ff-a064-ee9198ce1023",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a7fc3f14-f334-40bc-b29c-bf571feec588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734c9d30-845d-4dcd-b02a-57e08399e933",
        "cursor": {
          "ref": "ae17389c-86b1-4491-882a-ffacb7941668",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "03c66f25-e98e-4082-9473-fb6081557e3f"
        },
        "item": {
          "id": "734c9d30-845d-4dcd-b02a-57e08399e933",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9ee509d8-b681-40f8-878e-156ef700d246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96eb6bd8-c01e-4057-9853-1d4d291020f3",
        "cursor": {
          "ref": "fd477d3e-d5d4-424c-a25c-14828d135890",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4e07459c-a8bb-46c6-8462-4c05ff45a0ac"
        },
        "item": {
          "id": "96eb6bd8-c01e-4057-9853-1d4d291020f3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5530f851-0856-4d9c-9347-dfb9d153b498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea34b3b5-930d-46f9-9b81-3bbb389bd8dc",
        "cursor": {
          "ref": "9c80106f-c560-4d92-a308-cdb439d33a08",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "16b5ecad-3696-4c3f-91fe-ca128d3d8246"
        },
        "item": {
          "id": "ea34b3b5-930d-46f9-9b81-3bbb389bd8dc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "faa3fe62-22f0-4738-8b9e-083e574b0eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f185cb5-5c7a-4889-a501-7025b38d063a",
        "cursor": {
          "ref": "725ef41a-2b27-4178-bbaa-bfab3b589b16",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6c397e50-d809-4ba8-b41e-7ad16c1a9001"
        },
        "item": {
          "id": "1f185cb5-5c7a-4889-a501-7025b38d063a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2ace5fc0-a21b-4ecb-bb11-ce4ad563f639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6d55bc-f6b6-45fd-bcef-ccba6c8c4608",
        "cursor": {
          "ref": "06b1fc65-bbae-4d84-ac42-ed7f7f7f849b",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "54c35777-d94f-458f-8747-e1d224f8820b"
        },
        "item": {
          "id": "9e6d55bc-f6b6-45fd-bcef-ccba6c8c4608",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2e6713bb-220f-42ba-8bcf-1804f71de437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7961e5f-9a8b-4ea8-808d-12533d69af20",
        "cursor": {
          "ref": "f6bedbf6-27e6-4456-ba9a-e29978ca4919",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fce26491-c30c-4350-b2cc-97a866a861a3"
        },
        "item": {
          "id": "f7961e5f-9a8b-4ea8-808d-12533d69af20",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "be8d7f22-4c6b-499e-a8a8-830bd434d6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83cd4b8-7442-4774-a1e3-a96f4ae79df6",
        "cursor": {
          "ref": "15bf7688-4223-4297-8216-02703a82d478",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "905a95ac-76f1-4885-a960-d75251435d41"
        },
        "item": {
          "id": "d83cd4b8-7442-4774-a1e3-a96f4ae79df6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3b7b7f62-aede-4be5-8b09-8441b78a5976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82d4e02-4170-4983-baf9-5555b604eb4f",
        "cursor": {
          "ref": "d8c3135d-2a94-43a3-9d97-26b737e0849d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b7fdd7a4-9afb-48bf-b8e6-e0ed070625c5"
        },
        "item": {
          "id": "b82d4e02-4170-4983-baf9-5555b604eb4f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0cc773b4-a166-4df5-b64a-cd849c2cb2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2126a6-95a5-44f9-a0ad-1c777f2e6915",
        "cursor": {
          "ref": "3c164742-d6b4-4c43-8116-56f3edbdd654",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a835a110-8339-4ae5-92bf-b3464304cc93"
        },
        "item": {
          "id": "0f2126a6-95a5-44f9-a0ad-1c777f2e6915",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ce09cdee-f371-4b47-8bd9-0e7847bc0700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55e0345-c2a9-455c-964f-2f9989472391",
        "cursor": {
          "ref": "133499c0-e0d1-4926-8e3b-cfc9fc7a7a5d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "769c3a4c-ccc7-4999-83c4-a917d144c0b7"
        },
        "item": {
          "id": "c55e0345-c2a9-455c-964f-2f9989472391",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "798ddc6b-2f4a-481a-a62a-6b051fba1279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83e6768-f6c3-4959-ac63-4402ea62677a",
        "cursor": {
          "ref": "cda51f09-e726-4462-8a62-90ccfca6e795",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9e6b10e3-4c21-4584-95ee-ed16618f732f"
        },
        "item": {
          "id": "b83e6768-f6c3-4959-ac63-4402ea62677a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0c9f7dbf-dc42-4137-a6a4-29f51c4e4206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959bfbbf-275b-47b1-886d-fd993b619916",
        "cursor": {
          "ref": "2265865d-2be7-4539-9c3e-12731562593f",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5df30aa5-ec1c-422d-99cd-ec810268752a"
        },
        "item": {
          "id": "959bfbbf-275b-47b1-886d-fd993b619916",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "066f3b3d-fffe-4cbe-9df0-2638e62b2e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dd94d3-4467-410f-817e-b787c88b1f52",
        "cursor": {
          "ref": "d998431d-d758-4f16-824a-773a57077a8f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "08bc1695-90c4-4735-966b-01bc74b89af7"
        },
        "item": {
          "id": "e0dd94d3-4467-410f-817e-b787c88b1f52",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2e43c2f6-39ae-47a8-9c3c-1c286bc28a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc877317-6eb4-4e62-b948-19ad7f2ed9d8",
        "cursor": {
          "ref": "c973bfe0-7e15-438b-a993-789e49c6f362",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8f74647e-838d-45eb-ab6d-41b84cbf907c"
        },
        "item": {
          "id": "dc877317-6eb4-4e62-b948-19ad7f2ed9d8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6dd56724-7174-442d-91f8-8dc402855924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdcdc77-e03e-40ee-beb1-e6be67a1b9ed",
        "cursor": {
          "ref": "c5fcc0bc-2a1c-4828-a3dc-ea913ab0c8ed",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8d4fcab3-927d-46e8-b04d-e6d5418b73e1"
        },
        "item": {
          "id": "0bdcdc77-e03e-40ee-beb1-e6be67a1b9ed",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c83de7fa-806d-4cd1-9d2a-854f7e2f916e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91450364-2d41-4907-9ab0-57dd7604307d",
        "cursor": {
          "ref": "cf1e2f1f-f8f4-4e9b-9f8c-bb55915793b1",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3af58a95-1623-4268-99a4-983722356571"
        },
        "item": {
          "id": "91450364-2d41-4907-9ab0-57dd7604307d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "792310ed-9996-42d6-90c1-d5a5acfac82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3521062d-002c-4e08-a34c-feee466ceba2",
        "cursor": {
          "ref": "09a0aa1e-1648-4bfe-b6e1-2424fedc0e29",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e115049b-5866-41a0-bbbb-820e11ee1f38"
        },
        "item": {
          "id": "3521062d-002c-4e08-a34c-feee466ceba2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9e7560fd-8215-4fd6-9d85-1ed06b7d5302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b76a4ae-e9ce-411c-b7bf-1eeba9c30035",
        "cursor": {
          "ref": "07033093-830f-43e4-a9f4-29be16bd49c0",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b4caa0cd-a313-4c65-a5ac-84a171b02783"
        },
        "item": {
          "id": "6b76a4ae-e9ce-411c-b7bf-1eeba9c30035",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3141d94f-1448-4ba6-805b-5f0099ccaa4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee552c24-fe8f-4a30-8c3b-193b2bffd7ad",
        "cursor": {
          "ref": "cc40f1e9-00eb-4ba1-810e-be67afbc7c03",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ae93f11f-c296-43ab-bc9c-cb64fc43f846"
        },
        "item": {
          "id": "ee552c24-fe8f-4a30-8c3b-193b2bffd7ad",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "83f6855c-6f38-4dd9-b9a5-90a8b2b5d2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53da13fd-1a84-4ee8-bfc9-3c8442d08786",
        "cursor": {
          "ref": "e50caf9b-524b-4490-9a71-aad0717eceb9",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bcd4a16d-32f3-4f75-ac24-51fe2ae665de"
        },
        "item": {
          "id": "53da13fd-1a84-4ee8-bfc9-3c8442d08786",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8e6d78cb-f8a6-4217-b290-edc28201eddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e7ff23-6bfe-42d1-88a5-7de6fd120d8b",
        "cursor": {
          "ref": "847db027-4065-4213-873f-dca9fffeffee",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3ae8f235-9094-4991-b676-2299c39fa954"
        },
        "item": {
          "id": "30e7ff23-6bfe-42d1-88a5-7de6fd120d8b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b1de6a5f-d630-48ab-8e4f-61611aa34c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25e2dcf-2ddc-4e7d-80b1-0cfe34fca29c",
        "cursor": {
          "ref": "d6fc062a-3f8f-40c2-8cd4-4d65802aeda2",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c17fbb86-ca0b-4131-9d9e-05e908dfed55"
        },
        "item": {
          "id": "a25e2dcf-2ddc-4e7d-80b1-0cfe34fca29c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "10a78022-afa5-43f0-ad22-aa2905ebea59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f2c1f9-3a9a-4e8b-92e7-7e8b86927caa",
        "cursor": {
          "ref": "f280970c-1307-4517-9600-5ba93426fca9",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d9d4f3af-8fd0-4185-8998-9a9d5ae38b02"
        },
        "item": {
          "id": "70f2c1f9-3a9a-4e8b-92e7-7e8b86927caa",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "dcdf295e-ca7b-40f5-ae7a-4fd09a553886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68783c5a-caa1-4e94-bbc3-2765a328b411",
        "cursor": {
          "ref": "fe094ab4-b716-42cf-b270-cce305e829ca",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c743631c-76db-42a2-adc5-8d75efe9a8c3"
        },
        "item": {
          "id": "68783c5a-caa1-4e94-bbc3-2765a328b411",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e5c467e2-6d27-4a0a-b39d-fd8f166143be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9955aa-184b-4765-8f4b-77765cbe847a",
        "cursor": {
          "ref": "5ba3ebe2-811c-4cae-a854-059862fe3e72",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0a1ead32-7692-44f4-bd2c-9769858b9a79"
        },
        "item": {
          "id": "ad9955aa-184b-4765-8f4b-77765cbe847a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "849910ee-8380-40c8-83c0-af5e525206fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0827e25-c57f-4fd0-815f-90e8031872ff",
        "cursor": {
          "ref": "661311f3-f75c-42ff-865f-eec71b47f959",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "159496ae-84c8-49c8-8db1-4347f466d8e0"
        },
        "item": {
          "id": "d0827e25-c57f-4fd0-815f-90e8031872ff",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "35f73f29-3744-471e-ae14-56914dfe4856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd56de8e-b588-472b-a0a3-8c8db33fe2aa",
        "cursor": {
          "ref": "a0e9de8c-d204-414d-948a-7274aa465869",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "aa6d317c-2e9a-406c-bfdf-003e11825f12"
        },
        "item": {
          "id": "dd56de8e-b588-472b-a0a3-8c8db33fe2aa",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1d3b48d6-abb4-4320-bf70-19916c9dbf7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2276a81a-6b68-4a17-9051-0c2d38eadf8a",
        "cursor": {
          "ref": "2517b67d-c7ef-46f7-abae-201a44e9d61a",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "008dd41b-da4e-4ecb-bdd7-249b098d2dfd"
        },
        "item": {
          "id": "2276a81a-6b68-4a17-9051-0c2d38eadf8a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "40531c8f-6f2a-4d58-9e4b-ae0d6e24d07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40436e06-f98a-4173-b565-a1d6cbf1fe0d",
        "cursor": {
          "ref": "0dbe18d5-6c5f-4624-b753-a0d0e31cd9a9",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0c0b2acc-0a68-4606-8004-7a2233f87cbb"
        },
        "item": {
          "id": "40436e06-f98a-4173-b565-a1d6cbf1fe0d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7c6ef237-5899-4645-9a8d-3efe215a398f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e66b6d0-7fcc-4b9d-ba35-83198173a6fa",
        "cursor": {
          "ref": "40107aa0-70cd-457f-807a-8dd70c6d25ad",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5c720bbe-6fd3-4904-935f-35edc2826bb7"
        },
        "item": {
          "id": "8e66b6d0-7fcc-4b9d-ba35-83198173a6fa",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "db485bb0-a11d-47e8-aea8-8c021f18b550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af2d987-42c1-4544-81c5-414540d4c14a",
        "cursor": {
          "ref": "82d56aa8-990e-436e-99b1-8e66f0375752",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f0b8f029-5f43-4e86-94d5-899ddc31fdac"
        },
        "item": {
          "id": "7af2d987-42c1-4544-81c5-414540d4c14a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cc8050ac-8366-482a-b1ff-cd32575ea5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799c5d11-5316-4a28-b874-181a52bf4efc",
        "cursor": {
          "ref": "6215f5c1-8773-4fb0-9904-12b994d9709f",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3b8c95dd-e36c-49fe-b8bc-f014b9023aae"
        },
        "item": {
          "id": "799c5d11-5316-4a28-b874-181a52bf4efc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "317512aa-eceb-4902-89ae-8852413e23c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c55728a-0921-47ea-9f84-d169f804f294",
        "cursor": {
          "ref": "c3a6adb7-ec0c-4c9c-961c-83f0192daed3",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "811b8976-55fb-4cb5-81c9-fbfc8412c91a"
        },
        "item": {
          "id": "6c55728a-0921-47ea-9f84-d169f804f294",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "38c704d2-579a-4c06-8add-1f3519b8e145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6b57da-f30d-4a14-8525-963e86b505a5",
        "cursor": {
          "ref": "33cf2781-3997-439c-b085-f6a45d51b874",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "24bc73e8-29bd-44f7-a391-49537bba264c"
        },
        "item": {
          "id": "8e6b57da-f30d-4a14-8525-963e86b505a5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5ac34d50-2a87-4459-a21b-39488ac34ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb576eb-dae9-49ff-8a1d-5379125d5854",
        "cursor": {
          "ref": "17757418-b429-4dbb-9233-d10af51f5fa6",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5f98ca1c-7b41-4258-91fc-e308cd2cdd58"
        },
        "item": {
          "id": "cbb576eb-dae9-49ff-8a1d-5379125d5854",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b239fb40-fcb7-49df-b1a0-4442b2899bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277be82f-40ef-4c8a-b8bf-21c7e83f62ce",
        "cursor": {
          "ref": "76fb8b32-8462-4e1c-98bf-e842e22ab0d4",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d59ab6b2-3e8c-49f9-893b-6a6f7838d30f"
        },
        "item": {
          "id": "277be82f-40ef-4c8a-b8bf-21c7e83f62ce",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7579af91-7127-44ec-8200-f99f0573d54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f85f79-a565-49da-8727-614022811a6d",
        "cursor": {
          "ref": "6af17f06-f9de-4196-a1e6-dc2a29a02394",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2827d39e-e21b-4467-ab97-ffa53511ca1e"
        },
        "item": {
          "id": "03f85f79-a565-49da-8727-614022811a6d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "623f0e61-a0f7-460e-9c7a-ce757a46f20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7aa812-d231-4139-817f-63f5a5ee5d6f",
        "cursor": {
          "ref": "ea1f76db-93e4-4211-87c7-02694b138192",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "011cfc8c-33c2-4e23-9fbf-bcdf9f31b6e7"
        },
        "item": {
          "id": "0e7aa812-d231-4139-817f-63f5a5ee5d6f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "893f4687-a5f3-4ca5-991a-70ffddecb45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460785a6-4b9b-46e3-817a-258b4ded8d83",
        "cursor": {
          "ref": "10477c04-700d-4e6b-80d7-87da88877551",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5f06da3c-cdac-449d-ae94-a7b3d69e2f79"
        },
        "item": {
          "id": "460785a6-4b9b-46e3-817a-258b4ded8d83",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "556c99e9-739b-4c20-9321-40b8ef665aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141921ba-d674-44e2-b46a-92808389c54f",
        "cursor": {
          "ref": "f167a008-ebd5-44e2-aedd-13c1a11c3b24",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8a42ffc3-3f83-4f92-885d-00880f5baaa9"
        },
        "item": {
          "id": "141921ba-d674-44e2-b46a-92808389c54f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f623221c-f00e-44f7-8386-a95967e25507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ff280c-5c6a-48d7-bc5d-d35ae03a4318",
        "cursor": {
          "ref": "96cc32e0-a7ae-4985-be02-e10a022f1ace",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d002c4b1-662f-47f5-a9cc-98a4286e91bb"
        },
        "item": {
          "id": "54ff280c-5c6a-48d7-bc5d-d35ae03a4318",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "107bcc0f-c51b-4403-b913-d74daa5f3c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f29f20-7cf8-464d-966b-4f8015676545",
        "cursor": {
          "ref": "ff1d8c9e-fa59-4291-a147-8c171314c63a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d4bde808-cd4e-412e-84cf-59cedaf36924"
        },
        "item": {
          "id": "f0f29f20-7cf8-464d-966b-4f8015676545",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "84c14658-379b-4c57-8eed-4b0eb6bcf16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d667a62-bf3b-49fc-b1db-8eead0e80d77",
        "cursor": {
          "ref": "aea99420-54a6-4042-9f39-e4073b6ab1f9",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4c3bf91f-806c-4132-8451-e68103543871"
        },
        "item": {
          "id": "5d667a62-bf3b-49fc-b1db-8eead0e80d77",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d42e9a4a-770b-41b0-8483-e7b544aa0fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466ca383-b247-4879-a91b-7033b1700d9e",
        "cursor": {
          "ref": "b6bb9569-7790-4a77-9232-fd699f88e72a",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "142ffb65-e64e-41b4-8f05-440ea8c1054d"
        },
        "item": {
          "id": "466ca383-b247-4879-a91b-7033b1700d9e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7a2121e8-8cb8-443d-a740-718b4d53fec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf6679b-11cd-466e-91a9-99714645065a",
        "cursor": {
          "ref": "848396a5-b82a-4ad6-8e17-d837dac51a2a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "99d3c6c6-2bed-4799-b7bb-96ed39d54afa"
        },
        "item": {
          "id": "6cf6679b-11cd-466e-91a9-99714645065a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c4acf2ab-2cd1-4031-8abe-b39eac412cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2128ab-1359-43ed-a5c8-7012bd0c3cf3",
        "cursor": {
          "ref": "2634294f-3ad0-4c9d-95cf-a0f106d913bd",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "893763c9-5cf1-4557-b8ef-27ca7ac0392f"
        },
        "item": {
          "id": "ce2128ab-1359-43ed-a5c8-7012bd0c3cf3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e791cc2e-ebd6-4926-a6a0-5343f0efbff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0e7da8-3bac-4cb5-a89e-e9c21b8ef383",
        "cursor": {
          "ref": "1507a72b-a00f-4cb1-a33d-67eeb37b49a8",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0c7c7ac3-b907-4326-8897-3ac0b411eefd"
        },
        "item": {
          "id": "dc0e7da8-3bac-4cb5-a89e-e9c21b8ef383",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ba77b663-041b-43d2-9fcd-dd8b1f678e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a08d14c-2353-4d11-be55-87518f570cf8",
        "cursor": {
          "ref": "41e3960a-781b-42d8-a107-fb9e164c26f7",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a7818a71-ca53-49de-afe2-dc08744413f7"
        },
        "item": {
          "id": "8a08d14c-2353-4d11-be55-87518f570cf8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e65786f4-866f-4b54-b6c3-b1b74bb937bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8b2a51-737f-49ae-a9c4-765685bea0b0",
        "cursor": {
          "ref": "1fe4c6d5-cd3c-450b-918b-2cec32220cdc",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "72b628a4-ace1-48c8-9a6c-a6015cd2f7b6"
        },
        "item": {
          "id": "ed8b2a51-737f-49ae-a9c4-765685bea0b0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e5dd3acb-9ba2-4b34-a190-460c17184057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab9dc01-6300-451a-9979-542f4c9f8d31",
        "cursor": {
          "ref": "8710a44e-dcc1-4ff6-adc3-97b1b4e68a9e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2d43870f-3105-4c37-a27b-5cb799c37a82"
        },
        "item": {
          "id": "fab9dc01-6300-451a-9979-542f4c9f8d31",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4569675b-99ae-47f8-bc2e-45f5f5516c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c21a2a5-a665-451c-9861-18a0e06c9da1",
        "cursor": {
          "ref": "22c31d25-7309-448a-9f5b-0298d4cf843b",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "dcc63508-6a21-4429-82a3-70e6544aa241"
        },
        "item": {
          "id": "4c21a2a5-a665-451c-9861-18a0e06c9da1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "febd54f8-93b8-4a77-87ca-c34314a5a2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302089d5-4fb6-4f96-b0c3-755481426247",
        "cursor": {
          "ref": "0352576a-1d88-4e6d-8dc6-a2dc4e9d1ee0",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c2dacccb-cb03-4f60-9b8b-e05eb99fd51c"
        },
        "item": {
          "id": "302089d5-4fb6-4f96-b0c3-755481426247",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b672b3b9-9dee-484b-8db1-29a4e80b8ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16e1b9f-2443-4b4b-91ab-02d5548f1b08",
        "cursor": {
          "ref": "36a33075-9f1b-4902-9d85-3762c60123c8",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5a915a5e-fe71-4d89-a229-6c98210d22cf"
        },
        "item": {
          "id": "b16e1b9f-2443-4b4b-91ab-02d5548f1b08",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "62ede237-02a5-4f16-860a-69c5463c4bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f451c2c-5a90-494c-be2b-42dfbe0b970b",
        "cursor": {
          "ref": "fab4e42a-15bc-450b-8edf-9aaccbe4bc17",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f1d61987-bfd7-4082-a4b4-07b9babd37f7"
        },
        "item": {
          "id": "0f451c2c-5a90-494c-be2b-42dfbe0b970b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d0a731e9-8082-4a0f-a48f-00f28ce77297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363e3abf-a3b0-4bdf-bdd7-a4edd4c7a17d",
        "cursor": {
          "ref": "bf53836e-3893-4fab-914b-e5c920319651",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "968f7709-43d1-4537-86e7-a71222326834"
        },
        "item": {
          "id": "363e3abf-a3b0-4bdf-bdd7-a4edd4c7a17d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "978ddff5-3a43-4530-94e7-a1e7d1118069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b4e846-833c-488b-8b1c-a30d761e9dd9",
        "cursor": {
          "ref": "cbecf468-f9da-4a66-beec-4167dfdda8d1",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a78907ac-19fa-4e15-a390-f25ba9570d76"
        },
        "item": {
          "id": "d9b4e846-833c-488b-8b1c-a30d761e9dd9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "608c59dc-436d-4916-a36f-e3503ebc56f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f82a619-8ab7-4ef3-afef-d5445ff6c039",
        "cursor": {
          "ref": "19d3a1f1-6872-4f49-8977-1ddcb847d889",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1b7ded7b-8dc1-43e0-b812-dad6aaf49816"
        },
        "item": {
          "id": "5f82a619-8ab7-4ef3-afef-d5445ff6c039",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "827b13ae-3ee6-4862-acc6-d9bc8036e929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176f96e1-5ab6-418b-994f-93a93139ea50",
        "cursor": {
          "ref": "a2c44a1e-e935-4253-81b4-0aed51eec3f6",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8b6ea8e1-e945-455b-a753-e8e3324dc44c"
        },
        "item": {
          "id": "176f96e1-5ab6-418b-994f-93a93139ea50",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d95b057e-78b5-4054-882e-8b403314db03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbbf622-f748-4e00-8e24-8a674395fbf8",
        "cursor": {
          "ref": "c50e2821-9625-4ca6-98a6-a41ce378362a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d8331f67-b9a3-42aa-853e-f19220fbdc1a"
        },
        "item": {
          "id": "3cbbf622-f748-4e00-8e24-8a674395fbf8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c21c51cb-f1b7-4612-b815-0e6178fb28b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9cee0d-a5de-4bbe-8175-b99f1ca26983",
        "cursor": {
          "ref": "0bba37ab-0cf2-46d6-9e84-4eb1aed0360d",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0a1c68cc-c191-4f53-bc77-d6d707c52a7d"
        },
        "item": {
          "id": "4c9cee0d-a5de-4bbe-8175-b99f1ca26983",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "db90e07d-a56a-4bb6-9144-cdff28fef07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d0f071-dee4-4979-88b2-03804d9f7424",
        "cursor": {
          "ref": "30af5552-797f-45d2-bf37-a692e255db60",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a848ff35-e5b5-4fb8-8159-ac596595d61c"
        },
        "item": {
          "id": "28d0f071-dee4-4979-88b2-03804d9f7424",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f32df42e-ef07-49ef-9b62-895fde3cd2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba50d12-9ca3-40ab-9e58-a92f02a4c13f",
        "cursor": {
          "ref": "e82bbc44-7642-45f1-9639-48d74ac42316",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b9e80fd3-34ea-468d-8fe6-c74e898e9f45"
        },
        "item": {
          "id": "2ba50d12-9ca3-40ab-9e58-a92f02a4c13f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "38f2d59a-ab26-406e-8290-85e749c2f5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0825c534-112e-4c75-8313-19b059fbf693",
        "cursor": {
          "ref": "d409d907-88ca-47ab-b6d5-18a2df6e67a4",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3e125e8f-aa3f-4491-8e76-0f12666c20c2"
        },
        "item": {
          "id": "0825c534-112e-4c75-8313-19b059fbf693",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5f705231-e8ca-4f11-8304-5384bbf10d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32c5001-045e-45bd-96cc-495e5d94db7a",
        "cursor": {
          "ref": "673c2b9f-ff18-4326-823f-7b5d7de27933",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6eada423-1b23-4c15-90e3-2bbef3092c0c"
        },
        "item": {
          "id": "c32c5001-045e-45bd-96cc-495e5d94db7a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d21af8d2-2f45-4ec5-9eed-f6d1291f3623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80cdf43-6661-4e79-b8d3-f7bf59e2ace0",
        "cursor": {
          "ref": "65d28b0b-0079-4cfd-b255-34e3a32a73f9",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4cc00d83-5e8c-4a42-9a2f-46aaadccf1a9"
        },
        "item": {
          "id": "e80cdf43-6661-4e79-b8d3-f7bf59e2ace0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "37b217c8-5bd7-429e-8d03-2f68a68b3b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b1c083-1d0d-425a-9d2c-b1d68ff67151",
        "cursor": {
          "ref": "433027ca-034d-49f6-8b20-58d850388aa0",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4f26d389-00ab-4f8f-8318-b852b29c1dd4"
        },
        "item": {
          "id": "62b1c083-1d0d-425a-9d2c-b1d68ff67151",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8c775a4a-e274-45f4-8f84-3d97bb67847a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bcbead-adf1-41e6-a913-d8b4a42efd8b",
        "cursor": {
          "ref": "41478a19-6b2c-4495-9a4c-74272dcab312",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ba77c621-6b7c-433e-bfba-51fb1119c4a1"
        },
        "item": {
          "id": "f3bcbead-adf1-41e6-a913-d8b4a42efd8b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f7a53b43-483a-450d-bf10-41764cb3dcce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675e0b69-5885-48d6-a6d5-9909ba5cfd12",
        "cursor": {
          "ref": "4817b6d6-0538-4681-a697-736e793edc58",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "304700cc-0008-4c98-a023-c5740efba95e"
        },
        "item": {
          "id": "675e0b69-5885-48d6-a6d5-9909ba5cfd12",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e7d2ceec-3b26-40cd-827e-167467608118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde87081-a380-43cd-8487-c1b1df1180b7",
        "cursor": {
          "ref": "62813879-e5c5-415f-a6d6-87182e137560",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "75f840a3-1454-4354-82da-d98631d3cd1a"
        },
        "item": {
          "id": "fde87081-a380-43cd-8487-c1b1df1180b7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "52ae31be-d26e-4ec3-ad63-97f5bf323930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5774ffc8-5b24-4b59-8d37-7924da279d3e",
        "cursor": {
          "ref": "038e34bc-d294-4b3e-8bc8-a1f62eab3d8c",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "91f82b45-cb1d-4f5f-828d-f9701a59ad98"
        },
        "item": {
          "id": "5774ffc8-5b24-4b59-8d37-7924da279d3e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e1b94889-b4a7-480e-bbff-fc8c90203cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cace4e-8282-4dbc-8546-61d42c910f2d",
        "cursor": {
          "ref": "7b625a29-9865-43d4-9784-818aaea599a0",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7eec5e5d-1858-436f-91dd-78ceb3e6cbee"
        },
        "item": {
          "id": "80cace4e-8282-4dbc-8546-61d42c910f2d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fbd6d6e3-0bcb-4ebc-a7aa-f918db0b7fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e28684-12c0-4aaf-a46a-63dd8b3c0784",
        "cursor": {
          "ref": "7a805f9e-e92f-4843-b9ed-03f986fcf42f",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e3da778c-26e2-4c40-89b5-75d7152fb2f2"
        },
        "item": {
          "id": "b7e28684-12c0-4aaf-a46a-63dd8b3c0784",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "067c3018-96cd-44b0-a956-625a6001a1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f73e935-00e7-4448-b0e3-a64f1cf8b9b0",
        "cursor": {
          "ref": "989df137-cde5-45d3-8821-a3e5247d6233",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b0c70319-21e1-4d9e-9671-da62385ce095"
        },
        "item": {
          "id": "4f73e935-00e7-4448-b0e3-a64f1cf8b9b0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5bddec68-9781-4799-9222-9e7973bac01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51273c13-3f0f-4580-8132-122cd8611222",
        "cursor": {
          "ref": "a8738e22-514c-4f38-aea5-1ef865a5b91c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "78ca4be2-39fa-488c-a60f-5d802d294407"
        },
        "item": {
          "id": "51273c13-3f0f-4580-8132-122cd8611222",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e2bdf9d0-00ac-4b1e-9c5a-bfef957a9d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c61846-9c1f-4a7b-afb2-22e737aca110",
        "cursor": {
          "ref": "86a6a644-73b9-44b4-adf9-d2b6dd855b46",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "927740cc-2840-490b-a678-8d26a4093747"
        },
        "item": {
          "id": "02c61846-9c1f-4a7b-afb2-22e737aca110",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2aded96e-40be-4cfe-845d-d1c35a4ad9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dfaf3c-eb3a-49b0-a233-bf7a26adb983",
        "cursor": {
          "ref": "96f47e9c-ff00-495c-a52a-9aa0be8b8c63",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ed399ba2-82d1-4b8e-bbaa-2fe015358cce"
        },
        "item": {
          "id": "e0dfaf3c-eb3a-49b0-a233-bf7a26adb983",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d3ea9947-3a69-4b7c-8814-b6cb8b779765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4cf389-55bb-487b-a9b4-ca5951506b0b",
        "cursor": {
          "ref": "5fe0e941-c06a-41f0-ace4-6eb7916632bd",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "54c0e9c4-d4b5-474b-9337-1e3db33c98df"
        },
        "item": {
          "id": "4a4cf389-55bb-487b-a9b4-ca5951506b0b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "be3d5803-9c3c-4af8-a997-fc81db2b440b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8d9c76-d8c7-46a5-bae4-5bb882126598",
        "cursor": {
          "ref": "bda11107-5445-4b8f-9f74-a0d58ed1bc67",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fae72ac2-99e2-4050-b155-778f1624f70e"
        },
        "item": {
          "id": "3c8d9c76-d8c7-46a5-bae4-5bb882126598",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dd4b0140-70b1-4225-b755-5da766eccbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aded3ff-dfdf-4352-a100-edbde885ecbc",
        "cursor": {
          "ref": "04ad8cc7-ecdf-4626-9401-bd5e13eb6f0b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4ed6c3fc-6841-40b2-98d8-8725fdf9ab4d"
        },
        "item": {
          "id": "4aded3ff-dfdf-4352-a100-edbde885ecbc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "70b55400-c67b-434d-a8b3-a8e6bfdbcb61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5c271c-8b6e-4502-bb8a-088a7e162319",
        "cursor": {
          "ref": "f2726837-5536-452b-a104-1ae82a2bb7ed",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f1392dda-8b93-4c7b-a787-341e89213b99"
        },
        "item": {
          "id": "6f5c271c-8b6e-4502-bb8a-088a7e162319",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "14e2727b-1ecd-40ef-a1db-9a1e32549a66",
          "status": "OK",
          "code": 200,
          "responseTime": 2063,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cb025d-a1e2-43b0-9682-24052c5fe497",
        "cursor": {
          "ref": "8ffcb23a-2eba-4b2e-8176-3fbb29b95b80",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fe2b6161-ce83-4bd6-8a2c-a8639d7164c8"
        },
        "item": {
          "id": "e2cb025d-a1e2-43b0-9682-24052c5fe497",
          "name": "credentials_verify"
        },
        "response": {
          "id": "aa9295f9-f937-4ec1-9e7a-2ad9d48efab9",
          "status": "OK",
          "code": 200,
          "responseTime": 3935,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e07c538-79ec-4d04-9670-2e4518b5f2e7",
        "cursor": {
          "ref": "284b4651-cfeb-4092-b14f-80f8266255c7",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4c076030-7f6e-4bec-8fe4-e81a4c2fb4ac"
        },
        "item": {
          "id": "6e07c538-79ec-4d04-9670-2e4518b5f2e7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "deaa4cd8-6cb2-40af-b485-803512b95b62",
          "status": "OK",
          "code": 200,
          "responseTime": 3389,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7bda70-c609-4a54-a5f8-ccdf9caa01ed",
        "cursor": {
          "ref": "447a3538-318d-4b0a-8a57-955ae9d13cbc",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "30958f0e-abe9-45ba-bd48-34f25f5dcf67"
        },
        "item": {
          "id": "df7bda70-c609-4a54-a5f8-ccdf9caa01ed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "520f4e08-8793-45e9-906c-83da4b7967c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7bda70-c609-4a54-a5f8-ccdf9caa01ed",
        "cursor": {
          "ref": "447a3538-318d-4b0a-8a57-955ae9d13cbc",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "30958f0e-abe9-45ba-bd48-34f25f5dcf67"
        },
        "item": {
          "id": "df7bda70-c609-4a54-a5f8-ccdf9caa01ed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "520f4e08-8793-45e9-906c-83da4b7967c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfc2929-b9c6-4ea3-bb90-66b86b64681b",
        "cursor": {
          "ref": "5934d262-ab96-4695-9cb7-7ad825c1262a",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d4060047-0e24-4c92-bea5-93b1cf41afc1"
        },
        "item": {
          "id": "8dfc2929-b9c6-4ea3-bb90-66b86b64681b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9e63f1b9-dd5b-4e55-bf8d-21507a63616b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a08916d-79a1-4f54-bbbb-a1b23aa142a1",
        "cursor": {
          "ref": "e272c461-d345-4192-bc5a-48bab158e8de",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f98824cc-298a-4f8d-b0a7-7d8c46bf818f"
        },
        "item": {
          "id": "0a08916d-79a1-4f54-bbbb-a1b23aa142a1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c91e40d7-b8ba-42bc-beca-a10806c84001",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}