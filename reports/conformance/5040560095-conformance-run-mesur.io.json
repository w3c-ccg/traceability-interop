{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cf5061d5-5c76-4b9a-8bac-77b766bc970a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5cc3fee3-7497-4a48-b925-6574adeeb534",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1671348f-8613-4cd5-a44b-d1c73da0ed10",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7edb6df5-3d4c-4cfc-9d3e-b23e446ec76a"
                }
              }
            ]
          },
          {
            "id": "f60507eb-b9bf-468e-a465-bc3058bf6f07",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "38912269-9ee6-490e-be44-7aa94bfe7f0f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f0e2afbb-01e1-4449-96d6-82b0ea32b495"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "50a40b6e-9502-4ead-a8b0-fd679d4b6736",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7ec3e6ea-effe-4326-acd2-3962317016a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "25a82b88-9d68-4ff6-8578-570c8dca3815",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd8a9dbe-f945-4a18-835b-0a3c126fc175",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d9b397d-3e71-4661-b24f-21afad07a8cd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0acd3acc-e49e-4720-9fb4-b553d37ac47c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4f0577b-151d-4758-be63-3b7ad50bd0dd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8668bb8b-333e-4eb5-909b-31c9a330840e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "576b30a7-a7cf-4ce5-ad49-a0397b2dbb08"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "296b4aa6-0725-4846-ad5d-d6716a428b5a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4db48ff8-8825-42f8-8a69-27e4fa2de34c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2c63272-37fb-4927-b5e3-c70f794c4009",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2894973c-5523-456b-ac06-cb05559cbf58"
            }
          }
        ]
      },
      {
        "id": "c01bf608-868d-459d-9678-033bca17c09c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2bac1bd2-24b5-45b6-92d8-d1b16f170a28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b063d1dd-6be0-43dc-b82a-6c7c782f3ff2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "16dfc611-e110-43d2-896c-903c34a6540f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217bdc39-07ac-4fb7-82ad-61c29d792fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20f99949-4ca1-4508-8681-f0da16c29db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2ca777-ace9-4fba-81b3-e306ea4c83e3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dede7e7a-b7b4-44f4-9130-d3a801fefc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "866675d8-9a25-48bf-929c-1a4a1b645d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a88465-262e-4823-9c0d-f0a326dfb8b8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf29891-9841-4997-9d69-9996053be694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1006ea2-a687-4cc5-a266-39162ffc3a29"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a5f01c75-9ba6-48dc-8cf7-234f0206f5d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b2d8cc9-64e2-472b-93ec-d9a38d2c47db",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966d97c5-ea44-4080-90a2-3e6d20eaec40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c2790e4-d27a-44d9-ab2f-b5e9e0171287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2222bf53-45b1-4984-ae65-21b302799e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fa4d57-b059-405a-a503-cab5e1ecdaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e8fa6e-8e95-443b-9219-dc0b0d7f837c",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edb4ae5-4dd9-4327-8127-c21b6cbf257c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08d7d74e-dae8-4eb5-826f-18e795934a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20214317-6f85-4d6e-b52d-f90e8dc49510",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "fc9d24ca-e317-44e4-9d06-def92dc64b6c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f842be19-8db2-44b4-a738-0f56ff3451e4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "55436e44-2f0e-45fb-b6b4-605ca33dfc2d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a72237b-d59c-4ca7-b865-676202185432",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e3eeb43c-55d9-411d-862c-b099532a5d02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9df64146-8337-481f-90fd-524b8cb26c52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "7b5c38ea-dc37-4f5b-aa54-88809a0d5300"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f56252c4-4c9e-4580-87a3-4d2eb4f107b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1851c9a-9f5c-4495-8d12-d73e51f7792b"
            }
          }
        ]
      },
      {
        "id": "ea91bc75-dddc-4e0c-8aeb-82f143550966",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4ed3e3fa-8990-4753-aca1-99be90a99057",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a6184644-5cb7-439f-8f21-9340e9f05385",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9d3d0e7f-89b4-4056-8134-547d7f36d405",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82007d90-973e-402a-a5c2-96d9326bd2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e40d387-87ed-4aab-b99a-e94680e9b2b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f180d0e8-52a7-4d6c-af3f-3b92350a6e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33db8e90-5aab-449c-bd3d-e343e6d9be4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179daf6a-8242-4397-a596-cefcb4c9bf9f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9598f61c-d330-4b5c-9e0d-5acabaed3f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8555428d-43c0-48cc-847d-8051063a8ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c99b80-b8bd-45a3-a358-b37a16af95e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1687f21-fde0-4e99-b799-929e825ae251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af016452-d206-4054-a5fb-c7af5954f964",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca7e3e4-3304-4037-bed4-05bec8f9bead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96141b85-cb79-45d4-8ad7-6f72cb6c6ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf9311d-10a4-49d7-abf1-f3bbca99e131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9ecd98e-e71c-4a6e-b048-d6a108e82437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a85d53-e9be-4594-8750-b68e510ce9e0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb801ee-2fda-430c-af76-115b1f839f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea119eb1-a475-42c1-90ed-1dbd77172f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008509d2-6527-4eb7-a43e-d846e73abeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45dd708b-6355-4b3f-88b7-86a59e070c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63572479-0420-470f-982e-29a85c5943a1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bde853-c4a7-4cc8-83b2-d2493e5a46be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48183b1-d3cd-43b4-895a-f41fa87fcee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c04737-4df4-4393-abae-968a05b59155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7cb4b20-2b6e-4f0e-85aa-15bb640bbe35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7d72c9-5dbe-4a09-984e-20874c814b40",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c89f35-e5ed-4f76-a428-447838d1fcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bfa3255-53ae-4c7a-82b4-2ad40c9816fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70cc9a8-7222-4b58-90ee-0c44267b6532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffe5cdb3-99e9-4ae9-8282-fffc2427383f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a202176-7cbf-4c09-ac7a-cc210f74d281",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8940f04-11a8-490c-945e-70ed42ec87d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99e97d8-f4a1-4baa-9536-c32c1605ddc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285a815d-8677-43f5-b08a-1ff6f86404e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78f585b3-b072-4b84-a87a-ab966328d83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07eb55f3-f660-47ba-b202-904777985f75",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef04e8fe-ecb5-47d3-bcfb-59b5fc0ce9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40df8054-4be2-4954-92ab-c0406fd5d890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bf4963-ef23-4099-b2a3-694f55b992d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e944ac7-c596-4c5c-a827-9fa14f35f7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5e9fae-f0f9-4a76-9acd-d0bc8db3f21e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6f7c77-6949-46ba-b1fd-37e0833729c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec6cb56-8671-495d-8f8b-38bc357ddf3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369e4026-0171-44c5-b983-62db9ee1fd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9f04fa5-7729-4019-b242-484473183257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974e0725-0fd1-4bcb-9f75-ab64e0289aea",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9d6625-3ab4-4ee9-adc6-85b929ba045d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e7de22-86da-4dd4-891a-7e042787f244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d94c79e-e6dc-4aa8-806b-38643b6cb3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cf2e8e7-00e9-49d1-840d-7d6f6d488c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd91158a-cae1-4c46-bcc7-c970085a55d0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b46c4d-c4c4-4fd7-9fea-7ef7c9e77c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293ba279-74e9-4256-a1d0-4476107a799c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff50ac07-a506-48cc-ae54-8676b528a6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "503193ba-bd6d-4713-a278-6f916f48677d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547c767e-d11a-47d2-b9c4-6e6bcabe4bc2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df97a1a4-4997-45d2-a481-69ef7ee741be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db154164-009e-44be-8914-6e3cfd2c0504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bb386b-284e-4eda-895a-2b7dfd3d7b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba12cbb9-7ade-4fda-82f9-49937fb56f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bc5650-f56c-46de-9d18-ddc119881033",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0296e2-74f3-44d7-9d7b-ae9c29ac33e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06add5d-f718-4dc3-96aa-370db3b1540f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e66d49-57c5-4683-b8b3-9452a7b78c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30ea7500-e924-41a3-8b04-972863977e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e62d646-836a-4dc8-90eb-227466e14ef4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec66db75-46aa-4301-a053-12738f59ceb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0862f25f-5187-4208-8d61-fa3c0ec471a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39da78c0-c2c4-4b24-8e8e-f6cfa0862b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98aed613-a5f7-4f2a-9962-21937a861397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05165984-f39e-41e8-8b68-06c2052189ab",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815a174c-23a4-4afe-9d42-91479c275f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce7d167-4cf5-4289-b1d0-da07448ebb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d73250-2b31-462e-9379-f85bf17d13f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acb03014-596e-4051-8967-e114055319eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17228f06-2def-4e9f-a5ed-dbc67ad4e998",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0c833c-1e25-48e5-841d-3fb21d8a497b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05333937-6273-44a5-8828-d7c880ec09d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d20cf97-8a2b-45fe-a725-fece5af8284f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2b49c00-47fa-43b2-917c-8a4f607dcbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3e5704-4202-46ce-9830-d931d4347b98",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d5dd74-2002-4d4f-a90d-aa2a7cf5f556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06ca20c-463d-442b-8d12-14ac843ec1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3027d41d-6391-453b-b844-8c0c663e0b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3533fe4-7918-4b3b-891c-d7bf4ab76a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc2a726-d7dd-4b08-bd38-5c1aa7c4be85",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a0c651-2b0e-42d9-94cb-18469950ff06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b74c59c-4f86-4778-9db0-019fefc05877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af64fce-59ca-403c-b6f9-629253f8f820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6a3176-d8f9-4c26-ac5b-5a4fff0c4e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c86b43-3dc4-49a7-a1f3-00479d6e83a9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a6e0d9-d27c-44bf-a5db-b56feb8625d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf26875-f7e0-41b3-b0b9-525ab94468ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7b40ac-caa0-4f22-9640-660230dbfba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a159d41-6629-434a-921e-ef90af677466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18a9398-c965-4a85-ab40-8593675bb918",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3d0bfc-bb59-4e6d-a682-4c4257f0cbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cecbc8c-c187-4563-a947-4e933e13c0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cf83cc-3af6-4fd0-8d13-bcfad7347ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1b26c7-ff41-4ef3-9dc8-d673f5edc00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552abc47-c39f-4366-aaef-8f710e6de57c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb12cb07-3206-435f-8d22-59d033d379c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f1deb9-a347-4c10-bf1b-5e2e18ae3c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c7311d-ecb9-4865-9abc-626eada33f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7712ca-883b-4119-ac0a-8fae65149dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382a696e-f0fc-4330-a74c-8d839103265c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb00c75-931d-47be-ab51-88ed0e4dbb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00625d57-ece4-455f-8c25-41cff807e01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e27d9a9-29a1-4724-9b62-3049a52c42b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "afaeb0b2-21f3-4fe5-b8a2-29f986056e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30acc1b0-bc6a-4fb7-9b5c-a1455508aa5f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1884f4-d5fc-4ddf-8c97-7c5fcbbd1f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3308a9-846f-458b-9288-fceb3891aa95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9a979a-0975-4aef-a103-896bf206a072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4305f21-7352-452f-8978-7414433387b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c58b5b-5d6f-443b-9174-bfebb11206f6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db74eec4-5f45-4c52-a28b-bff91bdaac52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120b5ea9-a92b-4625-8ad0-5f4a80d63cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c741ec-a2f6-4c67-a883-1f3820e33d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "72ba341a-2d14-4d76-a646-43df0d1a9195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b31aa7d-4a4c-48c7-8cdd-446afc706e5c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b981b6e1-ce72-417b-b234-bd1ca73fc707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e0f0a4-6d84-410d-8779-6a95ac81a59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8983a9a1-51da-4e74-b523-d9352f631d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab430248-2e62-4bb8-9ed4-2c3e87cf2d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a7681a-1b4a-4fa8-9d2c-4f557d631f26",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a5193d-9b5b-4d36-9d27-d694b222fa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3ea5d3-b504-4519-b707-6e90c410744d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400ccff1-8970-4817-b4fb-ffa2d3f3caad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a862e3a-1ae9-4086-9e9b-c36a871698a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95906ea-20fd-4f6e-8a8a-47edc4ef911a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a9e3cf-90f1-4a59-808d-3b8178ee9fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74f7ac5-dd46-4892-81a2-7821676eb87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c186f85b-e153-4d0d-8658-2fea24243ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a640ea67-57af-4b6f-ad2e-e0b1264dc29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d6abc9-10d9-4b7b-aace-a7b83558feaa",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e868cc-40f7-46e7-8067-13a63ffcea37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d67905-f7b5-49d0-8af6-bbda9d101292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43879c7a-e23e-42f1-baa4-b07d7db4aa08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a14a39fa-b0e7-4c14-a89e-3b46ee151615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d7d6b9-9dee-4eba-b4c7-754f6821c1da",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291d2ce5-eeb0-477b-a196-a185a1637124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba2a091-458b-406e-a2d8-4727e79dafb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54368c4f-772b-490c-a828-56d02ea71d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c654fed5-d7f5-4050-abe3-a6c4160963a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0120b5b8-31cc-484f-8c7a-49329e368b8c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5d0919-dd34-460b-907e-60dc804793e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28360ee3-a657-4582-af4d-8d9823267b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992400b9-1d0c-4709-b01b-d2e8c0ab416d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "960b279f-660d-44c3-ba93-5a01fbd16a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c62a2de-9fd4-4061-815f-38df0039dc83",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb86d69d-8892-4a08-9481-d4bc996a8486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55bcc693-dd60-4b16-b872-358efae03e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbbc872-0b55-4c48-beae-cf0002a22ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96879f5e-7829-4155-a716-257f2190ed09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba929f67-d4ff-4a33-98a0-6b1cb50d7f2f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70035261-d532-476b-b970-86da1cbd5c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a733d422-992a-4a5a-9dc4-106da10a86ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1231434-3649-4212-a9b1-5ad54c43d1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "286338d8-7de7-4f75-b6ed-cb06f9fca4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c5d369-926b-4e26-8401-ca7a01b0ef21",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1708a8-1b19-4ccb-82a9-45d358efe92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b24df34-7387-4053-bcfb-5cc1b6171f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1485b7-98a5-4ad6-9e47-724e8be4e5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e28b73-d1e6-4c69-ab7a-68c02a662e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7533a927-c80a-4fea-9f01-2f15e8fc8dcf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845f4ca9-fd02-4f07-8dfe-fdd8e9426eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7edaf6f9-a6d1-4ea8-9e52-ec35ce8d3389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb49f39-480a-4dab-8a01-030c307503d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09192e22-4bd8-4cc8-829b-6836d04a72a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10cfac2-37e9-4fa5-923a-aa469d101c1f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c346f7-2a9e-4c1e-a84e-fcfa479409c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284e8630-c24d-4222-a2d4-80c1e3dce22f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e17c18-3807-4fdb-ac01-212891d40ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d5bc9db4-c32b-492b-a432-ed1bc24405ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95789f44-f7c8-43ea-9156-5a6a700045dc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a083d3c1-a160-41f9-92e8-26df8f3fdec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fcadd82f-21d8-41b9-b1f1-9583a01b76bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7208c6af-a230-4aef-8ad9-7876d7735cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03b8f4ef-ec71-49d0-bd0e-52d4eaac20cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49ce848-efc4-428f-b6db-3790d7b99bba",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d3741f-98a9-494e-a408-e89f12465d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18df90cf-a4ea-43b0-a46e-debf318ff040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddacf21-0c5c-4b92-8088-37af713a6a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64edc985-fb9c-4233-9231-06a205f3b4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ff6897-e080-49a9-afc3-399aabf1078e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0350155-7e76-4a06-8e9a-9d64105bb313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54d0bdd-e88a-470c-8be7-57d7254f3bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf5833d-a1ef-4e9c-8af7-43376ee0a6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5038900c-5a14-4545-970b-ff90f9062a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecba5ac1-7ef2-407d-8f7a-50869df32c8c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dbbb16-5d0d-457d-a269-a41678a31d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7394b4-2bda-4d3a-8986-4f4734d6bde0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fe8264-843c-42e4-a624-458768975eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "61f5fd56-dd31-47dd-90dc-a346aa46ad55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cbe054-71d3-4548-a55d-aa53cc40840f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9e2e57-5491-482f-8648-17d73c7078a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b095b5-7bb8-4f94-a70b-d7df3202134c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769b6131-fd1a-42ee-b8ca-75236ad17ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "07002994-4e02-4e18-a119-96932b0a1930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff14df38-084c-4e34-847e-5a4c80bf347a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c28e84-c141-4940-80da-f364ace61b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e2abaa-352b-4767-9a01-7184fbe844a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40edf5c8-4eb6-4b29-864e-b3e6e7ab373d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "33a973bd-d604-4a49-8f86-2d11922ea04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426c5283-e0f0-45a4-96c9-755dbf328805",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bb9b4d-42a6-4115-b2ae-32ce336f8667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68e0612-26c3-4aaf-956c-ce6a4610cb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580c5f79-d48a-4e8f-a2a9-2572594affd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2a7db2-9acb-4871-9a69-2b68914cd2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb07088-58de-4e69-8921-fa9bfd13d867",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbf6c94-c5a5-432c-81ea-e24f278a0bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb93db59-0ba6-477d-940d-168ebc06fb1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9363d87-1de4-4c08-a3ae-99377f71725a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa017181-1ff6-4e62-8cea-bf8add6d418f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7e9723-3d53-4d8b-894a-811791e59b45",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3879e7-be0c-48dd-b883-0015aedfb877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2e1d68-2938-43cb-b9f4-e6f75fd25225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e26017-da8d-4aae-a302-ee8bc3390993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba85a03-ae34-4a17-ad2c-12b3e47162e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a225dffa-d398-4a99-856f-0efbabe0d3bb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0739a8-b5ec-405b-8988-695286d262cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa05a9c8-4122-4fe2-bf8d-cb73d0d9f18b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b74e68-047e-4467-a647-01c5a4053d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "590c8fac-5876-4096-99cd-e9005a6c393d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc2c0d5-0303-425c-95a1-916a5339e313",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cfc847-1728-4c95-80db-7b3296d30776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15674010-fa16-4c67-a1f6-70920feee61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3006987e-864c-43e7-b13c-a95ed09b68f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f74d8e83-20cc-4d1a-89d2-015217369664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed73ca5b-55d3-4105-8496-cfb14cfaa767",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854c8590-6a0a-450d-8709-8269d2d44bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80741a07-f409-4365-83da-3bf8d0d50d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e030ef9b-413e-4a0e-8ecb-bd9bf98d6eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "070e866b-88b3-466e-a505-b80041543964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65935cc-8c17-4adc-8a03-16860b2456b9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb7008f-2c3e-4860-85fa-6b5970f49f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c5ef75-d11c-46a7-a0be-dc6b01f64c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5c58d2-df7e-4df8-8447-383321e6ae90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d097fb0-255e-437f-931c-48d2a59514f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54a14ab-3825-4c5f-bc2d-fa16e0afe14a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db4776a-642c-412f-ba10-382174e4ff4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6706bd2-e2a9-4ee6-bb59-0acb560b1dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0f0502-5f04-4cce-a767-d840d47b89be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56c6058d-516a-4edc-bc98-792a1dbd49df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550895f6-f642-443a-a1e2-2e027a60487d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40678856-ae5f-4d2c-893f-cc4417271b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60be48a7-2f20-4a59-8856-ba7bfa1ddb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a292581-4a1c-4a3e-a18c-3a0c166a2189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0478d459-be49-4a4f-8156-3ed0acd0c066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbfffc7-4342-46fd-b2d3-64709440d5ea",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dde9f64-4370-44c8-939d-90b3f214d5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1590db-1026-4f37-9393-4680f80d4d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5998a8-763d-4c58-93e8-2222e3b706d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d065a87b-5806-4e1d-8c26-b84c1e81488b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811bccde-96f8-449c-86cb-a1d24173aeaf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9b7756-5995-40bc-9781-13a3eca9056a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa0c6a7-9f2f-4f9e-8bff-0e0bf974091c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b36461-3c2a-4623-bdcf-e0dd589cc7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8039ac34-7bce-46a7-b6c5-43530df1e2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f324e1f-13a6-477f-8e06-4ae078b5d521",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86aa56d-d33e-4742-9713-2a4943fa1978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d71b3f4-c782-42b1-ac09-8995a90af971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2968db49-2922-47e7-9034-8e3c604a3035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6a0f71-d312-4c0e-8c92-629424848a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2508f4c2-cd4a-4166-a64c-7e8a2bed5d5b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f0118b-7735-4fda-93d7-9580555a92db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959eb44a-a106-4b34-84e9-79731d9070fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85d3fc7-4c3d-450f-b4f4-8526c7f6aa64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8247b1da-59ec-406e-bc6d-d23c03348127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ded847e-38a5-4569-bd6d-1806782d547a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d749702e-4f61-4b3f-91c4-cf377f6b6b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51576ab-2b25-4006-b670-03c87620d136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648fdb41-c827-48d4-9525-a8fa18f67c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f536aed6-6b2c-4da5-a497-c8817ac7bf3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02861994-23a9-4086-a792-045e8b7273ae",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed77ace1-8a9f-4172-b21c-2edfac0871d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc700eb-7149-42dc-8b06-c556d3c0a957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863b03fa-d0ab-479b-a113-070185755be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "40ec19ab-9c8b-49fd-be9f-54f8fb852bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269306e7-17bd-48c7-a925-8f2ead4c1bf1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebc5f53-b40d-45cf-aace-b5968a14d505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e7522a-1e48-4184-b5f9-4aad713b49f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff52d0fd-4df8-4e7c-a7b3-9f1a38b0fc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "811e96c4-a537-4852-ac44-bacda23b2200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a058dd8-3343-4743-8c48-1e23c72dd18c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b6c4ef-df6d-4a1d-b35d-c4fc29a73b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3308bcc-0241-456d-a5a9-3453d0ea4703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533f5b71-5e10-416d-91b2-9cccce98b92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e481ca17-82aa-4490-8f7b-63d67230aa6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c255b50a-5770-472e-b595-911e1db2f0dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab1f3ff-e95a-42af-bdc2-52e199bd5789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e037d0-a1dc-40fb-9bbe-47ef57f98e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49036ca0-fdb2-4b91-ba70-5f6a91616ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa66760-a2c8-4fc9-8a86-402e906882d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a3dd85-898f-4d6d-be1a-47c6f72d71ce",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1339219e-5f92-4c2a-8c75-79e7bf2cae9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246b22c3-c6ad-46b3-ad3f-5cdc907ed180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f230b7-31de-40f1-b521-f22555bfa65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "60227b95-b7b2-4092-af71-8c458c2fc83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92fc2e9-131f-41d9-919e-5737b238e991",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04cfd83-95ea-46db-a9c7-2638ae43096e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbd086b-82cb-4cf7-ba32-fb0e6320d328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c82098b-c109-4230-97f9-d262640c6f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5153bbf9-216f-490a-a700-bc8d582ca086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfe3f82-552f-40e5-8f45-757db25daa38",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469171b6-2cbf-4262-8208-c22566c24fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668e3c40-1ba8-4e53-9d26-2cff66e97af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3b2724-1db3-4d56-8513-a7141753526a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b4ea89-3156-4e28-87bb-59be8474452f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a435152-ca65-41f2-bb8c-53b76c596c98",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2621a462-d063-49ed-95f5-35dd61d31797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1887b2d7-d709-48ce-91f5-e79d6c82b96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94280528-f03b-4035-a8e8-2c357362f5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "24c6b531-48c7-4dac-87bf-8193ae7c7ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3fead4-7d54-45d4-962a-b369c2d383e2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83594269-b891-47d6-96b3-9da007fd241d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9febdd17-af92-4db1-8282-81f3858f9f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f73f66-ca00-4563-9c1b-5582c6682eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83987b6f-27fd-4db4-a32f-2e1806ba31e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e7af39-f739-446f-95f3-7e904342f7a8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f5f977-8122-47d5-8d63-dcad60e02090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eca2fa9-6ae9-436f-a639-328e7dccfaa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e3ab53-94b6-4f1c-8b15-2da4fa8c7534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f926a8-863c-4314-a1fe-66c7e8d2e414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a94740-7e54-4712-bb4a-c322100af70e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7168719-e59a-40df-b931-c2260056437e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f90df6-6ca3-4cd5-8cb6-4459d8aeb1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131b42b6-2a3f-4d99-95e4-35f217e0d001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e997bc4a-b336-4ce6-a633-386a49434240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5ce512-f523-4034-9c48-ae1571f289d5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d20122-cb06-4087-b146-9a8e81e6b716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eebb0c4-2800-40a6-a988-a86066a79818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d09894-9e0a-47ff-87a7-f3b281eddd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c665a093-3de1-4c0f-afe7-032163250c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c1451f-f7b8-43cb-9998-37ae8c883b97",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebd570c-f55c-431a-bf21-27cb144b31b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f27e9e-efc2-4a97-b563-f1a235c4777b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d312c3-5b4a-455e-9baf-6e28e46ff17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb8e2aa-f153-408b-82c3-f1e7cebbddd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fec006-f480-4242-bca4-28a8e95084b1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2bd934-7e9b-480c-9c98-93d67a0ec276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30823690-177d-4593-84e0-583aebe075aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa3cdf1-380d-4614-bfa6-c9d20d03e2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c182dde-1451-4e4c-a3c2-b505fddf7e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c0a3f1-193d-46c2-b661-6aa5dc778467",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d2fe9d-b6ea-4f5c-a1fe-e95c305cc0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6182b32c-bd80-4465-a260-1a9a0fd56633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1252684c-f30d-4c13-bce3-ccc65459c3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1da9bdd-7e9d-4b87-84b2-fd19ebd75e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc26f255-6281-4fe5-8c50-b2ef1ba17768",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cdccc4-78ae-4133-81a8-e176c425a30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459677c7-dc20-4006-93a2-8b9002d8efca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdc4711-6b03-4414-a92c-e0108e88f1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afa888aa-2f0c-4fbf-8a06-f373ed861f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5d3890-b15d-4bee-a6fe-519cc3c728df",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd1612c-8710-4106-9ed1-5de75d05a254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5dfa12-86fc-4a15-96c9-e5098c22a893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432958cd-07a0-4cac-827b-80a06a3ab7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10811a9c-9ebe-42d0-9d0b-c7b7f69fe539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a29d7b-76d3-4328-8f80-5a4534f90210",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9a1326-f4ee-4a01-b710-0cfb945c36bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce35b5c-9040-4f1f-b25f-8c84f7fa1d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43a31da-4545-4ebb-9362-2ee9ad366548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48c5107e-f02c-4ca4-b6d9-1b93554ac553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5ae22a-156a-422b-a17c-aaa2aa9454fa",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101e12d3-6ac1-47a5-840f-dbf2259571df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c745f819-1faf-4d38-b38e-e64a224b0e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd672c2-6040-4b8d-a647-c66d3e2d46d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d644b92-89cb-4ee9-b4bc-005b5bdd40bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805562db-8dae-48fb-9d36-81e94e159718",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff26916a-b025-4743-978b-0f2c919ed013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c10d05-7449-4339-8105-2c9dae74e273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52089729-30c6-453b-8a5e-92e8d5d27f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf99cbd-7147-4864-9c3f-567a50ca0bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790d7627-f680-4800-b912-00332b16bc97",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc134a1-0580-4e5c-ab08-07dd1432d446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf00b8f-4806-40e2-a1a1-dbff07a74d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e22dfb-acb2-43a0-90c1-161ecefa117d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6333a467-4cc3-4505-b917-473a83628a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad53a618-e07e-4145-9f14-6c4e9654f34b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278e6d35-58a3-4c54-8136-61fd5ab3bd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d9c1f4-d524-4a37-9e88-9d6bc5675f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83e54d7-1fd3-473d-bd78-8c804797f1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a98ec91-9ee6-47b9-a262-03f9bf637d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05336b4e-baca-4ce3-bf98-2b692ddbf610",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc208c7-f8a0-4137-aa44-71f3890a11a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3699c8d4-246e-4dbb-a5a8-beb785707475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabb08a5-69c6-4086-9e55-6037366467e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efa989b8-4627-4f7c-820c-db81781c57d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e5ba41-14cc-4429-9f03-5abe2d98d322",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f29d669-f821-4732-a74d-20522c9ca4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0457664-bc24-40d7-97b7-4afbdc6577d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21742154-9a04-4fdc-a193-cc2ef2dee625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4aebdc-0d33-49c9-81e9-e576d436efc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2e255e-0a90-4458-8234-f98c77a9dd11",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e92fdd-ff35-4aaf-9fec-b74514ebed73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89b80c8-aa98-4869-bf38-6aa7533d33e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01493ac0-4dbb-45aa-857b-1f0a4538678d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f19fab6d-2a8f-4ebc-81c2-ac4d6346e7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e2ac69-d812-4b37-8c4e-c333c1cee1b3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cc34d0-b2cf-472d-bc26-7025ac61b6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fb02a6-d085-4960-8576-e5e9e13c78ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a711c3b-58a1-487f-8e12-af9d862774af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e74703c0-961e-4c50-a89a-3f251b61693c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332312e4-2f0e-4732-9ed8-4f4bc73f72f4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cde80a1-3910-46f5-962f-c732df2ee66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13df4ff0-13f1-4ff2-adad-3a1681d655f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c2c9cb-1e70-49cc-a74f-8ec86c0d2309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f75b8a15-e5f1-4531-abb3-8858ce71568a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0775ca0-aab6-4425-934e-d4e094aa50f0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c50cf7-ead0-4eb7-a626-d7aa5018e290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40dd531-e35e-4ddd-9125-21a96832a89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3311365f-1380-49f1-844c-2d9ef5f5ff50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e71d738-0c5f-40ce-a3a4-f069bef2bab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3a6ef7-4845-466c-b19b-f8af85e725b5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838c158c-f17b-433d-b4c3-1c5d518196d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d81c02e-96c0-4021-8b1c-41f4861571d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f679852-eff4-4e79-aace-b233af7a222d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e45576-1972-42e9-b463-3b26f192af42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078dabb7-faa0-430a-abde-ec1d30ffa3d7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bf04db-2818-4a7f-aa92-1a4e40c72885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1778e4dd-29c8-4c81-8cba-e2f5b7c9064c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad33872-92c5-4cbd-8659-d8bfa8e80ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9277a2c5-d96f-42d7-9e56-6be73665acbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b840b2c8-ac62-459d-ad93-679a9df485e7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061622f3-133e-44c8-bf1d-5b0a00957ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1c84d1-97a9-4b4b-bf17-151be4de2561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3525ef-9aff-442b-a2d8-fdf5c43d8069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "593eef27-37b6-4215-8cc3-c14edb8c5dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf878d6a-99d8-4e55-be81-583cea5cd72c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0267683-9160-41c4-90bb-d7fcb55d63b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e8b1ac-6a34-4351-904d-429c307ee1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1033b2b1-2bf2-4642-bd7b-90dabb358fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6bda61b-df05-4e15-8c39-a82998a29d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccf1b61-ce73-4e42-9b06-ca90d6214ebf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4eb0134-4ae3-4ce3-903d-408314e6cf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1430006a-3bb4-4f18-ae78-43f615dea339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60717d5f-81c0-490e-b8af-0d48140c94a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "807b248e-e00e-455d-ad1f-ed758e7e679b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2683266d-5835-456f-b7de-f502c73ca815",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b86707-7131-469d-8ce5-ac90ad28cf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0314ae08-c0d4-450d-ae16-ab8eeb8496b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9c2330-8b50-458e-a2b2-a99f9913b20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "50ff0b2a-f12c-408f-95be-b3f2c913240f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32440da8-c9ee-43ea-ac48-9cf7678e0036",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582ddb06-5c91-40ef-b8e1-efca66cd1eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583fda01-9e19-494a-b304-23585a965981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e121efd6-048e-4c6f-9866-0595e0c83f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "84e0afff-2413-438a-99bf-bac5d6929132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7918f010-e176-4bf5-b2c7-00f06c573de4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2aed110-2dd9-4e46-a734-0b3aac708ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68db149-ea56-40dc-9a14-bd4da12e7f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e4d032-3aef-47bb-a740-d80b31005645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aefb2be-ccf5-4e24-bc74-30bc709b8af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5731d5a-e974-4730-bac6-c080a14ed860",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c44d90-2008-4d1f-bd3d-74f80609da0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e49e559f-3971-43d0-ba26-7c47a25b6232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3529d70c-63da-4adf-acdb-6c50f2443e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a6ddff8-5bef-4bca-a744-7ea214731f5a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a68a1954-0ede-4558-8959-d557352a0b87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c415f673-30f3-476a-bfa8-1efd6305906d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76c7f77-cad9-4714-a051-127a0dfba617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8eb1bfcd-258e-40f4-8263-2b56c08df51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d978e17-2028-48cb-86fd-09e42bd93c8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53c6895d-39f6-4555-b226-0cf16dca4c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de71b294-d0c8-4721-af23-a6d7210c3a9a",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41926819-2b64-4476-9a68-8df728c1f633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55eaba32-3eb9-4df5-b077-96171e8a84ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc532f0-1976-43e0-84e5-0d3992a90f82",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff7e915d-134b-4fbc-a68c-627c6a30185a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db647e00-c10d-43a4-8894-f0b7389970fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29d0cfdf-c8a3-4ee2-a06f-91d0141a26b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63acb87c-675a-4187-886a-0f40a4958ede",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01029e54-eb7c-41af-b1f9-c751b0ff5938"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "45fa1bbb-773a-4050-9b36-4cc454f3ea77",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f87690d7-07fa-4b91-827d-036e0f57edfe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fd024235-f583-4a64-99dd-8efaf422b548",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d26f5648-c7ec-466b-97c8-38937a6328ca"
                }
              }
            ]
          },
          {
            "id": "5e57d399-aeb8-4270-a635-dd6a85a74469",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73ba8450-5a79-4d6c-bda6-d60a1295628f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b536c5a2-5db3-4286-985a-694a06a914c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b73133e8-ddf4-4580-ab14-be145de4bfa2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9ebc3e1-1e3a-4bf4-9ef6-20a760d5d1d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "be35d854-11ae-445e-9895-7bc3e32369b5"
                    }
                  }
                ]
              },
              {
                "id": "884dcb86-0cf1-4b40-be66-fe8ec22d0953",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75c850e5-a7be-4832-8ce4-ea347fa4768b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66e36f9e-de8c-43c6-959d-14d9095d89a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34601837-8c03-479d-8a33-b60ef212a153",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a8d7942d-d9bb-490b-9ce9-6cc07ce0938a"
                    }
                  }
                ]
              },
              {
                "id": "f27fc8ed-7d54-4808-8168-785f5fe06a3d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "843d0d40-32e5-4293-9260-1243001c36d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d329a1e4-932e-4504-99e1-9149f7924c71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88e7ed4f-479a-4e3d-a5ae-17b1f0c95298",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a52b4a15-a8c4-4548-a3a5-308281cf16e5"
                    }
                  }
                ]
              },
              {
                "id": "437d49f3-0765-4007-9867-84dc342972d2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b4ae1e3-9993-4627-8274-ed1c129e14b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab89bb8b-fbd1-47fc-92ea-53773e7d2321"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6648159c-0542-4f13-ae30-fa8ea5dc8502",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ae8f1297-0883-48ca-bb36-c3dee205fa0d"
                    }
                  }
                ]
              },
              {
                "id": "f230c316-e5b2-43fb-ab19-52d483054d62",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e20ceba-72f7-4874-b6b8-3883d57e290e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38fa7cb6-f758-486b-9e14-6c6772b011c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92ee20b3-181a-414e-830c-c63e22d5ce53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e0318830-4c8d-42e2-992f-a4a68c47e7e3"
                    }
                  }
                ]
              },
              {
                "id": "b3cbeacd-18d6-475c-91eb-20e0e2c14ded",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d983e6f6-450c-4fe5-9b34-a05782ffa346",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "607599e7-dbe5-40b2-87ba-a83584fd082b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "672c75a9-37a0-4f9c-be42-7c83d425fabd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "38638087-927f-4c5f-b6fc-4639103177ca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4afbce33-8d65-4cdb-9f3b-f80176751348",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25908167-f307-419b-a2a2-a121011622b4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "73c45535-c51a-4310-a15a-50a00e98284c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d5798042-d8d1-4ddd-b752-fd982eed0b0c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "014c7c59-e712-4b0f-aeae-66ba28d99e78",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8a5fb0f2-ac28-4ef6-ab40-f045feb37230"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8f06a7e-1346-423e-957d-c5dd48138d52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23f7760a-add9-45e8-8562-63479902139d"
            }
          }
        ]
      },
      {
        "id": "7cc749bf-9315-477b-a2ef-3ab2ba388f5d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d631a60c-a69b-4c64-901f-f844e0ab3043",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13ec7d90-21cd-4eb6-a59c-7fef1f552e3a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c60198a-39f4-4243-b678-e1f544733bf0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91a7750-4493-447f-8267-2ddfbaaf66e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1973843b-ba0d-438f-b145-69fea779866b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a84d38-3911-4089-8d49-1db850bc75c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "363bb466-7ec0-4557-aae4-56c2a0494057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c675b8-cce2-4b49-ac22-672b08df9d39",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9818fb1-6899-43ec-8d5a-3a3a682f0e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fdca55-9422-4764-90a6-f1b0618fed26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e99160-6858-4aa9-8cb2-a5e09973be73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fbefbee-a9b5-45b1-a835-c96f516649a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962091bf-982a-46ec-8a63-c277a7e266a3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4aa2dd-2d37-47d2-9e9b-b4df01b29dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f64e1d-6899-472f-9c72-b4db4bb01c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65f82e5-1c1c-4ef8-b430-7ee15da483fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "883ae02c-97b2-4d2e-bc1c-be1f1854bd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87f2274-2c77-4352-88f2-09f797869a18",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9072c3f0-1ca8-4bd1-a74b-8a9b484a364c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76232323-7cf2-48a9-9c4a-26ad875dba43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658c8d32-ed44-483b-aa8a-ba38b505eaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b9d542-0084-462d-996f-d3fefb08c509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b262be52-42ee-40b7-9345-8261855e6dca",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9252394-3b0e-41fd-a529-c1ad329ca943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f387db-9107-476a-be6f-62b719a07ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d443f93d-a6b5-4cdf-92ea-ba132dbc1e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef092bf8-f047-4bf0-9867-09e0c78702b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354c51fd-e7bd-4be1-8b60-470ee951c05c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09ed06f-1cda-4d18-b8fb-335cc27bfbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61b2bec-30b2-4476-a7ed-40de2e3869c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ab6950-8f98-4744-861b-79e7defd4e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9125dc-98d0-449a-9774-5d7e6f84c073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a621547e-bdec-4b7b-b9ed-76f0a0f6043b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64634a4f-6bcb-47e7-a73a-3703c63fce65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e21de8-7e74-49e9-a9d3-daa747669833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9a628a-0d43-4a31-bddc-0a6e4293ac33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "39520824-cb26-4e43-b25d-5e9128b8070c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e717ec13-bd55-456d-855c-4bf16867d376",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c72e66-6da6-4626-b2c9-b3aba8d428db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028c1040-042c-475b-b594-563abb247bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1db49f-d6f4-42e2-89f6-c80648d93539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cce213d1-276d-4d91-abfb-dfba96df2e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b715c0-954c-4093-8825-8f3ed53e244d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007599ff-bcb7-4084-ac92-30fad04bbee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa99bee-bc2d-439a-89dc-e9301921f85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82503fc3-dd4a-44b6-b2f1-fdc16eed4e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27b336f1-b155-4eef-b4e5-413695f35918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2e4b2d-421f-43c8-82b6-15a311207da2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f466b3a5-1745-47f8-80ff-04993c0f5bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9080c8-6d00-4e0d-8453-6093fcca98d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf12afd-93f2-4cd2-9661-98c43794f195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c069ece5-719c-4817-b4e5-5bc9d9ced9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d42252-8f74-4824-b74e-15bf6e8c7291",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dc93be-9d27-4727-a623-dedd9a63a844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4faa765f-26aa-417a-9181-9de1319940be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ef5a55-0fa7-4e6b-8693-4299c3a49f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3e60bd-ff27-45fb-8f36-6bc68772d98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12eff806-150e-4b91-ac2a-a6ec1dbd7c72",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2ab373-6275-46a8-b9d3-cee6ea271bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5886f641-91ea-4e55-a571-8d22a9bb9040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cce4ed-9701-4b4e-8f87-1f17fc0cdbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f79dd303-a13f-4df5-a6bb-716a522b193c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091b89c0-ad10-4b24-897d-f447349d76c9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ced853-14d9-465a-ad5a-66281ca5ca27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0abce6-a2ee-470f-a208-7e40a822056e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416de9fb-e570-4f56-933e-21b9eb2215af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f058ee0b-bc63-4f8f-8485-7bcee37ddd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c553ea8-fac4-4551-b1c2-a126211950bb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0023f066-fe70-4d04-985e-84431a5f60b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e16285-30b7-4f16-aac2-4939d46980b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8210b20f-0440-4a3e-a231-7acc0953fedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "79c4b146-e7b4-4ddf-89f1-afe476b40193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfe28ec-5218-4dca-a622-7e683462e185",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c598c1fe-4b32-46e1-863e-9f2f87f65c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d55bcf0-2c8a-4c10-add6-245fa5628059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd67fa9c-6ba9-4939-ada0-d0ab8fabf29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2ae2d0-ed33-4dff-a72a-596c09c4257f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cd1138-5ecd-4a20-a42e-387be1fa96ea",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6fd77d-a1ac-4638-8ae9-75c36a477ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f585649-492b-4e87-8c31-bb4dfe809c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83589b1-ed80-406e-9d14-4f094fc4cb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0613f5-74be-47b8-956a-32b033f080ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187f7be5-ae07-4bb4-bb77-bd1589be91bd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19113275-9fce-422f-b983-b0a317210c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a82e9cb-e06f-4c6a-b0eb-f9af41754e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7887bea9-7dfc-4fd7-8bab-dc0733c003ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "930d4532-e5be-467a-b75b-edfe5be742bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6b9f2e-08f7-459a-8907-170b0734b90c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fce544-10bc-49bc-8b5f-6e5542cae909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82234b4a-bc7a-4e8d-98ca-3448dcb666a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828fcd26-c587-4801-844c-3ca0c3d03219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "47327253-2a07-4946-b65d-88bf0d9c7e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724926b1-cda4-41b4-a992-71125847dca8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840d2345-7eda-4864-8eec-fd497a63d219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08e1a5b-295c-4a48-8012-03e00a753a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d03c9b-f053-4bdd-bbad-fe9488df93e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d885c4-5e81-4c6d-a398-e0d9c98abd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd41a0ac-dc8c-4320-8166-14801ad1828c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54583f91-abe6-49ea-8350-92ebe278b796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cca9f0-aaee-4789-8093-e42ac9d136db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706cb50f-0eac-4c50-8ad6-f1ca3477d606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5baf2c8-c5fd-424a-beb2-061cbfbdd478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f65cc0-9b9e-4524-9734-3e5228b24094",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46d8862-2c43-4316-9c4b-8040c0b3abac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f268708-7f6b-4baf-a161-f76a2764fcab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afb3947-a716-44b3-93c5-836726c6b088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf96e78-4a0b-473e-b914-45ba59d484d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cc4206-c111-4c79-88cf-33cf75ac82b1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518c7d7e-423c-49a1-aa0c-d59ab11f5b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c5de99-279e-414d-81a4-e8f2a51c257f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3920e4b-6063-4bdc-b798-d669b6d0618f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "327f7119-344f-46cc-9555-c886033abcdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4579dd-3ad7-4ee8-88e8-5e69099c4826",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906bb837-6ba1-4b67-a6ee-c965a6533773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303fc286-0702-4af7-8d44-383505ba9456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0f56db-45bd-4616-9bda-a6d60550a799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "703d36fd-7abe-4dc3-ab8e-2af1e43e882a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e2aa26-8a73-4566-9a33-21088b7b17ca",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4542fb94-6e59-4cbc-8b68-505cae4e6171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a894f0aa-415f-4d90-8f4a-1e5d6ac997db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51eff3c9-fbd1-4f84-9db1-a06a6a8e2cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cecb7c1-f4e1-4fe2-aecc-36e20d96b601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4b6c12-006b-45aa-8286-d973326ac1a8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c69b73-43f6-4a92-973e-60da12dad327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d1c7ab-c75b-40ac-92f0-a061e8146dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc74b87-ff7e-4192-812e-d6f58833e3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdb03d8-7d20-454d-8d2e-e83c4b6a28f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498d3d8a-4aa4-419e-b42f-ce399e6001b2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159e39ea-ba0e-4e16-b9dc-d24369b74324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8889b195-43a9-4052-a29e-193731203229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e38b8da-4956-4a9d-bbba-2d86ef5e4fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0557b1c9-230d-4184-a014-6ff9b4110e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dcfded-5a77-4abe-af8d-161e8d20b71f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a95a02-c51d-4c94-a3fa-9f34d38b5450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c38d19-a50e-483a-b83b-d7e2a9571fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee1047f-e3a7-44bd-ad57-89b0455865b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f248d71a-c96e-4450-91a0-719ff10f7d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1852cc9-11ef-4142-bcb4-906d34823579",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145d0977-cb5d-4413-ada0-4639d93db65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4489e7cc-a89f-43f5-93ea-d56c532dac13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66f93ae-d8f4-4122-8f98-42282c7faa09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76683935-6405-4393-a619-a323e2a75d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd52877a-84e7-4ae5-ac30-ed395f89737f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630965e5-d84b-4e5e-bc25-8d013b35a1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d529c0-c053-4ed7-ab2d-4e2d0e2be6b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f735c89-a732-4033-984c-5688f2baa4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89c34ed8-02d5-4f3c-b3f2-8c7f6b7ac227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784bde0b-73ec-472a-8552-4b21df7e119a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c7caf2-a486-4308-9367-1039fd651a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dbe8262-cd8f-4ac8-bac9-298f72bdb899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94218cfc-5589-45d2-88c1-c2f21a6359bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b02f9835-df4f-42e0-982f-8e2b6e4b959b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775967d7-bb50-4bfb-8c08-b63e8928179a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22615a4a-6984-4b64-9264-02104f3d9594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "572ee691-a9b4-4b48-b16f-5a7c55ce4c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc78269d-0102-4b5c-92a4-2dc026947374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3778392e-1347-4e2a-9126-e7810915267b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d491a8-fa4f-4861-8d5c-aa53e8d7e4bf",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d85672-caeb-4928-a926-5856866185b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123117f6-ee7d-4540-808d-4563f0053f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6222b7e0-4b4e-41cd-8a8d-91eca9ed2577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8af13bba-27b4-41cc-9a89-9a0028c98715"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0ca5400a-dbc9-4d38-b014-ba2fea3df021",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cde64946-bbc5-4239-b01e-f39c12e812f4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926ad6c4-e367-49d6-b91e-a78cdc355391",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "09b935ec-b804-43b3-823c-d18caea37972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3e9d22-734a-4cf8-b7e1-ff23b49f8c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b8a49a4-1cd8-48de-9e10-916f1a9fc332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411fcaac-f8b1-4518-aa13-14e23fe4c597",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5a2417-ca2a-439c-ae9b-72c8f8c9f410",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bd169149-657c-41d9-a939-1ae1bf7f97a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43dc9ebf-5fec-4227-b4dc-da443746d31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78633976-a44a-493d-82a4-8334fea51470"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e52dbcc-deec-429a-8c0e-e4baed7d1d5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76f3640e-9d31-47cb-a915-2842c821d47f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a143d4a8-0ae8-4197-9139-97ede83024f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c14e6d12-c04b-4332-afe6-b4edb43731b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2ecace8-1430-4d11-ac56-98eb4898168b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fe276fda-b81d-4782-8d4d-566f59fa310c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ede41c20-dc2e-4934-a32a-4dcaff60f89a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1c8bfa7-6007-40e9-b5d1-550cee493d7c"
            }
          }
        ]
      },
      {
        "id": "e0b16383-c0ed-443b-a9b6-7e32bb1a334d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "87f88bb7-e23f-4599-beba-b0ccee8291e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8266c3c8-89c6-4e44-8770-aee01489d988",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "20bb39fc-12eb-409b-9354-85c8cefcdde7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8b3142-e426-4078-a482-b194ccb3a537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024efdbc-d1d6-46ad-8602-2d0bae56727e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fb8d94-5d44-4042-adf0-afdccac62894",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7ee801-3817-4a10-931a-dfab9d5522d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699ee0e4-e855-4b92-9de7-349be095438b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c4ae8f-f7ea-41a2-b317-1a020f6b8c18",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d27e0b-863c-41ef-9b40-916786aa9434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b049c3-fe62-4efc-8922-2f52951bf08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231bd475-58b9-4dda-8bf8-094c14b97d5a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9035b7a5-1615-47d9-9cc2-4b15da0af23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7243ec3a-066c-4875-b296-c203a4102552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39caed04-9c75-4333-a482-ecd7da3a0644",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea963fd-b2ac-446e-9019-340726112ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7731f525-12cd-4772-901b-5ec398b0e9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232cac30-5e8f-4dde-bdd8-8b61761ca812",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9a154f-9bb2-4e7e-af59-a8a6d5abddc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c33fc45-8318-499d-bb66-2a9478030674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831ec0d9-8beb-4d08-b606-66744368596c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507e6626-576d-4dd3-864c-f6daa02d37dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb98ee6-f1f8-4273-b074-765a8975d36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "335f544c-4d60-486d-b561-a8d6da053371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1770ddfc-26a4-4e93-a2ad-c6ead0b56565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d81559d-9f91-4327-8d98-c43f97c8beeb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c369ae-16b5-48c3-9b03-17234f25aee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb0653be-894a-4434-ad50-4d9288c9391c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2d95bc-ca4f-45e4-ad75-d90380f6f503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e562589d-f1b5-4383-ae79-7da0038f7a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dbadaa-6c1b-4af7-b0db-fe47d0733de3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d77193-4619-432a-a1ae-11d6d0395c9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54145e7f-d77c-48d5-b9c5-0f1f6d45c8e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "961a33ce-245a-469f-9a03-869a7700a679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a54c9f-474d-44ce-898f-f678f4617ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd0b3df-f36c-4a43-a2c8-10a4cbb00cab",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1d56b8-1307-447b-9405-47f062658aa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f024ea0-0e3e-4bfd-a0ba-54730be9f855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06eb3ab1-fa07-468c-add3-cfb2e33306ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581a0bd4-16f1-419d-a35a-5ed14f22a1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159bf703-172e-49f3-8b4c-8d3f3f22011b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdf2948-6fe6-41ad-913c-f7c37c9b8832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0cb5e2e-ced9-4b16-85ac-229a7921d73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd97b3e8-7678-466b-b2d6-b0a369c5b532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb01b27-14bb-4ffb-bd48-4c0a96d574d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7378cbd-7516-4527-8aa8-f559b14f2683",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0da4106-e71c-4b69-804f-3f72054e37cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d9ffb6f-eb41-4091-8c28-c3f8c16d6cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7234d02d-4c87-4dbc-adc0-dc2c4d24d162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5feb6cd8-fe74-4357-9520-b937666ffda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d883afaf-0d3b-404c-9013-c1e185e7afa7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae5cd41-814c-4789-a893-3fc0b89be7bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32fc1252-4305-44b3-8441-563e68d24098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e217b333-6537-439b-81a3-c70eb3af9611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3850ebb9-e657-44cd-b966-44dfb3067d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00567641-898b-4619-87a0-3d52a1812447",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a71559b-5e23-41f4-aec0-bcc68bf7558d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1a9e47f-8e6b-4d08-94b9-e3b34e90bae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20755708-4360-4fda-a3c8-afb862f07d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7bcf361-bfcf-4b97-9623-a13e151f7b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa048e9-0483-4b62-ba18-7e0688822e40",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c900c4da-95e7-46c7-9a43-d00d64974455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39fde558-e493-4048-a13b-2a168dd39320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf061ef-3b2a-4edc-b1e4-9fd204d524e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2501d379-7059-45d6-a9e5-5b7f3dfff372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b8b2d5-6b93-4a41-9ca4-ada2dfb68bb9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1112cf64-e896-4c1a-9888-b445dba6d98f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9db802c8-2d5f-4853-85c2-4452ceda0eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0268bc00-6af1-490c-8876-2249297217e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3fbe587-d258-4d0d-86c9-6b5c54945f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd97350-2405-4e39-a435-c44033bcd60f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f47a6f-6d8a-43e7-9a9d-782bf4f0ee08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e592e3-a814-4e10-a1ae-5a4ab979daf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccfcd5c-029a-4a0c-8322-7164dce28a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8a9c87-e66d-49f3-83bb-eed8d991b476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ec3e9e-c23f-42e6-820e-d71f8c54e806",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb921b6-171e-49ee-b096-f4c08ef4c83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32116aa1-57a9-427a-815f-1448f2de01dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a5d1f3-db40-4e3d-827b-d8b23d917059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4745f39c-4ee8-47f0-8531-22c5dd49452b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a6de57-b5d8-4519-b0ab-1d6f0e951c35",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1477666a-b646-4704-8c7e-97a45cf225a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301a7ffa-51f6-459d-9961-3c19122d5727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfef39a1-6c99-4d6a-b789-06562cc0e4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e718f73-d4bf-4d96-b57c-57767962b9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebff7540-11ac-4dcf-af1b-abffe50ed80e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d80b07-c771-4a04-b0b5-5de46e82105e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8a51fc-07d3-4b88-abd0-a23522309e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc558d6-3c59-4229-b8ab-027d74e64d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86959e8-f3bc-46f0-8f5b-e7592f6ca34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd53e482-a41b-4db4-afc0-d73ef16b852f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c96f3b2-7f7b-4d08-aba4-fcbde5f9bb9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648244ab-f535-4a1c-b466-f6d39b87a361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "127314f6-1779-4991-bc74-4a04d0fc8770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c8b350-c825-486a-bdc9-7efbb8c6bd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb80982-a4b7-448c-b749-7561da474f37",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715b0ba4-2204-49aa-9059-f94ecb8a851c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56781d74-1133-49f7-958a-b04b52d2742c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1b9b54-19d7-4d72-8fdc-c05db116b947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48cf965c-f8c2-4f71-8366-8efc08a2849d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea60d43-683f-4500-b7d8-0b59c72d6dbf",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bec5bcb-2033-4bf2-9ba5-3066c87c8049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0452053b-dff3-4056-a63b-7aa1ad49db98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390ff97c-7093-4565-8a49-0bcc9c6dca12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4377fa33-3684-4292-9597-acc4a8fdccb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93406d7e-8479-4f97-9718-9987a1fc6dbb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b9153e-acb2-4833-9339-f0d498fe266c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1efd0807-7242-444d-b70e-6dd4519384d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ae98d5-d857-4fe0-8fa7-323ab802f116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65852aa6-8f3e-43c4-8c77-ae9d8c767934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39805a0f-9a39-4214-891d-59aabe151d53",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bbe4c6-f6e2-4515-85fd-d5b8b49d8461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96f5828a-1a18-4ee4-b64a-f0e2fedb8e4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8088c67-0df8-4501-b9de-bc6d57c5de42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b06bdc-6401-41e1-acfd-0ae0dcf9e643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e95c79a-8165-47df-8217-8e2aaa17c437",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de0cc5a-c998-4c4b-a8a4-0947c2e82c7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c69b7740-b752-4fb0-9ca1-baf2b18e2c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "515a96a4-66f3-4c35-bdd8-42e0cb8b053a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff65d600-d695-489e-889d-c61d3c4bb668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71b2e28-f1f5-49af-9f5e-7078d3d21016",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705f4d3c-052b-4fc8-9d01-6acece048c2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57dd7769-7c09-4eeb-9fd6-e0d6447b4fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd50792-3096-4349-8891-13252b11552c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c69b4f-4fd4-446d-a76c-a0d681ba93b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2bcd5d-c782-49ea-8f1b-a30d1572978a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78e1e5a-ac04-40fc-8393-9939f42c0f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97bfb559-d460-4289-ac60-9b988066106d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e42b52-0278-4700-b5ab-abdf6186fe3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d5499b-d60c-489c-81ba-7c527841935c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54383a05-3ccf-4c49-b05e-6ae31eff156f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405cf1d1-32cc-45b1-8271-9cbfb9154fd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e996bf83-b47c-4653-838a-18030823426a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a68db37-eb93-4028-9aad-b1812f939b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c5bd71-9860-4faa-8019-e0e81479183b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf81bc26-609f-4fee-a76d-8c63d8472fe8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc39e6e-f5d4-4963-abfc-5773deab2172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f47c825a-0896-4fc8-8206-43f69041e0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c0a8b7-7261-44f5-b726-f532d6a1250a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e730f97-5ab8-48cd-a2f0-0961cc470fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965ddbb7-8a8b-4b7e-b9b3-900dd96974fe",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffe595a-4c5d-499b-8b6e-0f8772513089",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "045114ee-8288-4008-a0b9-2b0f7ac34366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e19b3b-c325-4832-ab70-4b3850a385ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0070ce4d-716a-4224-b836-5603a4de51e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb119c21-f8c0-4773-8a0e-a66ab43719bc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba22b31a-e744-4c03-8d01-0368862fcdd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fd5611f-e96e-40e2-8036-fa4ea0dd4117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cf071b-5a45-4c4f-8734-803f7fe1634f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bee798e-95d9-40a5-8210-841ced930e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2410761-43e0-4c2e-90c8-5236329cc0b5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99857e4f-3dd4-4ea7-8ec3-9150ece7367c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2133651-2f31-4fa2-8c52-5b9da14edeb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e964c6-2a0e-4588-81e5-935ee53de679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5230ddf5-b3ab-410b-9448-c7bc97301701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2044236-2362-4444-88bc-6166d26fcc80",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd1d3f6-b407-4e66-8948-77f3842ca04d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d9f46c3-af1d-46d4-8637-6649fd2d4fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2435230-b27c-4b16-9098-614fe17147df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7ecdd6-f1ab-4b7d-b3a6-6971e1ea0d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9a8c60-ad5c-42d2-8819-066de8886a98",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d84f196-8d3d-4a88-b955-7ce0d413e90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af47fb3b-f5a5-43d3-be2f-44fa482a7e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c7af2d-e2f1-419b-b021-3aa336a395f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a475a0d-b83e-4984-8e7d-91e0febd7d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414f0e50-7d6b-414e-8b9b-3ffa81b37556",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2837a9-ce82-4e61-978c-89f233a5f80d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb17f902-1507-427f-a27b-237ee1f0bcf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee11a31-8e12-431b-b5ab-0ef41790fcef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4bac25c-c1f2-4af9-93c4-03bc051c2d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0565b1e8-3d01-4158-9c98-c62ec8ee7915",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e31ac3d-4e5e-4ac4-a6c9-58079c08687e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8413f268-61f4-4aea-822a-8e4a0722639d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fc48d1-97bf-4773-87c0-199c79027372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d56610-510d-4532-9443-30f36226a98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693553ce-f98a-49d6-9e16-854203e0338d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f724c59-94df-498c-bdd2-202d7d94bb29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949e774a-22de-435b-9a40-d7a407d826a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "984efc4e-35b7-44f0-926c-b684f7b7ddf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15c3ad8-1702-4772-a2d3-cc11a315652d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ab1a9c-44c8-4dc2-bcd2-ec2c91d3ce8f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7be496-5258-4873-b311-b515a092d021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad995834-2ea2-4c2f-abcc-8b123a4d219d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5a171a-6955-4f3d-bde6-ad7d11780fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bce164a-1394-43bc-906d-037fd7053a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e1fa4c-5ee2-4c20-8945-4db119afbf6b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd07f2c-529e-4ca7-8069-4265fff2a3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347ec754-530b-4086-a432-5233d7d5c770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14053167-1647-45b4-84bc-6d81a31a8a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4315585c-639f-409a-82d1-b51da6e76249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d7e544-836c-4b29-ac3c-aa15d9ebe3b9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61300e27-eac2-4866-b916-a0560a4c9323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a07a9f-3059-44f1-bf8e-aa320102de64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678276c5-62ae-45ea-a588-ebd0fc6652e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bceb9766-522e-4486-927a-48aca13b37b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43be14a-352a-47bc-acb9-320ba9998648",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779106f1-1045-41cf-a7c4-56c66ea9080c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e53b663-8f83-4c7b-89e1-bbc9a100d98f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae35add8-0f80-4f1e-b5b1-7457ce48b427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f0c392-f885-46f2-bb5e-9d0ed5604c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f274bb4-d646-4d84-bf60-b12852a7d043",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d16a0b-f01a-4b16-af80-2bdf821eca03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d5a676-ca7c-472b-8430-1911ba85563c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b42239-7fc7-43d4-89d9-2edb3aed954e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f738c2-db35-44ef-b3ee-089e15cf9c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40188ebe-cac2-4b2e-8f41-1378990d0caa",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea4b745-987a-443b-8297-023656bbfdaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19bbc614-deee-4af1-a7ca-77858a345bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fc0328-02b5-49be-925d-79a8ed5717f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe8c852-f666-43d9-ab3b-62da48161e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56357c46-ed0c-488d-86a5-1e8c3a82c8b3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0823ec-180f-4ef3-8405-2af55af1bd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282bdd37-1beb-4a12-b49b-03dcd0530b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb55af84-6154-46f3-8b79-1510df535cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a81585b-e073-4fe7-a568-2675e5a02b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f99e5b-2ff7-4f1f-8801-34952e9356c4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593bdd23-d9e9-4e9f-9d39-050f8a5e89a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fddc1ff-143c-4bca-b8b1-ab4d2133b3f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "041680d4-a1c7-4e07-89cd-fca173788ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fe98f3-da20-45b6-9035-75a05bc86247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c70aa39-b786-492e-a55d-e4d9fe419565",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c380a32-2b57-4834-ac7a-76675a43dcda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70ddb70-e4ff-40a7-b905-821c34f5c23f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fe4b8a-3305-47e8-8666-023166830ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4264e30-8acb-4f30-9ffc-1822d4cc561b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f5de17-8b6a-480f-8757-d63a8d0ffa0d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314f2b20-6c1d-495c-8878-8f48d877a210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd43459f-6027-4c6d-a318-2a9ab0d7d7f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd3b148-3f92-4c35-afda-b44f7bdc6037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78fed2a6-8698-4298-b12e-030d91a7124e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d174a5-bb42-4c71-a9e4-5a78f8240114",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8227c045-7c50-4800-b2be-d10e192e172d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35322f75-a277-45e8-b41a-afb0f2cbcb13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe3598e-c937-4a59-8830-72bc1bf2b458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5552e3-8993-4de5-b8c2-07bc343d45fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba434eb0-d870-4f80-a475-a44d5a6813a1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83aac701-4224-4cd7-9ef8-09e2030f9b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fc30d2-e9e9-450f-99df-3151d2f2c6e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aea5746-3906-43f6-800b-2f70f68f285e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d023c2-d488-42b9-91e8-3ab537d78b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f8f11f-3bf6-457d-be4d-4522a60db6bd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00157a8-c748-4338-98a1-042961f30086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c055675c-01ce-481e-9355-137c1cc2f9fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe14fb4b-4f4f-478f-b1de-0f49919582a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede7f973-e6c5-48c0-bb70-5d917915d111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585f21d5-0226-4cf2-8f92-710a601be2e7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461a85bc-7159-4fdf-9349-4de911c39db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5631fd96-46e4-4578-9fe6-d2b7875c47aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41c7100-181a-47e0-a81c-7ae520fe3751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8e7dd6-9293-441b-a688-e288314a77b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa36b2b-6f6e-4b37-81ce-4b2ad9eb5ace",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f32a250-2fe6-4b54-81a3-cc7d7c450c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd03f19-a725-4b5e-afb1-bcdd2e054b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d920f0e8-6d2a-4478-bcef-1c45b28aa3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a71fb7b-a6cb-4592-a120-65b221679f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6223e3c-48df-43d9-8318-f903dbc1ce50",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93703f14-fc7b-49fd-aaa0-5879083415e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f223dc-c412-4c75-9ce1-29569b2e087f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b8c3f8-3760-4ea0-afe8-dec002ff0131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3219257-396a-4c59-b629-b06449ea0173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6667cd02-8ced-4caa-b23c-b2a9b92d0016",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bd931a-ab1e-49ca-ae2e-57c537649520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c56e61a-e60f-41bc-9ff6-4a3cf2e7b76a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cfef28-9319-4704-b3ec-b5c062a0a424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3387f4-9d4d-4a00-bd11-76090fbf4ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd1c787-e4a8-4ba2-bf7d-9e4a8d76b278",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eca7c82-136b-447b-a0c3-4a16f66a717c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cfeec4-8d54-4b43-9daf-4faffa1440ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c2b562-9c30-43bf-adaf-ac850c8555e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ec1e6c-fbf0-4db7-9e44-75196e2e7ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57348464-ccd6-4eaa-b363-95f1c99efb95",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac32ffcc-6d0f-4260-8e51-7c2658528acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3b7860-0a5f-4b31-b5d0-5d3d5575490b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deac6f06-1b71-43f7-84a3-cc1dcc74a77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42657cc-3992-4afd-941f-eab102ed34c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29a326d-15c0-44d5-bc53-0ce34bb7e1fa",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfd92be-c473-4790-8365-40754aad23a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4200b7d-6b72-49eb-bfee-098ac673c4b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcaed7bd-6ee0-40d8-915d-7e2766064de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050e84df-cbba-4ca8-bd0a-2561bbe9270b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2513bc0-4286-473c-8cc4-747d49f29683",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7712274-f836-4e2d-b41f-fd5b1eb6093b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6861eaa9-f6f8-4fa6-8085-735310ea7141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc4fd22-7012-4d31-9769-b0b9232a5ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7cc98a-c038-49dc-a0f7-3f9e91517a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b8f00a-e6b7-465e-8ecb-506dc9316b28",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b49407-2171-414e-8d4d-5faf7136f157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d15d05-76d4-4da6-b96d-3819ec8dca48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "818931f9-3293-43c8-b23e-079f55a310c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee3f036-befd-4ddb-9772-e1e071460712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa489ff-fefe-496f-afde-2ff068884aa6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d8a8c2-b080-4425-aba9-a6779d654934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fdc47be-8426-4fee-b76c-4ff72f7fe0a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09461733-6ccf-4984-a494-53addb812088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d74d5e-30f6-4238-81f7-8b0b992e18e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a32820-ff8f-41e5-b1fe-2c242f615f46",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f18f0c8-9809-485c-b6f6-090bfafe0fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636fe037-577e-49ce-a88e-6ec36c0588cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969b7fce-d22d-4ae9-8002-2d38b7f575c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6080ea4-184e-4fae-a01c-c01a19f72ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04d1abd-1de1-4eab-bd1c-55ae251878c5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5421346-ed10-4bf2-a935-56a83f198e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0df22b-0a25-4a57-8353-b0fee5d87af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ec6838-403e-406d-9d6c-cad130ef32dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080e8e5d-db03-4679-9add-6bfa0991d824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b87dd80-0b05-4564-b891-4e4bdb46b546",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9441fb8e-0fae-45df-8cae-62ed529b5bfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ced263a-78b3-4a25-88b9-326156f2f438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7393f533-b674-4b55-ba9d-5ede7343dd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c886fd0a-e966-4d47-ab0b-1748a47e7e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01631d7-8842-4d67-89b2-90271cf58eb0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9156c74-2402-4649-816d-757220678979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec3e8a3c-7640-4b41-8487-64a80b65d2a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1baf9d2e-467d-4b3e-9e7b-1b9caacdcfa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db630e59-4b36-4192-a815-906572d6dd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3036174-2461-4156-9916-5ba9f36eedd9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218c717a-2bea-4781-a17b-4153f86fb084",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a424e17b-ead8-48b5-af1e-187b89e876f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487d079c-071e-465a-bf40-5e94f77666a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe3d691-3ece-4489-91e2-fe2461203347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c42faf5-695c-4937-ace0-41179bdf232c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cd8976-84d7-4b81-8364-5fb6504dba07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4f4a2cf-b1b1-4fcc-b905-a5f544d64fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "729cb053-a824-4e38-bcee-a85f4ae32dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d7b6d4-b2cc-441a-ada4-0db2d7fbe1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654ff285-c99c-4b4f-83f1-3c493fd0a7e6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d58ee4-bad3-4adc-8aac-72a3512cca01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3d3494e-b39a-4f15-a10e-069ed5bfa796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beddd038-8aa2-486d-bea3-e9c340535550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e70461d-54b6-42d0-983c-29c8a0244c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e390877-839d-48e5-80e5-399b7f56334d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a36ac3f-4abb-4752-8b49-0fc52f3b0009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2de3c665-6a15-43f9-9b9b-de18a91af245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fe4b20-c299-4350-97b6-fba76ac4cbe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc83a67-a7b3-4a01-a3f9-2c733ca7f3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa24280b-05e9-4aca-9b87-ea2bd369f3aa",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4e67b6-eccd-4de3-bd6e-eaed3c8db029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0358abf7-5814-4671-b3c0-d5b8655719c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22dec3c2-22ed-4725-9855-2dadb5d93577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55501cf2-3811-4965-882f-3b035a8a958f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6e1e2d-844d-41b6-b48d-60012f9f5188",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9caa271b-d48e-464e-a895-1b449c2d87cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51e1e01f-e6b5-44fb-8b35-75526fa36789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1909d33a-edd3-4081-810b-95db001b6191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24799f3f-bcce-4275-9300-02f88cb1de81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e42178-1964-40b8-a55a-c227460e4e0d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a4c6cf-200d-4175-8f9b-7e2fdba6c494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a25b1cda-b114-4435-a56c-7235076fb3a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "734ae795-0556-4e23-8eba-855f797c6279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba6218c-af0e-4ead-a2fc-946333bac8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a53f98-5609-4951-8962-cde53a380e6d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba38a2c-bd93-432d-b13e-b503affc1d6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "103ea084-9f4a-4f26-807c-e34a5db33093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ccd86d-ac86-4956-9f49-a04f26720826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666b6a06-2650-4529-b75e-4a7cd5b97aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722980c9-6382-4ddd-a8e1-01acd11bcdbe",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52eef863-c8c5-4dba-ba76-8cd78145123c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "879ccc4f-bd60-47ce-ade0-1c4e12f1927e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4aa016-a580-44f2-8cdf-680638b006fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcba291f-2082-444e-b291-ed4c0c1908a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e793b1-d48f-410c-a205-6a58b49a85e4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e28884-38a4-4944-b17a-8cb6e7bc147d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85221dc0-b437-48bd-8b5b-5a23ac0df2a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a979b5f-1140-44bf-bd4c-bb5c64a0d569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613eb6ed-83ef-440c-a15f-98e7da607826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c48d8f-1f07-47c9-8b45-d7a3352ddd74",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7405b9-0a59-45cd-9c18-226966b81793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e188e727-02d7-42a7-8bd1-1d1aa3f18166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024a8dfb-fecb-4ec5-8586-14f48e1c0ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4ec610-b88b-4862-b368-868bee06145a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c86033-51a3-4b64-9f9e-752222d6d607",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc361625-c278-4340-98bb-56443d6cce61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e04065-0bb9-45b6-8123-6688ac386ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52751591-335f-4af3-9164-0c25e150f3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec496d9-acc3-4ee7-9f01-161e418da48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d6525b-3209-4513-843b-be624958d4e1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7627fda3-6448-4660-9f0c-f6a07d49add7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4649ae44-3c7c-4aaf-a765-80cdb032af37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cbd6ae-eed5-4263-b456-ecc214970055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23df7d1c-7b05-49a1-b29b-ee857a2746fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db5a7eb-24f1-44a7-8fff-e1d8ecaec9ad",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bff4fe-4d03-42af-ba09-2796370e24a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7364da30-08be-4041-a82e-b1136927e937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75700bd-746f-4d1b-b5c0-b2d98c800d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c08b004-eb09-4b60-bb92-b823c59c71c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b660cd-64df-47cd-a545-ed84e201b17e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625309ae-dd80-49ca-993f-0995424a65bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5095df59-e3c7-4eaa-ad73-830a08410737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7792109d-58e3-4452-b347-98e8d22fca84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49e7221-a419-442c-996e-260183016d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de85f725-2f2c-4737-baa2-8e135fe203f3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af267507-f5c2-41ac-b11a-cceba4a5a01b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ab3319d-bb2a-4ca5-a98f-eec54047cfcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deedb7fc-6939-4e22-ad5b-72081f23d55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2e8916-6d2b-4241-941c-ea1d004463bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407ada16-9d31-4491-b96d-94aa11d7ecd2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb7bb6e-1dfc-45ec-8f67-9fe7e55c5c51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a405835c-f6df-4dea-a35d-057c6d9da061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43379963-e958-40bf-8770-a0bf567ef0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15be38e1-e523-43ee-b5de-56f2f43b2e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1766116d-b563-428a-83d4-0b2b0b6c94ba",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8d4d83-6149-4a85-aedb-1ebed2975e98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80fbdf66-a358-4028-8ceb-9d1209938c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31cfa47-4a8c-4ff2-8700-d4db3879d007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c203c99-dfdc-4417-a663-05318370012d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76c1122-7776-4b2d-8242-ad9a7628881e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104858f4-e791-42ca-8b6b-4e4a110963c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6183bb0a-4f39-423f-9073-60f175840b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a34be19-3f1b-41ab-b637-fafcbb827869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01428d1-6479-4400-be74-fb6f9ee989f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf663eb-ffcc-491e-b2b1-2753b04df34d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e904550-ed50-4aa5-b86f-3be2e0ff71f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c12844c2-6808-4fe4-8925-af26e12ddf57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48234fe-c5f8-4329-a615-1a50f2c88bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738359bb-42ee-4ca6-81b4-ba41628a493c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea7d387-b88f-4acf-b677-ff71ae8a114d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7daa1f25-6807-4e83-83e5-6d4c908312ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec27e5fc-30dd-4f61-91a6-788e922433aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a7005e-c4b3-4dda-bb07-b36726aeebcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dcd9085-4e86-4a64-b295-d3bb89877e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65e1d9e-fb47-447d-b462-9b94fe260e70",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6746b2d2-206a-40f3-b1d3-835958c20355",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d46db2d4-4b49-4482-8270-9ca28ed3b600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15ef756-e213-4150-a103-44652f116676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42dc18a8-1e93-43e6-8443-aaddb18e5021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28277729-ae2d-4b5c-8584-c7855ddcaaa6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e468a6-a6ce-4228-ad3e-c1b4e1b42f68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea0d0ee7-ba34-4347-bae6-d1538d451f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8fc99d-2c1e-41f1-9586-9067388bb1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a5d914-e3ea-4170-83d4-00de890a1871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263a0198-d7b2-4907-9fbd-995bb6fa21aa",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877e3d0a-8c31-4028-a5d7-d2119045f010",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26602851-8ef6-44cd-8c48-f7c8acb99f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f88268-ae95-4232-9d31-98a8749ec2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c023ef-1b5c-4e17-beda-cf088e660061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29f4843-4116-4e03-b766-151bed31e709",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970b4e0a-edfb-453b-9168-15f42986633c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3158a17d-6ead-4a41-aca9-d77889d077c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d213666f-1843-41f1-9da0-c17d4f3ed2ac",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c90807b-7d46-4245-ab26-fae3cb1e9920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929e1e16-142e-4ebb-9c25-986e35470779",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82623f76-105c-4d7f-acc4-1c67544c2d55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca8ecc8a-6d2c-4d0a-aa3b-bdd05d4f7558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55a53c5-5a8d-4c74-8e5f-1ba2a14239c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6b0a21-cca4-4784-b52a-c3ce8f040949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bebc08d-2ddf-4971-b58e-fe1b04ebab91",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b7a16e-f196-4d7b-9450-a470e0cab6cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f126801-9961-4f1b-85ab-d6c5c8f592f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bff1d42-c734-45c9-a609-9cfa225e9b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20193787-7ced-4492-9679-0129299c5dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d593a6f0-0d4c-409d-b179-270ca2783981",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb42142-2774-4ad3-9baa-47f9c8f780eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0393490-9a17-421d-a1e9-b6cf5fde29bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d390b0-9e48-4bf5-bd72-4dec315fbe35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a9f1ee-6652-4c95-8cec-e00e458a00ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01ffea7-40e0-4b37-ab9a-3f8295fdcb10",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c6606f-9265-458f-a9fa-28de690b8cf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cbc4542-3b2e-4901-aecd-c68e5ef23615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc65cd5-b8ac-4ce6-b634-d1f7ec438413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e5d6a4-c974-4a1b-943d-b73f3ce8224d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7de9b1-20d2-4c8f-bbba-1c23e9be5d8e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06c5f0a-2273-4aff-9e60-98a66339bd3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06a8d6a5-6587-43fd-bcf8-fff7fef15eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "367ff7ba-ad16-45ca-91a6-c1f9d23f7d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b4d899-d147-4167-a758-32a4003f2941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d3327f-6850-4d0a-a3ee-2cff1b64ef19",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6066793f-dd5c-478b-8899-3dbdc19fd4d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70adfcb7-4434-44e7-bb4e-10d24fe6690d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "928909ff-b817-47b8-954e-b1898f873410",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db955601-fc8b-42fa-9dc0-cf8f181db7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bd9edd-7d2d-49e3-bf2b-1cba9e79573b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e197232-3bd2-409e-8e58-dc797e2d025d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d505b761-d2c9-4aaa-8a2c-bbb6abe28420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427d979c-03ad-45c8-8240-ee944a625615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b45f7e-43ad-408d-8c38-f38dc7c7c6b6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "851b16f3-95e9-43dd-987e-56853cfbdbf7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7aa518c4-3865-466c-b293-adc945a30a24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae50fd71-9ef2-417f-a692-f9081ea8e6f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd7178c4-55d5-436a-875f-7c9f79bb5d78"
                    }
                  }
                ]
              },
              {
                "id": "a364b61e-4526-40e5-ba33-cbb1b04b779e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1eccf9a-3d73-4229-8243-1a304fccac2d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a602ad-7eb4-41e6-a919-a85e0851ef4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d39e4654-b34d-478e-b686-eeb6d52351e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db75f463-a836-45ba-8ca4-5bd0ec730f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cde9b51d-cf85-4126-ada4-ac68e232acb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a361bc-d35b-4f1f-b746-54c6b9736145",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ec0f3f-a97e-41bf-b0ab-ec157931d595",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "66a5102c-a553-4d3b-ba52-bb63dad521f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47773cc-3f99-41a9-9982-2870001d53b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79665091-ae8a-44e4-be17-8ebf059d276c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65384e3e-804a-4340-9e57-b45480b2d655",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea1c14aa-4cc9-466e-9a54-23ba86be3928"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b0c8fb8-c9d3-4c2f-8d47-9f6b763d84c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea9a5455-f51f-4dce-8979-77728bff8677"
                    }
                  }
                ]
              },
              {
                "id": "a236abe8-8b55-44b2-9caf-d77b92137138",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d9505bb3-2810-4742-a84c-03d1d8550324",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25863bd-adda-4fa9-b5f7-7fb91958caf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6c0daa60-12e8-4fdb-97c8-fdf8d63c608f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3f34e3-3c05-4370-a66e-7ea103e72807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5926c1-c436-4e69-8c98-a9fafd5c2bd2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "62dbb5b7-310e-4588-8d3a-e724f2caf2f3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0dfe9f5b-8df5-4972-a4d8-18b22448fd30",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d51419c8-1c8f-4117-9ded-aca763b10c6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e0c7ac1e-4680-47e3-a48e-c5d58566c8a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a1cd0a3-ae5a-424a-8caa-b8d73e7c609b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81311fd6-377f-47ee-bee7-52f2654f981a"
                    }
                  }
                ]
              },
              {
                "id": "14386249-952f-4d9f-ac28-034de29318eb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d72342c6-ce72-47df-89ed-e5f81b4d827e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fde31cbb-15f7-4c94-9f50-4c4fadba283e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62b126fd-6811-4a55-990a-85d16ef12ff7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d53d97e-5d39-4bba-9b1d-39603f30fb0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50b9ac7c-ddd8-492f-b2ce-05e4cdd47cc3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "24f817f0-5641-41e9-86c2-635fe7e474bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c191b3ba-defc-40fc-b01e-661a6ad4c52c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0761349d-5407-4785-a6c5-2d41b83e070b"
            }
          }
        ]
      },
      {
        "id": "59fb236a-8e97-4992-8665-cf1e5cb12540",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "67b5b8d4-708c-483f-aa4f-db3a1d1ae3ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3c17d94-1bec-4ab5-ae97-bc34648e8eee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f8656b9-3877-420e-9907-ff79e1ca91b4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238f2e6c-dfb9-469e-a14d-919e3b8cfe74",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "07eda5fc-3eb2-4b6e-8e08-10b02d36e301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cca67ed-5933-4c37-9ad0-904409af895d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b54ea55-d6bc-40a9-8ff2-831f620fa230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cca6cc-7b50-4afb-b9b9-bea864aa522a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314deab2-aa78-45b6-a3dd-684dca713e2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "844d40a9-dcc0-4a38-bfc5-afa015bda8bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a104a60c-3fd5-465d-9fa7-59ccc31fa4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "857a85ed-940a-499e-8512-c0ab7d7fc9c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf9fa068-c7a8-4b81-8a9a-454c95a0fa78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91ba8c60-16d6-415b-9b02-b95498d4412d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3d4d517-26ad-42a0-b674-7a87f9c4a749",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d85d5d8-64cf-41bc-b116-ff957f802eee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "579d94e8-d46f-4806-8b8f-6bfd70305a9e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "75f08fb5-4cf1-4a86-8300-af6a4d88f140"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e3938bd-1454-456d-a0ba-ebc8123d3172",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abb838b4-3340-4b33-803f-38f8f77b8ba1"
            }
          }
        ]
      },
      {
        "id": "51b685c1-8a2c-48d3-9038-bacb18f2c7fd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "de9a37d9-3aaa-4862-bd49-aa792ae3e144",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a9cf394-bebf-4c37-8195-edbf94fbb88e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53a5187a-acfb-42af-a83f-8b381bb3aad3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7f3608-bdb1-4721-b81a-cfce2285d522",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "237f311c-cd88-4dee-85f7-995a2b576155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad886a18-80ce-4065-ae3d-1510ddfb123a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "697f2cdc-4b1c-42eb-9b17-bb62669cf960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8379a6a-1f27-4014-97eb-444387e10ea1",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe94e43-1fc9-4d6e-813f-a1a6d1cb8bc4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3f2305-ee94-4ecc-af93-b4f495c7115b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "126978f5-ab7b-41a4-a739-9a88bda22b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c62bf893-a400-4db5-a830-807c77e5d6aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2da6f78a-ab4a-4c51-ae0e-c6538adc006b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "501b10aa-6ea8-4868-86fd-d35b44d00785"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18c55ed2-c994-4525-90d2-54694e171010",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acbe1517-bc66-4c79-9ae1-8aa11b994b75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abd8102d-eaf8-4965-a8d1-b923c1bc1938",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f748bdc-3d0d-4853-9898-880aeaebf2e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2456855-7656-4138-a22c-23f8dfb8fb28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b5fd944-c0fd-4d77-8d7c-93aa08f299fd"
            }
          }
        ]
      },
      {
        "id": "bd5458d0-8590-43f4-8c07-614e237d02c1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f190c632-630d-4f05-af12-22763212cf3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "abb0a58c-7e0e-43d9-aa5d-1e72bd1c2bda",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8abfeb56-6d13-49a2-8efa-02bdb985a1a7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6809a425-c72f-46ff-bb6a-255763baa040",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d729e0ab-9545-4c9e-a7e4-2f25a4cf5eae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b738f6-7a0c-40d3-a1df-ea4d8252724e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee14a18a-8023-4e89-bb17-ae29fc66b7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a894eece-31f6-4d3f-80f1-2599b9453391",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649b563b-f2e9-431f-b02f-b602bcb798a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "66dc8237-1cdf-4f27-b1fa-6a1bf807494a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74e7f07-0c72-4234-bf1e-d42dfcf9e6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af64b179-7bff-41ea-9d4c-296f952c6cf4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75b9748c-aa5c-4533-95e5-68a77312816d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b1bf55a-b3b0-45a4-81ff-95ad3ca1fb20"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "272d3f77-8c48-47a4-a0c1-fb23deab00b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37d30881-e323-4129-b57f-5e4ec297ac46"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "281f33ff-a954-4794-b9f4-ef3c6102a50c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2c84609c-1610-4c00-a8d0-6ee8879830ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60ad50bb-116a-42f5-8dd0-d0d594e4119f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc823a5b-9daf-45a8-bbf1-9182ef4aaca9"
            }
          }
        ]
      },
      {
        "id": "de1be8ee-0a1e-4d9a-ae84-e5f7d9d39e8e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf433621-2e6d-4414-8d08-70e0e939e38d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5e1da73-81ce-49e6-b4f9-ab219a199364",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4667be13-f107-4b4d-9b21-c9e119a91ac7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50d93d5e-e7f5-440f-9214-c53513e10ae3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0982e35-8e40-49e1-9838-cfa440decfed",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 57.22692307692308,
      "responseMin": 21,
      "responseMax": 317,
      "responseSd": 32.85970243898597,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684715942104,
      "completed": 1684715967932
    },
    "executions": [
      {
        "id": "5cc3fee3-7497-4a48-b925-6574adeeb534",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "73bd97bf-64e2-4fa8-830b-16c6c78594d2",
          "httpRequestId": "ab723c1d-c6ea-4c0c-8e1e-1f0192efbeeb"
        },
        "item": {
          "id": "5cc3fee3-7497-4a48-b925-6574adeeb534",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "66e5f5b4-d9d8-4f3a-b83e-2d887a194f8b",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 0
        }
      },
      {
        "id": "f60507eb-b9bf-468e-a465-bc3058bf6f07",
        "cursor": {
          "ref": "d2be4aa9-674a-4b51-b9a0-05890e659bb1",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b63c01dd-7b97-48ff-85c5-471130c35c3e"
        },
        "item": {
          "id": "f60507eb-b9bf-468e-a465-bc3058bf6f07",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2d939377-c4b6-4a4f-998d-ae0c22d98fed",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "25a82b88-9d68-4ff6-8578-570c8dca3815",
        "cursor": {
          "ref": "382a17f9-54b5-45b5-9fae-0750565d6117",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cf837ce0-33b1-4d84-9db4-f4e6164297de"
        },
        "item": {
          "id": "25a82b88-9d68-4ff6-8578-570c8dca3815",
          "name": "did_json"
        },
        "response": {
          "id": "6e6bbb1d-aabd-4de6-8321-db2674b330cc",
          "status": "OK",
          "code": 200,
          "responseTime": 169,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dfc611-e110-43d2-896c-903c34a6540f",
        "cursor": {
          "ref": "0ffe43b7-0582-4997-9f18-cdad8f8e5e5c",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9893cf63-4954-4512-bca6-6692f7c0e91f"
        },
        "item": {
          "id": "16dfc611-e110-43d2-896c-903c34a6540f",
          "name": "did:invalid"
        },
        "response": {
          "id": "101d543b-877b-4142-a6ae-b2f6024a9dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dfc611-e110-43d2-896c-903c34a6540f",
        "cursor": {
          "ref": "0ffe43b7-0582-4997-9f18-cdad8f8e5e5c",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9893cf63-4954-4512-bca6-6692f7c0e91f"
        },
        "item": {
          "id": "16dfc611-e110-43d2-896c-903c34a6540f",
          "name": "did:invalid"
        },
        "response": {
          "id": "101d543b-877b-4142-a6ae-b2f6024a9dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2ca777-ace9-4fba-81b3-e306ea4c83e3",
        "cursor": {
          "ref": "2b7c2559-bcda-4248-b0a5-eae22689ee23",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "caeb1fd3-dbc4-455b-a1c0-11df75809613"
        },
        "item": {
          "id": "8a2ca777-ace9-4fba-81b3-e306ea4c83e3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2d3e4ebb-d331-4236-a38a-3416faa59f45",
          "status": "Not Found",
          "code": 404,
          "responseTime": 154,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a88465-262e-4823-9c0d-f0a326dfb8b8",
        "cursor": {
          "ref": "2b8e3cbd-96ae-4d49-827f-5da79544e458",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "da176f69-ad68-4e38-a50c-cc02204dcf09"
        },
        "item": {
          "id": "76a88465-262e-4823-9c0d-f0a326dfb8b8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "537165ad-08dd-4419-ba68-43287c4924eb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2d8cc9-64e2-472b-93ec-d9a38d2c47db",
        "cursor": {
          "ref": "8f1e2aa6-17b4-4935-99a6-d0754755f034",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4662fa57-8d06-445b-8686-b324fa95d33e"
        },
        "item": {
          "id": "3b2d8cc9-64e2-472b-93ec-d9a38d2c47db",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "76fb5b49-9924-4e85-b2da-60e5b6de561f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e8fa6e-8e95-443b-9219-dc0b0d7f837c",
        "cursor": {
          "ref": "acfe8f80-36d6-45a2-a054-7940013bdb70",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "37f1fecb-a6ca-4450-9e1e-5a76cf24d765"
        },
        "item": {
          "id": "99e8fa6e-8e95-443b-9219-dc0b0d7f837c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e5e2cae4-cfdc-43be-9816-8cfb72e6ca7c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 50,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e8fa6e-8e95-443b-9219-dc0b0d7f837c",
        "cursor": {
          "ref": "acfe8f80-36d6-45a2-a054-7940013bdb70",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "37f1fecb-a6ca-4450-9e1e-5a76cf24d765"
        },
        "item": {
          "id": "99e8fa6e-8e95-443b-9219-dc0b0d7f837c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e5e2cae4-cfdc-43be-9816-8cfb72e6ca7c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 50,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55436e44-2f0e-45fb-b6b4-605ca33dfc2d",
        "cursor": {
          "ref": "9b3b51c9-fa73-4927-9586-8b7fddac4c05",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2a06d59e-faed-4064-86f9-8e0a437a963a"
        },
        "item": {
          "id": "55436e44-2f0e-45fb-b6b4-605ca33dfc2d",
          "name": "identifiers"
        },
        "response": {
          "id": "a78cedca-aa01-49c2-abe3-a87202100dc7",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3d0e7f-89b4-4056-8134-547d7f36d405",
        "cursor": {
          "ref": "1507238e-75f2-4a98-b8db-588c7a0f1f6c",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ec57e0a0-a1c5-468b-b2c6-876a90b15ee5"
        },
        "item": {
          "id": "9d3d0e7f-89b4-4056-8134-547d7f36d405",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "82152ecf-9953-4cc8-aae7-f6da48a03a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3d0e7f-89b4-4056-8134-547d7f36d405",
        "cursor": {
          "ref": "1507238e-75f2-4a98-b8db-588c7a0f1f6c",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ec57e0a0-a1c5-468b-b2c6-876a90b15ee5"
        },
        "item": {
          "id": "9d3d0e7f-89b4-4056-8134-547d7f36d405",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "82152ecf-9953-4cc8-aae7-f6da48a03a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179daf6a-8242-4397-a596-cefcb4c9bf9f",
        "cursor": {
          "ref": "9acd8b67-7b98-4b8f-aadb-231b037803ec",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9488ca77-a5aa-48ee-b446-c020173b90af"
        },
        "item": {
          "id": "179daf6a-8242-4397-a596-cefcb4c9bf9f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0a97eff2-d54c-4224-b534-fe6dd8057f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af016452-d206-4054-a5fb-c7af5954f964",
        "cursor": {
          "ref": "f99f4ff1-b887-4538-94c6-0aa5e5fdfcbc",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c8b4e443-95fd-47dd-bcca-c3713e018975"
        },
        "item": {
          "id": "af016452-d206-4054-a5fb-c7af5954f964",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8c8a7364-6c54-4806-a52e-5cbcef2b2dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a85d53-e9be-4594-8750-b68e510ce9e0",
        "cursor": {
          "ref": "19809bd9-f388-4255-b553-dd7e52a24d87",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a5c1bc78-3f3f-4864-8534-3a0fc666417f"
        },
        "item": {
          "id": "a4a85d53-e9be-4594-8750-b68e510ce9e0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a3ba6439-6fa8-4c97-b69c-ed154f736b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63572479-0420-470f-982e-29a85c5943a1",
        "cursor": {
          "ref": "cdf5a633-ac8d-44d0-9f85-38c4eb945ce2",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "334171d9-6bbd-4a1d-a874-bdcae83f8c81"
        },
        "item": {
          "id": "63572479-0420-470f-982e-29a85c5943a1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c37a8b62-c343-4675-9763-1e1ee5ebae99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7d72c9-5dbe-4a09-984e-20874c814b40",
        "cursor": {
          "ref": "b9f033bb-023a-4072-b618-afb0eac6a553",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "19a537b6-ef1b-4c7b-bda5-ca6f4ac90231"
        },
        "item": {
          "id": "8d7d72c9-5dbe-4a09-984e-20874c814b40",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a1981376-d897-45cd-84ca-905842531cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a202176-7cbf-4c09-ac7a-cc210f74d281",
        "cursor": {
          "ref": "89a9f846-39be-4590-ac13-7ab139c879ad",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "741bd92f-1b3d-4c69-ab35-94566a598247"
        },
        "item": {
          "id": "0a202176-7cbf-4c09-ac7a-cc210f74d281",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5e734c1f-2281-40da-90cd-3e6441dd4141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07eb55f3-f660-47ba-b202-904777985f75",
        "cursor": {
          "ref": "7adc62df-bbf5-4c0e-b1d0-88917df12f29",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ec8bc81a-2120-48c4-8e70-2028a5aa1805"
        },
        "item": {
          "id": "07eb55f3-f660-47ba-b202-904777985f75",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f6b2934e-0857-4ec0-b8e3-2422d0ebf254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5e9fae-f0f9-4a76-9acd-d0bc8db3f21e",
        "cursor": {
          "ref": "cafcbb3f-5115-42d7-8011-c5c1abd3ef47",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "585478e0-d43a-484b-9297-30425be84165"
        },
        "item": {
          "id": "9d5e9fae-f0f9-4a76-9acd-d0bc8db3f21e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "06e4cf37-593a-4891-a8db-e0ee308a726d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974e0725-0fd1-4bcb-9f75-ab64e0289aea",
        "cursor": {
          "ref": "6977ac74-c4bb-4b90-b908-71e420e297b5",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "34181959-8d5c-4de7-a3f5-9444c4dfe47b"
        },
        "item": {
          "id": "974e0725-0fd1-4bcb-9f75-ab64e0289aea",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "88ba27f6-65a1-4e7c-bc31-925b1cced9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd91158a-cae1-4c46-bcc7-c970085a55d0",
        "cursor": {
          "ref": "a48aa64c-cd05-483a-b1ca-c4b1fce7939e",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f9514cba-5973-49cb-babe-4606550d5ed5"
        },
        "item": {
          "id": "dd91158a-cae1-4c46-bcc7-c970085a55d0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1a1ff40d-875c-480e-adc8-9b2659551968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547c767e-d11a-47d2-b9c4-6e6bcabe4bc2",
        "cursor": {
          "ref": "dbac19c4-5860-401a-8340-7f8bc6a44a8b",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d6b53781-4020-4e54-bb17-cb7552262fa4"
        },
        "item": {
          "id": "547c767e-d11a-47d2-b9c4-6e6bcabe4bc2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c1b34b74-0bda-4075-81f9-1c15d78eee44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bc5650-f56c-46de-9d18-ddc119881033",
        "cursor": {
          "ref": "20d34b9d-cde1-425d-ad73-35baa7c65824",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "349ed250-3024-4285-bc3d-02392dcadb1f"
        },
        "item": {
          "id": "25bc5650-f56c-46de-9d18-ddc119881033",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a390e75c-13e3-48f5-a38e-4e938a1bc712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e62d646-836a-4dc8-90eb-227466e14ef4",
        "cursor": {
          "ref": "f87375ec-6e3d-42a8-9a91-72571580c8db",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a8623a79-de4f-4f97-b8aa-00c215b7b94e"
        },
        "item": {
          "id": "3e62d646-836a-4dc8-90eb-227466e14ef4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2eb28773-6792-4420-9648-7f5adc47f002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05165984-f39e-41e8-8b68-06c2052189ab",
        "cursor": {
          "ref": "e58dcd10-223c-4b25-87c8-525bb009f564",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "30acd7db-aa08-44e7-9965-c7dc41417ebc"
        },
        "item": {
          "id": "05165984-f39e-41e8-8b68-06c2052189ab",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "792a5f7f-dd4d-46d6-bfb2-f356943c91cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17228f06-2def-4e9f-a5ed-dbc67ad4e998",
        "cursor": {
          "ref": "55861d57-6949-46b0-b107-825921422edc",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b700b871-3d6d-41b1-bc6c-ad91c4b8659f"
        },
        "item": {
          "id": "17228f06-2def-4e9f-a5ed-dbc67ad4e998",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8a3f6ff6-2dd9-496b-904e-a05a2198ba45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3e5704-4202-46ce-9830-d931d4347b98",
        "cursor": {
          "ref": "3dc3a962-00c6-4803-b557-a6a0aa59387f",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d370673f-2772-4ba6-af8e-18d96c71123d"
        },
        "item": {
          "id": "4e3e5704-4202-46ce-9830-d931d4347b98",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "aa81be5c-4ad3-4ca4-b12d-73f6c06c14fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc2a726-d7dd-4b08-bd38-5c1aa7c4be85",
        "cursor": {
          "ref": "80ff66b7-7699-4cbb-b7ac-9a7c6a9deddb",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2d709614-fb51-499a-b45e-3a7701c0e09a"
        },
        "item": {
          "id": "6bc2a726-d7dd-4b08-bd38-5c1aa7c4be85",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9f740d7e-7605-4f74-826d-f5d9bd6ada23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c86b43-3dc4-49a7-a1f3-00479d6e83a9",
        "cursor": {
          "ref": "d7422145-1b6e-40ad-a1a4-2d96cb583073",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ac1d22b6-2265-4409-8898-b1c6bca44fec"
        },
        "item": {
          "id": "04c86b43-3dc4-49a7-a1f3-00479d6e83a9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f61b2327-0579-4353-9e9d-0ff967c3d701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18a9398-c965-4a85-ab40-8593675bb918",
        "cursor": {
          "ref": "bcd23b59-2151-4911-aff7-de0239a9af8e",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f1d3918a-ba35-489b-b703-7ad434e5fcde"
        },
        "item": {
          "id": "c18a9398-c965-4a85-ab40-8593675bb918",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6800fc0b-e5a5-4009-b379-4578eade1393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552abc47-c39f-4366-aaef-8f710e6de57c",
        "cursor": {
          "ref": "1634b1e3-684b-4325-8511-863eede783c1",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ca7aebbe-60d7-427d-b8b1-dda7a6c5be89"
        },
        "item": {
          "id": "552abc47-c39f-4366-aaef-8f710e6de57c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "055b874e-4ef0-4372-84e7-02bfeb651363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382a696e-f0fc-4330-a74c-8d839103265c",
        "cursor": {
          "ref": "ed0d905f-23de-4760-a92a-e16e11af2819",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0850f09e-a86d-4b92-aca1-17f9e887cef8"
        },
        "item": {
          "id": "382a696e-f0fc-4330-a74c-8d839103265c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "98ec0f93-266e-482b-84e0-abebbe14a7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30acc1b0-bc6a-4fb7-9b5c-a1455508aa5f",
        "cursor": {
          "ref": "f83f5e0b-3d28-4f64-b534-a51c369c654a",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f9b65d1d-276b-44bf-99d4-2deedcf329a3"
        },
        "item": {
          "id": "30acc1b0-bc6a-4fb7-9b5c-a1455508aa5f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3dd13b96-4887-4ce4-8beb-3d93bae0d8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c58b5b-5d6f-443b-9174-bfebb11206f6",
        "cursor": {
          "ref": "0f99af95-e3f8-4059-bbf6-2a9826afa54e",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0a800371-fcd0-4ac9-870f-10fc7ecbd84f"
        },
        "item": {
          "id": "c2c58b5b-5d6f-443b-9174-bfebb11206f6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f704df23-5829-487a-9a6a-65625c2048ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b31aa7d-4a4c-48c7-8cdd-446afc706e5c",
        "cursor": {
          "ref": "bbfb0173-0973-48b9-afdb-b83e3801f0c0",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e5901eb7-526b-474f-94a1-92104f83cd04"
        },
        "item": {
          "id": "9b31aa7d-4a4c-48c7-8cdd-446afc706e5c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e41569e2-2f9d-4d2d-a266-7e0978372964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a7681a-1b4a-4fa8-9d2c-4f557d631f26",
        "cursor": {
          "ref": "4b09e27e-1764-4d22-8adb-450cbd535f50",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f36e7a51-e40a-4d28-8051-2456b5b62127"
        },
        "item": {
          "id": "f9a7681a-1b4a-4fa8-9d2c-4f557d631f26",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0173835a-a500-4ad9-b7a1-0ca8f6ae68a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95906ea-20fd-4f6e-8a8a-47edc4ef911a",
        "cursor": {
          "ref": "fca0e6f6-1b2d-43fb-95b3-cef5c56df0e4",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fa0a195a-84a1-4f20-af1a-757ad32ff5f2"
        },
        "item": {
          "id": "c95906ea-20fd-4f6e-8a8a-47edc4ef911a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6ffb2d09-9be3-4179-9af4-8712b5eb9e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d6abc9-10d9-4b7b-aace-a7b83558feaa",
        "cursor": {
          "ref": "8ef652b4-d20e-44a7-8a43-04f090da69e8",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d5ae7bfb-4fc4-4c60-9bca-3eee14de39bc"
        },
        "item": {
          "id": "b4d6abc9-10d9-4b7b-aace-a7b83558feaa",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "70fa2cee-7395-4dc0-ae36-c7b9d98605a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d7d6b9-9dee-4eba-b4c7-754f6821c1da",
        "cursor": {
          "ref": "0a6ac2d3-8dc5-43dc-bea7-b9a08dae285a",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6d793885-2a94-48d1-ad24-cb129caaac6e"
        },
        "item": {
          "id": "19d7d6b9-9dee-4eba-b4c7-754f6821c1da",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0dfbd1ce-489a-4ab1-94a9-a917a4bcd998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0120b5b8-31cc-484f-8c7a-49329e368b8c",
        "cursor": {
          "ref": "4a562367-a589-4e08-8216-cfb0da4ad46d",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "27d35dc8-46aa-4dcb-b93e-aa1bc6fa0e0e"
        },
        "item": {
          "id": "0120b5b8-31cc-484f-8c7a-49329e368b8c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c2af0317-856b-4aae-bf5a-bf76472a2cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c62a2de-9fd4-4061-815f-38df0039dc83",
        "cursor": {
          "ref": "0b221ea2-8d45-44c7-9ae0-99d1faaf5889",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "04b867a9-3390-4aa2-9db1-69e36564ddca"
        },
        "item": {
          "id": "7c62a2de-9fd4-4061-815f-38df0039dc83",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0fbe64ee-3b7f-46df-966a-b01a0a6b5744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba929f67-d4ff-4a33-98a0-6b1cb50d7f2f",
        "cursor": {
          "ref": "6faf260a-e729-4eb5-b07f-9fe247730784",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "038eb026-c5b0-4d0a-88c8-e6a1a346e733"
        },
        "item": {
          "id": "ba929f67-d4ff-4a33-98a0-6b1cb50d7f2f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "96474c1f-9283-403e-8a7d-6dc20696440a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c5d369-926b-4e26-8401-ca7a01b0ef21",
        "cursor": {
          "ref": "979dcb5c-f99c-48d5-8475-f0e55958bc06",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "eabb7ccf-94a6-46a5-a840-24aa827ec4c9"
        },
        "item": {
          "id": "a5c5d369-926b-4e26-8401-ca7a01b0ef21",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c439fb95-8eb9-410b-af93-e6a7ce0a6234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7533a927-c80a-4fea-9f01-2f15e8fc8dcf",
        "cursor": {
          "ref": "59b4804b-1e3b-4f0e-8b06-b628e32a7b27",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0a004b05-5a69-4997-bb9a-601390ab73bd"
        },
        "item": {
          "id": "7533a927-c80a-4fea-9f01-2f15e8fc8dcf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e264f270-26b3-488f-b3ce-bd8d65289e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10cfac2-37e9-4fa5-923a-aa469d101c1f",
        "cursor": {
          "ref": "d17ee128-1121-44f2-94ea-d7cb45afdf59",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "21ce5ce0-730b-4492-bcc9-870d1ea592d4"
        },
        "item": {
          "id": "d10cfac2-37e9-4fa5-923a-aa469d101c1f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "08f4e5a9-6df7-4bec-92ff-80917a59bb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95789f44-f7c8-43ea-9156-5a6a700045dc",
        "cursor": {
          "ref": "5408d2ca-1dab-4490-84ed-0213597972b4",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "aefa01b9-c483-4d68-8671-f9d3229136f6"
        },
        "item": {
          "id": "95789f44-f7c8-43ea-9156-5a6a700045dc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fcf2717e-86ee-48a5-9d35-635cd410ccf3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 59,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49ce848-efc4-428f-b6db-3790d7b99bba",
        "cursor": {
          "ref": "f41d865f-c8f4-42ea-bca4-fef49e78b646",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a5a1e410-5c5a-4d85-a895-afda5fabfe8f"
        },
        "item": {
          "id": "e49ce848-efc4-428f-b6db-3790d7b99bba",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "03a1ab98-a1e8-4c7f-802b-30ffe679bba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ff6897-e080-49a9-afc3-399aabf1078e",
        "cursor": {
          "ref": "1784b6a3-df46-4aa5-9919-d7f7d3ce20e2",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "82817f8d-5b23-43da-ba02-a6c503fa2783"
        },
        "item": {
          "id": "83ff6897-e080-49a9-afc3-399aabf1078e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "aacb1802-b6b3-4cd9-83bc-1fa986d27c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecba5ac1-7ef2-407d-8f7a-50869df32c8c",
        "cursor": {
          "ref": "90bf84d1-bd1e-4b34-a726-6bb5e31023c0",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f1631013-81de-4d74-8ef6-73905d5b2672"
        },
        "item": {
          "id": "ecba5ac1-7ef2-407d-8f7a-50869df32c8c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ea482016-9b76-4432-9d34-5c8859ed14c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cbe054-71d3-4548-a55d-aa53cc40840f",
        "cursor": {
          "ref": "24f475af-0273-4ee6-a785-3488a05da1e4",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f4b95bb6-7e37-464e-b75f-66351b6d74c4"
        },
        "item": {
          "id": "90cbe054-71d3-4548-a55d-aa53cc40840f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "47fabd7a-9e2e-4aae-b509-30ec8e7129e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff14df38-084c-4e34-847e-5a4c80bf347a",
        "cursor": {
          "ref": "a3f0f9dd-b487-4c0a-b70c-3239a38fd65d",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4eaaad21-5b98-4cbe-b39e-0c90099f668c"
        },
        "item": {
          "id": "ff14df38-084c-4e34-847e-5a4c80bf347a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "87229d70-6f81-47d9-bc45-ae4483e329c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426c5283-e0f0-45a4-96c9-755dbf328805",
        "cursor": {
          "ref": "8d472eb3-15d4-4be7-9250-9611a5796139",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5e8f1aa3-aa80-4386-865c-998190590f3a"
        },
        "item": {
          "id": "426c5283-e0f0-45a4-96c9-755dbf328805",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "47a1b0bd-700d-4f61-9419-3d5aff3aba33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb07088-58de-4e69-8921-fa9bfd13d867",
        "cursor": {
          "ref": "187634cb-52c2-4bf5-a5e1-298c29e3b372",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5ef461b3-d682-4b23-9977-d7b3a18c13c1"
        },
        "item": {
          "id": "7fb07088-58de-4e69-8921-fa9bfd13d867",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b251a19d-1822-49dc-be57-e6a19895907c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 59,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7e9723-3d53-4d8b-894a-811791e59b45",
        "cursor": {
          "ref": "c988ec81-251a-40f4-9586-e78d667117d2",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c5e2c07b-8551-45fc-92cb-b7e9d79f3504"
        },
        "item": {
          "id": "8a7e9723-3d53-4d8b-894a-811791e59b45",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "219d7085-da8e-41a5-9f66-3c441fa413fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a225dffa-d398-4a99-856f-0efbabe0d3bb",
        "cursor": {
          "ref": "e6b5d3dd-8d02-48c6-a941-70a28d355d70",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "92824143-a341-4705-8af7-ec1c450f70b2"
        },
        "item": {
          "id": "a225dffa-d398-4a99-856f-0efbabe0d3bb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "dfa3c4b3-953c-4174-a7ed-cd67eb231df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc2c0d5-0303-425c-95a1-916a5339e313",
        "cursor": {
          "ref": "462357c2-262a-4dea-9e63-514429696f9e",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b326284b-852a-4a4e-95a3-191acc7a7f5e"
        },
        "item": {
          "id": "5dc2c0d5-0303-425c-95a1-916a5339e313",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "54fb2664-01b6-4fe7-9046-7c3c73c7d582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed73ca5b-55d3-4105-8496-cfb14cfaa767",
        "cursor": {
          "ref": "aa60d4ac-0433-4a3c-81e5-e275b286ea89",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "08db71fe-e2d7-4190-95aa-476e2461975d"
        },
        "item": {
          "id": "ed73ca5b-55d3-4105-8496-cfb14cfaa767",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2b60e741-1a24-43a5-823c-a1d022fd5086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65935cc-8c17-4adc-8a03-16860b2456b9",
        "cursor": {
          "ref": "606803ee-0a26-4ae8-859f-8da5b97cc360",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "46e4dbd3-4252-4d3e-b265-6e7fcf8fcea6"
        },
        "item": {
          "id": "e65935cc-8c17-4adc-8a03-16860b2456b9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c5cce513-d78b-4581-8a1e-959a814676b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54a14ab-3825-4c5f-bc2d-fa16e0afe14a",
        "cursor": {
          "ref": "3760064e-0a41-4e2b-a339-4023348e523e",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "148c0fb6-d6c6-4fef-99f8-4b3a457e9b24"
        },
        "item": {
          "id": "f54a14ab-3825-4c5f-bc2d-fa16e0afe14a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e3961c83-98f9-4012-9f4c-3b12d8abb109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550895f6-f642-443a-a1e2-2e027a60487d",
        "cursor": {
          "ref": "8620da23-db89-4791-8fda-308c402490f9",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "92d20b5f-b5de-4baa-86a3-54127efba362"
        },
        "item": {
          "id": "550895f6-f642-443a-a1e2-2e027a60487d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "597c83fe-0bd3-4255-94e4-f1a4a7870819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbfffc7-4342-46fd-b2d3-64709440d5ea",
        "cursor": {
          "ref": "69f97a16-923b-444d-85eb-cd2f92bc30ac",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "df27001c-54c0-47d8-b8b7-1e5706694bda"
        },
        "item": {
          "id": "3dbfffc7-4342-46fd-b2d3-64709440d5ea",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cc4675c1-0490-4301-8a8e-64ef97026a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811bccde-96f8-449c-86cb-a1d24173aeaf",
        "cursor": {
          "ref": "8964c7b2-1b4b-4bb4-bf1b-942454dcb77a",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b0c4d5d4-69da-4a0d-81e5-e142089efccc"
        },
        "item": {
          "id": "811bccde-96f8-449c-86cb-a1d24173aeaf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fbd03466-5e85-4620-8bad-234af624891b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f324e1f-13a6-477f-8e06-4ae078b5d521",
        "cursor": {
          "ref": "4a9753af-66d0-405e-ace8-ee12fd5c05ab",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "07d0275c-7ceb-4dfa-b6ba-8c13c48e33c6"
        },
        "item": {
          "id": "1f324e1f-13a6-477f-8e06-4ae078b5d521",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f7c89d2c-a31c-4bef-ba32-aacaaa7bb22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2508f4c2-cd4a-4166-a64c-7e8a2bed5d5b",
        "cursor": {
          "ref": "9ff07a29-49c6-495e-b704-11ed0a952aa8",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "08b6a9e2-cae7-45c2-827b-f176d968a69b"
        },
        "item": {
          "id": "2508f4c2-cd4a-4166-a64c-7e8a2bed5d5b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f12ccf9f-64b8-4bd9-acec-6c7e0781d95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ded847e-38a5-4569-bd6d-1806782d547a",
        "cursor": {
          "ref": "bc5794d7-e218-4aaf-a0ec-0daf8f8d874e",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e409ba9c-0cd7-44f1-af5d-335b1dfc95d5"
        },
        "item": {
          "id": "0ded847e-38a5-4569-bd6d-1806782d547a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1ef5f14d-e25b-42c3-a17b-9c008d76bbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02861994-23a9-4086-a792-045e8b7273ae",
        "cursor": {
          "ref": "85c30e35-34cf-4459-91b4-4bbb196ea4e6",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "167d570b-460e-4ed1-bb85-efbd2d871978"
        },
        "item": {
          "id": "02861994-23a9-4086-a792-045e8b7273ae",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7b9eac66-0c4c-4fca-bfdd-2d66710bfd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269306e7-17bd-48c7-a925-8f2ead4c1bf1",
        "cursor": {
          "ref": "dac8d521-b6ae-4a3c-877f-ceaf6c14c118",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "48b21730-585a-47f4-9f75-0f0b64aafbbe"
        },
        "item": {
          "id": "269306e7-17bd-48c7-a925-8f2ead4c1bf1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a6de6192-9d52-46b5-a7ef-e3dbfa87d6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a058dd8-3343-4743-8c48-1e23c72dd18c",
        "cursor": {
          "ref": "a7456a47-8c7d-49c7-93cd-b15727b9dd6a",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f6f3fac6-5d91-4852-b542-dcd3eeb5ac07"
        },
        "item": {
          "id": "9a058dd8-3343-4743-8c48-1e23c72dd18c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "776cf6bf-def1-4825-b6d3-0283c6a0e894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c255b50a-5770-472e-b595-911e1db2f0dc",
        "cursor": {
          "ref": "5cd4b574-0233-4ea1-9097-79bcc8c3d619",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7ff6ef81-7106-43b1-bb84-899f8711e8e5"
        },
        "item": {
          "id": "c255b50a-5770-472e-b595-911e1db2f0dc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cf593a6b-ef34-40ab-a2db-daa978d42f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a3dd85-898f-4d6d-be1a-47c6f72d71ce",
        "cursor": {
          "ref": "59ef9887-6a39-4b40-8c4e-01e1613c40ee",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5c7526e5-2532-48d8-85da-768aec2215cb"
        },
        "item": {
          "id": "a7a3dd85-898f-4d6d-be1a-47c6f72d71ce",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "387dcfba-193b-4154-8ee4-65a2edb0a4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92fc2e9-131f-41d9-919e-5737b238e991",
        "cursor": {
          "ref": "287fa216-2da1-4f8e-a786-af282c60290f",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f9eaa85b-c2a1-4f68-b9b9-7541849200a7"
        },
        "item": {
          "id": "d92fc2e9-131f-41d9-919e-5737b238e991",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1b17556b-9d18-4fe2-a12d-a545ae1ad1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfe3f82-552f-40e5-8f45-757db25daa38",
        "cursor": {
          "ref": "016d4ec3-e36f-4dce-8167-f611dd68b9f0",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e9017d3c-e8e8-44d8-a9db-b1a78f5eb67f"
        },
        "item": {
          "id": "abfe3f82-552f-40e5-8f45-757db25daa38",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a663b924-5a19-497a-9558-870bed96de96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a435152-ca65-41f2-bb8c-53b76c596c98",
        "cursor": {
          "ref": "abab27ca-54cc-4954-b706-7fabdb597f62",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4d05674f-76af-4a7b-a88a-3fd82ef76f7f"
        },
        "item": {
          "id": "9a435152-ca65-41f2-bb8c-53b76c596c98",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6710d933-b071-428b-873f-fed3f85c9b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3fead4-7d54-45d4-962a-b369c2d383e2",
        "cursor": {
          "ref": "f6fd1b63-7a88-43b1-99ec-2ea8e69c30d1",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9e251f96-6940-4a27-863e-ec152bce4dd5"
        },
        "item": {
          "id": "7b3fead4-7d54-45d4-962a-b369c2d383e2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bcb478bf-54f6-4cc6-986b-ed46a24303a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e7af39-f739-446f-95f3-7e904342f7a8",
        "cursor": {
          "ref": "02a78e2b-5bf6-4450-bde2-29294c184d85",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0034ac47-ada4-4c39-9dd3-6fcb52ad3b3e"
        },
        "item": {
          "id": "c0e7af39-f739-446f-95f3-7e904342f7a8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8b31575f-6c87-4be2-969f-235212de047e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a94740-7e54-4712-bb4a-c322100af70e",
        "cursor": {
          "ref": "116ce363-8775-435c-a711-bba1b5550f1a",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b2617a74-78a9-4cc5-9510-4a01b9d6ad1c"
        },
        "item": {
          "id": "04a94740-7e54-4712-bb4a-c322100af70e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "601223b1-fd98-4bdf-ad40-4bb8529d253e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5ce512-f523-4034-9c48-ae1571f289d5",
        "cursor": {
          "ref": "e6b79feb-ef30-42a9-b94d-729ad5dfa74b",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "352bab4e-d4c3-440d-afb9-94b00aa4f77d"
        },
        "item": {
          "id": "da5ce512-f523-4034-9c48-ae1571f289d5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "db9d3f3f-01da-405a-9fbf-f9fd0f99b51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c1451f-f7b8-43cb-9998-37ae8c883b97",
        "cursor": {
          "ref": "dc7b79fe-deee-4a0a-8ae6-9edc2a3bc77a",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5acef6c0-dbf4-4dd4-8cfe-431ed8fdb589"
        },
        "item": {
          "id": "e6c1451f-f7b8-43cb-9998-37ae8c883b97",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f0dea1ab-9d24-4a60-b7af-3b97d61d0a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fec006-f480-4242-bca4-28a8e95084b1",
        "cursor": {
          "ref": "e3faba23-d123-4658-82bb-8b6a3da58da3",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3ca68ea0-b18b-47c1-a093-5e8f9112ee37"
        },
        "item": {
          "id": "98fec006-f480-4242-bca4-28a8e95084b1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f7732bdc-84c9-479c-9be4-4f8fc64ee719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c0a3f1-193d-46c2-b661-6aa5dc778467",
        "cursor": {
          "ref": "42ce5754-e1db-4d8c-87bf-d2cdbe02068e",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "33c3622c-dd5a-4330-a4df-d332a228815c"
        },
        "item": {
          "id": "08c0a3f1-193d-46c2-b661-6aa5dc778467",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "411ce2f9-b016-4935-82c2-9f9f5e5ded91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc26f255-6281-4fe5-8c50-b2ef1ba17768",
        "cursor": {
          "ref": "daa2700d-a352-422e-8293-b82881617622",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "40635c6d-2138-4e4b-b7ee-560691fa3cfd"
        },
        "item": {
          "id": "cc26f255-6281-4fe5-8c50-b2ef1ba17768",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fed743fb-c58b-4ecb-a931-1e521e40a0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5d3890-b15d-4bee-a6fe-519cc3c728df",
        "cursor": {
          "ref": "2657a9e7-d8d3-4990-bdc7-43909edb0a64",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "efb3f8ea-609d-4ee4-aec7-a9586c8f8bc9"
        },
        "item": {
          "id": "cd5d3890-b15d-4bee-a6fe-519cc3c728df",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8ba2eee3-a5a2-4f1f-9b77-911bff592f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a29d7b-76d3-4328-8f80-5a4534f90210",
        "cursor": {
          "ref": "e3845c37-2561-4dbd-93e3-e05fc2ca1061",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5162c160-57b3-4379-83e8-12e45263e3e1"
        },
        "item": {
          "id": "62a29d7b-76d3-4328-8f80-5a4534f90210",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fdde4876-9b7a-4663-9be6-a93806199a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5ae22a-156a-422b-a17c-aaa2aa9454fa",
        "cursor": {
          "ref": "56129886-1e75-4305-b7cf-0605a1e1e6d0",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "de4c2204-62e8-44eb-8817-b0d2e7ec9c9f"
        },
        "item": {
          "id": "bd5ae22a-156a-422b-a17c-aaa2aa9454fa",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4b850f95-3d0e-4507-b258-ccb90c301739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805562db-8dae-48fb-9d36-81e94e159718",
        "cursor": {
          "ref": "639da15e-66a0-4b32-9ff0-2b7928672036",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "16b6912f-1039-4417-8629-c5a298ee086d"
        },
        "item": {
          "id": "805562db-8dae-48fb-9d36-81e94e159718",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "aee7bc04-fc4f-4a56-bf9d-de15579be310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790d7627-f680-4800-b912-00332b16bc97",
        "cursor": {
          "ref": "aebacebc-9fc4-4890-a0c4-83d2aa4293e9",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "967d7577-27b6-42bf-a451-82d4614750a7"
        },
        "item": {
          "id": "790d7627-f680-4800-b912-00332b16bc97",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2907672f-ca81-430b-a4ad-de0eb2b92d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad53a618-e07e-4145-9f14-6c4e9654f34b",
        "cursor": {
          "ref": "a7ee00b6-d90b-4b38-9ac7-4ab2368d9852",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8fad550a-9c49-4b4c-8cfd-27c958a93ffe"
        },
        "item": {
          "id": "ad53a618-e07e-4145-9f14-6c4e9654f34b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5f75cada-e967-4c79-a70d-5c788b1a8864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05336b4e-baca-4ce3-bf98-2b692ddbf610",
        "cursor": {
          "ref": "29d089b3-b3d7-4370-b59c-74bb2ef62cb3",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e03c12f9-acda-47fc-816e-b9c93fdaf7ad"
        },
        "item": {
          "id": "05336b4e-baca-4ce3-bf98-2b692ddbf610",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c8a5969a-03ef-4fcf-8619-b89601de68bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e5ba41-14cc-4429-9f03-5abe2d98d322",
        "cursor": {
          "ref": "f00567ee-29f1-4cf1-b8d7-40fc64b2d11e",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0335dc37-dda0-4121-8734-6ee1f0ecd04a"
        },
        "item": {
          "id": "b1e5ba41-14cc-4429-9f03-5abe2d98d322",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3e3864dc-37c6-4e7d-bfd6-cc5edee72115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2e255e-0a90-4458-8234-f98c77a9dd11",
        "cursor": {
          "ref": "ecb4d93a-6b95-4e68-bd0e-3996a126934a",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "caf33284-1329-4b4c-8662-643893a11717"
        },
        "item": {
          "id": "ad2e255e-0a90-4458-8234-f98c77a9dd11",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9becd7e7-fa33-4527-a672-333b63f588bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e2ac69-d812-4b37-8c4e-c333c1cee1b3",
        "cursor": {
          "ref": "347c2c92-953f-4a8b-9252-24bcaa3802af",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5bee5937-f1f6-44e5-bb0b-f8820b1c52e6"
        },
        "item": {
          "id": "f3e2ac69-d812-4b37-8c4e-c333c1cee1b3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ba8a280c-3979-4ffe-b9a5-b3924ef826b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332312e4-2f0e-4732-9ed8-4f4bc73f72f4",
        "cursor": {
          "ref": "f7697014-7b0a-4fa7-a021-a8a378ea9ad1",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5097e5a8-29ed-4a59-854c-d9045aeadc11"
        },
        "item": {
          "id": "332312e4-2f0e-4732-9ed8-4f4bc73f72f4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5bb99888-428d-4d6e-aebc-f421816d3798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0775ca0-aab6-4425-934e-d4e094aa50f0",
        "cursor": {
          "ref": "c8260720-ee50-4a48-aea1-fdf1eda95128",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "77a981ae-303d-4f00-884b-5cff9ae2a974"
        },
        "item": {
          "id": "b0775ca0-aab6-4425-934e-d4e094aa50f0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e593cfad-b4dd-42b6-9994-ac17eae961f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3a6ef7-4845-466c-b19b-f8af85e725b5",
        "cursor": {
          "ref": "61c6e86c-14f0-4c6d-b86f-4422426d90a4",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "613105c4-b322-4071-84b2-1ad569ea1ff4"
        },
        "item": {
          "id": "7f3a6ef7-4845-466c-b19b-f8af85e725b5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8edd09b1-ca02-407b-9751-b4ccda768013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078dabb7-faa0-430a-abde-ec1d30ffa3d7",
        "cursor": {
          "ref": "39c3c508-e7c4-45df-bd89-c585ef81ba57",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2fe32945-c74e-438c-91f1-1271b617a0c8"
        },
        "item": {
          "id": "078dabb7-faa0-430a-abde-ec1d30ffa3d7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "57ea8d89-d02f-4093-86b4-7bc4927dc678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b840b2c8-ac62-459d-ad93-679a9df485e7",
        "cursor": {
          "ref": "53610add-53b8-466c-ad0c-50c67b247e9e",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "80421feb-a2d8-44bb-9eba-ad6526172a7f"
        },
        "item": {
          "id": "b840b2c8-ac62-459d-ad93-679a9df485e7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c637912b-2193-4774-a133-b6f266bedc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf878d6a-99d8-4e55-be81-583cea5cd72c",
        "cursor": {
          "ref": "b07b0785-82a5-4943-aff0-e00adc33c896",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f24dc0a7-c4a6-4026-bcdc-7277fe098a13"
        },
        "item": {
          "id": "cf878d6a-99d8-4e55-be81-583cea5cd72c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a4b4201e-144d-478d-9233-075a66598b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccf1b61-ce73-4e42-9b06-ca90d6214ebf",
        "cursor": {
          "ref": "485c690c-f0c2-449d-a8ea-7b24c78cd8ef",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d0dd8e1e-541a-4472-9ec0-f1f5f747b8bd"
        },
        "item": {
          "id": "5ccf1b61-ce73-4e42-9b06-ca90d6214ebf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e4d5c831-0ac6-47ec-a468-e3299763ca5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2683266d-5835-456f-b7de-f502c73ca815",
        "cursor": {
          "ref": "4f76856b-dcfc-4a2f-ae86-17a2d3a1c3c0",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d1771419-145d-4f19-8436-430a3abc1b67"
        },
        "item": {
          "id": "2683266d-5835-456f-b7de-f502c73ca815",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9f58a900-aa79-4311-8790-05a5c45f1764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32440da8-c9ee-43ea-ac48-9cf7678e0036",
        "cursor": {
          "ref": "53f0bb3b-db4b-488d-ad8b-fccb856c38f4",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e590bcdc-b806-457b-b874-83844ca74e7c"
        },
        "item": {
          "id": "32440da8-c9ee-43ea-ac48-9cf7678e0036",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3dcf42f5-c1d6-41fc-b904-8f7c4b36f214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7918f010-e176-4bf5-b2c7-00f06c573de4",
        "cursor": {
          "ref": "a3c911a1-10d7-4c27-a2fe-e5336c7a356b",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "57d81be8-3102-462b-96cd-833e43c4b2d2"
        },
        "item": {
          "id": "7918f010-e176-4bf5-b2c7-00f06c573de4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9c8cd08f-d213-4eeb-8001-4ea146df911b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5731d5a-e974-4730-bac6-c080a14ed860",
        "cursor": {
          "ref": "4163450f-4924-4c20-a96a-689452655d80",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dd940819-4082-4d2f-9121-9eb67c7a5d0c"
        },
        "item": {
          "id": "d5731d5a-e974-4730-bac6-c080a14ed860",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c810cb9f-f8d3-45c4-9ab3-228bf89f2c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c415f673-30f3-476a-bfa8-1efd6305906d",
        "cursor": {
          "ref": "d1bb8954-612e-4ab3-8faa-0ec7457a775e",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7afddc25-2af2-426b-b6bf-04f79773d14e"
        },
        "item": {
          "id": "c415f673-30f3-476a-bfa8-1efd6305906d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "38e7264c-bb0c-410f-9a6d-4295dbdd2063",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de71b294-d0c8-4721-af23-a6d7210c3a9a",
        "cursor": {
          "ref": "d728d1da-2e55-476c-8987-1c2d20eca906",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8163ebd7-41af-4681-80ef-b5a67ac739c6"
        },
        "item": {
          "id": "de71b294-d0c8-4721-af23-a6d7210c3a9a",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "7a6667ce-65a5-4788-a0d6-4783ed4806c8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 146,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ba8450-5a79-4d6c-bda6-d60a1295628f",
        "cursor": {
          "ref": "23662231-271b-46ff-9a52-96800256b14e",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "302cfefe-9d66-4d8e-b29c-aaf6cc1be0b5"
        },
        "item": {
          "id": "73ba8450-5a79-4d6c-bda6-d60a1295628f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c0681769-40c9-404b-aefb-7f7f632ce586",
          "status": "Created",
          "code": 201,
          "responseTime": 71,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "884dcb86-0cf1-4b40-be66-fe8ec22d0953",
        "cursor": {
          "ref": "7c85bf1a-f2da-4e68-baad-a2ad9a2871a7",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "00823238-0f9c-478a-afa2-c2164731058b"
        },
        "item": {
          "id": "884dcb86-0cf1-4b40-be66-fe8ec22d0953",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "479f0fe3-3e4e-453b-887a-8135fc4ac0bb",
          "status": "Created",
          "code": 201,
          "responseTime": 110,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27fc8ed-7d54-4808-8168-785f5fe06a3d",
        "cursor": {
          "ref": "64b96146-da03-40bb-889c-6a0cadb7cfb0",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1d3b9671-3315-4419-8653-b3728a9f31e0"
        },
        "item": {
          "id": "f27fc8ed-7d54-4808-8168-785f5fe06a3d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "de6c54da-75bf-424d-a422-9e8005a4636b",
          "status": "Created",
          "code": 201,
          "responseTime": 68,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "437d49f3-0765-4007-9867-84dc342972d2",
        "cursor": {
          "ref": "ef959a6a-cf48-4ad9-b941-54bae1ec72a3",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "dd5b4dbd-dda3-49d8-a4fc-ebb6e3869c41"
        },
        "item": {
          "id": "437d49f3-0765-4007-9867-84dc342972d2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "98844d31-c5bb-401e-bf18-f6c70b5f8a8b",
          "status": "Created",
          "code": 201,
          "responseTime": 68,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f230c316-e5b2-43fb-ab19-52d483054d62",
        "cursor": {
          "ref": "8827e03f-8867-4abe-ab5f-630fe0124104",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "73c7e02c-0335-45a2-a35e-e2b13eb2ad5d"
        },
        "item": {
          "id": "f230c316-e5b2-43fb-ab19-52d483054d62",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e0e7e471-2240-4d31-a1b5-2a762d66c8c4",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cbeacd-18d6-475c-91eb-20e0e2c14ded",
        "cursor": {
          "ref": "1d8852c9-600b-4397-9eab-fe09edbd3122",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c2c930d3-2750-49e9-8735-4a9ab8be7057"
        },
        "item": {
          "id": "b3cbeacd-18d6-475c-91eb-20e0e2c14ded",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b8878db3-0be1-4dab-b93b-68f6625c200e",
          "status": "Created",
          "code": 201,
          "responseTime": 68,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c60198a-39f4-4243-b678-e1f544733bf0",
        "cursor": {
          "ref": "501af85f-ad6f-4ea3-8c63-8a1345ff0b21",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4e81db33-d2d8-4f3f-8ff4-a2a09ca52a71"
        },
        "item": {
          "id": "9c60198a-39f4-4243-b678-e1f544733bf0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "929b39c8-17c6-4aa5-b49e-d1763b0029e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c60198a-39f4-4243-b678-e1f544733bf0",
        "cursor": {
          "ref": "501af85f-ad6f-4ea3-8c63-8a1345ff0b21",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4e81db33-d2d8-4f3f-8ff4-a2a09ca52a71"
        },
        "item": {
          "id": "9c60198a-39f4-4243-b678-e1f544733bf0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "929b39c8-17c6-4aa5-b49e-d1763b0029e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c675b8-cce2-4b49-ac22-672b08df9d39",
        "cursor": {
          "ref": "5fa87dfe-a818-4abb-b487-d8320d6ebe70",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ec7b9dce-6869-458a-a089-d89042ff662a"
        },
        "item": {
          "id": "b8c675b8-cce2-4b49-ac22-672b08df9d39",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ed183519-0447-4efa-a7ce-5aaa1ac838bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962091bf-982a-46ec-8a63-c277a7e266a3",
        "cursor": {
          "ref": "020302ec-2b96-4bb0-85f9-352bfae9a6cb",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "da906b61-0e74-4e6f-b07d-2c4c94c66f6a"
        },
        "item": {
          "id": "962091bf-982a-46ec-8a63-c277a7e266a3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7077bf32-5cf8-4095-a01c-a600916777e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87f2274-2c77-4352-88f2-09f797869a18",
        "cursor": {
          "ref": "1ce7dc14-4cd2-42e3-93ef-0b4d679ad9d2",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1c14e107-3046-4c2c-814b-e809e1dff71b"
        },
        "item": {
          "id": "e87f2274-2c77-4352-88f2-09f797869a18",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "72d1171a-d539-4eb6-9ca5-a521d5d9d631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b262be52-42ee-40b7-9345-8261855e6dca",
        "cursor": {
          "ref": "bcfb1515-05cc-4ba8-9286-c102a6a7e9cf",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d9cd8658-ce2c-4b7d-8f0a-241255259581"
        },
        "item": {
          "id": "b262be52-42ee-40b7-9345-8261855e6dca",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c4c00fe8-6539-40d4-9668-f7771d51fa75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354c51fd-e7bd-4be1-8b60-470ee951c05c",
        "cursor": {
          "ref": "51ab7101-7345-4834-a60f-ca460aa59a01",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f9f6c45a-718e-478e-b05f-b288a1b38876"
        },
        "item": {
          "id": "354c51fd-e7bd-4be1-8b60-470ee951c05c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "15370369-f90e-4d92-88fd-11a476130a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a621547e-bdec-4b7b-b9ed-76f0a0f6043b",
        "cursor": {
          "ref": "c7564aad-8800-4652-9548-f707e5196840",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "63b25465-7a43-46c3-b297-94763a8159f4"
        },
        "item": {
          "id": "a621547e-bdec-4b7b-b9ed-76f0a0f6043b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "58c2c634-6dd1-4636-a0a7-4c4730629e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e717ec13-bd55-456d-855c-4bf16867d376",
        "cursor": {
          "ref": "c423ed47-adef-4a8b-bb3d-eaa15be1218f",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9d9b2ce4-1549-47d6-af77-562d0ee864cb"
        },
        "item": {
          "id": "e717ec13-bd55-456d-855c-4bf16867d376",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "572ba3dd-9645-4a78-81f8-3531592b68dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b715c0-954c-4093-8825-8f3ed53e244d",
        "cursor": {
          "ref": "0cdc75d9-10a7-4785-986b-62518da87e15",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4b48e1a4-90c5-4aca-94a9-c42d2833c5eb"
        },
        "item": {
          "id": "e4b715c0-954c-4093-8825-8f3ed53e244d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "05c91721-406d-4340-b980-c64038af2ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2e4b2d-421f-43c8-82b6-15a311207da2",
        "cursor": {
          "ref": "12ca045f-c55d-4cf4-a8c8-eaa4f72c614b",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1d622206-507c-4d38-8a27-0e27c4542efb"
        },
        "item": {
          "id": "1d2e4b2d-421f-43c8-82b6-15a311207da2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6c4949e7-03de-4a75-b7ba-b72400025bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d42252-8f74-4824-b74e-15bf6e8c7291",
        "cursor": {
          "ref": "6598fdb7-3a0d-49ab-b009-12b0b3c69b3a",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4303201b-8a83-4fb4-95af-0eb2ced75842"
        },
        "item": {
          "id": "47d42252-8f74-4824-b74e-15bf6e8c7291",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "77d8c689-84a0-40f7-bc66-ab98916d76be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12eff806-150e-4b91-ac2a-a6ec1dbd7c72",
        "cursor": {
          "ref": "ab6c89b1-eec2-4078-971d-c997c118fc08",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a0245cb3-0524-422a-86b2-fccb81153c17"
        },
        "item": {
          "id": "12eff806-150e-4b91-ac2a-a6ec1dbd7c72",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "87b96a47-3d3d-45ec-a83e-5adab89dac78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091b89c0-ad10-4b24-897d-f447349d76c9",
        "cursor": {
          "ref": "bcf58d15-1f4f-42c6-ba83-8d3053263a83",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "05ae4c8d-a57e-414d-bd9e-1d808201676d"
        },
        "item": {
          "id": "091b89c0-ad10-4b24-897d-f447349d76c9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "23f34ded-407f-4ff3-ae7c-19e1991730f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c553ea8-fac4-4551-b1c2-a126211950bb",
        "cursor": {
          "ref": "df2e5184-dd0e-4e3e-8182-1b243f1588e5",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "80f9f244-b08a-42a2-96a7-942afcdd8053"
        },
        "item": {
          "id": "9c553ea8-fac4-4551-b1c2-a126211950bb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "932e187e-9eee-430f-ad42-cbb9474387bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfe28ec-5218-4dca-a622-7e683462e185",
        "cursor": {
          "ref": "57d64e64-abab-41de-bbde-2c460e402508",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1eb03bfa-4c10-4f4f-b82c-0dbaeb193f9a"
        },
        "item": {
          "id": "abfe28ec-5218-4dca-a622-7e683462e185",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c9b61168-aa81-453a-bab8-f18f543cdbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cd1138-5ecd-4a20-a42e-387be1fa96ea",
        "cursor": {
          "ref": "ae6b6382-cdb1-4b69-b2cb-66d5eafed982",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "912b7aa2-26da-47ca-8ab2-e0bfe0fba9d4"
        },
        "item": {
          "id": "61cd1138-5ecd-4a20-a42e-387be1fa96ea",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fba8f5f4-2846-40c5-988b-1a2062b8229d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187f7be5-ae07-4bb4-bb77-bd1589be91bd",
        "cursor": {
          "ref": "8741099c-d87c-4bec-b1f5-04c72e8a6ea0",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "02d63ee2-92e7-4424-a1a2-bdd5dde1bc99"
        },
        "item": {
          "id": "187f7be5-ae07-4bb4-bb77-bd1589be91bd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "57a06136-497c-4a01-946c-2b224126f266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6b9f2e-08f7-459a-8907-170b0734b90c",
        "cursor": {
          "ref": "b6a60654-f05b-4d69-9b99-eb17a95aeace",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "898240d4-4005-428f-9296-91d2e24b792f"
        },
        "item": {
          "id": "fd6b9f2e-08f7-459a-8907-170b0734b90c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "57cc6f64-f1e6-4cbd-8f39-f10cedcf43af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724926b1-cda4-41b4-a992-71125847dca8",
        "cursor": {
          "ref": "012d6e3b-6fde-4285-9ede-4f91c7de6263",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8e77d98a-3d20-4770-b2a9-7f3292e98699"
        },
        "item": {
          "id": "724926b1-cda4-41b4-a992-71125847dca8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "047b7eec-fe5e-47d4-9bb0-b286f88c19f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd41a0ac-dc8c-4320-8166-14801ad1828c",
        "cursor": {
          "ref": "be3e0872-b31f-4ebd-8458-1096e128a68c",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5e2447b3-3956-4f6f-82d6-0b90f1b1051c"
        },
        "item": {
          "id": "fd41a0ac-dc8c-4320-8166-14801ad1828c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fd832c54-2bb5-4dfb-ae92-48732e986023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f65cc0-9b9e-4524-9734-3e5228b24094",
        "cursor": {
          "ref": "cf137f8b-89a9-4bc3-875b-7190a8cfe8bc",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "36e6cfab-7011-44f3-bea0-775a792110b8"
        },
        "item": {
          "id": "f9f65cc0-9b9e-4524-9734-3e5228b24094",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dfb8f31b-09cb-4c44-bd09-b35e8773015d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cc4206-c111-4c79-88cf-33cf75ac82b1",
        "cursor": {
          "ref": "305c7175-b749-4ce5-81fb-7ee33b2e53f0",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f5da917d-d4d4-4e1d-96f1-5d97c5ba6b66"
        },
        "item": {
          "id": "70cc4206-c111-4c79-88cf-33cf75ac82b1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1bee60cb-5d9f-4b73-8714-37fd58bb1db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4579dd-3ad7-4ee8-88e8-5e69099c4826",
        "cursor": {
          "ref": "4f54d886-29d2-4030-be9a-867fd2176763",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5c496ea0-717c-4ab1-8692-1dce2a45c508"
        },
        "item": {
          "id": "3b4579dd-3ad7-4ee8-88e8-5e69099c4826",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "48077a41-6a3f-4ccd-bb96-cec0dfb6eb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e2aa26-8a73-4566-9a33-21088b7b17ca",
        "cursor": {
          "ref": "90607e99-d5e7-445d-aad4-1de736d679fd",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "54fb10bb-c7f5-4de2-a5aa-fd4a8294e47e"
        },
        "item": {
          "id": "d9e2aa26-8a73-4566-9a33-21088b7b17ca",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2279eca2-65bb-4da7-8cef-8cbae907d29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4b6c12-006b-45aa-8286-d973326ac1a8",
        "cursor": {
          "ref": "8add9644-a2ee-4146-b577-ab13a8f65a0e",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9288ff91-eecf-4549-ab6f-3087feccc901"
        },
        "item": {
          "id": "9c4b6c12-006b-45aa-8286-d973326ac1a8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7e01f7ae-2002-4983-be5f-85abe31f69f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498d3d8a-4aa4-419e-b42f-ce399e6001b2",
        "cursor": {
          "ref": "2a96e875-8543-4202-bcd1-794e5638c1fb",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8b554eeb-4274-46f5-b55f-ca919455cb72"
        },
        "item": {
          "id": "498d3d8a-4aa4-419e-b42f-ce399e6001b2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "22641db8-dd99-435c-81ec-20f772679e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dcfded-5a77-4abe-af8d-161e8d20b71f",
        "cursor": {
          "ref": "78a0e7ef-b685-4e83-bff6-3adefcb9bcb9",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "406b1d61-c607-41d2-b5ac-f1ea54437d58"
        },
        "item": {
          "id": "16dcfded-5a77-4abe-af8d-161e8d20b71f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "924888d1-e493-426f-83c7-4815e461ffaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1852cc9-11ef-4142-bcb4-906d34823579",
        "cursor": {
          "ref": "2fc2198d-2935-4498-81ef-d112f7456117",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fd9e6549-b953-4440-9044-0cc0f8abf79a"
        },
        "item": {
          "id": "e1852cc9-11ef-4142-bcb4-906d34823579",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0ce2e809-5554-493e-93df-3016ac547f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd52877a-84e7-4ae5-ac30-ed395f89737f",
        "cursor": {
          "ref": "de891be3-10cf-430d-af5a-d14767b45caf",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cd4e8658-0885-45f1-9bcb-5c128afa23cf"
        },
        "item": {
          "id": "fd52877a-84e7-4ae5-ac30-ed395f89737f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fa6a7295-da5c-4f7c-838c-9747caf2b055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784bde0b-73ec-472a-8552-4b21df7e119a",
        "cursor": {
          "ref": "50d53626-19e5-45c6-ab4d-48e64900c75a",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "087fbb62-b544-45b7-ab81-206fb5c072fe"
        },
        "item": {
          "id": "784bde0b-73ec-472a-8552-4b21df7e119a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "af424974-c78a-468e-b022-ca6a940e2688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775967d7-bb50-4bfb-8c08-b63e8928179a",
        "cursor": {
          "ref": "2e2aed02-79c4-4bc5-a418-ad735b0f7afb",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3b7b73b0-a2b6-4aeb-b9eb-2b54cfb231f4"
        },
        "item": {
          "id": "775967d7-bb50-4bfb-8c08-b63e8928179a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a8cb78fd-3851-4807-b5d8-69174791ca1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d491a8-fa4f-4861-8d5c-aa53e8d7e4bf",
        "cursor": {
          "ref": "e73df30a-4ae0-4549-b73e-49cd41f7f1f5",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "06cd2646-4c53-485f-976d-23f6c868fd7f"
        },
        "item": {
          "id": "00d491a8-fa4f-4861-8d5c-aa53e8d7e4bf",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1c7b0a55-1856-4e22-b2c1-414296fe2c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde64946-bbc5-4239-b01e-f39c12e812f4",
        "cursor": {
          "ref": "b2f41ffc-f10d-4357-83ae-cd81db602d1d",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "46f1a9b7-7af4-4160-87a7-307afedc1c7d"
        },
        "item": {
          "id": "cde64946-bbc5-4239-b01e-f39c12e812f4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6f7eaa93-9606-4749-9dd4-aa2429710c3e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411fcaac-f8b1-4518-aa13-14e23fe4c597",
        "cursor": {
          "ref": "9c648036-dc72-4ac5-8f99-01520c82b011",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2e284868-e764-433c-875a-eda94c593fa0"
        },
        "item": {
          "id": "411fcaac-f8b1-4518-aa13-14e23fe4c597",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "4bd122d7-6ced-40e5-b712-e14da8debaab",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 49,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bb39fc-12eb-409b-9354-85c8cefcdde7",
        "cursor": {
          "ref": "3e73e361-a205-474b-8ae5-daf0c7c6881a",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5c52af44-9305-466a-995e-118a75618db5"
        },
        "item": {
          "id": "20bb39fc-12eb-409b-9354-85c8cefcdde7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fe773ba2-19d7-47d3-b15f-912502e268ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bb39fc-12eb-409b-9354-85c8cefcdde7",
        "cursor": {
          "ref": "3e73e361-a205-474b-8ae5-daf0c7c6881a",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5c52af44-9305-466a-995e-118a75618db5"
        },
        "item": {
          "id": "20bb39fc-12eb-409b-9354-85c8cefcdde7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fe773ba2-19d7-47d3-b15f-912502e268ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fb8d94-5d44-4042-adf0-afdccac62894",
        "cursor": {
          "ref": "b02af389-8214-4400-ac1e-e02569da85df",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f7545b4c-b53e-4bfd-8b21-a3d97a4bec79"
        },
        "item": {
          "id": "00fb8d94-5d44-4042-adf0-afdccac62894",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4ae5c9bc-f6fb-47a4-8851-7cb46ba96072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c4ae8f-f7ea-41a2-b317-1a020f6b8c18",
        "cursor": {
          "ref": "4dcca777-e1a1-40dc-b5e9-55ff026d6518",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "43733795-ed09-466e-aa2c-2308323872c6"
        },
        "item": {
          "id": "b9c4ae8f-f7ea-41a2-b317-1a020f6b8c18",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "93ee5359-ca1b-4764-bc9a-d61a10e719c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231bd475-58b9-4dda-8bf8-094c14b97d5a",
        "cursor": {
          "ref": "66afd492-b05b-403c-b076-d83eccf025a1",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "01013b6d-15d0-4a6d-8cb7-c34769f5f07d"
        },
        "item": {
          "id": "231bd475-58b9-4dda-8bf8-094c14b97d5a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b9d57546-2985-40ae-8395-e37b7d528797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39caed04-9c75-4333-a482-ecd7da3a0644",
        "cursor": {
          "ref": "36d509c6-ebc2-426b-8f54-dedb330a78e6",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e18e8447-b560-4c8f-b3a0-06bef9595031"
        },
        "item": {
          "id": "39caed04-9c75-4333-a482-ecd7da3a0644",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c0a9a84b-327b-445f-99cb-caf34d0c8aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232cac30-5e8f-4dde-bdd8-8b61761ca812",
        "cursor": {
          "ref": "e6407990-447a-424e-a2c0-10b95b106304",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e1fdd703-88b5-44d9-81fb-1b601b35dd9b"
        },
        "item": {
          "id": "232cac30-5e8f-4dde-bdd8-8b61761ca812",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e9510c4c-41cb-48c4-875a-114d6a105947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831ec0d9-8beb-4d08-b606-66744368596c",
        "cursor": {
          "ref": "92ffaaf1-ebc3-4079-99ba-8559934bdb45",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a861ebed-e8bb-43cb-807b-c2a32ebb9e88"
        },
        "item": {
          "id": "831ec0d9-8beb-4d08-b606-66744368596c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6adb326c-10c0-4f58-bd27-a177b862eeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d81559d-9f91-4327-8d98-c43f97c8beeb",
        "cursor": {
          "ref": "b6388738-37bd-470a-88cf-247451de3c0c",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "202b38c3-04f0-4fb9-aff8-1bddf07e03be"
        },
        "item": {
          "id": "8d81559d-9f91-4327-8d98-c43f97c8beeb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2e72a737-72be-4e59-966c-d8e4ec1660e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dbadaa-6c1b-4af7-b0db-fe47d0733de3",
        "cursor": {
          "ref": "0d2a0d0e-d7ba-4b69-8f9b-e212eb305cc4",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e52c4112-e66d-471c-bb3b-eb9dcd62c917"
        },
        "item": {
          "id": "61dbadaa-6c1b-4af7-b0db-fe47d0733de3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ef0f81b1-1931-43a3-ba4e-f71b0622a2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd0b3df-f36c-4a43-a2c8-10a4cbb00cab",
        "cursor": {
          "ref": "7da5305b-7626-4e41-bedb-00879149e2e7",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3829dafd-a3ee-480c-a928-06b653302773"
        },
        "item": {
          "id": "dfd0b3df-f36c-4a43-a2c8-10a4cbb00cab",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "eab5b5ce-5965-4503-8a1f-176bb5df6a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159bf703-172e-49f3-8b4c-8d3f3f22011b",
        "cursor": {
          "ref": "e8543d4f-90ce-40b2-a5e6-7e9affee81ed",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0d218d76-e09d-4d06-8cf9-895a409aa4cf"
        },
        "item": {
          "id": "159bf703-172e-49f3-8b4c-8d3f3f22011b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3ecbdcc5-f821-462b-a7e7-ae5ef0c4ba6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7378cbd-7516-4527-8aa8-f559b14f2683",
        "cursor": {
          "ref": "166717ad-965b-487f-9f67-c5a9fa205bf7",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "659c3873-bdb8-4057-af6c-3c326661202b"
        },
        "item": {
          "id": "b7378cbd-7516-4527-8aa8-f559b14f2683",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3f8e7bda-19ec-4c78-9be6-1a725ebb0622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d883afaf-0d3b-404c-9013-c1e185e7afa7",
        "cursor": {
          "ref": "b81b28de-489c-4ebc-aa69-8d12694eb1ee",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ac945cf6-c4b6-4ac3-9e4e-491caacc549f"
        },
        "item": {
          "id": "d883afaf-0d3b-404c-9013-c1e185e7afa7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "61516dc7-9c9e-4ada-a65f-ebd8f3dd4529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00567641-898b-4619-87a0-3d52a1812447",
        "cursor": {
          "ref": "22930acc-b5d4-4eb3-96d6-b213333631e0",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "35ccc6e5-57f1-4c83-8258-ff9a6ed57994"
        },
        "item": {
          "id": "00567641-898b-4619-87a0-3d52a1812447",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6c11b10b-7c1d-4f4f-9294-8a4dbdb5af6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa048e9-0483-4b62-ba18-7e0688822e40",
        "cursor": {
          "ref": "3a751122-29f5-434d-b360-4d6c1bbacbdb",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7c297876-fbf9-4c8e-8fba-55a3f696dc85"
        },
        "item": {
          "id": "2aa048e9-0483-4b62-ba18-7e0688822e40",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "48ff5a0a-4fbb-4fbe-a376-282a593c2828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b8b2d5-6b93-4a41-9ca4-ada2dfb68bb9",
        "cursor": {
          "ref": "3ea1dd85-eb9c-4dab-a508-2557df0b8460",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bb8c3797-c295-462a-9778-a152a98b5588"
        },
        "item": {
          "id": "50b8b2d5-6b93-4a41-9ca4-ada2dfb68bb9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d2c3dd92-63e0-46ef-9a17-dbe9215f9af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd97350-2405-4e39-a435-c44033bcd60f",
        "cursor": {
          "ref": "89874741-e554-4fb9-92c0-a7829526ee4f",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "abb58e48-f747-4403-9d6f-dffff514391a"
        },
        "item": {
          "id": "6fd97350-2405-4e39-a435-c44033bcd60f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8f7d02ff-d1b6-4527-ba24-36e0b3437d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ec3e9e-c23f-42e6-820e-d71f8c54e806",
        "cursor": {
          "ref": "2f4c1ff8-6a56-4d5e-9839-978e1c215379",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bc0c3b76-8349-4ea2-aceb-d0f46ae4e3b2"
        },
        "item": {
          "id": "48ec3e9e-c23f-42e6-820e-d71f8c54e806",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "706138ef-2c5f-4431-afa7-4aa18b391c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a6de57-b5d8-4519-b0ab-1d6f0e951c35",
        "cursor": {
          "ref": "68480cbf-e34e-4106-aaaa-90d395d91e8e",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1c8396a2-c320-4b5b-b2a7-4893e3ce4cad"
        },
        "item": {
          "id": "b1a6de57-b5d8-4519-b0ab-1d6f0e951c35",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a472e319-5b79-4abd-92f7-36d80a3f5e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebff7540-11ac-4dcf-af1b-abffe50ed80e",
        "cursor": {
          "ref": "5176d507-c4c5-414f-ab53-fe04c2ff9cd6",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "56ac1d35-546d-4c08-a62b-e687c048aa6b"
        },
        "item": {
          "id": "ebff7540-11ac-4dcf-af1b-abffe50ed80e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7910b88b-3969-4592-bb3a-3c66a1aacb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd53e482-a41b-4db4-afc0-d73ef16b852f",
        "cursor": {
          "ref": "03fb6a45-c03a-4db8-a582-56abd976adc6",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "835b8284-35a0-453c-a5cb-f01e32e7dd51"
        },
        "item": {
          "id": "dd53e482-a41b-4db4-afc0-d73ef16b852f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9a1ad8a8-3317-4acc-a70c-fb5f6e5935b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb80982-a4b7-448c-b749-7561da474f37",
        "cursor": {
          "ref": "909f099a-7205-423e-b783-67d55080e888",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ba9c07bc-0ca8-40f9-b90c-4f0712f383bd"
        },
        "item": {
          "id": "0bb80982-a4b7-448c-b749-7561da474f37",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fc05c511-39c9-4e25-9eaf-8a4f915ec232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea60d43-683f-4500-b7d8-0b59c72d6dbf",
        "cursor": {
          "ref": "dfe99e17-ec66-44a6-beec-7d1e5406e48c",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f67501a9-0046-4db6-a110-72ca9c7f6061"
        },
        "item": {
          "id": "2ea60d43-683f-4500-b7d8-0b59c72d6dbf",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8f758eb2-ea67-4d43-ac44-6353db9a2f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93406d7e-8479-4f97-9718-9987a1fc6dbb",
        "cursor": {
          "ref": "b13853b3-7b51-4539-9650-9092b21ef72f",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "75dfc9b2-5949-4e3b-a03c-fdb870a38d8b"
        },
        "item": {
          "id": "93406d7e-8479-4f97-9718-9987a1fc6dbb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a487f5f1-bd5e-4f3f-833e-dcc0786f4203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39805a0f-9a39-4214-891d-59aabe151d53",
        "cursor": {
          "ref": "ed7e4095-9348-49a4-a1d2-6ab9523a2a76",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f7d18c51-2243-443c-86ac-1e832028e793"
        },
        "item": {
          "id": "39805a0f-9a39-4214-891d-59aabe151d53",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "89629d18-a1b4-4867-a676-22bd272a1f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e95c79a-8165-47df-8217-8e2aaa17c437",
        "cursor": {
          "ref": "75e33abc-0598-4b19-a49b-7f02215ba6d6",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "73f626b2-f341-4f07-8fcb-25f0854b8d70"
        },
        "item": {
          "id": "0e95c79a-8165-47df-8217-8e2aaa17c437",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2e5b3b8e-ffb1-4fa6-8f99-0dd49f912ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71b2e28-f1f5-49af-9f5e-7078d3d21016",
        "cursor": {
          "ref": "72ef2914-f5c8-4272-ae7c-3f928980bd4c",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "07e31ac2-7007-4493-b932-60cfe5ded1c6"
        },
        "item": {
          "id": "f71b2e28-f1f5-49af-9f5e-7078d3d21016",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "afe5caa4-20b2-4fbd-a2dd-909478a1602e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2bcd5d-c782-49ea-8f1b-a30d1572978a",
        "cursor": {
          "ref": "cd9b3e8b-4068-49c7-b02b-9652f44846f5",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d808aa63-9f30-40a8-aac5-6f06eda41748"
        },
        "item": {
          "id": "ff2bcd5d-c782-49ea-8f1b-a30d1572978a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1fdba09a-c40b-457e-ad8a-5b27371dee88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54383a05-3ccf-4c49-b05e-6ae31eff156f",
        "cursor": {
          "ref": "ed6f4880-66b0-4027-a329-6b26495eab12",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bf26c3bf-dcac-4f77-a040-243885e0788b"
        },
        "item": {
          "id": "54383a05-3ccf-4c49-b05e-6ae31eff156f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f4fb6d69-2c97-41f1-9d26-227b8f23b166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf81bc26-609f-4fee-a76d-8c63d8472fe8",
        "cursor": {
          "ref": "dd8bc48c-1dbf-4a53-a26d-944aaaf833c1",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "61a9f695-c974-4f6f-9f98-6c309a9ba938"
        },
        "item": {
          "id": "bf81bc26-609f-4fee-a76d-8c63d8472fe8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5ff22d37-16fc-49c5-b15f-e3e5cbaf6f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965ddbb7-8a8b-4b7e-b9b3-900dd96974fe",
        "cursor": {
          "ref": "38d3ce9a-1fb8-4a2f-a963-3af8adaf336b",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bbb3c8ec-c166-4e6f-bc6a-ec3e4441f15c"
        },
        "item": {
          "id": "965ddbb7-8a8b-4b7e-b9b3-900dd96974fe",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "52b605d4-a04b-4456-a77d-3f1afbf0870b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb119c21-f8c0-4773-8a0e-a66ab43719bc",
        "cursor": {
          "ref": "9b818e76-cce2-453d-99c5-18c2b9554d19",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cfd79e6f-e3c8-4ba3-bb25-302d0c5a3a93"
        },
        "item": {
          "id": "fb119c21-f8c0-4773-8a0e-a66ab43719bc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e4940409-6c92-42be-a893-1dc413368bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2410761-43e0-4c2e-90c8-5236329cc0b5",
        "cursor": {
          "ref": "d66358eb-5d63-4f25-835c-2b91214b22d7",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "eb5d21f4-d62a-4002-9db6-0ddbf0b04d81"
        },
        "item": {
          "id": "d2410761-43e0-4c2e-90c8-5236329cc0b5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "93e9d5ba-c185-4aad-aeec-6a992ea5243d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2044236-2362-4444-88bc-6166d26fcc80",
        "cursor": {
          "ref": "16be17f9-3f2c-4d17-b575-006618522d38",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6b8a23ed-ea00-481f-98c0-533e74ff165d"
        },
        "item": {
          "id": "e2044236-2362-4444-88bc-6166d26fcc80",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b911b92d-0a9a-4d0a-aafd-fd15769dfac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9a8c60-ad5c-42d2-8819-066de8886a98",
        "cursor": {
          "ref": "270590c3-cb84-438d-8df0-cc6dc3b171da",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c58dc3c0-1bd2-4785-8caf-45555434d892"
        },
        "item": {
          "id": "8e9a8c60-ad5c-42d2-8819-066de8886a98",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c1e3cb96-098a-49ad-8052-e091817684db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414f0e50-7d6b-414e-8b9b-3ffa81b37556",
        "cursor": {
          "ref": "8eb07c14-ef53-40a0-a8ad-2206cc7ac409",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "04638def-152b-42ee-9648-8c752db6daed"
        },
        "item": {
          "id": "414f0e50-7d6b-414e-8b9b-3ffa81b37556",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b1550cec-6b5d-4e0c-8a6b-74bdadcfba30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0565b1e8-3d01-4158-9c98-c62ec8ee7915",
        "cursor": {
          "ref": "cab8e90d-6fbc-4a2b-88cd-8c39c0011c9f",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0b5f921b-f641-42b5-b0f4-2edd1b11b9e1"
        },
        "item": {
          "id": "0565b1e8-3d01-4158-9c98-c62ec8ee7915",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "30305a21-d545-471a-8c47-0f7da83afcc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693553ce-f98a-49d6-9e16-854203e0338d",
        "cursor": {
          "ref": "d85c1911-784b-41a6-8713-db41254b52d6",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "73c33fe8-81fe-4149-8567-72a07341fe6f"
        },
        "item": {
          "id": "693553ce-f98a-49d6-9e16-854203e0338d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "872872f7-fd9f-4686-b262-585df8584025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ab1a9c-44c8-4dc2-bcd2-ec2c91d3ce8f",
        "cursor": {
          "ref": "6703560f-df26-419f-92e1-edf4410d9423",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "13a6d5a0-bf17-4718-93dc-0ada300cdb65"
        },
        "item": {
          "id": "b0ab1a9c-44c8-4dc2-bcd2-ec2c91d3ce8f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c935bb52-32dd-47ce-8b21-07e6965c4c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e1fa4c-5ee2-4c20-8945-4db119afbf6b",
        "cursor": {
          "ref": "e1337ba3-9e7c-40d0-addf-e308fb5e83fc",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0acc7319-827a-4bd0-b62a-4278a6501f3a"
        },
        "item": {
          "id": "40e1fa4c-5ee2-4c20-8945-4db119afbf6b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "59711537-b7ab-4ab3-9720-4cc595dae435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d7e544-836c-4b29-ac3c-aa15d9ebe3b9",
        "cursor": {
          "ref": "d704b1e0-bc11-4d0c-8eb0-3252b503fe19",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4bc64f0b-9c3c-4e8a-9388-2f07f1d35a19"
        },
        "item": {
          "id": "30d7e544-836c-4b29-ac3c-aa15d9ebe3b9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dbdef389-923c-405c-8785-06a5a44f1c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43be14a-352a-47bc-acb9-320ba9998648",
        "cursor": {
          "ref": "7e50c530-80a5-41cc-b879-cdf6501c658e",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "268126e5-e4c1-4475-b8e0-e98db244f1a6"
        },
        "item": {
          "id": "c43be14a-352a-47bc-acb9-320ba9998648",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3a8bc554-d6eb-4a20-b827-069b4ecc52d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f274bb4-d646-4d84-bf60-b12852a7d043",
        "cursor": {
          "ref": "64e2b10d-fe28-446c-bf1d-11950141e85f",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "44afef36-6202-46aa-a1d0-682e0e640c57"
        },
        "item": {
          "id": "9f274bb4-d646-4d84-bf60-b12852a7d043",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "99ecd77a-e12d-4fdf-9e10-594614bfd2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40188ebe-cac2-4b2e-8f41-1378990d0caa",
        "cursor": {
          "ref": "ce281b1a-e535-4efd-9451-59654fb1abec",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0ff8362b-a8e1-459d-8d8b-5d2a82a0d1b1"
        },
        "item": {
          "id": "40188ebe-cac2-4b2e-8f41-1378990d0caa",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "eb693f6d-ee73-41da-90aa-cbafc1315fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56357c46-ed0c-488d-86a5-1e8c3a82c8b3",
        "cursor": {
          "ref": "fb93f756-6967-4d7b-b5ca-473aac86427d",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7b98fab0-55a0-4a0f-b0ad-04530bc9b1e2"
        },
        "item": {
          "id": "56357c46-ed0c-488d-86a5-1e8c3a82c8b3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "92d676b7-1a0d-4761-9178-556b6ac253d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f99e5b-2ff7-4f1f-8801-34952e9356c4",
        "cursor": {
          "ref": "22df7b79-0286-409b-8119-59cc9189dbaa",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2d11e20c-b3fb-461b-97e1-70c41990b49d"
        },
        "item": {
          "id": "e4f99e5b-2ff7-4f1f-8801-34952e9356c4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e5412d23-49df-4639-9793-1e855a99d631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c70aa39-b786-492e-a55d-e4d9fe419565",
        "cursor": {
          "ref": "ef1f00bd-3f74-44d4-8522-371a0c4da044",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e30d864a-c99f-4fd8-8b37-0cecab7cd7d6"
        },
        "item": {
          "id": "5c70aa39-b786-492e-a55d-e4d9fe419565",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c7716c35-e721-47c3-b5f5-304c032ffd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f5de17-8b6a-480f-8757-d63a8d0ffa0d",
        "cursor": {
          "ref": "35ad5313-a497-4681-a21d-80ed00c8b432",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0410e029-c306-42ac-91e3-685dd4330e4c"
        },
        "item": {
          "id": "a1f5de17-8b6a-480f-8757-d63a8d0ffa0d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c5ee45a8-1035-43cb-834e-d17c7d51525c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d174a5-bb42-4c71-a9e4-5a78f8240114",
        "cursor": {
          "ref": "ff4c6d93-a86a-4c28-ba2a-e71c39b5b27b",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "158ea92a-7ae7-4cad-b056-b1faca716586"
        },
        "item": {
          "id": "82d174a5-bb42-4c71-a9e4-5a78f8240114",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "940c675c-617f-47e4-83af-5ddda3c9b92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba434eb0-d870-4f80-a475-a44d5a6813a1",
        "cursor": {
          "ref": "c2ca0b9c-affa-4926-a747-5e27accac432",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0a061314-beb2-4365-bfea-34752ddcc579"
        },
        "item": {
          "id": "ba434eb0-d870-4f80-a475-a44d5a6813a1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7d9ac3d4-9003-499c-bdfa-8de12059f75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f8f11f-3bf6-457d-be4d-4522a60db6bd",
        "cursor": {
          "ref": "b6d012a7-8dba-4bf0-9d68-68b7d2f946d3",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9cab3dcd-a2b2-4bea-8074-84df9405a979"
        },
        "item": {
          "id": "49f8f11f-3bf6-457d-be4d-4522a60db6bd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "163d78da-598e-4050-afa6-e36a30271e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585f21d5-0226-4cf2-8f92-710a601be2e7",
        "cursor": {
          "ref": "f63742d6-f02f-4ec0-a01d-71b59399c363",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1dc88196-127b-49ff-a008-b6b3d5f386f0"
        },
        "item": {
          "id": "585f21d5-0226-4cf2-8f92-710a601be2e7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2df291fd-55c8-4451-8f87-9625c38994e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa36b2b-6f6e-4b37-81ce-4b2ad9eb5ace",
        "cursor": {
          "ref": "b59bbf40-e098-42ef-92c0-7d2622624269",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "98a648f0-04b8-4d14-91eb-9da183d671ed"
        },
        "item": {
          "id": "9fa36b2b-6f6e-4b37-81ce-4b2ad9eb5ace",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bce939ef-4931-47cd-aab7-9554455a91b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6223e3c-48df-43d9-8318-f903dbc1ce50",
        "cursor": {
          "ref": "cbd7889f-5a48-4066-b07e-b0735495b81c",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2fff7b45-3e47-4efb-8ead-15448d1a24e3"
        },
        "item": {
          "id": "c6223e3c-48df-43d9-8318-f903dbc1ce50",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7160ee59-947b-46a2-b29c-0c69af10590f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6667cd02-8ced-4caa-b23c-b2a9b92d0016",
        "cursor": {
          "ref": "4914929a-7409-4f8b-a865-b1adbaeef0af",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a91b9f83-40d4-45fa-8776-b31ebb04fb70"
        },
        "item": {
          "id": "6667cd02-8ced-4caa-b23c-b2a9b92d0016",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "992b2931-ef59-43a5-9c88-5a8230f36a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd1c787-e4a8-4ba2-bf7d-9e4a8d76b278",
        "cursor": {
          "ref": "689ef558-b04a-4770-821d-4aff5162a87f",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "baf8c1a8-6250-4639-b81c-75824dd539a3"
        },
        "item": {
          "id": "8dd1c787-e4a8-4ba2-bf7d-9e4a8d76b278",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "435b871e-95df-4aea-b6b8-d237490568a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57348464-ccd6-4eaa-b363-95f1c99efb95",
        "cursor": {
          "ref": "6881d1cb-2c7d-4145-be56-39a8c895e6e7",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a98406ee-168e-495c-a3e4-0ab872ff07b3"
        },
        "item": {
          "id": "57348464-ccd6-4eaa-b363-95f1c99efb95",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6d064b0a-0ab0-4096-8631-f79dac3a4db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29a326d-15c0-44d5-bc53-0ce34bb7e1fa",
        "cursor": {
          "ref": "7cbf9935-b785-47b3-b829-c9e140554c42",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cbb53945-3fcd-47ef-b30b-c944374cfdc9"
        },
        "item": {
          "id": "e29a326d-15c0-44d5-bc53-0ce34bb7e1fa",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4fdbae98-449e-42e3-8cf0-13e5283f2388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2513bc0-4286-473c-8cc4-747d49f29683",
        "cursor": {
          "ref": "5a41f6f3-3561-4bf7-888b-5350805438cd",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bf1c7992-01fb-4a2f-a320-42be9c9aca20"
        },
        "item": {
          "id": "e2513bc0-4286-473c-8cc4-747d49f29683",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ff8ae5cc-e505-4989-a622-776c9174a77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b8f00a-e6b7-465e-8ecb-506dc9316b28",
        "cursor": {
          "ref": "63adbcfd-3d2e-4d2d-8897-f35eaf97cd24",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bad30c30-ced6-48d7-b37f-220acde3417b"
        },
        "item": {
          "id": "12b8f00a-e6b7-465e-8ecb-506dc9316b28",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "174476f3-9aec-4ff8-bfdc-cec7ce8cb538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa489ff-fefe-496f-afde-2ff068884aa6",
        "cursor": {
          "ref": "2de612eb-2575-4354-87c2-1510cf291328",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "73bd6b6d-c9ac-474d-bbad-7d436b7323d6"
        },
        "item": {
          "id": "9fa489ff-fefe-496f-afde-2ff068884aa6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8f21d526-8508-4a31-a9d5-67f02e3d7a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a32820-ff8f-41e5-b1fe-2c242f615f46",
        "cursor": {
          "ref": "d8bfe326-fd87-4043-9068-4413f1a01412",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "052dd949-97c5-4018-bcb9-eb8c32cc2d60"
        },
        "item": {
          "id": "19a32820-ff8f-41e5-b1fe-2c242f615f46",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3736fa33-edf3-4e82-963a-82a5c69d56b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04d1abd-1de1-4eab-bd1c-55ae251878c5",
        "cursor": {
          "ref": "7e85c424-d7d7-4cbf-a869-4cf443cad606",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1f8f6075-59b5-41d9-a351-d3ad4ad5af04"
        },
        "item": {
          "id": "d04d1abd-1de1-4eab-bd1c-55ae251878c5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "25d15b14-ddaf-4d68-b7e6-ef38187124c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b87dd80-0b05-4564-b891-4e4bdb46b546",
        "cursor": {
          "ref": "1207e07f-e58a-43be-a808-dda3bc5dc344",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9b976aec-7227-4ed7-bba7-3a904ab89de0"
        },
        "item": {
          "id": "2b87dd80-0b05-4564-b891-4e4bdb46b546",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0c48b5b1-5e25-439c-9ad0-2dd287b301a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01631d7-8842-4d67-89b2-90271cf58eb0",
        "cursor": {
          "ref": "7ca7f861-d170-41d6-8fed-c828ca209463",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "036f951a-ba8a-479b-8b0d-adf3b8978334"
        },
        "item": {
          "id": "b01631d7-8842-4d67-89b2-90271cf58eb0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1268b3bc-d7d0-4a23-863c-2d4b219c32b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3036174-2461-4156-9916-5ba9f36eedd9",
        "cursor": {
          "ref": "645b9939-7331-47c1-a6e4-7e0740accf00",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e3257a01-c64c-4310-946b-68cb3ff8261b"
        },
        "item": {
          "id": "a3036174-2461-4156-9916-5ba9f36eedd9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "637bf559-cd47-4ce5-9475-d04126fd73e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c42faf5-695c-4937-ace0-41179bdf232c",
        "cursor": {
          "ref": "56c3720a-1859-44cd-88ad-2c4475a50c53",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cf7ebb93-8f5b-499e-9ac5-17678d6a8c56"
        },
        "item": {
          "id": "9c42faf5-695c-4937-ace0-41179bdf232c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8083fd9a-a60a-495d-876a-3725245d3dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654ff285-c99c-4b4f-83f1-3c493fd0a7e6",
        "cursor": {
          "ref": "37029192-88d8-4556-9f48-c33422b13f8b",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1340729c-6b23-4915-8251-6a8eb3de7100"
        },
        "item": {
          "id": "654ff285-c99c-4b4f-83f1-3c493fd0a7e6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b8dd56de-3e69-4974-bf99-f6f619e9ea7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e390877-839d-48e5-80e5-399b7f56334d",
        "cursor": {
          "ref": "a4012d51-7981-41c3-8467-21bda426904b",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "68991a7b-7705-4bf9-9ba0-492b6b9b6f3c"
        },
        "item": {
          "id": "5e390877-839d-48e5-80e5-399b7f56334d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fa9fb4d2-4ae7-4ea9-8e2c-008f8e5d5792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa24280b-05e9-4aca-9b87-ea2bd369f3aa",
        "cursor": {
          "ref": "349dcc91-1ccb-4f90-9e1a-7de9b40cb54d",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "93e51852-dd1d-4a48-8ee3-53f13664d257"
        },
        "item": {
          "id": "aa24280b-05e9-4aca-9b87-ea2bd369f3aa",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2cc274c5-5109-4957-9629-7abec8a1972b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6e1e2d-844d-41b6-b48d-60012f9f5188",
        "cursor": {
          "ref": "174780e9-3c94-47d0-829e-5b6df536025a",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5465d1ef-90f6-419d-a79f-a4754a9194f1"
        },
        "item": {
          "id": "6a6e1e2d-844d-41b6-b48d-60012f9f5188",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "eaf942a0-bdf2-4e57-905e-c93b0acea0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e42178-1964-40b8-a55a-c227460e4e0d",
        "cursor": {
          "ref": "bdb14ec3-03a2-4c29-b067-2aa8c6f6b23b",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "398f94d8-bdc0-4676-a997-3a9f6f5788f3"
        },
        "item": {
          "id": "63e42178-1964-40b8-a55a-c227460e4e0d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f9b7ca65-2188-4dcd-927d-be62b61b7bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a53f98-5609-4951-8962-cde53a380e6d",
        "cursor": {
          "ref": "189f3d26-e768-425b-9260-a535edf5b40b",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "35a57ca4-91c4-40d3-93fb-ecd5706ea79f"
        },
        "item": {
          "id": "f6a53f98-5609-4951-8962-cde53a380e6d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3e7daec1-bf7b-47c3-a046-6db51a09e8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722980c9-6382-4ddd-a8e1-01acd11bcdbe",
        "cursor": {
          "ref": "c94b52a9-2876-4935-95d0-3310fb548c30",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "68c203d3-a674-49ba-aeb0-5921143fc36e"
        },
        "item": {
          "id": "722980c9-6382-4ddd-a8e1-01acd11bcdbe",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0e58e389-4875-49c3-aa1d-1070cf5ce8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e793b1-d48f-410c-a205-6a58b49a85e4",
        "cursor": {
          "ref": "7544dc79-5cbd-4cc3-b1af-5225e07396b3",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "590b6d44-103a-42ba-b943-9f7f4d5c10bf"
        },
        "item": {
          "id": "02e793b1-d48f-410c-a205-6a58b49a85e4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "26f7bfdd-c613-4f06-ba76-faa8c0ba9b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c48d8f-1f07-47c9-8b45-d7a3352ddd74",
        "cursor": {
          "ref": "1142bd88-4ccb-439f-9b36-fb02daaef0db",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cc2021f4-9ba4-4f11-9aca-b6e82ae22c83"
        },
        "item": {
          "id": "37c48d8f-1f07-47c9-8b45-d7a3352ddd74",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "778c92d9-38ff-43e5-a7cd-ea2c72d4f77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c86033-51a3-4b64-9f9e-752222d6d607",
        "cursor": {
          "ref": "96b339c3-31ba-4285-97d2-096fb07899de",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "361df6a9-baa7-4402-ba7f-f026c67ad2dc"
        },
        "item": {
          "id": "81c86033-51a3-4b64-9f9e-752222d6d607",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "49c25358-7f94-4633-a0fe-4e20c39ce4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d6525b-3209-4513-843b-be624958d4e1",
        "cursor": {
          "ref": "e276cc85-6bc6-40d7-9493-ffafdef49467",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "21e0a502-00f9-4cac-86ed-d959e939bb4e"
        },
        "item": {
          "id": "c8d6525b-3209-4513-843b-be624958d4e1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e136ab63-9c5f-45eb-85e3-6f928b3510a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db5a7eb-24f1-44a7-8fff-e1d8ecaec9ad",
        "cursor": {
          "ref": "f0120950-dd43-4a01-b09a-aa76ca11ae85",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "063f7258-a239-4e24-9249-8d80f6ba6fd0"
        },
        "item": {
          "id": "0db5a7eb-24f1-44a7-8fff-e1d8ecaec9ad",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "442e2c2b-c01d-418e-8657-a32392dafcde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b660cd-64df-47cd-a545-ed84e201b17e",
        "cursor": {
          "ref": "c9a6a428-79f5-49b7-aaad-1b377d43f210",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ac5b469d-d547-4b55-9acb-48b7cd5e345f"
        },
        "item": {
          "id": "c2b660cd-64df-47cd-a545-ed84e201b17e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e5d59f86-1f27-457a-bc05-435aba9fa22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de85f725-2f2c-4737-baa2-8e135fe203f3",
        "cursor": {
          "ref": "5b7bde38-f841-47ba-9957-c40f9dd52c38",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9094728d-49d5-4a40-81a4-d0f2f4fd1480"
        },
        "item": {
          "id": "de85f725-2f2c-4737-baa2-8e135fe203f3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0cb311e5-eb88-4600-862f-de8a7cdee19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407ada16-9d31-4491-b96d-94aa11d7ecd2",
        "cursor": {
          "ref": "d8f00eaf-9cc5-4794-8597-dfb149aef443",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "845fc378-0157-45ff-996f-2de3b6dc0e17"
        },
        "item": {
          "id": "407ada16-9d31-4491-b96d-94aa11d7ecd2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0ae26491-d815-49ed-88dd-431b75c563d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1766116d-b563-428a-83d4-0b2b0b6c94ba",
        "cursor": {
          "ref": "fc97ead1-c44e-4deb-8c3e-1fc1ebbd3032",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2b67200f-9a55-4d39-a82a-4cb4314a4561"
        },
        "item": {
          "id": "1766116d-b563-428a-83d4-0b2b0b6c94ba",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a658456a-07d3-46e9-b8a5-460c0b53180c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76c1122-7776-4b2d-8242-ad9a7628881e",
        "cursor": {
          "ref": "129240bb-904f-44c7-b129-d4f3938c60ed",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3ed9cdbf-d896-4b90-83be-4b1083784dc3"
        },
        "item": {
          "id": "c76c1122-7776-4b2d-8242-ad9a7628881e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fb2fc06e-1d4d-47fa-ab1f-6a517cd83c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf663eb-ffcc-491e-b2b1-2753b04df34d",
        "cursor": {
          "ref": "91bfd37e-3dac-41c3-bb9f-21fe7ce2a55a",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "38075fa2-ede0-4c57-9814-720c6cb49193"
        },
        "item": {
          "id": "4cf663eb-ffcc-491e-b2b1-2753b04df34d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "73544497-5f10-48e0-bcf2-18f33a420964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea7d387-b88f-4acf-b677-ff71ae8a114d",
        "cursor": {
          "ref": "85eddc09-46e1-4b86-833a-40697e545931",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c94a10be-8757-471f-bcf6-3cbea217b8f9"
        },
        "item": {
          "id": "eea7d387-b88f-4acf-b677-ff71ae8a114d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "017a389d-78c8-438f-8e81-27422f78377c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65e1d9e-fb47-447d-b462-9b94fe260e70",
        "cursor": {
          "ref": "b4936e8f-d74e-4bc0-9b3e-eb2bcac46117",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "aaff8ecf-00df-4232-9f22-eaa4d5bb401e"
        },
        "item": {
          "id": "c65e1d9e-fb47-447d-b462-9b94fe260e70",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c44c5566-2cc9-4a4a-9f7f-61a23409a4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28277729-ae2d-4b5c-8584-c7855ddcaaa6",
        "cursor": {
          "ref": "44d21879-92ee-4437-9414-b7a3335324f6",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d0a20b58-5d3c-4d46-8ff4-f194cf1df93a"
        },
        "item": {
          "id": "28277729-ae2d-4b5c-8584-c7855ddcaaa6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "30f6877a-eb1e-412a-a902-ba96bc161a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263a0198-d7b2-4907-9fbd-995bb6fa21aa",
        "cursor": {
          "ref": "18519209-67c8-46e0-86c8-da48d51a5f7e",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "921281ac-ef45-4466-8443-912065647d09"
        },
        "item": {
          "id": "263a0198-d7b2-4907-9fbd-995bb6fa21aa",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e2d6206d-5ad1-406d-b27d-80dece83845f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29f4843-4116-4e03-b766-151bed31e709",
        "cursor": {
          "ref": "ae0e3f35-0b65-4fad-9054-10af879f6b26",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "730488cf-67b1-491b-b4b6-552f6c67ffd8"
        },
        "item": {
          "id": "f29f4843-4116-4e03-b766-151bed31e709",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e43c33a8-dac8-438c-bab7-ceb99f06bf99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929e1e16-142e-4ebb-9c25-986e35470779",
        "cursor": {
          "ref": "dbe29f88-dcce-46b3-aff1-59d1f3047e25",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1ccf6629-fada-41ea-a5c2-07d8442af5cc"
        },
        "item": {
          "id": "929e1e16-142e-4ebb-9c25-986e35470779",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c050a1d9-9470-4fcf-8651-badcb48a203c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bebc08d-2ddf-4971-b58e-fe1b04ebab91",
        "cursor": {
          "ref": "98c33b71-6229-4adc-b92f-4810105775e5",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0390fab4-2807-42ce-8b6b-26a2d92469f2"
        },
        "item": {
          "id": "8bebc08d-2ddf-4971-b58e-fe1b04ebab91",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7d0135bc-cb1f-4eae-9c6f-803350d292b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d593a6f0-0d4c-409d-b179-270ca2783981",
        "cursor": {
          "ref": "53901d57-134d-4dc4-9f20-cb2301b148c5",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cb5d8392-9c6e-4969-b667-8dfcc6749c0e"
        },
        "item": {
          "id": "d593a6f0-0d4c-409d-b179-270ca2783981",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a0e722da-327c-4130-b37c-f7ae8d7951f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01ffea7-40e0-4b37-ab9a-3f8295fdcb10",
        "cursor": {
          "ref": "a0883710-acae-442b-b9a3-73d4d8ed4f08",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "714ee992-f001-40bb-a77f-ee2ed0523fa6"
        },
        "item": {
          "id": "a01ffea7-40e0-4b37-ab9a-3f8295fdcb10",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5e266aae-0671-4a64-a7fb-527c2097c817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7de9b1-20d2-4c8f-bbba-1c23e9be5d8e",
        "cursor": {
          "ref": "3fdb561d-c3b8-47df-867f-5d0b0f9ca241",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6502e7bc-2b58-447b-80b5-854f79317d53"
        },
        "item": {
          "id": "ed7de9b1-20d2-4c8f-bbba-1c23e9be5d8e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "34c5e428-ee52-471a-acb0-2a88d95fb66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d3327f-6850-4d0a-a3ee-2cff1b64ef19",
        "cursor": {
          "ref": "404976f2-bda9-4110-9f67-cc1ca997fe1b",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "58269210-ff39-451e-a572-a165ddd6f75c"
        },
        "item": {
          "id": "d9d3327f-6850-4d0a-a3ee-2cff1b64ef19",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cb7d7073-b9b4-477e-b23f-1b5112009b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bd9edd-7d2d-49e3-bf2b-1cba9e79573b",
        "cursor": {
          "ref": "72925674-e5f6-43fa-a0e7-e7202afb37ed",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6b5d9f27-4ba4-419e-8185-4594ee85909a"
        },
        "item": {
          "id": "f4bd9edd-7d2d-49e3-bf2b-1cba9e79573b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "caaf2a0b-c4b1-4df2-ad48-f8a9dff6c283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1eccf9a-3d73-4229-8243-1a304fccac2d",
        "cursor": {
          "ref": "f3a0658f-add3-4051-a7d7-5f8c640e3c98",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dc5f4819-cd63-4049-bd22-4eb369ecf9a7"
        },
        "item": {
          "id": "d1eccf9a-3d73-4229-8243-1a304fccac2d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f5845d24-ec4a-4c44-8105-308d6416ce27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a361bc-d35b-4f1f-b746-54c6b9736145",
        "cursor": {
          "ref": "f7fe1fee-e4cf-4554-8a01-254a29d95997",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ce69f02f-b47f-4d29-989d-16519efc7d18"
        },
        "item": {
          "id": "09a361bc-d35b-4f1f-b746-54c6b9736145",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "77162ab4-c6d3-470d-b33d-6d4d623b5b28",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9505bb3-2810-4742-a84c-03d1d8550324",
        "cursor": {
          "ref": "23395108-af45-44f3-8062-ea004889a975",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "80ed924f-f903-45c5-b79f-f368ed8c2e53"
        },
        "item": {
          "id": "d9505bb3-2810-4742-a84c-03d1d8550324",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "70060b9f-63fb-4ef4-91e2-84ab1151f85d",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfe9f5b-8df5-4972-a4d8-18b22448fd30",
        "cursor": {
          "ref": "9f5f0b43-99dc-4b16-856e-b64fc0219131",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "17c7b12f-ee1a-455e-92ff-0b6018efed30"
        },
        "item": {
          "id": "0dfe9f5b-8df5-4972-a4d8-18b22448fd30",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cd3a5388-42b9-4472-add4-04e4c7019d4d",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "14386249-952f-4d9f-ac28-034de29318eb",
        "cursor": {
          "ref": "2c542ee1-8dfb-44c3-aa38-f12ceb6ee23d",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dfa1b6ac-357d-478e-b183-2284967337fe"
        },
        "item": {
          "id": "14386249-952f-4d9f-ac28-034de29318eb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "af196c38-e454-4a36-8e0b-6b5d04e8782c",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8656b9-3877-420e-9907-ff79e1ca91b4",
        "cursor": {
          "ref": "7ed3a6b0-e281-44e5-9f70-ace9d2451068",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5a59e291-4ee0-47c3-aeb7-05ca53caaec9"
        },
        "item": {
          "id": "0f8656b9-3877-420e-9907-ff79e1ca91b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5c4db8a0-0956-4064-abf0-728333d8eb4f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8656b9-3877-420e-9907-ff79e1ca91b4",
        "cursor": {
          "ref": "7ed3a6b0-e281-44e5-9f70-ace9d2451068",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5a59e291-4ee0-47c3-aeb7-05ca53caaec9"
        },
        "item": {
          "id": "0f8656b9-3877-420e-9907-ff79e1ca91b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5c4db8a0-0956-4064-abf0-728333d8eb4f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8656b9-3877-420e-9907-ff79e1ca91b4",
        "cursor": {
          "ref": "7ed3a6b0-e281-44e5-9f70-ace9d2451068",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5a59e291-4ee0-47c3-aeb7-05ca53caaec9"
        },
        "item": {
          "id": "0f8656b9-3877-420e-9907-ff79e1ca91b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5c4db8a0-0956-4064-abf0-728333d8eb4f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cca6cc-7b50-4afb-b9b9-bea864aa522a",
        "cursor": {
          "ref": "3d9c729a-23dd-4ee6-b61e-1213adcb2f49",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2671c48a-55b8-43cb-a00d-ab8c0163860a"
        },
        "item": {
          "id": "e6cca6cc-7b50-4afb-b9b9-bea864aa522a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "fff0c92c-7e15-4c2f-84e9-33c71a64295d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a5187a-acfb-42af-a83f-8b381bb3aad3",
        "cursor": {
          "ref": "d2de698c-cf7a-4af0-9fe3-a8910c265b9c",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2a2d71bc-3cd8-4e60-b8c3-a4c298367c97"
        },
        "item": {
          "id": "53a5187a-acfb-42af-a83f-8b381bb3aad3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c2c33f0c-0521-42af-ab45-4b73bb610c97",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a5187a-acfb-42af-a83f-8b381bb3aad3",
        "cursor": {
          "ref": "d2de698c-cf7a-4af0-9fe3-a8910c265b9c",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2a2d71bc-3cd8-4e60-b8c3-a4c298367c97"
        },
        "item": {
          "id": "53a5187a-acfb-42af-a83f-8b381bb3aad3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c2c33f0c-0521-42af-ab45-4b73bb610c97",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8379a6a-1f27-4014-97eb-444387e10ea1",
        "cursor": {
          "ref": "22444679-f950-4f78-bf11-a423e3bcd717",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d00c355f-e41d-45e3-8ac3-ab9725490703"
        },
        "item": {
          "id": "c8379a6a-1f27-4014-97eb-444387e10ea1",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "3cf63415-7c74-4e17-8ed1-7514fa1993fb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 49,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abfeb56-6d13-49a2-8efa-02bdb985a1a7",
        "cursor": {
          "ref": "b0d7a242-a1a1-4c49-a15b-6dae317aa2f3",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "48103971-ce57-4e36-b342-de60b73df2f8"
        },
        "item": {
          "id": "8abfeb56-6d13-49a2-8efa-02bdb985a1a7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7c79b4d2-32cb-4064-b039-85a0529705e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abfeb56-6d13-49a2-8efa-02bdb985a1a7",
        "cursor": {
          "ref": "b0d7a242-a1a1-4c49-a15b-6dae317aa2f3",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "48103971-ce57-4e36-b342-de60b73df2f8"
        },
        "item": {
          "id": "8abfeb56-6d13-49a2-8efa-02bdb985a1a7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7c79b4d2-32cb-4064-b039-85a0529705e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a894eece-31f6-4d3f-80f1-2599b9453391",
        "cursor": {
          "ref": "a788d44d-fc92-4d38-91bf-a75712a8d335",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "77174d34-e72b-4544-9e49-f5b9239b48ef"
        },
        "item": {
          "id": "a894eece-31f6-4d3f-80f1-2599b9453391",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "7cbc6fd2-160e-4c67-b79d-09e53b18cdb6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 49,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}