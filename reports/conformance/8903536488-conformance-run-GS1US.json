{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "92cee3e1-2a8b-4c0d-8640-e585aefca47f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ee6d240d-0186-4160-84d5-7f52c4ad2620",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d2bf7e2-08d1-45b7-a38a-5d9ab9403119",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "397ef1df-de43-437d-a707-af27b0540982"
                }
              }
            ]
          },
          {
            "id": "af24eb49-8c05-4428-88b8-28527343c909",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "032c9503-d00f-4e6e-ba01-0977d8e017da",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0392d4ab-7869-4fdd-864b-d302caa7a99f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c5646080-e5e2-492b-8c23-876276d92074",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a5e6819e-5436-490f-a45b-00b106a9286c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1e4c92ab-accb-4980-928e-e05dfa6da0f8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57578a0c-125c-4d95-bbd8-5180eaef4426",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23695010-c4bf-449d-a39a-0ffbab07ee62"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a7e9a03d-7e30-4b24-a1c1-d4443d7df1ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "92a32502-04d6-4438-8cf0-17ab265478f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "728d377a-40f9-4b0f-89e1-2e6a461c59bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32fc8589-083d-496c-ba1a-cfc2d28eb219"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71125c13-128f-4576-b0d0-cc9dfc4543f4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cd8a2247-5713-42e1-b071-f13a6cf08d7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5574469-13c7-4722-ad56-404b797f6bdf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8fb81bb5-aa4f-40cf-88b4-8906d01a47d2"
            }
          }
        ]
      },
      {
        "id": "69fa85f7-ea4c-4391-898d-2ec6a1b10c39",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5510ac98-cbb7-40aa-8dcc-1671a7de459f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "291d4637-3c1c-4da5-b3cb-bb6cc05c27c7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "67d75864-4012-48e5-a014-732872f00e21",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80833a8e-c6b9-47e2-9c33-0bc74dee5317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7e3ea86-1d38-4b31-8221-5ef341708d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b632054-a027-49c6-be76-fd92f0168fdb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef6a1f7-1780-4d9d-9139-f4c30a9c687f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f095fa2-071c-481d-810d-4d3405e5aa21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efc9893-721f-4d8c-8912-dbf76245e801",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f970f5-3e4e-4d00-bb11-7dc0de121375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8c3176e-8b3f-43ba-900e-b7645a7e1f2e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "54dd11e7-3fd3-46ee-a23d-e44f69b4e606",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f30b5bf6-0a10-4c40-ad19-b2614ea7f9ae",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98da214c-80b3-4b31-a1e8-f8be6f2274d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed8d74dd-7bc4-4882-820b-987e14fe469e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5063e8-89dd-4326-a71d-d5e8d7debc98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a300b2-3f2b-4cff-bae9-83b4948ac275"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e3a219fe-02c4-4de3-b994-a60ae1d091c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "079b9203-fd35-4f85-ad42-64114a5d3846",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef3fc7ee-c09e-41a7-9f48-652370418654",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "88461cf3-3321-4c71-898c-3c3867696d09"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9205dba7-d0ce-4034-ac58-31fec62cad4a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a582269e-d9f9-41dc-941f-4cf6c1393482"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "419d1d54-adb9-46da-98bf-0c5c6069d367",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2640f20-c6ad-4d99-9b74-6f23b5fd4927"
            }
          }
        ]
      },
      {
        "id": "973f6d13-735f-4356-8b0a-8c9c32f12459",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "756b5547-cf5c-4ece-8d63-65d4f16eb3d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eae83e74-f046-4784-a3af-e227f8f72f8d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4d3d04a2-4690-4f80-ac86-cc6b7872f3d4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f44498-d996-43b8-8328-879fc4f3622a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba265b9-324e-4e13-921a-482a1d277b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f4b852-9f16-4668-b916-75458bfb732a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aed01e23-477a-4688-b6c3-e8770ce91615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfb2efc-39d8-41a3-a0f9-ea796cab8921",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d58a902-4670-415d-bb04-a78b7f60e7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee07793-c9d9-4c0b-a871-3c8ccf7e9c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c118114-1537-4266-bfe0-7d71db7e6566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f180dd9c-04a5-41b0-a63c-d5b0003f907c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26681022-d2bb-421b-b484-cfd9cf54c201",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946ca6e0-bc3d-42ed-8dfc-e4db11b85ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9875bc1f-fdf1-4832-a377-2ae07c4eea73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0648d081-06da-418b-9d1b-c8b0444555ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17e3e172-e45e-49ba-9187-747459605a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfe268b-b622-44c1-a549-fea99a4628dd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac532118-132f-4d5b-a26b-723c481ec628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21d9973-f5aa-4e14-b69c-39cd4c2ef2d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e905658e-e8d5-4c11-bddd-9174fc56a55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1588934-286c-41f3-989d-14dc2c92b901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3dfeaf-d7ee-4590-9edb-fd02bfcd4181",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f53558-45ee-4995-b6e8-04369d18fec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a86ca8-3ac9-4f0d-9b91-63072b3247c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0412d133-92a2-404a-8803-52cbae3df6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e37b585f-1276-4f78-8329-d1cf44cc9460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec74b143-54ce-4780-bf87-6542822d8c1c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2042fd6d-c822-4d12-a07b-0fc902000c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd78c225-7533-4e5e-81b6-8bb164d150f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03cbf5a-2238-4d37-abaa-571fb0429e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d06bc5a5-b9c4-4ba6-92e7-fde3de3c07b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d369f3-d635-4033-bce8-f7ffff67316f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b860cdf-2807-46d3-a45b-e6c5eb6cae78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fedb6497-75ca-4fa7-b479-153e733df4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3199ab1-2b3e-4c9e-b8e4-0edd30b2b2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37e6f5b1-4dc6-40e3-8b0b-36fb64757e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87ab9e8-668b-418c-842f-5c550faccd24",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43b672e-1bb0-43cc-9d73-565a7bd4300b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2339951b-9716-4a1d-9033-463762aa7dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4353f131-f374-473f-ac49-660d33d2b6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d885eb7-dfdb-47a0-b3b3-5ab39bc11f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99405018-6d11-4c7f-add1-6161ac42447b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e21c9a-d20e-4af0-9358-97ea91d6c3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a55ad6-43d5-4105-8f03-9283d611bc36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e008fa-c2e3-4d1e-98c7-ff65bde10849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c0bc219-92e6-4bf1-9386-619a703088da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b06184-a918-44cd-8f81-75bf194ff334",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0f4395-17d7-488f-81af-560daa2f1014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199ca4af-4c48-42e9-a948-df67964bdd9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7829a9e-cb5d-4404-889a-53e4d06f8ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d506aab-4b3e-476e-90cf-98872f23a0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb004098-7bad-41f5-a922-98648ffef7df",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa25b81-6a16-4b7c-98df-d0cc1c3e9ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49a57ff-b003-4f69-af8b-196d2880f9db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fbeb77-d433-45fb-8afb-063f65ada800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "838f944b-e41d-43c7-9621-6f7f09a660de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631d9b1d-0413-4296-bebe-ed070f062326",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773840b1-9627-4f5d-9548-c0a490d404ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201fc8c8-d8e3-49bb-89ae-a9d464f1b356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248d353b-f7cd-45ee-bf76-b19bc430a623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29bd5797-43a4-4e87-9d55-0cf0ca9114c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b2b4c7-1efc-42a8-8748-a2ce3194fcd4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96fba86-7f54-46dd-aa34-e75bde2e98dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c129322d-e7bf-4bbb-b457-66278cabf3fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e1a62f-c5fc-40a4-9961-229b554adef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67215429-f155-4fc2-a037-e36140d3fcbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1436b212-f14a-4855-ab7e-0c8cdbf7fbc8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae8b2ba-5f43-4b03-b2be-36883383f14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4722d335-2fa4-46fe-b2bb-f9275338b529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98c3bac-bbc2-4e59-8629-708cd8ae721b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b184d54-9f8d-457c-8d10-f89bee8e40ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a461bfd-57a2-4587-b8d5-a8c908039688",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7508b3d-b695-46c6-8d60-ddaf312a80bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9e6117-a204-46b1-9215-01e48a3167fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1f08bf-8ad0-4ed5-974b-1332561acac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "406d3284-70c3-498d-aa3b-bebb8c294cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4f5139-1227-4cbc-833d-1e36e6f35601",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add2e650-a1ee-49c3-bb73-b99bf961dcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97067b5-1776-4c1b-a9f2-c819b6e788b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19a7ae1-8a9c-4347-980f-55807cb1515b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa70835c-38cf-4656-a168-058745ea0bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6896bc-c397-42a5-a6ca-65837af1c98f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085babe4-65e4-46f1-a861-752d1b498250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1bddbc-92c7-4c01-8030-dd579bc4269a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160a4e4c-0704-425a-8052-d6e8c03d0fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ab79138-f9b1-4c7a-a8be-e18c5a3e918b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88cef8e-59a0-4813-8420-497348fe12f9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6cf0a2-5b99-44a3-a9a0-54dded0b78b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8f3e29-b179-463e-8a7d-1a99bc55477e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13158818-14c7-4b6d-9f6a-96389e130cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "05e9a4a7-9c5a-4d2f-94c9-ea7fe076a867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa172a7-84cd-4414-aeb0-3b27407a2644",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f82cb0-9cad-4ae7-9de8-865fe7b470f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30eca276-9208-49c3-ac68-1b301d7c1a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329613cf-3aec-4f8e-80e9-41cab8410a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27679957-457d-42f4-8f56-20c1208d8b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723c279e-f653-4966-9118-e1a1fca4be60",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cd9ea2-6c69-403c-89a3-41ba56bdcee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638b75fd-8543-496d-8e15-5dad115a4ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b38b96-7d2b-46db-8d6e-e0298b2cd084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1377676-7441-4111-a868-43d46e9f85ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2a94d9-ef44-474c-a000-e66bb93c2899",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb161e3-1402-4732-a6d9-2be0ccf2574d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1910ec9-6f60-437c-9a76-c5cf4f009db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905f694c-dd8b-4f98-8127-c4d8020d655b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd0c5f3-694a-4fd3-8ad1-0392d87d460d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed582a4a-a96d-48ba-b2f6-efb03b259128",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a35c4f-2d71-44e4-8301-7160ae528f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1f44cb-13a7-4f43-9bc2-90d498c97829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc91c5c9-52ff-4c71-9c8b-6d70c5690743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b341b3bd-9b0c-495e-8376-f56a0e9aa59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132fe661-88ec-41b2-b939-87ef09a07333",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f4d66e-e992-4be6-bee4-842186281e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146a4f30-7aca-48a7-8273-e0ea5b979d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9d0b10-e742-4887-baf2-845065965006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c61589e6-d525-4856-b0a3-584fd61dddee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f0dce4-5f9e-4e6a-bfe6-f78e8d1e95fa",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663d986f-6b3f-4ad9-a237-a7ef3913bd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c50fdda-7050-429b-afc8-4b7e6c804264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507c9f33-c9c8-4b9d-aaf3-2da2d29ed212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e83c7acc-52ad-41a5-9309-96102b62c663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32394c4-3a86-4176-97bb-63bcb829845b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22dbab55-718c-4c4e-82cf-0dfb326745fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3c17c1-82de-4e48-8e1e-98c0105ce151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0501761f-e841-467d-bf21-86e1b57cdf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f247ed8-8c4a-475d-add3-aeb22be237b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4596748-1f54-47f2-a002-ce6b0078a3b7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dfa219-55e8-433e-b639-edb03564d957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a74077-ddcf-4653-9446-765aeea785fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b400b653-9520-4be0-8e6d-00102200a807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "751941a2-c613-49d6-8b16-7d3dfe8b27d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea98dea0-84f1-4cb7-b2a9-0fa83186b7b0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6629c91-af1e-48dd-8a6d-1c7bb0c4c7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec19fd69-7a19-431b-9769-1c2e3cba1f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6710140c-5880-4cf7-983b-e694ad2fe022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87aea99b-0a85-4911-9604-6ae7e829a25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db58e12-316f-479c-98aa-fc1f3484bd4a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e952ac4-4621-4c42-a031-c693eb2c5093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8647be6-a823-4df5-9cf8-0c7be4d1d50a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6dd6df4-e72e-4f9c-abb9-b48fb818586b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7e1b16-64aa-418d-988a-46a40f82f70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d781eac1-a63d-443a-ba10-a489b598e42b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484e2e93-c846-4ad3-afcb-764faac88fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0058894-f256-4079-9857-a89dd24a6be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9a2b09-7e0c-44df-9908-ad0f33aa9f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "74e3911f-ee38-477c-bf84-2330a19b768c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fcb698-3c42-4c3b-a076-c6e0e3dabfbd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd0ee93-f8ea-4d5b-94aa-a046f5578758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c93c78f-5ae3-4baf-9cd8-4a4228da5953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de28d63-0f4e-4736-9a1d-5872d086e97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd89cd05-4342-443d-ad38-1616aa796937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe94441-0e72-4e4b-92b0-8f464c4b7521",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdf77a2-2339-4420-bf66-17f70bf0ea8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712318e7-9346-4062-84d9-21d805638150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65a646c-5d5c-4b80-aff4-adb3c529f5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ddd3180-1e4b-4a26-b164-a7e109304beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70493d13-6f13-42ca-a29b-970ba12bcace",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a56244-2485-43bc-bb4c-fddd19c8e57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "206fc6b9-6204-4f7e-b141-70c47169060c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e702aa15-8233-44b3-9a8c-124ee2c4efcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6b52ab-2ce9-4592-a768-6814f438c0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a39b65-ef4b-4389-81b2-31bc59bb4ce8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644ec77c-d31a-4299-b05f-368375f45d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70138452-da78-495e-b7a0-9e4b1e16cf6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c94aa60-769c-42fe-87f1-884a82319550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "693ae643-4675-4c77-9a4c-e2e385977148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b74d3b9-17be-4216-84be-1503f8fe427e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489f70bb-ab47-424d-a7cf-22d5584ffd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315ff981-358b-4c53-842c-61ef0cadb843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a88074-bc93-47e7-94ef-8769dd305f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68c0a4f1-3857-42d9-8bd4-054a56c3fe8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba36d2b0-feb8-4e7f-8273-ca291d18933f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7522f9c-3651-4063-9fad-c858857aa3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01b4189-fdb4-4c7f-b76d-3defadf693f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6b737f-0482-4219-be17-e7fbff24289d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b558038b-efc2-4229-a6e2-d04810913222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74cc302-19b8-4031-82c4-0f37e3a59298",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4ad61e-fab0-4296-9a08-cac50d3244ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe4ea82c-2b46-411b-bcc1-7d2eca098352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f9e050-df27-4484-88d9-fc2ab6fa08cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a672ea9f-acb7-4e9f-994c-947280186551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688b5dfe-c872-41a0-9673-3480b1a37443",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b10e4b3-c82d-4228-8545-27fb417b426c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b249fded-633e-4a18-ab46-823857b25749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675e5d82-9980-4135-81ef-bba9fc6d5864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b21bdc1-cffa-4355-9f5a-0e26e4e16943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee82f4f-a218-447a-a31d-2d3fec807993",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69ec0e7-7587-4f9e-9a28-d369cf6e8dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44ab7c3-8d96-4202-af5d-7141d1e93566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20d3f19-775d-4641-9896-663fceed3a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7caaf6e7-3cd0-431a-b463-9dea50855a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f853e5b3-db46-49d2-b71f-1ef98a1f0c1a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511601cb-8e98-4ac4-84c0-5b9591809bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b546f22-d78b-419a-a099-52cc59b7926c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f239aa9b-04e3-42fb-bec6-f815284bea83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7391dde9-0307-4bc8-ae42-b16deaa350be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f03a3f-62fa-4c16-b23d-8c8393d01b49",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b637c21-ef98-4592-9a7b-f2f17b77a761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9ad501-4aa1-4c55-868c-0b3474524541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1eed9ff-bc8e-420d-a302-1ad3f5263cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9eed1b-e834-4dac-a7ae-1704c76e9012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbc19db-c5d5-474d-978b-1bbe85430ba6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6dcd1f-dc26-4cf3-be36-5aa0d48db0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ba4d78-e87d-4fec-9fa9-9f7451315428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c279880-a147-467f-9dd0-2f2ed0909728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a76ab0-6446-4449-8277-b5fdb9ffea6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d20f517-72f5-4b30-8551-a29806f4a8ef",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b68a8a5-2740-4432-893c-1b9cc9e5b195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7ce689-6aba-4ed6-a535-3d5527aa9526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a1717e-09cc-4325-8cca-0881cd679ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "734b5726-3e46-496b-82fd-388ff291cbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65739b6c-173a-4f18-a003-9dbe718422a9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185f0fb7-a3bf-48ad-8185-f4f3cb8da46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9214da-ec86-4528-aad1-76c1c75b63b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef00994-60d3-4085-9ffe-b07b138abf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "281d0c11-7fe9-476b-b0a2-4033651f486c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a613c5-9b81-40bf-9f17-af1173ca45b4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4ebcda-d47e-4d98-9381-eb0ed4e82e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b947bd60-bdaf-42f9-ad1d-9b560cfb63ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b705b1-8f5b-4754-968f-2db1d0c6b15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "22de205f-2dea-4fe9-af41-b25f6b3d8290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431aae44-c237-4991-ab64-34b0a24cd185",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610d6ac8-49ee-4090-8969-2d6fd402630a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39119808-55a2-4990-b528-9e5d8fb6e6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e812cb-f671-4c0e-88b6-0101aa23730e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a928c069-82e1-47c3-850d-01524a88160d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc83097e-c2b5-446c-90a2-c8c7aa6a9ae4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b669ada4-b0a5-4752-be43-bf3b16c30fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19339c4-451d-4fa7-989c-cde2bdf8c9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea6c56b-e266-402a-b145-4b0abd397b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "198e4b07-9669-483d-9f17-dda8e41b5676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c720c6-7fac-4365-b91b-0326782b35a8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84014c67-c351-4f5b-b99f-c115ab3b45a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467b3679-6142-4d6e-bdb8-efdd32b59d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f55e589-0c53-432d-adb5-57491a0bef63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a26d42ec-61e1-4179-b74b-75b7739092db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7accd2-02c4-41b4-98e9-3cd3d5c3b572",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6438e55d-025a-4915-84b7-4de5706f3ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32ba7a7-ae80-4acb-8c7e-b6c1f9bc42a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab36eab-6bb8-4b1b-b604-69224ba6f10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9841112-4363-43f1-8ad5-3730150920e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd20edf3-8a82-4186-8e39-cd4a42c0c8cf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44c09c8-5da3-4caf-88fa-bd7f8e8906aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08454880-09bd-44df-b9b9-0546c9c17f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c69c36e-32e1-49b9-91fd-e3214798e4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7cb6545-2df7-4822-9f40-a58fb965d689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcb7bde-347c-4da8-9d49-049f0af8e9b0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f53bc52-30fb-48d7-842b-6ac4d9cbf35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68bef319-2465-495d-b97d-f750214a5ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187740cf-7a33-43e6-9699-7dac5ce94889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "121815ad-886e-471c-9cff-c7c0a675972b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8358c1-0157-4ce3-a1e2-38f55324171e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e78656-679e-4593-8a0f-a4ae788e1890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c772378-befd-411f-b91f-dc085a062e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d80ae1c-fc4f-444d-80f1-a115b7b52602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cee0821-2a4f-491b-8049-7aef2240e9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4ffd7e-16b5-489c-ac0d-13a90b05f406",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6adf23-5a17-4ad7-9bae-222d31792b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b707d1a-b0d4-4009-a3ec-c870fb3cad3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7e3f7b-6620-4109-85ea-eb6225536fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "772af713-b8db-473f-8624-b3088e8b6b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4bafb4-1328-4de4-a555-50448a7a7d77",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a594e83-d8a7-44ce-9ec0-3a0c2ace5cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b87bab-0b9f-4daf-95e9-94e5d1d58972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1931d96-9f86-4fbb-8956-a6d717c938bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c10b127-c745-47b8-b41a-d69219cf8055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9754a74f-ede4-48db-b9d5-0006f93ccbfc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d26667-2b77-4e79-bd62-249536a6e80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29268b4e-0b92-4b0f-9e70-e55ea69a3b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7033b32-9bc4-4269-8315-ac14938c98de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93d53363-7c2a-48ee-99bb-6678bdd0bd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9863b9f-0f7d-4923-9468-459a8230aee0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820324bb-1ebc-4de3-befa-507b153df602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ca5188-25c8-445f-83b4-edca743c5faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d1368b-ec22-4920-b6a7-607bd577b91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1783d2-49d7-4755-b7c3-2668c37bb116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a36207f-d100-4bf0-9ed6-e7f6dec312ba",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5789524c-189e-4b76-b6db-b5a12bbdad48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbb027a-9420-4210-bee0-61ddb5f5feab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fde134-2628-489c-9ae2-e590adee0452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8f69a617-cdc8-4ab6-a73b-ea3072cfe5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a76c19b-eadc-4e21-8654-b92dcc361867",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829875bd-3eea-45f3-b719-3a6e5608b050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5a4be0-edf8-4a8c-82cb-9146123217f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106fee5e-72ad-4651-9908-3f67b8263ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "522dc765-f47d-4e32-bb83-bee32271c1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e9a5a8-445c-4da6-986c-19a5afc074b3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dccb8d-db34-42aa-af32-032dee7ff4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9fd17d-0d15-4174-8aa5-f476c5cfc3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20806c7-74ee-431b-97ac-b80382697e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5568270-b35b-49c8-9069-d60e4449f8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e869bafe-5e4c-4a68-b992-83174abdd5f8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d07ac0-11d9-4849-b617-5bd2060ff4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce8197f-2c07-469a-96a1-be4fd3d818e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa752bf-73ba-401a-a00f-da46c3fd6893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "44b35264-aaa1-4054-8e96-22d31ebc6581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d04717b-aa02-4823-865d-d675ced11492",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f8d62f-b85e-474c-95be-84c5881a8d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c9871d-1f35-4138-aaff-3c9b2b72342e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f0861c-a059-41da-8bca-887a8e6ddf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ae1cbe-afec-41d9-a21c-f5d1743a9599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62f5718-5682-42de-a876-b8ccc1f09e5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7577a7-a192-46e5-a0f2-968bbf9c3ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3efe2652-4ae5-47f3-a6f8-8d65a245cc29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff34e3a-b057-4985-af2d-df4e55a62d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b22161d-0b7e-47f4-8e5b-fcebd84e711c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5396f7c-8098-4692-9445-942b0f1628b4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88ea40f-fd26-4aef-ba10-3dcac8d3a674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3999c7-5793-47b5-8bf4-2185ff4a7fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d738405-addc-4fec-a7d0-a116f569a4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4588e9-1a6d-419e-b86c-17310c347659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd56caac-582b-4df7-81b2-ab41ad72196b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7dedee0-7f71-49b9-b4f4-7b9c2bfc5c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea037ee-a8b1-45b7-9990-64fd75614e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e2f5f5-e7ee-4a5e-98cc-f750716f3be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "36506af0-8ba5-4668-b184-0d7c13fb2a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf2447f-68bf-421b-b73a-aaddb7d8c5bd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f084eb-91c7-404b-8031-9f47b026ad9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cca2677-d056-456b-97c0-f8a7a444cb5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc0e932-90b6-4722-881c-3b51fd0711f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "925df4ee-c587-409e-bd85-b5f1e369f87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c561430-3a35-493f-a28c-2b72b2c5e003",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7858c426-91fd-44b1-b6bf-7a39e4259020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c001e73-4c5c-4314-9dde-8e868b730b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868292c6-e5ec-4d1f-afc9-6c60961597bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17795c26-6a55-4268-a19e-1b268568c5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95484f8-e9a3-45d6-b168-2955fbf19acc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae90a75-1806-4b57-960c-9505a79ce339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3adec47-cce4-47cf-9453-d2a2a0867a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9b22d9-c950-42e3-8332-69206f14af96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f96028f-c3a0-43b3-a0df-15b68789c41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894ebcdc-1046-4a42-ab15-1b9a8e082b9e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e37d81-3ba3-4a0f-9961-38a4c449e448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34e5be0-8d95-45ed-86e3-eefad4cbf4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51ff7b4-1dd1-4030-8132-eb88b3cb94b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7c0443-5c23-4d92-b159-6f204e641995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac79c310-7ea3-4d7a-a788-b2fdfac69de5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee1c8d6-3a87-4d97-9413-f064b824ae31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02732f87-fe48-467e-8d33-fa0ba385810e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d79c097-9da6-4713-a384-8904c5f86432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "89d925a3-f5d3-4c5c-8653-d625ef063535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4735c0b-0b70-449f-8f79-502ccb69edd8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497cd973-77f6-4c02-bb00-8ba3308e9b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50698bc3-9052-4b8f-a2e4-8e1ece8dfc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65964fde-10b4-46fd-ab30-60b0560c5c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6761209f-6b14-4c13-b408-4f6eda190e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2d04fb-08a4-4b26-8274-e4608c2b774e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09a9f8b-ebe6-4109-97a1-82b78ec06a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2deb75cd-9f7d-41b9-9d15-bdca7ef6ee0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3029159d-09ac-4125-ab5b-2a0dcae4f1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a23a288e-877f-4834-a09c-f1d39d1d864b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addbd108-954d-43ba-82a2-fc9a2d6cd3bb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47781d61-3a02-43d2-a721-851666e51b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b19304c-f5ee-4a2d-8571-3b00a62ef54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f968e9-b297-4aa4-829a-cf73ecb42bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "624b6cd5-e25c-4972-833e-ea1557932a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf04fa6-cbc4-4a9a-8531-2bbd0890dc93",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56f2341-2c9b-40ca-9253-4ee54b7144ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4063ee6e-49e0-49ae-a560-3da2ce1444dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeba26fb-1c07-4fa4-a7c0-14ac6da9af4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a02239ca-f12c-4ce7-a6ff-422b45cf933e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f1ad18-2bfb-4893-b3b7-8bea57c681cf",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ed2170-0ea4-4c61-b209-d320924464d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cad1d69-ff2f-4fc1-91fc-51466045b9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e96b165-db05-4f57-9020-1b6953a96d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34755f0f-25f2-4e7d-befc-a3b607c399bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87747229-7dd9-4af0-b3b6-97bda7871163",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e185a6d-5f62-4421-98b7-c598a5d13d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d863855d-ae38-4cd9-ae4f-1558db088cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71873b67-0c59-4c57-bb9e-b3789edefd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b62573b9-b3c9-40b8-bde0-61b4f5982791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d062cb8-bd5e-4ae6-90cb-f7789dd3a82e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f3e890-d8d6-403b-ad25-49a603e0d8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac46930-5d56-4229-b9a5-fe689fef1fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47f5e7d-6275-481d-8b65-e4e29553f0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "427faa49-d866-4db3-9235-4df77ce65713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55db5305-3f78-41ea-bcc8-5df3e3c4b99b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c718869d-808b-4eac-9d76-4c45da5bb523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407b51ba-aa85-4ef2-9693-143e03472e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636d6bf2-5eab-4770-adaf-695df691b4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4015fa59-d38d-41ca-bbc3-1f4148bedbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d586ee-79ff-46e4-b6cc-1c01bcedbfbb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bf649f-598c-488b-9a22-08e2208ee07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4256de3d-0654-410c-b16c-b6746340f452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491eff4a-4458-4f9e-b4aa-5d268f9b0c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67e4a133-f706-4c36-a685-fd1086407896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000212bf-8cc3-46e3-a11d-4ee33c5cb6cd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b69881-a13f-44be-9695-314a8ed607a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1375b37a-7e19-4d71-b030-92adf561d1c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d40b5e-9165-4200-a398-edd1fc415fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b865d0c3-8321-40b4-8f96-8012372c9ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7678d1-144c-42d8-9ef5-214ce5b4e9ad",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0ee09d-b7cb-4e3b-ba45-5c25ccb5e295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f78a28-2e83-4949-a4c4-230c557dca90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63231644-45b5-45f8-98e0-678b43abd3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "121a8cae-3607-4b17-8e6c-3277161689d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cf94f9-a4e0-4973-9b93-1268375722d6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749fcc37-a371-43d2-bda7-41369dba59f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e247cf00-e97d-4c77-91cc-305cd0bfcdd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c57760a-e91b-43c7-817b-da7ccd85a940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e058041-f377-4a94-a2d2-a52e3e5deeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89df691d-db3d-4cd5-b8f7-fd6f151313d6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22fe189-ccf9-4bd3-8bde-1e4fa03fc08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c685ab60-749f-4176-bdd3-4c692860c46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b994147e-eaa3-459f-9bf8-a44142a725be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3480a25f-d3d8-49e9-897c-54cca9eded92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d16e84-75db-4fdf-8cce-c03149a85243",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79b210e-1248-4c1c-8553-e1b35e50d3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3398fbf2-8e8c-4b52-a28a-653e235261a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2358ebd-b3fd-407e-9e39-156f318f2267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cacbdf7b-a07d-42d5-9b69-3e3a9b48a5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e94f0c-96a1-420e-954d-a34a67963f39",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f46b02-252a-4a23-8ad6-14e6f248efd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7623b73a-8a11-450c-b7c0-3744f1955eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47831ebf-a882-49a8-9ca2-9c8302edf140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa77cb3e-7771-4faf-a3b3-7cf2793dce9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5cce93-3a22-4384-91cc-7813d92346d7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8b83c7-280c-4d24-bbb6-cb5a39795e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aca451d-afc1-4c63-8604-7724ba4019f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530e2d78-2139-4be6-bb30-b7d080591181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3213dc1f-7132-456f-ae01-6e1c78827d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed634462-bde6-4140-a08e-3516cb39f503",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c53a8d-d009-4686-b79e-6632892a7e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3aa445-711d-41a2-8c12-3482a7dda544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4659a507-73cb-49b2-9ee6-5efbf3fde8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b97f7b8-418c-401f-82c8-74bcd06f58fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47624528-2da1-4b2c-adc0-ebe069ed3cf7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18a8d27-f3e3-4e10-855e-aaf8c3acfbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0077dde7-01eb-4446-bc06-9c2a313506cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd8f537-d026-4fdf-a1c0-c5fa53a3f13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67f5b97c-3295-4c5f-9443-874b7dc53735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06db3e4d-f313-4bb4-afe5-d376d3f5ba67",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda4d42f-3675-464b-984d-fc8510fb79ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a802be-5d7a-4591-b2a4-77fae5a59133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6609787c-b431-48b4-bcdd-1231288b8f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "050ed6b1-390c-4881-869a-e522854bd17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9475e919-adba-4d3c-be43-a0163cc24fdf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c4dafd-72cf-4a2e-997a-7d0f168c7132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc9e7f3-b823-477b-83f5-c0453faa3c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54a138b-42f0-4aec-86f3-42163f31d989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4af504-8c3a-44fe-b50e-fc52fe0a0d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b54b766-4838-4de6-a2a9-183666c08756",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740d31fe-0b1f-4cdf-9d7c-d3cb1d557e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa368f9-6857-4ffb-925b-4e7606e674dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0725fde-fdb0-450f-877f-337c1a5ec196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8103831-d89c-4613-94f5-8c0ac7d816d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d913b7e6-159e-49d7-8f03-866015419858",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ec3970-722c-435b-83b9-7ed57a3a3460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c48ce9-04be-4237-a476-4757353b88bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e8a5f7-87b3-40bc-b4d3-90913d4e9a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6760f5-4efd-4895-b382-e5f256c8dd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef2ac2c-d5f8-46ce-9c36-3059a5557fc8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cff334f-a067-4cad-9b04-ffa33a823e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af261ed7-d0d6-4e6c-9154-b918d3323c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5adb3ef-6314-4aa0-a809-1e6374747745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "60dfee97-9ba8-4750-8926-dc0b7a158ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6128db82-fb0a-4eeb-864e-9a66e958227d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85a68a6-ea9d-4204-ade5-b8a966916bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "78cf7156-ea44-4785-9289-407158e4a425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09baff99-e758-4049-9bce-648f91924a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b521b7b-1012-4e03-bf29-4aef7ed50c90"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "21d30f05-ba68-4d8a-b2f8-9c8063affc02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9502e598-9f10-4c35-93bf-3deeb8648d9d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c5cc38-bbd4-4e77-85d9-3462cd3e8cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07851e29-f53a-4637-a2f3-a1ba272b16e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec1e4e6-fa08-4a31-a097-06cb181c5a00",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a95999e2-3512-4f38-bb46-388c74092f7f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0e189ac-23f8-4c2e-abf0-44639708ad7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27e49c7f-963d-45f7-8f59-663d78ac9cdb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a79ae50e-448d-4e07-83d3-a68d2ba90981",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b972bbc-1020-42a4-a7af-d9c5a29d4add"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3221fd44-ae65-4199-b12d-c871263cdd91",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40c145f6-8da1-42ae-a372-68026ffbce25"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d1c2d07a-f814-476b-9848-97553c1925b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "888e5044-2650-429c-9d81-64112add982b"
                }
              }
            ]
          },
          {
            "id": "74aebdb6-6d2b-4dab-bc4d-5586cf70ff84",
            "name": "Positive Testing",
            "item": [
              {
                "id": "095dd943-f574-43e5-a2a0-d3504a176cdd",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0721a2cf-e8d1-4a9c-8cc1-26c1e6acda9e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e8b473-ec1e-4b3f-841e-41401fac7d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b49b8a76-134b-49e8-80d0-f5566b55026d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aeb93d3-357d-4565-9339-e79a93d7aca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2933544-f4d6-4823-b781-58d4da6bcca0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b286e7f3-7c0b-4a5a-9d7d-eda0c7d5cfac",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a026e835-e71c-4e6d-af0a-31dc4d96197b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0984f3fd-89a7-4c75-a2ca-351843027913"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15a9ee35-6565-48d8-91bb-01444192682f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4f26b841-5983-40a0-b810-207bd517247f"
                    }
                  }
                ]
              },
              {
                "id": "0d4e3eaa-dc05-40b4-a189-cef77d062cb8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5632d69-738b-4d3a-a331-6e332cb7ea15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d443939-cdda-4f35-a5f1-390a5ec9d9a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcd15544-a97f-4ade-af1e-352d8ac0116f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7ef1d8ca-6ccf-473b-990b-1879c7cdaa14"
                    }
                  }
                ]
              },
              {
                "id": "8c413d8c-3568-4e5c-97b7-bd3bff70f0ea",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a249499-a708-4db4-9bc9-11012ef2268a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ebcd50e-c114-4671-a400-61174206470d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b733dbae-7c3b-4657-80d4-606c9b6ed932",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d69b71fa-da43-41c9-b4cb-03a66f675b24"
                    }
                  }
                ]
              },
              {
                "id": "fb52a36d-3b05-45a5-9b09-33a7ec3c41cc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "515f2cd0-a87a-4d1b-8bdc-6614df88e3ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58e9a48c-a9b2-43f7-bd97-5dbdf30f052f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5ea5bd3-3706-40c6-a3af-bd741b9788a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "29335137-c26c-498d-a8a1-22c59c054863"
                    }
                  }
                ]
              },
              {
                "id": "0f8010c5-ca14-471e-a158-ffacb69b4fc0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "914aacf8-3f28-4a29-bd86-6e15fa195e79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bb82772-dca7-4bcd-9c20-f6a3530eb4d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef6a9c1c-c8bf-422c-9126-34c3d949b624",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8b95c41f-943a-4ad3-a732-94839aadd5bf"
                    }
                  }
                ]
              },
              {
                "id": "aedc622f-c71b-4465-9de5-cab33220c1f4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3666e694-d797-458a-9406-8e97726985d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7db1c7b1-baae-457b-bed0-5161a91ed3ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c8feb20-dc4c-4036-a6fa-30532ed4f3c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4916c411-c0dd-4f92-a0b1-012f287fca75"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b23ca03c-abe1-4ffc-90e1-423664b8fbf8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "957ff42c-c939-4264-a459-d80dba25e486"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b5d3f922-e863-4d6f-bdf4-5d5e3d1cd7f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab21dba2-a207-41a5-9dc1-976ee7b0c239"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b771dc37-d9a3-41a8-ad95-d666fe43c0e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "40695ee8-4c75-42d8-8a4e-d3cb0b16d9c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ab707e3-fee2-4642-9a97-d160014c5724",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d64bd49b-fdf1-4fa0-9d2c-c6d07dbfd1a1"
            }
          }
        ]
      },
      {
        "id": "77cb1cf0-d5d6-4d96-a049-02826031b6ed",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b8897e2c-e986-468c-9b05-68a5d001c0fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a3ab040-2dbd-4fa0-9c27-8b94b8b8dfc9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2de90ccd-71bf-4b7e-a535-bf6eb3b2d5ab",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdae3132-c400-4321-947e-6817c3b3b6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f27393e-2ebb-48f0-8fcc-077a80837987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adddee2-9f71-4c11-961d-1bb6904f7359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f9cbb31-37ef-4c0d-804f-3647f379be51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ecf925-e7a0-4f1f-88da-77148c64426d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911a7f13-d54e-4dcf-a706-012ebea56600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea689cc-42dd-4d55-946b-f407279282bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a577f68a-e7a3-4758-a712-ae75cd70fab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d272b49a-d28a-4ff1-ae81-e337ddd78c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a3e9b4-c6bc-4d72-8176-cc15841e587b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495f74ae-7671-447c-b2c1-9f9d2c42c83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75cf2c3-194f-468d-b8af-7275ab467033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5408a0bf-c97d-4c67-81bd-e02be12b03a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a02bdc67-dcf2-4e8d-be66-61afb98e6d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d10d5cf-4177-45d0-93e7-3bc8d5c06baa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2da4bc-a58c-4a4c-bcd7-93c606d2ba7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4997bc-d0c5-48fc-b89d-9362fb1d1a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd43391-2569-408f-997c-cb4f8e3b19f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77575853-64cc-4438-91a3-e79751f3cec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70401df-2f07-4595-b44e-47166a7f738a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9105f678-ca13-4946-a2e1-632dc8855a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398a9743-a977-4a45-8ce7-7ef4e4af5e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e54a61d-d951-453e-86c3-33ef3f0e50aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5ff3c5-d372-4eb5-b894-37ffc468e79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fefd07-4048-4a4d-95ab-b30d315907eb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104be309-468c-49db-9d97-d3e5c0d09b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed35eeaa-689b-4799-9a22-cc4e8c5dd609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc686406-4561-4b22-bf61-1ce1c17a75d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b61e5508-f87c-4fe2-b7fe-2917aecfe20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80918069-d27a-40c9-9dc6-30d1a2a147c3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6337187d-7459-409e-a1c2-3f4d9f0e546a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5781ac-2b8f-4b7f-b982-daa5c3a612ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04eafa6a-0efb-4dc1-b5d0-8ab235479062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1b07e4-8324-4164-aa59-ad241398d614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554ec648-3ca3-4c4d-ae7b-061da13a974d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959b6693-6ea3-4705-bc4f-f236a349a8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7187014-6c26-4aef-8e04-3d26f0455c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a990f33-1351-4d8b-be1d-e12206eb2db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03d2738a-ef70-47ab-99ff-2f80e693f995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43acbc9c-6cff-45bc-9534-7efb41a34e9a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd336230-b744-42e1-87fa-5f63154d8ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5446fb8c-c17e-428a-800b-010cdc7a90ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945986ed-a9ba-49a0-8cfd-cadd636e6dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ef86f3-54ed-461c-bb95-9835c20974a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e644183b-7572-4b1a-ab42-1971189ab1a4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd5cc48-cfdd-4c33-bcfb-97c18437fb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8da16d3-001c-4691-8e2c-e28a04265d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c5681b-8227-4211-b822-54d139dbcab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6861934-7eb7-4632-9d7d-7a017c9bc7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6944edf7-9476-45b7-82e8-c5a815173106",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0950c18a-fe6c-4359-b2bd-56e77968eb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a425417-5c4d-4120-a9c8-d916af42508f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9bd587-9504-41fe-a3fa-396e62f30221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9d58623b-27d5-4fc0-8de7-aa1994301e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fdac1c-6b47-4d64-af8e-0d90538fe35c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf642f0-4dca-4d79-8053-23cdf54474a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c4e370-e86d-479a-8e04-2e612507c0f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4611ee2-b6ac-4f76-b7a1-3ed41cac7601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2cfcbf85-0f37-453c-b48c-54a10c827ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd18344-dd21-4591-9e6e-52d26f57e219",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd8593b-aa3b-449f-a7bc-cc4e1bf4d79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30080401-2931-4470-a429-c7bdf6830d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bae03ef-b34f-4fec-ac82-f7e39b3e78e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49abf014-2f6e-4ede-81b9-93d4722fef4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b2aa42-ce97-4474-b64f-ba39a2401cec",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e025fab5-1a4f-4b3d-ac9d-2407b17008e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d842e7c3-c12a-4fbc-b576-1bb6b71b9351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b44242-caf5-4054-8969-f53951d14531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df204f9-aeeb-4f0f-8b3f-3f2600d6ae80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a1b895-f1fa-4cbc-9d74-196492e7bb0e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f4218e-c803-478f-b5b2-11bedf47fd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e46b13-f914-4720-a7e5-4154bd917574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8eb5842-1523-4e89-8e62-18c027810464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a703f272-04af-454e-ad70-33a36c4ac785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a57461-108f-48e9-8a7f-0ab83b9bf0e2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c45cc1-9fb5-4e81-97c6-65226f2665bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc6b6ad7-4268-4cc6-881c-1cd34202a7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a017d27-0df6-4aa7-a03c-0a7155de1e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9cae19-acec-4d72-8b01-f79c96d57046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d54a18a-8d76-46ed-b7de-3f43d84d6294",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5f5ff3-5ae5-47bc-ad53-ed6c0f04159b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed621738-8325-4353-8a19-3144be1a73a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aae8cca-11ed-459b-b018-3173f3526506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bab1934-e93f-4555-91a3-a49413496369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9f6f1e-8b88-4441-b881-747c4170c3df",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d8edf2-e1b0-4f14-9d5a-f5a1e821263f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a64a44-d2ed-47dd-bd26-2413e6c9eee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5749b01a-8a7d-4ae9-add6-b921d9a9f8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a185e48a-c3e5-4c6f-966c-1f8fda8df0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1e0158-ce96-44a4-a801-513b751c4611",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c104d782-382d-4f17-87df-0f02f47f6fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b44bd7-3bf4-44db-bc44-c024db4f7f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856610f1-bf78-4b71-893e-5c79cfcb5765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f5fe0cc-9e12-4929-81f8-eb68167f3ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16459993-8f22-4821-90f1-bae1b0eb4848",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701d5159-c038-40c6-a13c-76e71a206026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d07015-b6b8-4c7d-be44-c3a3eb2edd0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c528dbc-8e4d-477c-a343-03dfca740429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a468b289-614c-4a60-9738-534d71e2b38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972674e0-f275-460d-a818-176f547d6647",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b94e9e-471a-4720-9b80-c99343ba2759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c258429-f410-418a-a8d2-ee569127fda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fe4c89-e90a-4134-be43-25e7e4f4f9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9aecec-2883-45f9-a6cd-e084fce18698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a350aa-77aa-4c30-bb4d-325132cb08dc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a45897a-9c23-4029-a2f5-a02eaa7c813f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74adee67-14e8-43a5-aebc-7d846259677e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecde04ad-49a2-4382-8e59-3b413f86e40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c49fc51-ee98-48e5-b900-ebcb54b7b611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e9b4f3-28f0-4286-aa36-ebbb2ff318d5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7c53cb-d6f0-4949-92a4-c944997789a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08281ea2-4afb-4d7e-ba5e-efabc7b08e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e285b33d-2125-45b3-9bde-b78c08000d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0264c9ad-3968-4773-b993-966635230428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef84c55f-d182-4b5a-965f-a432e68ec6bd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7854aee6-f4bb-45a8-b99c-e5d2c80af055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56f4919-7c49-44ea-9977-fec6e55d710a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3ac39e-e432-43f2-8795-6a8df88c9984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b85913e2-59c6-415a-aabc-285ca6b271b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b317ba8f-9ea4-4cd4-8c61-d040869a03f0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a337fe0e-119b-40fb-bf6e-662d11fa3f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3e3e24-6a09-492e-bfc0-188391115e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1523800c-ddc8-456d-9c41-eb89d16fc789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89d3665b-76be-413b-b00b-198b6a79bd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c31906-3041-4ed2-873e-255cc28f7363",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59713afd-cc6b-49c3-85a9-07862d62d977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9b11f5-d8b3-44f6-9591-335cec392342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c3b923-043a-4334-9aa8-d7ba6ad8299f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96040a8f-9865-4aab-bcee-10befe5d3d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa5c8af-ba9f-405d-9137-b47dc0abc64b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eaf72fb-ae08-486a-96ef-40ac1a19ab40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5adefec-556a-4a48-b52d-63cbb35bc176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b9dd34-fcb5-4656-8299-74b8ceca5b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a8447f-faf9-4339-b48c-09c43401174e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f9b594-b891-45e8-a9eb-824cf7aa0715",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088a7be4-a5b7-4583-8f75-f2696c38ce18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ee4bf5-c54f-41c2-a038-96fbf12f31c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78786004-f910-4c9f-bfe4-39dc88811606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8d2acd-5bfb-4e29-82a9-80a72979fe89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7287ef-1d83-4c1b-8e60-ebb215225277",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f6354e-ceee-4797-bd4a-7f31b8fac396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c35326-6f01-4eab-bba8-336464a49944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d9bb9b-20d7-4f0b-9e95-5362ecd41fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2d469c-9485-433b-963f-54bdf94b7e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9784b4-d04d-4c5c-a537-bdb7d4c77dda",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170b3f5f-e648-4dc2-943e-e7e292cf3a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf6aaead-a441-411e-a4ef-cdaef81d3a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a346aa-72e4-43cb-8d55-22eef078f68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27bf1577-4454-411f-9abb-f4c6dceea75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12f680a-c615-44c7-beb4-1531ecdcd0d2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771858f2-f4f8-4ff6-ad4f-cb6fc835b2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b5c654-19cd-4cb8-a4fd-cc886cacf3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcbe225-8dcf-4a62-a9cc-5c21a9a06cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4934789-ba81-466b-bd97-8ed94f30b251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a72241-f150-4ff4-8450-1420f49178a9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294af740-6107-4065-9c36-da3ccdd64f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81e3827-72d6-479f-8e3e-9e7f6d89725e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ceef92e-ced1-4199-a009-a344d79392df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11523753-c02b-44a6-98f1-b80f60a2ff85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0775b44-1ec6-4fe8-8733-039b68d8571c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2921fb5b-6ae5-45f6-95ef-e62821fafd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fe29d1-85c8-4fd8-a6c0-8d4ba77dc6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9ae506-6edd-4da6-b633-9383fed4eccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8967129-dadf-4061-9228-014b30845ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1433f260-05c6-4c5d-80b5-f60db7a2610f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f64c313-9ddc-42d8-9d8a-e9f805ca5990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70dccc5-b029-4fbf-adcf-98a0ac6929cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3e5aa5-fe78-4ae7-9de4-50a71204cccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1dc7846-9d07-42ef-b0f4-da52276195a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca446774-e2fb-4bc2-b6d9-c5937693efb5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a446fd60-5446-4116-a16f-edd2ce48a13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2257ac0a-2ec8-4255-a6b2-9bebdb9deb7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ce1a74-c7c5-4560-90ce-b4f6340809b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd139b75-f659-4c45-877d-894e8edb1106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1167c60-c81b-486e-b00e-1dbbb70197a1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92462545-5aef-41a2-83af-7a3af521ec18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad24a330-8162-4326-84ae-db627838f491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9324060-96a4-4277-affa-5b6fd49d880d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d616ccc-ad57-43fb-aabc-8cbd9bdf1ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42718dae-4ebc-480e-92b5-34c712ad3f4d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537c68d6-f5e7-4525-b0e8-48e44f241714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fb3e19-a0ab-441f-8919-52ab1ec108f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7f5cfe-f394-4191-8af8-41f885a87a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf00cb5-ee8b-4ce8-8127-4a71415c8414"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a53dba46-7e14-4a23-8c47-4383dedcbf15",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d638a91-544d-4dea-b4b7-cc50f345944a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4bb530-d906-412d-9f5d-05ef792c5d4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8519284b-ae66-47bd-aa70-0d76001ce081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1a0776-02f9-4570-bb15-037b46798088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5125f5a3-5bd2-4fe2-a203-0b902dc83174"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aac60675-6bd1-4f0c-b2c5-130ccfb6332e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd3a9373-f44f-4fcc-9908-234bc3a51379"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a24243d-731c-42d8-9d16-0fcbd2f60f0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a55df95-2c43-4a0d-a852-23061ff21388"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f6ff726-1496-45c4-940b-05fab5d5e2c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e1065e5e-0edd-4c10-b6e3-ceb9a7adf2ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f742e53a-77b4-4dee-8ac2-f7b1ba60affb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34f33fe3-8d7f-4f1e-815b-39286d61ef7e"
            }
          }
        ]
      },
      {
        "id": "46756294-f49c-4316-859a-00c198088086",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "db74f3ec-6306-4040-ab2b-8c566081855d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40841e90-6e9e-4d09-8346-eb94afc39e13",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b80b9f00-93ef-42a7-9d90-87b43bd00d66",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122bf99b-d245-442e-b7f9-40a0d8975f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2f8043-6aef-4c9c-81b3-83d14b8e492e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4d1697-246a-4b2f-b79e-689081ecb137",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2114bccd-c7a4-4f93-8fa4-bc9868d0ceb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c38722-2f48-4d78-8909-c94c01861c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b475c4-1c97-4486-8a88-0b7e846dc1ac",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de6154e-af9f-44e8-9a99-40a96b1e3a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d55e95-08f0-414b-8d7f-27c2a6a4dd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa657f6-c457-4a3a-b23f-106eeae02783",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac362bd-466f-4f06-980c-59d3a623dcac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63b4204-3ddc-4b3d-bb2a-fa65a31b7631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f458d88c-8450-4f7c-a3d6-a5fb5f9ab32a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd5acaa-ada4-4208-baa6-7012d4d2af65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104cdc91-8e33-4f57-944d-c90d083896ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf55cc5d-64bb-4652-9073-8367762d524f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4d522f-4a14-4a05-913a-4e6d6f25ea0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a61356-0ff4-4379-bd23-12bef07201ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d866f55d-92a6-4426-a16f-efcc406bdce2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b01168d-54d6-4546-adae-06ebd28eef27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edcf3a62-aa4a-4831-8deb-2691420d7594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12d3cbb-a285-4fa6-8330-87c6a1e9d019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb08f27-d240-4bb6-b1aa-3db878f7aaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1258dc5e-b4fd-42e4-99f5-72a6c5295cb8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7b0eba-1e70-496e-a1e9-77a7effe0ce4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52a9836d-92c8-4f13-b8cf-e70a2e718c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed21f3a2-3e4f-4595-a330-cb1fe467e4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9f64c1-e828-4286-9f4f-ffa0a90f1a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c1ef74-3bd9-499b-bf19-3888d62dec18",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8555ff06-a8ba-4b2d-890d-c3d948a67f26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b3f6902-6f4a-4c8e-a9f5-ce0c0a87200e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64ff043-9061-49a6-a724-eaa5efd96b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e278c8-6b55-4a17-993f-36b0a1f7c6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ad870e-5f1b-4cd9-ad75-fed6d867d723",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110284bb-8458-4e04-a1c8-6534d392cc52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77a43856-ce63-431a-820a-094ce5f52aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be629da2-58b2-4492-83f5-3a9eb8679ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8273f86-738d-4abf-9ffa-4fc240589b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62733892-9f3c-4ecd-ad57-491db4345e99",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3204f823-6001-4719-a9ff-7376a0554931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906e766f-f603-4e52-8912-ab8fe882b435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56cc29d-e535-41a0-bcbe-13e6778a8eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd9cc48-2fec-430d-98fc-abeb8e78f6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273746de-0fea-47ee-a0a8-c7b9e1122d06",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e62355-75be-43a3-824e-ef6036f0f12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7abb2d2-21d7-4bc7-9880-424e678ca3a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d5aa05-d962-4a49-83fd-b6f659cadc41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b647e88-1082-405d-8dd6-1cf41da8882e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f79c0e-d379-4175-8a10-c78741809758",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d311a10-319f-4bdb-a2a0-5373c62d45bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bb83171-27f5-4a4a-9eff-75ccdad9001d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1faa23-be1f-40e0-a973-743fa07cbc8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a023c98-a9e6-48c6-9c79-0234c266d942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da265085-547c-47f3-9da3-11fb9bb7ae74",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e71dbf-cc22-4db5-9693-b47d66b7dfe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "876bfb89-9792-4180-8c44-983bb6d0ba19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbccb25-e111-454a-9d7c-76411ba5e43d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f941e0-c8ab-4d80-a08d-003d1f7e46e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d860360-0daf-478e-b49d-de609fe32d1a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3712f19d-a19d-48cf-a1df-c23b361e43c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4168374e-1d56-495b-a3ef-5b12b2e90bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a7f65d-7938-4ecf-a0a4-b3599c229477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1be2332-c9b1-4763-a624-2d29a1b8722c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3af741-4601-4748-838c-aaf68363fa24",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8610a526-6d89-42fd-90c2-216045453c5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3c2c9e9-a19b-402f-9dcc-406e1594cc09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7151565f-58c2-44b6-a845-c18100826ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07fdf27-a628-42d3-970d-75312ab88b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a1b42d-8613-4d0d-8290-4dd421f5ad26",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd6ab16-76c4-4a1b-bfcd-df7b3229feee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8362eddc-2be6-49ed-b22b-0fbac8df0a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "124ccbad-7455-4e63-9880-466d833ea6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2daddfc1-e9f0-435d-aef5-60fe6e2a2d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c535d5-7a49-4f84-8155-ef4dd49f1bf6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b0696e-333c-4597-9a11-bd5883e97919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f587a4d4-f6f7-478a-b5ac-8971472a71cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caed27f8-d067-4285-a7c9-99025502991e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c719ddf-7c8e-4b27-8cdc-ccfdd707b4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41ae458-a77f-4640-897b-41081f10ae83",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94132eee-25ce-438a-a4c1-ff96c77482de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc0fbba-a0f9-429f-8177-aec7f0cbfe8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e93e54-99ac-4dbe-bdc5-2e4052fe8e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51565d84-a573-4c61-ac46-2ccb1c5f5097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9f5e32-47c8-4976-88db-10d4151446f8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69206ba-56a9-4558-a16f-9194a518f421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71810de3-2282-4d4b-8d58-205880bb93eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1967de76-6b5f-48f9-8122-62dfb7be4539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1fef9b-440b-4717-b991-df4f2c1eacd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53756515-906b-4706-b9b5-4e1ad272ad83",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ac6cae-f2cd-4ec4-ba20-0c10b7626c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85e927a-55d6-4dac-9211-2bdf8a4ba791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5dd1d3-33c1-4d0c-ac3c-6e4fcde852e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177f4479-bd7a-44c2-8b1c-9265da1f3976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc1601f-cb0e-4e8f-a037-07054a8e6e0b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fbf042-179b-45a3-9749-aa3574ac896a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44355efa-79bf-440f-8d6d-b297d7fb8015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71bd7d5-ffd9-444d-8db6-1b4afa01e28e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383c03f3-2dfa-4578-9bf2-aac1af818306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4d68b0-048f-484b-b143-e7b3ae846355",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65047c83-14ab-4a9e-a9f5-97b2fb139216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be21bbfb-c876-480d-bbad-dcf83c7a3849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7500b6e4-c539-4601-8516-5e2ccc9769c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ec8ade-2072-4980-926d-e2bc759015cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10575531-8eb8-40cf-842d-00604764fe15",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e248027-5bde-4c34-ac94-9489455abeec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50bb56ad-ec18-42a7-830a-85b42a441696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be35661-2d40-4398-a7c0-7f587aac9e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "343822a7-a81d-4f58-82bb-b6472190f622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd29fc5d-c810-4378-9e08-5a85f478b6b4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a443c532-321e-4c41-b4ab-9188de9298b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acee2889-4e8e-483c-aca3-57b2f1018d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b9fc49-dc4e-4473-9f14-7653014ccb87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08207fe2-889c-4016-a41c-b82488ff882f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b819b3a8-81e2-4940-a53b-08e736dc3ad7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d66ee4-23b9-4f0b-8d28-e74273cef005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d0e519-1cd4-480e-807f-f23083ebe41d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e58227-19cb-4a3e-99ba-8a1b4b77d0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d31d30-44b2-4cf1-b988-17d22c81851a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b465362d-c5cc-428f-993d-2fbb68b28b7d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92212871-f4e8-46c7-8d81-26873cde831c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c86e22f-6b9c-468c-af67-7fbe8ec33567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acf9f5b-9565-450b-957c-8846ee7bc13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72108deb-85ae-4dc2-81ac-913f5e168baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1352cc61-7abe-4459-bf41-abedf361554b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7753eba-05b2-4389-874d-4297394da0cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa23e4b-108c-4e64-89c4-619e5ab2267b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35abfbe-019f-46cb-a5dc-cd3fc25e277d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18fa01a7-4d47-4bf5-a778-908ff57a2b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b54f18-f2bd-46d2-ac61-e40f380e4424",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517e95cb-50d5-4f0c-9970-6072523ef072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42fe7990-5f6f-4af4-8fee-46760f464aec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79584b26-dc51-42ed-9098-d55aaf504395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a141c56c-b5c3-4778-ba9f-44f6362d7ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73977594-6550-4796-9351-77605f13c7cb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2a6fd0-530d-407d-8dc3-bed6d5772f0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b7ae98c-9c68-48ab-b72c-bb1d231fe65c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcc892a-84e3-4939-ab83-655d7016d5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22ce74c-0fc8-483a-a199-37d477a6bed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9c2dca-b2d1-4283-9d7d-1018c0783790",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b765f739-641a-4f37-ab82-51d4bec85f27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "166b1dad-dafe-46fd-8955-2497472e3054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffd9e68-471d-4605-b58f-12c867f5a2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496e97af-f23e-4c48-86d8-222787fc0b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0611ac0a-1010-46d5-9371-724f1ac33ea0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed63fa1f-7f79-4f41-b9d9-913840599bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f276d09-6b9b-4cb0-a3dc-0bcd0eb19241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5f4abf-73fd-4b84-8194-931a8163f934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7319c0bb-ad91-42d0-b8e2-56476bce9d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6c58d0-be90-46c8-8302-b9b3562d881b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7afa57e-72a8-4242-9d89-e2e0b8603580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a1ecc19-8d1c-4299-b431-b64e38e4ec58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd622a1a-1621-494d-8686-2e67da30c77f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8ea5b1-0329-4b9c-bf9b-7f195e068a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c206a2-d7d7-4783-9c56-aa7bd1a3c3d4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99991d0b-04de-4010-b9cf-52589ae700ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46a383e5-a106-4751-bca5-78109ea63c6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83029dae-9e98-4474-a4eb-7fee5d417e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da6886e-a8e1-4bef-94db-7612af4b0f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be139f66-098c-4073-bc7c-e484d04c6cb1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42de88a-7ae8-47cd-b59d-2a28b7d4e2ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4a290f-42a8-4e93-98dd-4b3eac10c50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9e2dad-74a5-4dd1-8da4-0cecfd7efd31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eee81d5-eb54-4572-8d53-788621130761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882f6e06-c45d-453d-826c-bd11ebd37546",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bc526d-00e8-477d-892c-b58250542cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e033e23-eccc-40a7-989a-f4d0b3ddabe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8f1459-c244-4cc5-975b-171ddcab10fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc24b78-c192-4939-979d-406a763205d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554ea812-ff9c-4dd7-8780-16316feb727b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3014bde5-7135-4526-84fd-07047b837252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee7b41b-873b-4c3e-9b54-18fb072aa8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b712d22a-c64e-47e9-bdb2-f28e28e3ecf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3ef9db-02ae-423b-ad1a-cecc187d78ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb86ecf4-fb03-4b6b-bd07-e0677d922beb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcedcb6e-2834-4c0e-b7d6-7159bca8c5b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ffc2cbe-523a-44b9-a43d-9e6ebe59879b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45686df-a61a-4549-9d23-c9589d1a044e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f432b0-aea8-44ec-a7d1-3cf383ffde3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a86a6c-b746-466e-b949-01a306fb9db7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70bbaae7-5eb4-485f-9407-83286d0d5b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb64c07-4b7c-475a-8673-98bab5c73ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82054338-bbc2-4715-86bf-95dd71766161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188876dc-345b-446a-a041-888f7dd1ea0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acd97e3-d62e-48cb-85ba-12e2625d78d1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409f3c3d-987b-4cac-89ec-5aae715fdf56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1e56bc-63c7-422d-859c-4abf9f049f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97d20b3-6c65-482f-9644-473043c54a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ea63c8-4975-4776-9363-3750c77268bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a623e856-89cb-41c6-9080-23a5cb21668c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e7fa94-dcad-4de6-95cb-9be35d445baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be091d17-5e36-49dc-ab34-428303d9bfae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "808b47f4-d4f0-4278-b4e5-5037a0b28972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760f36a5-3985-4993-a6bf-14f4aa90572b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8b6715-ecb3-4515-ae0e-9648de3e9a3c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133b4bc8-f8a8-4855-a0d6-9ec8ca766719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bde5544-2507-4ccc-9d23-1196c9388292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca35d7e-0bce-44fb-a88f-f4b17fb5d2a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20bdfa57-db14-4d5b-b3fe-abe2e8b86f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd951543-7ba8-4e11-a1f3-4cc3800d48e7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a7d803-050d-4549-b204-ee5eb3478bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883ff5ce-d8bb-45d4-9505-7fde6b9dd145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbb26ea-84a2-480d-9349-d36ee31397f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5941f6de-3faf-45e2-8bfa-b5e32f656fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184e7c5d-f435-4796-af3f-43d3ca901d7b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4df72d-6762-4a71-a5ec-b6a2e460a0fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb06a59-f40e-4200-b3fc-757a2fd3c76e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bbea9e-ea3c-4417-8fb5-aa65e25e6d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e548ae60-bee2-47aa-98f7-868c0d261619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02c64cc-bb43-4e60-9d07-730e79a7e191",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec2d816-b88a-42f5-b3d1-8bdf7a91cb4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ffa242-b669-48f8-b70a-836f2799da1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbecb336-7ef5-43fc-87df-23d060065c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78028903-1d04-47df-baa8-92ae6c985a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5618cf7d-309e-4a9c-b7fe-700b67ad0ce4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3e1c57-d826-446c-8543-80653060bbeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b4697e-9c3c-404d-a612-cb0c487fbda2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb1546b-a945-4ba9-807c-185981f39cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9ea820-2b84-4a93-a8b9-b5c220466684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c7abc7-c50e-4c65-a461-9fa187035fc8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294443ca-dff3-4eb9-b4a1-299a01d3592b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5cf287-770f-40a0-b7df-2edabe23528d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f196f06-8a73-4b44-ae76-36187a006d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606f187d-3e22-4eaa-b32c-f9e9632f85c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92449b7c-bac8-42c8-99db-577cc011b081",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c378ed3a-d6fb-4549-9123-49593c0ad82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890e9351-64fb-4a71-8e46-02552df38e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59508e47-d89a-43d3-ac02-36e8e28804b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65cb8fb-77cd-47d9-9c72-14129d23064c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e77720-5825-43f4-9e28-40acebced937",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f3d032-5e33-49f4-994a-70932e991e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03c6700-5a45-4dbc-aabc-2916ce86d479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a13c6df-50d0-411b-8dd6-9872b25644fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0258975-0e15-4c2b-9db9-1b55adf44ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed338420-01cf-46ee-9807-0683f05dfbc9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805e5304-c689-40ad-8a17-ae484ea9f698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "236d3246-229c-466d-a39c-e11270d5606c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6c87cb-a77f-4f25-8932-29047af75904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0c1b65-979e-4185-9a2c-b09d35ab85f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24450730-891d-4fc5-8ec5-867b3f55b92c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b684df7-a8d8-4095-9153-73f097747334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2864b09-7a56-4d53-b6be-bd287f41cfe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3501a7a-2c8b-4d0d-b0fe-b807f60f29a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e76e13-8772-4fa0-aa70-fd6167e494a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90ba385-5372-49bc-982f-c8b4f06af75e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b16f690-0dfb-465c-80c7-c8e4b7ee77ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080aa5fa-7b05-4021-b3dd-83e17759ce73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e483be9c-e489-4253-87fe-295b25b92308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f43c0fe-f48f-49fb-996f-eaca9edd32cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61539443-db17-424b-a0f8-d4ac13e95e83",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a50f0de-0ef2-4394-85ef-fb4dc5d9765f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f51e9a-beae-4d62-ad41-45c386c2b4d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb4f685-cdaf-4b42-b69f-131672afb3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29188f11-9e0e-4daf-9436-e58e316fa855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfbd790-36f9-4e8d-9852-68639d908e99",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4f69fd-4aa3-4329-9bfc-22364c8cb52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894a7cf2-177c-41c4-aadb-c02470bb67a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48025a45-4806-4cb1-b372-77acd70cfae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00505212-b70a-41ae-b2c1-4d7df79689f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c262e9e-6cd1-4930-9887-494281b6141b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c217228b-c94a-4000-b5db-4db1ca7d059c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65abdb64-04da-4d46-96fc-5d63052eafab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7618e3e2-7401-4357-a299-657f9b6d03d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38eef206-2740-4039-9c47-d3c9c6e2f89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac439b45-585e-4251-9c22-7dd078ba5124",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d9c77c-3bcc-4b90-a845-e9794067080c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9bc4eb-aa5a-43aa-9c93-b1322e91f6f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f24079a-fca4-42b7-a3d8-fee4e23dfe11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69403912-4985-4d84-9d75-c20ebb96d165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2b27a0-7b71-43b1-a159-9f9df05eaf6b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c4b858-a54a-424f-b84b-4a7c28fbbe9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e23fcdf-44a9-4650-9f3c-1097fa1a4330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81835ff7-0f6f-45c5-91eb-9abbc96ebbfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62ef7ec-29ae-424c-a3e4-632683a25f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74391121-8bc7-4f25-a8f2-a8a3fe67388e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed146278-d38f-4c3d-80db-036cbf067128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca6f912-3dac-4ca2-86e9-f17755f8a3d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba903a72-d962-4415-b9db-e26603b3e349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b2e60b-179a-401e-ae2d-629b9bc4f161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bc80cd-ab76-4d82-a4dc-6fd665bd2a91",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c5c8e4-ff49-415e-93a9-163336bc58de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6773d2f-516a-49f3-93d0-026341490bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5980b2b3-46f5-49af-ac24-43c09768d831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d58069d-3bbd-4f46-be55-adb09616f6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da01f7eb-9e00-45af-96e3-09258b82072d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4714da4d-b7a6-4e50-807c-8aaa6ca5b852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479dcf79-866f-4bd2-9d3e-f2121548ce5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89563166-b27b-4e23-848e-fa3aac1e4f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc246a9d-d82c-44d3-9e0d-e29832eaa1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16fc667-9e5c-47a5-bea7-671bf095eeb0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65ce85f-3d82-488f-8caf-4e31d9cece3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820d60ff-886b-42be-a557-b80f3a925398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa46556e-abb9-4b31-809c-e6a35894b483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc175b1-b672-402f-b355-e12fbbd5c022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1711b7-8c7a-4d87-8d8a-4a15040bae74",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783c5149-32c7-448c-bd5a-80781b2f0cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba03aa5a-0ee5-452c-82fa-2caebc0ca691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e3ff7b-f6ce-49a9-80ff-9710b937c000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c13835-5977-46bb-888a-86b828b85923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ce5a00-0c2c-4f11-aba9-f743135c6fb1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3605c483-7cbf-4709-9af3-db86bec3ae64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b83151b-45b5-4ce6-8783-87728438517e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b8991f-ebe1-4874-8034-c2c3f862e126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb1f42b7-253d-4091-9cf0-de58afb28457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1906eb-a68a-45a4-8a28-7bce7a5a669e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d52f29-64af-49bb-8b35-42af51519041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9c3fb1b-63cc-44ec-b6be-c61c3e00dfb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa83f24-a755-4593-a1c4-e30454e7f40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c0c2d1-bf4b-4809-9177-046d919858c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464882ad-c18e-4c49-821c-0749abfd7de7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115a644a-4b35-451a-bbdb-cae91826f887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab9156ad-766b-4737-82ff-f8736ca1f780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7ca3d8-a2d8-46a9-b214-a79425c43edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496e9d3c-7703-4f66-8ce8-e88101acd4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197b5ac4-efc3-4b1f-9113-ade3eb87ca63",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270ef52d-6756-4dee-9263-c01a3578faae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "155b47ed-623d-4bc7-ac1c-23802ae732dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fe6b06-527b-462f-a79f-ef893690f725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be67865a-ac89-43a9-bde6-b72bb7f81c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d7cba2-cb6c-4d08-9a74-d09716ee691c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e463bb3-f722-4d81-baae-0fb3cf38565b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ed6efda-503d-47d6-ba8a-f52ba93e7d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbce30c2-1594-430b-9f34-93f8058ae3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edabca61-54a0-43d3-9b18-56e3f12a0291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118bfd6b-0b2c-4432-8d5c-4ce93377afbe",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0960a1aa-a920-4b17-a616-22ab16573867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64f64338-68d3-40d3-a8e1-47fd372268f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c8a753-09fa-4a87-89be-ac6ac94b49a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4eeec0-436d-420b-b4a0-78e60b363494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29693ece-ab72-425c-bec9-4c82a608f2af",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3f35ee-fcc7-4063-8056-9f552e7e41b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28b5ae7c-7285-429d-aa7a-9d0875c87edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be71785-134b-4801-bdbf-c6a7400fcbe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f322b1d6-dafb-47b6-87d2-bd9f416ee828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82ef196-bda8-42db-92a4-dcbd2788c602",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c343d51c-7349-4ef2-9abb-d0d432b14b4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8d6e9e4-00b3-402c-be70-794e4bb3e840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdc1f48-05e9-4c7e-b5f8-e9bcc48dc966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f15ca32-07be-46d8-904f-414216ee7316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a73ce1-a431-4fa8-bf59-e8e312c69f8a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30a59d1-7028-47e8-8902-a37431846d07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad2ae112-c98d-4d44-8db1-790e460d1f0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d941b0-0fb3-444f-b932-47e37dbfdd4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4eefac-aaf9-4a55-906b-6198968bbecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427ee764-82c5-40ce-9759-0e9ef920a101",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d637c126-796a-4c53-ac65-6d3298f3ff5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c498234-5620-4940-9c6d-3b8e5fab4052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b108406-0d3c-4abc-bc84-974f0fe42d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df41cc97-403e-4804-9e20-ebe6b1550b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5f65c9-b2db-461f-92a3-707cbd387013",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40a100f-2b9d-4d1c-9f46-2cd82da713cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "632ce389-6db3-4361-b422-9d78b6a810ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3d4ceb-e309-48eb-9181-5ef634d26153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f25d095-2593-478e-80fe-918dd7daac94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4f1d60-76cf-4316-9bc1-56659b796a5b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08293393-b1dc-4310-8e97-9aa91a83084c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4df79aa-7459-4a29-9038-8e4f7500bad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a50df4-7fcb-48b0-84bf-df205da84abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001b7645-055c-4856-8b8b-c0841f652705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f525c576-fe0a-42ae-8faf-d1678658843a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399d14bb-2360-4ab4-9cf8-b35036cb103a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "818e599c-f367-44a9-b51b-278e8f2c3d24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cc1907-5945-4f9c-a86f-1a90fa740633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767a2bb8-cf86-4180-9d70-25c71e422657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e628b34-877d-49cb-a698-b815b01ff8fc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eeb4a39-26bf-4540-b111-2e62e78805c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6d1d90c-a0a4-4a16-a426-0e70c503c9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aecd8a1-eb36-447c-b95e-64649e545e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329a63d4-852b-488e-a7ec-ca7c0c45be13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eccdb11-090d-4945-802a-c456606074a1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75c937c-aedf-4566-a70c-0bf152808c8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce3d2bd5-89d9-4890-a12d-c8a96ed917ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f3ed5c-7c02-419f-b950-36ffc3bba3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b708b1-8f99-44cf-981e-ed3178b28752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a30b3b-9830-4372-ae36-5c7453ec048b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696fa3e4-f19f-45e2-b2a4-1f41e9bdd22e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab565191-17a8-44d3-984d-2b0cbff911be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dae5d8-8769-41b4-ad5d-8b4509d323d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3057cee8-a2a5-4a1f-b8cb-ffd677760c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd78c4c-fbde-4ec4-80dd-4499f6243bf5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f685af-f04d-4652-9fed-178d936709a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07abb423-8966-424c-ae64-0d2350a91bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ff740c-fdbb-4741-bdd1-effc98da71d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbff8c3-35b0-4174-8231-8c37d794728e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7522cdd-98db-43d2-9fc9-0e5fa35c06df",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecf608b-674a-44cf-8da3-df7c7844365e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4bee3ed-5c5c-478a-a202-66588feaba22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6626fe-a65d-4978-9d1b-2e89939ed323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b73287-eaf0-4723-88bb-ba6a90c3ec27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3ea86a-0cc1-401d-8729-ef45f2f766b7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec0ac5a-0384-4de4-b67e-e689558e23b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fed85c2f-20d9-49bd-93c9-564fcbf4c867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1e8220-60a5-4fa9-91cf-62367a25ce54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66773c9f-a78a-4905-a8d5-7e6e1209cd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acdf2e1-883c-4956-b1d2-d970b8f51e65",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abba926-1322-40b7-828a-1677e24f9f1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4a357e5-d84f-4aa7-8b85-93165e0b7db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61378c0e-d1f0-4ee8-9821-86efaf3e7274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a0d8ea-11b8-44f4-9e1b-7c1257fe5628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2277655c-536f-41a0-8dd3-6bc67a64668d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f82a0d-9915-43f0-82ab-37078caa893d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0ad65b4-9359-4dc8-b9f4-617fa4f600f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf89041-fe60-421d-97a9-17df01f4604a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a07f99a-6d4f-4d5d-8242-156161960d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7359bb-b940-422b-98ea-e2746973f8b4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1014d41d-7dfa-47e8-a9eb-ff7b0a944b02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcaf86ea-b950-41d8-afb4-c0f39fa62a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30af3f7d-7250-4099-9d8e-002ceb273299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85352d5-630a-4059-860e-df9a15dde940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f480c54-216c-411c-a707-d9c9437a9ea3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cce891c-9ba3-4f26-bec4-8a5eb47dc4eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "559b2de7-3615-42e5-9edd-07d22ecf022b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7039d425-bb96-4592-aeb6-af3c0e655a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0730fd-aa9f-4422-a06b-bd29dae6ff95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1336692e-7fdc-4110-92d8-772aabf63041",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89535f60-c9ff-4cc3-b9d3-dd04a68f4d01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c73be800-a1f6-4df3-8f6b-bf6983306943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2270e0e1-e1b7-494a-ab45-5268d17a5a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b921f27e-1edf-433d-b35e-203e0cf70269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6c010a-7980-4136-8480-05c1be3d9d0f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69bcb0a-9f39-43ee-919b-f3711f5671f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11efd7ac-83a0-4a77-bf56-11d5653da290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05cfb452-dc15-4c15-ad27-3e57d3392c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1969de3-0934-4293-879d-e2c143385af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789bfff9-69b3-4e17-b4d8-e056b2cf0aa2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f016c8e-50ce-4ce1-8a30-d827ab691b3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69fe0965-f2c9-4014-a086-4971e2d53c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12e11f4-11ab-4434-941a-65bf4fce1b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e795ecea-ebf4-4fb5-bc7f-1953c118e350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42fbb67-4f81-40be-8efd-3bfd3e6f44c9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f474a6b-74ea-4e0b-89c2-41626f350eda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0061da5-abc8-4a74-be93-7b23e94c8426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8eb5d35-05f0-47f7-83c5-59b9b3d6ded6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa0cde2-7333-48b9-b4cd-eb503cfa9e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3e51c7-cb08-44ed-bde2-74538b35b5ed",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777e3352-2f71-4c90-a26b-746cd0bb0062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccc62317-9b2d-4c61-914e-e894f71ffc60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "046a8bff-9fae-4c59-bde9-a439d71c8d5b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc0fc3e-9c43-46d5-8c9e-f3b90cbc5a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed76aeeb-febe-43f8-a0cf-76fd84764a86",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e63ef0-7233-46ca-aaa9-e62dd6e0f443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48da7626-9432-4d33-8ee0-b048c216bac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b33611-5400-4a72-b38c-5a1c965e657a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dbb290a-10a5-43c3-a887-a11ed328d66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317d547a-ab9c-4395-87d2-c221fa816a9a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d0cb72-f4ae-4a39-bd5f-513b34aa461e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5cf706e-a457-4fee-bd13-93804953ed7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7a084e-f1b4-43d1-bfc2-e87054693b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411ca84c-2f81-4f5c-ae3c-2a8fdb1ea695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a257d2-25f9-4dc6-8561-5c95f7b30575",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6043225-fc95-4a87-80bc-aad07977438f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "880d97be-1ad5-41cf-9bd0-b8aeb0f3f06e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9704ef-44c6-4be6-8ed6-6c60583be83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74a0e6c-9255-446e-bc63-620e0755bdcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e951e90-584b-4e80-ab82-18eea0ad6452",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789dac42-96df-4f0d-8ca0-9b2f3d75be8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da229c17-36a0-48d3-8531-c6c01267b9f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786538fa-375a-4dfd-92b6-4b7b8f0a0976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4d9d06-24cc-4177-8166-29f7b4851b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6443180-bbab-41ff-9f19-0e4fdf733544",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1383e9-9b5e-4108-a60e-51da34bedfa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa122530-ccbd-4cf4-858f-d3a514ac071a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60b81e0-2045-4b96-8edb-abc41dfd0d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9b31b9-ba91-4131-b780-b4a8b15dea8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b388ce-9e87-4e8a-b2d1-1cdce2e2675b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ddccf9-5783-483f-90c0-e1f261e5845f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc1bb8d3-1e79-479a-8930-b3db2d550eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4a5fd4-223c-43b3-8a43-a2d7c13e664c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa7b713-07a5-4dd5-a858-732f8b7c2d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3772d1-0c74-46b9-a9c8-9c23c5bcf4b1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5dbc354-49c0-426e-9298-0f591148e55e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aafd627-2850-46f0-9ffd-5bfcff480f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5341889-4b29-4e14-ba88-daf6ca1dbf24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87126a2-b8ec-4398-a5e1-0b750917644d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c1bc235-7826-435d-9499-62902f6f010b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "744d7db5-9e29-4259-ae67-22185502c753"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3de85e05-994e-40e6-8c4d-a64ccf0adf12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6c9ff8a-cbca-49e7-aa1a-77b2c4ee060d"
                    }
                  }
                ]
              },
              {
                "id": "b4a53c01-3a93-4d42-90f3-f63bc42b94a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a0c5961-8887-404a-bf49-677db20a744d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdfde7d-51c9-47f3-b0bf-4e3ae72afa5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fa23622a-0620-408a-a889-e68a861e3f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9ca18a-6c1d-40c2-b358-0724a35b983f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7ff04d5-60af-41ca-83a0-701abaa1280a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7da47dd-4007-4522-b56a-c85ce1a2fa19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bbb788c-c343-4352-9186-acd0131a8b7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "200d9108-efe9-4cf8-85c9-d7b8c458bb53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d9773d7-fbed-4f06-a9e6-65358320acb7"
                    }
                  }
                ]
              },
              {
                "id": "67101a05-7c9e-468c-96cb-c25523e4675a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "64173f02-c3aa-43cc-94d9-4dd0a5da4fc9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c705757e-735a-4c7c-9b05-33165ca4abf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d29e3c20-e826-43df-9ce4-0a9cb0d8612d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d39dd2-59c9-49a9-bd9b-329a5483375e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a49ef14-d918-4908-a5f8-aeac070b455e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "61f6e44c-1725-4621-b1ab-bb16e23e5162",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e0d3934a-065e-423f-ad88-d07a4633def5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ff2688b-9c42-476b-a603-ae21a1f5d891",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4b236057-1c34-460b-b05c-3a6de2a45bcc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "410906fc-322b-446e-afc4-31cbf2a7bb50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3266aaa0-682c-4149-8bc1-697115ea0a1c"
                    }
                  }
                ]
              },
              {
                "id": "faa70f80-d4cd-4820-82e5-8368fce2ca78",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaae94da-091e-4c47-abf0-8c324aa3bd19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a5f423b9-35fd-4a33-a504-dc4598500707"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f886975-0846-441e-bf6f-c94940c63e3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25df46fe-2076-46e6-aaed-c923a115eed7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8efa8023-fa1c-4bbe-9c9e-27395bda012d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f38af4de-378c-47c4-821f-14c03046e8fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c68eec4-cdd8-4c90-93f3-db20963a461f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6017a7ca-53bf-462e-a922-4de784570193"
            }
          }
        ]
      },
      {
        "id": "7825d6ff-d68e-47a2-ae8c-72c35bb188f5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fb04be02-82cb-437d-896f-872c82de67ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d173e79d-53c6-4584-9846-2864d1dfa5cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8f40a961-2f34-4d4c-a1f6-0d70432f28ef",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1530b1da-06a2-4888-91fc-752b240cdd80",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b8d60ba8-10ff-4cc7-b1a8-90822cca81a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd3f4be-65b0-4f55-a0f1-dec0d7dea5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea104ebb-eaf9-4f78-8029-9fdc6bcff7f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a47dad9e-9b15-45fb-a4d8-e180d3615d45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80da483a-1868-47ca-8c4d-27caa6f39e99"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72bcc1eb-21bd-402c-9760-d21bf74cbb19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb9a3558-346d-4fc4-9641-2305184f49b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f5e19e1-f833-4dcc-82fe-ce6f34a30702",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "93b37444-8ca6-45b2-bacc-81974e170346"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd674be4-0fff-4559-ad23-e7fb8d1af8a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05be80fd-fec9-4135-ac55-20db9460f451"
            }
          }
        ]
      },
      {
        "id": "b6a12665-9011-4f99-b96a-e19f774b8031",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c60f864e-ed26-4b9b-ba7d-2c5727ec0089",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0be8510-b5d9-46b9-a5af-c62d004897d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78deff70-67bf-457f-b38c-f105c3ea1849",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74399fd0-dc42-43f3-b39e-88ad95bff57d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c0da11f-62a2-4c55-93e5-be198a44b6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b99efb9-b168-42e1-932f-00b1820dddd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "441aae08-7507-4852-8654-4d44fc035775"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5b08dec-e14c-4f93-bded-f9aaac74683f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bab2e5e-407d-427e-bebc-f3a79dd6ff59"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9f2b967-b0c1-4992-a25d-b8d617e18cd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1821016-7a82-49ea-8cce-8bd29a35b95f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef9aa87a-d509-40b0-9228-4f2986fd11b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "62a4f541-a164-438a-88de-857ff0d81521"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a6365b8-57af-4d95-8c62-070491bbc946",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44475937-af52-4365-aaf9-cbc9c4526dc3"
            }
          }
        ]
      },
      {
        "id": "5ab70d03-0567-424b-89f4-437010251fa9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "512a57b8-1311-4caf-b04e-5fcec0f4152a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92fdb9de-f84b-438c-914a-30c6d2a7d3b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e4a4f82-5cd5-461e-ac53-29061c28e011",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8563ec7-4e96-459e-8c71-f7eeb38eaf85",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4a81487-4401-4065-bf3a-665fb282e709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e455b3-72e1-4e8b-9eb9-24d57d2a0ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46355766-1fc1-4b45-853d-6465ddc00078"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d60e0ab-dbff-4329-932f-6f15f9e3c3fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63fe43b3-d7fe-4774-950e-7b4f263778c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d47e138a-b388-4756-848d-6fd1e4434152",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "179a62c4-c0e4-4d61-94e5-63bd5d2b00b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ba2a729-87e0-4b8b-ac55-25959d5b2878",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f8d9f8ce-4f69-4c63-8b36-f414ba5ed769"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a62da3ec-e8a1-407b-8ead-502acc125284",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41ef727c-bffb-43eb-af5b-1c6b970710f6"
            }
          }
        ]
      },
      {
        "id": "458cec8c-bea0-4a36-b7a4-697694d13aea",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "699ab0ce-aecd-40b1-9f24-84ad882dae95",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96588405-6536-45e1-9203-108f05114965",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "00fa18cf-c082-4d45-80f7-0653f1ff9b8e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74d8dd22-1fe1-4dd8-9b0d-6b445bb09941",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "055e0f61-ea92-4d86-b89b-fe80a474fd47",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 106.41666666666667,
      "responseMin": 3,
      "responseMax": 6097,
      "responseSd": 480.5776090223632,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1714523914766,
      "completed": 1714523949795
    },
    "executions": [
      {
        "id": "ee6d240d-0186-4160-84d5-7f52c4ad2620",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a2c48983-7740-4d3c-a760-b0df937056a3",
          "httpRequestId": "269b28d8-0d0f-4267-a9b9-7f7bb080f83e"
        },
        "item": {
          "id": "ee6d240d-0186-4160-84d5-7f52c4ad2620",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e8b90cf9-5cb0-4005-ab00-13f40e91ca46",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "af24eb49-8c05-4428-88b8-28527343c909",
        "cursor": {
          "ref": "fbc4f392-0c80-4f37-bf70-3f283fd96bdc",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "964b0704-accf-4c11-ae11-a371a8c81dfd"
        },
        "item": {
          "id": "af24eb49-8c05-4428-88b8-28527343c909",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d07ab5d9-7825-4c40-8e7c-7da5ad7af36f",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "1e4c92ab-accb-4980-928e-e05dfa6da0f8",
        "cursor": {
          "ref": "2483d85d-5f1c-4575-a8e0-701c84b79418",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a9de0825-9e52-41ef-9b2c-56e93cd4f5de"
        },
        "item": {
          "id": "1e4c92ab-accb-4980-928e-e05dfa6da0f8",
          "name": "did_json"
        },
        "response": {
          "id": "4197e4d2-24fb-4176-a661-9781c0ae7e5c",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d75864-4012-48e5-a014-732872f00e21",
        "cursor": {
          "ref": "9fe9444c-e98f-462a-92ab-a707f5e733d5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "26dc1af9-11e8-4519-b8b1-8f3b6248bc18"
        },
        "item": {
          "id": "67d75864-4012-48e5-a014-732872f00e21",
          "name": "did:invalid"
        },
        "response": {
          "id": "ace2ba84-8171-4fa3-a880-35bf5f6a79cc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 900,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d75864-4012-48e5-a014-732872f00e21",
        "cursor": {
          "ref": "9fe9444c-e98f-462a-92ab-a707f5e733d5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "26dc1af9-11e8-4519-b8b1-8f3b6248bc18"
        },
        "item": {
          "id": "67d75864-4012-48e5-a014-732872f00e21",
          "name": "did:invalid"
        },
        "response": {
          "id": "ace2ba84-8171-4fa3-a880-35bf5f6a79cc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 900,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b632054-a027-49c6-be76-fd92f0168fdb",
        "cursor": {
          "ref": "cafcd3d1-a421-4bbf-8746-a540bc8e5bbd",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0019981e-b78e-48bd-9d46-554923a8b8f7"
        },
        "item": {
          "id": "7b632054-a027-49c6-be76-fd92f0168fdb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fe9c71e9-6474-45d0-a551-9969ed1a58cc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efc9893-721f-4d8c-8912-dbf76245e801",
        "cursor": {
          "ref": "2c5a4077-4b73-4745-bfd5-da7b93ace0a4",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1d198eae-bdce-49de-8a18-9c4831fa17d2"
        },
        "item": {
          "id": "2efc9893-721f-4d8c-8912-dbf76245e801",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d7659452-c55a-473a-8081-7a4ffa02bdd0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30b5bf6-0a10-4c40-ad19-b2614ea7f9ae",
        "cursor": {
          "ref": "4c7ec1ee-dfe8-4247-a694-2ba84a14a163",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d16bd208-6bf3-445c-9590-a403f9b1ce68"
        },
        "item": {
          "id": "f30b5bf6-0a10-4c40-ad19-b2614ea7f9ae",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9565b705-5cdc-45c3-a017-2ba8b977dc99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079b9203-fd35-4f85-ad42-64114a5d3846",
        "cursor": {
          "ref": "408e16aa-632c-4468-9136-4cdd2191c874",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3b35cfd0-451d-4027-90c4-c04119ef6e21"
        },
        "item": {
          "id": "079b9203-fd35-4f85-ad42-64114a5d3846",
          "name": "identifiers"
        },
        "response": {
          "id": "5c6e6ef8-7a64-4aa3-87d6-62fa893eac18",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3d04a2-4690-4f80-ac86-cc6b7872f3d4",
        "cursor": {
          "ref": "d2a1d7e2-5b6e-41c1-9f5c-ffd23aae6abb",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d02d1331-b6ca-4581-9165-90e4923e62c0"
        },
        "item": {
          "id": "4d3d04a2-4690-4f80-ac86-cc6b7872f3d4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d0c8fa3e-fd83-4d06-995e-b26d1e217c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfb2efc-39d8-41a3-a0f9-ea796cab8921",
        "cursor": {
          "ref": "f8ec8cb9-47c2-4600-bc2b-2e1a157feec9",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3b4c9af8-91a7-42f5-a6bf-f160ce43e73a"
        },
        "item": {
          "id": "8cfb2efc-39d8-41a3-a0f9-ea796cab8921",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e660f1b0-441f-447f-b714-ed42eb6f4ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26681022-d2bb-421b-b484-cfd9cf54c201",
        "cursor": {
          "ref": "40bc7a3d-9fae-4ce4-9b5d-7c24fa1eee16",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b731054f-d497-45da-9ebb-d12d5c8d1e31"
        },
        "item": {
          "id": "26681022-d2bb-421b-b484-cfd9cf54c201",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "685c3225-3c8c-49c8-beda-0eb66d48973d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfe268b-b622-44c1-a549-fea99a4628dd",
        "cursor": {
          "ref": "172fc3cf-bd87-4281-a77a-c584c77367b7",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8c57c1f6-4763-4b17-974a-c29469160486"
        },
        "item": {
          "id": "dcfe268b-b622-44c1-a549-fea99a4628dd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e2f3e9ec-2153-427b-8e0c-3cf14c8f9285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3dfeaf-d7ee-4590-9edb-fd02bfcd4181",
        "cursor": {
          "ref": "afb63847-ca35-4c06-b94f-0d975e54bf2c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ee949b80-fead-431c-91f4-50bd22f468a8"
        },
        "item": {
          "id": "aa3dfeaf-d7ee-4590-9edb-fd02bfcd4181",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7128987c-96ee-4ed7-9da6-22c448040245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec74b143-54ce-4780-bf87-6542822d8c1c",
        "cursor": {
          "ref": "4762cc65-2cfd-474b-b9fe-815c6c89bffb",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3001265a-c7f4-436d-b815-2fe11e616a92"
        },
        "item": {
          "id": "ec74b143-54ce-4780-bf87-6542822d8c1c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fda02be9-0f7b-45ab-afdc-7f6691990f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d369f3-d635-4033-bce8-f7ffff67316f",
        "cursor": {
          "ref": "78b52f91-50ff-4464-9a1a-079fdc761978",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "74c6e3c7-c964-4b78-992f-659b18eb066f"
        },
        "item": {
          "id": "02d369f3-d635-4033-bce8-f7ffff67316f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7aa0142f-7a44-44b3-90eb-433803c9c7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87ab9e8-668b-418c-842f-5c550faccd24",
        "cursor": {
          "ref": "e652641a-bf02-4abd-8e8f-935c541b1cf5",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5dc6d0df-38c9-4e9b-95cf-066f92ab598f"
        },
        "item": {
          "id": "b87ab9e8-668b-418c-842f-5c550faccd24",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5029aff7-b5ec-48a8-bee8-8d5378293dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99405018-6d11-4c7f-add1-6161ac42447b",
        "cursor": {
          "ref": "a5454525-e090-4d5f-bfab-82026506a037",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0132d4c9-14d7-4cfa-8515-c227966b40b2"
        },
        "item": {
          "id": "99405018-6d11-4c7f-add1-6161ac42447b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f097dc20-e27d-4617-8f19-6bf695fbe978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b06184-a918-44cd-8f81-75bf194ff334",
        "cursor": {
          "ref": "7949b82d-a328-4250-a617-5b569c2288a7",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cf276c71-05a8-454d-ad14-492cb19606d6"
        },
        "item": {
          "id": "32b06184-a918-44cd-8f81-75bf194ff334",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a53e511c-f8a1-422d-99fd-398a89e58a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb004098-7bad-41f5-a922-98648ffef7df",
        "cursor": {
          "ref": "92f0e848-b154-4e25-8d13-4b0db7c5dc7c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6b535645-3d93-48cb-b074-9adffbe1197a"
        },
        "item": {
          "id": "bb004098-7bad-41f5-a922-98648ffef7df",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "74501edf-ed8f-4c49-82a3-971a2b18ed0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631d9b1d-0413-4296-bebe-ed070f062326",
        "cursor": {
          "ref": "e2ee41d7-66ff-434f-9e1e-5d7e315928c4",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3e9c5c6a-7224-4213-b506-3cda18e4b467"
        },
        "item": {
          "id": "631d9b1d-0413-4296-bebe-ed070f062326",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5082991a-0fe8-4c73-98e4-c93ade07f0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b2b4c7-1efc-42a8-8748-a2ce3194fcd4",
        "cursor": {
          "ref": "f67e4fd1-bf0b-4030-8831-0ae06de4f185",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bd217626-7808-44ea-babe-59351167030b"
        },
        "item": {
          "id": "25b2b4c7-1efc-42a8-8748-a2ce3194fcd4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "98a3b9e7-e628-4051-9ef3-9afbf40fa9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1436b212-f14a-4855-ab7e-0c8cdbf7fbc8",
        "cursor": {
          "ref": "75e852eb-a45b-458f-a2bf-f1da50e7bdf2",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "272afb70-56ac-4d81-b09c-e921fd605978"
        },
        "item": {
          "id": "1436b212-f14a-4855-ab7e-0c8cdbf7fbc8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "afd8c7e6-8e5d-4144-9eb8-21b7254f2ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a461bfd-57a2-4587-b8d5-a8c908039688",
        "cursor": {
          "ref": "ca9ffd62-0e39-4a19-9183-f95bc68e784e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "db6fe66d-0dbe-4622-abda-f3fdbacfb684"
        },
        "item": {
          "id": "0a461bfd-57a2-4587-b8d5-a8c908039688",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9f662404-19a3-4bcd-a486-c7a939fc3e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4f5139-1227-4cbc-833d-1e36e6f35601",
        "cursor": {
          "ref": "502e234c-b680-4a48-b57d-c71d8235298c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "399d093a-ebbf-4a15-b18d-c35fe62ad973"
        },
        "item": {
          "id": "ac4f5139-1227-4cbc-833d-1e36e6f35601",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b1e79a35-258a-4096-8638-3f1120b62940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6896bc-c397-42a5-a6ca-65837af1c98f",
        "cursor": {
          "ref": "c80c24b4-3903-418f-ac44-d780e08be13c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5b176d9e-fd2d-4094-bfa4-c09ecc21b27a"
        },
        "item": {
          "id": "3a6896bc-c397-42a5-a6ca-65837af1c98f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ed1825d2-c64f-44ed-b26a-b5d19756f29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88cef8e-59a0-4813-8420-497348fe12f9",
        "cursor": {
          "ref": "f54cb284-f6b6-4ddc-bba8-42d25e5de174",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "05811354-00a8-4a2f-b773-4db02268ac2d"
        },
        "item": {
          "id": "a88cef8e-59a0-4813-8420-497348fe12f9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "27d21d90-d897-48bb-8479-d0f205aafb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa172a7-84cd-4414-aeb0-3b27407a2644",
        "cursor": {
          "ref": "0ab58602-7709-4368-ade3-ba45623bdbd7",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "797f05a1-cc5f-449a-a5dd-f166087d3200"
        },
        "item": {
          "id": "0aa172a7-84cd-4414-aeb0-3b27407a2644",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "70a2799d-c7b9-4a46-ab92-8fddcb685691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723c279e-f653-4966-9118-e1a1fca4be60",
        "cursor": {
          "ref": "668254e2-bded-4ff9-ac0b-56b43dc2d525",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6e9cfb8d-eb1c-43c0-9adf-d46a89a2cf49"
        },
        "item": {
          "id": "723c279e-f653-4966-9118-e1a1fca4be60",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "11fc4387-025c-499c-ae88-12e2c1188a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2a94d9-ef44-474c-a000-e66bb93c2899",
        "cursor": {
          "ref": "a19a2e7e-d004-4594-a2af-6a194a3bded7",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1f8f0bec-9f10-4438-a22f-0a9df0aed63c"
        },
        "item": {
          "id": "5b2a94d9-ef44-474c-a000-e66bb93c2899",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8726ebfe-47aa-4b82-96e7-5eb9bf1f138f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed582a4a-a96d-48ba-b2f6-efb03b259128",
        "cursor": {
          "ref": "ba5f5651-c69d-4aa2-9943-047c736e7400",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ac887260-883a-4d94-bd1b-0632d23f50be"
        },
        "item": {
          "id": "ed582a4a-a96d-48ba-b2f6-efb03b259128",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "972956b1-6358-4259-a28b-bd228545e6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132fe661-88ec-41b2-b939-87ef09a07333",
        "cursor": {
          "ref": "75c1bbd4-4177-4fb4-81e9-39a4cecfa205",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "77e401e9-e680-4b84-8117-d17d22f7a250"
        },
        "item": {
          "id": "132fe661-88ec-41b2-b939-87ef09a07333",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "94ffb33c-81ec-4b4c-84f5-167d8226a8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f0dce4-5f9e-4e6a-bfe6-f78e8d1e95fa",
        "cursor": {
          "ref": "23ee024d-f896-4eef-9311-79cbbd5ec33a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "029ca55e-f615-4e20-93c9-d9eaf0b6583c"
        },
        "item": {
          "id": "f5f0dce4-5f9e-4e6a-bfe6-f78e8d1e95fa",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ccebcdf6-d4f3-4597-93ba-3240a6ea7457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32394c4-3a86-4176-97bb-63bcb829845b",
        "cursor": {
          "ref": "9da4521d-b842-4a59-8449-40b145d6d70d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c0880f0d-e23c-4813-b1dd-6babcd4c3f0c"
        },
        "item": {
          "id": "f32394c4-3a86-4176-97bb-63bcb829845b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6302dde6-c940-4469-a31f-8a75549c6a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4596748-1f54-47f2-a002-ce6b0078a3b7",
        "cursor": {
          "ref": "b9d48161-9f99-46f7-b0af-a153506bc1de",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a9a42f25-3c54-4e77-a830-5c7e5d42f0a1"
        },
        "item": {
          "id": "f4596748-1f54-47f2-a002-ce6b0078a3b7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1e970b24-c1e8-4063-b4e0-3645c19381fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea98dea0-84f1-4cb7-b2a9-0fa83186b7b0",
        "cursor": {
          "ref": "910efec5-3981-42cd-aba6-b8774a14eca2",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1e631117-fb9f-4217-9b4d-1a8cee837f35"
        },
        "item": {
          "id": "ea98dea0-84f1-4cb7-b2a9-0fa83186b7b0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e1271a81-6594-42ed-af3c-a6471754306e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db58e12-316f-479c-98aa-fc1f3484bd4a",
        "cursor": {
          "ref": "874283e7-0850-4b1c-84b5-79d2cefda98f",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4a9b984c-0050-4f63-8c68-5a1b8a23421b"
        },
        "item": {
          "id": "0db58e12-316f-479c-98aa-fc1f3484bd4a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b48f5b41-6513-4a1c-bcc8-67e74d132455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d781eac1-a63d-443a-ba10-a489b598e42b",
        "cursor": {
          "ref": "4f53093a-c5be-47d4-b28a-b29d8a9e4581",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a8e7d2e7-9694-4b8e-9753-c28bc1ace9c0"
        },
        "item": {
          "id": "d781eac1-a63d-443a-ba10-a489b598e42b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e866a420-1530-4d77-9c06-6466a920aa90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fcb698-3c42-4c3b-a076-c6e0e3dabfbd",
        "cursor": {
          "ref": "c5d3e3c5-c83a-4b6e-a9b6-57894a884e03",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1cc4eabc-ed20-4479-b9bf-361c03803760"
        },
        "item": {
          "id": "41fcb698-3c42-4c3b-a076-c6e0e3dabfbd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8f3dd492-6194-473c-9698-79f3081ccd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe94441-0e72-4e4b-92b0-8f464c4b7521",
        "cursor": {
          "ref": "2368249b-666f-4519-86d6-a45a0328cf89",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "49405bb5-b14c-4a80-b763-34c9c89cc126"
        },
        "item": {
          "id": "abe94441-0e72-4e4b-92b0-8f464c4b7521",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5848fe68-5f1f-489e-9cbf-818cb8cba6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70493d13-6f13-42ca-a29b-970ba12bcace",
        "cursor": {
          "ref": "1f817178-ff21-48f0-a803-9fc85097e22f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8e95c0f6-d059-4f55-916b-35be79c079a1"
        },
        "item": {
          "id": "70493d13-6f13-42ca-a29b-970ba12bcace",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a867705c-c563-4ab9-91e7-90b111e6715c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a39b65-ef4b-4389-81b2-31bc59bb4ce8",
        "cursor": {
          "ref": "eccfe551-0c0b-4b82-b53a-e519ee471ac7",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1683e9e7-41e6-476f-987b-d1f797bf8018"
        },
        "item": {
          "id": "10a39b65-ef4b-4389-81b2-31bc59bb4ce8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "94aa3512-829f-4b9e-bca9-927fad5b66d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b74d3b9-17be-4216-84be-1503f8fe427e",
        "cursor": {
          "ref": "c61c7007-2428-43fd-bec9-dee19d4c8976",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "90da07f4-892a-47ab-96d1-44efe14d168c"
        },
        "item": {
          "id": "2b74d3b9-17be-4216-84be-1503f8fe427e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f4281524-f036-4939-8fc2-5de153bc6620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba36d2b0-feb8-4e7f-8273-ca291d18933f",
        "cursor": {
          "ref": "00ccdbd1-39b8-49e6-82f3-5222451b5585",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3108e3c5-31ac-47f6-91b5-1a5c49adeb45"
        },
        "item": {
          "id": "ba36d2b0-feb8-4e7f-8273-ca291d18933f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e6bc8aca-07b3-4452-a173-8755506eff4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74cc302-19b8-4031-82c4-0f37e3a59298",
        "cursor": {
          "ref": "90b890ec-d990-48e6-b7c5-5efc020e5a67",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "da57f97f-a030-42c9-a3e9-4a867b138b8c"
        },
        "item": {
          "id": "d74cc302-19b8-4031-82c4-0f37e3a59298",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e2975c07-eb05-4a8d-9dfd-3cfe86a7b507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688b5dfe-c872-41a0-9673-3480b1a37443",
        "cursor": {
          "ref": "b045b3c2-9594-4566-9353-9e9292377f4f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "801e7685-90ed-4d3d-9575-7a21a424472a"
        },
        "item": {
          "id": "688b5dfe-c872-41a0-9673-3480b1a37443",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7e8ea3ac-49ba-45d2-83db-05d72f6cbfcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee82f4f-a218-447a-a31d-2d3fec807993",
        "cursor": {
          "ref": "2c70ce43-8ee1-475c-8240-f676389378bd",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1bcac396-eee0-4f36-a229-f56ec48af508"
        },
        "item": {
          "id": "9ee82f4f-a218-447a-a31d-2d3fec807993",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "50e0cfad-816a-4e00-8078-737f8638b2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f853e5b3-db46-49d2-b71f-1ef98a1f0c1a",
        "cursor": {
          "ref": "69c06f34-0c8f-4ae3-8f4b-2289ee0ba77c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "65788b01-1ee7-4af4-9f12-3b9adb786fec"
        },
        "item": {
          "id": "f853e5b3-db46-49d2-b71f-1ef98a1f0c1a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ae089a1c-3f40-47ce-988d-df3895bd18a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f03a3f-62fa-4c16-b23d-8c8393d01b49",
        "cursor": {
          "ref": "37cfa5c6-94a0-4a2e-a026-25548dc68f87",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "16d35f84-a3ce-460f-8a24-9e3eaa011e18"
        },
        "item": {
          "id": "33f03a3f-62fa-4c16-b23d-8c8393d01b49",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6e68eb46-17d5-43dc-9d34-f79f6065f47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbc19db-c5d5-474d-978b-1bbe85430ba6",
        "cursor": {
          "ref": "b19a06e6-61c4-4dbc-b9e6-00006b13b807",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5b8a6cc8-c020-4a30-a332-47228d58d648"
        },
        "item": {
          "id": "dcbc19db-c5d5-474d-978b-1bbe85430ba6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e0a6592b-bf1a-491e-9242-51a0c258ec36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d20f517-72f5-4b30-8551-a29806f4a8ef",
        "cursor": {
          "ref": "697771d4-7ecd-4625-9b9e-c6d4286878dd",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "28d2d863-88b3-477d-8a2b-cf46b94ac736"
        },
        "item": {
          "id": "5d20f517-72f5-4b30-8551-a29806f4a8ef",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "aab4ed7e-9344-49e1-8f56-f7d88325a762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65739b6c-173a-4f18-a003-9dbe718422a9",
        "cursor": {
          "ref": "9e3a393a-35bf-411b-a07b-b535425a5862",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d6245124-8c84-4e9d-9505-792b9f724d0e"
        },
        "item": {
          "id": "65739b6c-173a-4f18-a003-9dbe718422a9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f51d634b-575c-41bc-8bb2-73d06df37735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a613c5-9b81-40bf-9f17-af1173ca45b4",
        "cursor": {
          "ref": "437b9701-92ff-481e-9a3d-c1be69108bd8",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e5eb75ef-2cda-4c9e-aedc-f0bd1502c026"
        },
        "item": {
          "id": "61a613c5-9b81-40bf-9f17-af1173ca45b4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cb1b84d3-1f52-4647-a719-79e6e505800c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431aae44-c237-4991-ab64-34b0a24cd185",
        "cursor": {
          "ref": "9297161a-e95a-4959-8596-ce60f425cd41",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "084dcde9-75f7-4834-a361-eeb3ea5c973c"
        },
        "item": {
          "id": "431aae44-c237-4991-ab64-34b0a24cd185",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9481145a-64b6-4e55-8da8-7da0d544bf65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc83097e-c2b5-446c-90a2-c8c7aa6a9ae4",
        "cursor": {
          "ref": "3832f6b3-6cbf-4838-8589-b257bff5268c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "76d3888f-c9d6-4eb7-8a36-44d09fcb8f7a"
        },
        "item": {
          "id": "fc83097e-c2b5-446c-90a2-c8c7aa6a9ae4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c3410707-1d9f-4873-b031-bd7121823fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c720c6-7fac-4365-b91b-0326782b35a8",
        "cursor": {
          "ref": "785a29c4-e28c-431e-bc35-3210635a09e2",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4693ae34-209e-434f-aa2d-b221e904afda"
        },
        "item": {
          "id": "95c720c6-7fac-4365-b91b-0326782b35a8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7f6d0ea2-9c6c-4df9-af3f-26aaed998a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7accd2-02c4-41b4-98e9-3cd3d5c3b572",
        "cursor": {
          "ref": "440ded4e-0797-4ce4-bda6-689ef1f15227",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b72a3da6-6a3d-4bdd-a7e7-1976d1c449a4"
        },
        "item": {
          "id": "ee7accd2-02c4-41b4-98e9-3cd3d5c3b572",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4e3a7e09-05a4-435a-bf1f-4b62be81bee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd20edf3-8a82-4186-8e39-cd4a42c0c8cf",
        "cursor": {
          "ref": "bf3be33c-83c6-49e0-a98c-f7e0162bb3d4",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6dbbe8e1-652f-4a79-b000-ed2b437c6cc6"
        },
        "item": {
          "id": "cd20edf3-8a82-4186-8e39-cd4a42c0c8cf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "186effdd-c06b-4a6e-bcdb-96a460836e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcb7bde-347c-4da8-9d49-049f0af8e9b0",
        "cursor": {
          "ref": "6c596474-d11e-4851-8dca-a0f3c9065664",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4d101270-f293-4cf2-87ed-a6347ab7afcd"
        },
        "item": {
          "id": "0bcb7bde-347c-4da8-9d49-049f0af8e9b0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7fb1803c-64e7-47c2-b8c6-afd946a489fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8358c1-0157-4ce3-a1e2-38f55324171e",
        "cursor": {
          "ref": "a81266e7-07f7-4e5c-92ce-351bb361e905",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "64f1ca05-b53f-4d49-9b10-e81305a94b56"
        },
        "item": {
          "id": "9a8358c1-0157-4ce3-a1e2-38f55324171e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "93bb81bf-5722-4b5f-8df3-b72866cabc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4ffd7e-16b5-489c-ac0d-13a90b05f406",
        "cursor": {
          "ref": "79341ef3-f287-4350-a2e5-44abb6801668",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "074f916f-5130-4f31-890e-a9b2e856cfcb"
        },
        "item": {
          "id": "0c4ffd7e-16b5-489c-ac0d-13a90b05f406",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3455c464-3bfd-4d5e-bf52-f66814a5c73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4bafb4-1328-4de4-a555-50448a7a7d77",
        "cursor": {
          "ref": "ddc56339-44cc-40cc-9da0-1a72a848ee60",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d457a527-23ba-44b5-a8d1-9867c97b0f88"
        },
        "item": {
          "id": "9f4bafb4-1328-4de4-a555-50448a7a7d77",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fa6ee07c-a903-45e1-a87d-43fa29ecf906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9754a74f-ede4-48db-b9d5-0006f93ccbfc",
        "cursor": {
          "ref": "18985510-7716-427d-94ca-12978951a0c0",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f72cc4f7-b099-48d4-9e9a-9254d6b11ca8"
        },
        "item": {
          "id": "9754a74f-ede4-48db-b9d5-0006f93ccbfc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5fd3d36a-5aff-48b1-a8da-8628df94f0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9863b9f-0f7d-4923-9468-459a8230aee0",
        "cursor": {
          "ref": "b4a22d7d-5400-47ea-bd20-45c100dfc13b",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "76b47c50-108f-41a1-b6c1-ba9d672a309c"
        },
        "item": {
          "id": "e9863b9f-0f7d-4923-9468-459a8230aee0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b4a46dec-409b-4c7d-9ae0-789e82add07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a36207f-d100-4bf0-9ed6-e7f6dec312ba",
        "cursor": {
          "ref": "fc387fac-d552-452e-91c5-a1859eb5b7d7",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a275d9de-d7c3-4bc0-b9d1-2ff9cc4cd4e6"
        },
        "item": {
          "id": "2a36207f-d100-4bf0-9ed6-e7f6dec312ba",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b235036c-70ec-43ad-830b-5bca642242a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a76c19b-eadc-4e21-8654-b92dcc361867",
        "cursor": {
          "ref": "8cc3ade4-fa61-48c4-a32a-46f6600ca01d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9ae11939-8039-47d6-b14d-cbc1814b5737"
        },
        "item": {
          "id": "7a76c19b-eadc-4e21-8654-b92dcc361867",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "03db63a1-29a8-44ca-89a4-cae5cae7eeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e9a5a8-445c-4da6-986c-19a5afc074b3",
        "cursor": {
          "ref": "a32666a1-17c9-4c08-b142-7be66d9de8b8",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dcd73d28-8f90-4a76-ac2e-5d6b4aeff320"
        },
        "item": {
          "id": "f5e9a5a8-445c-4da6-986c-19a5afc074b3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e218767c-b13e-47c0-bbdf-dd837c81c5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e869bafe-5e4c-4a68-b992-83174abdd5f8",
        "cursor": {
          "ref": "eff33ec2-5ad3-4b3d-bf48-7c64c87dcaa5",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f940a36c-4879-4724-a51d-66ebc3bc309e"
        },
        "item": {
          "id": "e869bafe-5e4c-4a68-b992-83174abdd5f8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4a8f28b3-c8a0-4f7c-9cdb-62fb14a743bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d04717b-aa02-4823-865d-d675ced11492",
        "cursor": {
          "ref": "5323f402-9c81-4405-b1b5-4f30e5ed572a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f9ee8662-c580-4794-a3c2-e1423b90dc34"
        },
        "item": {
          "id": "6d04717b-aa02-4823-865d-d675ced11492",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8cb99745-c3f2-48e2-87dc-11d210334cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62f5718-5682-42de-a876-b8ccc1f09e5d",
        "cursor": {
          "ref": "a17be5d2-fa2b-4d4e-9ddb-aab8aefa71f1",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b2c80121-0eba-45ce-b164-a8735411560a"
        },
        "item": {
          "id": "e62f5718-5682-42de-a876-b8ccc1f09e5d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b93c1fa0-8e12-4561-af9f-4f46bd5d111d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5396f7c-8098-4692-9445-942b0f1628b4",
        "cursor": {
          "ref": "7864ef2f-3d5d-4db3-adfa-d79fcccee727",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ffd74668-9d2f-46cd-8eed-8ecfe93a75b0"
        },
        "item": {
          "id": "b5396f7c-8098-4692-9445-942b0f1628b4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b63da9dd-5633-459a-8881-0946d687c48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd56caac-582b-4df7-81b2-ab41ad72196b",
        "cursor": {
          "ref": "1eb60600-9f09-408a-ae87-20e01e0e0d7d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ad02f09d-8173-4cda-b2f7-ae772559623e"
        },
        "item": {
          "id": "bd56caac-582b-4df7-81b2-ab41ad72196b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3f6581f6-4c7f-44b5-b659-3e394ef3e086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf2447f-68bf-421b-b73a-aaddb7d8c5bd",
        "cursor": {
          "ref": "5b461715-9fd2-4bf5-8ff6-0d63bd85fe9f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d81d493a-487e-4446-9d0c-2103fcd78b8b"
        },
        "item": {
          "id": "5cf2447f-68bf-421b-b73a-aaddb7d8c5bd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e2b8c77a-f0f9-4bb7-be38-2501bc777012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c561430-3a35-493f-a28c-2b72b2c5e003",
        "cursor": {
          "ref": "fb2bd16c-399f-4461-80b1-6a8552301c82",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7545ed62-dfb9-432f-80a1-34b4a5c5d478"
        },
        "item": {
          "id": "1c561430-3a35-493f-a28c-2b72b2c5e003",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6e6b1f6c-31b0-4988-a975-f441ca19dbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95484f8-e9a3-45d6-b168-2955fbf19acc",
        "cursor": {
          "ref": "d6551657-2875-4a6b-a34a-078277d3e277",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e9526791-2d8b-4df3-9aa6-97c9c98d38f9"
        },
        "item": {
          "id": "d95484f8-e9a3-45d6-b168-2955fbf19acc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7afdc029-8fc0-46f2-8d3e-3020432c7672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894ebcdc-1046-4a42-ab15-1b9a8e082b9e",
        "cursor": {
          "ref": "4cebda3d-46ec-4f22-a976-58cb9e2000e3",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6346c22e-37b0-4c33-8a00-08a33784e688"
        },
        "item": {
          "id": "894ebcdc-1046-4a42-ab15-1b9a8e082b9e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ffe241dd-baa6-4b25-8bdc-54c451e54cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac79c310-7ea3-4d7a-a788-b2fdfac69de5",
        "cursor": {
          "ref": "2600aa09-a979-4c87-9637-967aee023755",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7b7395f0-64ad-4145-afc7-e61e95d551ce"
        },
        "item": {
          "id": "ac79c310-7ea3-4d7a-a788-b2fdfac69de5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dee99ad8-320b-40c5-91b6-152aec52790e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4735c0b-0b70-449f-8f79-502ccb69edd8",
        "cursor": {
          "ref": "4b64dc1d-0fed-4a9e-9a7f-f7514086fc35",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3c60742c-08d6-445c-853e-a0655f53aca8"
        },
        "item": {
          "id": "e4735c0b-0b70-449f-8f79-502ccb69edd8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ab543e8e-586a-470a-9b6c-fd86e8e6ea33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2d04fb-08a4-4b26-8274-e4608c2b774e",
        "cursor": {
          "ref": "f6bf83ac-a182-4e1a-b6ba-8133e457dcc8",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4bd9591a-2362-499b-8e62-bdb4fb56281b"
        },
        "item": {
          "id": "9f2d04fb-08a4-4b26-8274-e4608c2b774e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "675c7bdd-4e6d-4746-8e06-450d4e4a2bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addbd108-954d-43ba-82a2-fc9a2d6cd3bb",
        "cursor": {
          "ref": "2ef01693-0e79-4849-8472-571023fc15bf",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6f4284f3-6419-4ed3-8268-1f3c1fa4172d"
        },
        "item": {
          "id": "addbd108-954d-43ba-82a2-fc9a2d6cd3bb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d6e2b16a-1231-4622-b6ab-1f4cd72e3a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf04fa6-cbc4-4a9a-8531-2bbd0890dc93",
        "cursor": {
          "ref": "dfb14af5-81ce-45f0-84b1-8a4b791a94d6",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "022f9f77-1a0b-487c-94fb-166b0f6be732"
        },
        "item": {
          "id": "ebf04fa6-cbc4-4a9a-8531-2bbd0890dc93",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6d7936d2-067c-4747-9efa-8475b275653e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f1ad18-2bfb-4893-b3b7-8bea57c681cf",
        "cursor": {
          "ref": "7d57d7c4-fd6b-4322-8338-b0ca1163c7ed",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d18e1bf7-650c-45db-9ffa-0072b20fd843"
        },
        "item": {
          "id": "e9f1ad18-2bfb-4893-b3b7-8bea57c681cf",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "678742f0-9d70-450b-98aa-2c40e7cf29ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87747229-7dd9-4af0-b3b6-97bda7871163",
        "cursor": {
          "ref": "616069a2-58ea-4de3-88e3-85e9e6fa8563",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "eb37de87-5682-4187-9a37-a6b8a686452f"
        },
        "item": {
          "id": "87747229-7dd9-4af0-b3b6-97bda7871163",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d4dcd1cc-ce32-49b6-b4a7-6139bcccee7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d062cb8-bd5e-4ae6-90cb-f7789dd3a82e",
        "cursor": {
          "ref": "16c0371c-c45b-474e-a3b9-817d0cdc80d6",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ed352807-c396-4bf6-9591-2eda13dc3eef"
        },
        "item": {
          "id": "4d062cb8-bd5e-4ae6-90cb-f7789dd3a82e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b1c1ec9b-5607-4510-a608-82e820851257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55db5305-3f78-41ea-bcc8-5df3e3c4b99b",
        "cursor": {
          "ref": "4fa8f77e-61a7-4bc1-8450-c09a3a1efb3a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f1c67c2a-3ad0-442b-9ac6-dac0b4167edc"
        },
        "item": {
          "id": "55db5305-3f78-41ea-bcc8-5df3e3c4b99b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "82344402-4076-4223-911a-37a0c7b54029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d586ee-79ff-46e4-b6cc-1c01bcedbfbb",
        "cursor": {
          "ref": "2f4f9f53-3185-421d-a3e1-e83b3bdc841a",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ca0de98a-b963-4f5e-a609-a5e9ef80fce4"
        },
        "item": {
          "id": "86d586ee-79ff-46e4-b6cc-1c01bcedbfbb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3c07202d-83ae-4e91-9f56-847f41e9bc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000212bf-8cc3-46e3-a11d-4ee33c5cb6cd",
        "cursor": {
          "ref": "6a404ded-1d4c-417f-a10e-4db002db9a5f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "68ef2c1d-a8ed-49d3-b827-8934b446bcac"
        },
        "item": {
          "id": "000212bf-8cc3-46e3-a11d-4ee33c5cb6cd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f5928fbc-e18a-486b-9dc3-933afa2e5260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7678d1-144c-42d8-9ef5-214ce5b4e9ad",
        "cursor": {
          "ref": "cb5fbb7b-111d-4081-a8ce-0de34939714d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "82bdade9-e48f-464f-90f5-e0dd513c2512"
        },
        "item": {
          "id": "7b7678d1-144c-42d8-9ef5-214ce5b4e9ad",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e417a4b1-9525-41fd-8b30-cd5193932f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cf94f9-a4e0-4973-9b93-1268375722d6",
        "cursor": {
          "ref": "c2c43684-9dc9-4d51-8d8e-880b7f8bda5b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "79d534df-9a62-46bc-92ca-e419b52af3d9"
        },
        "item": {
          "id": "c1cf94f9-a4e0-4973-9b93-1268375722d6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "14b05056-8177-45b6-ab43-7953e71fda9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89df691d-db3d-4cd5-b8f7-fd6f151313d6",
        "cursor": {
          "ref": "70528d31-de95-40af-9df9-41cb354927ab",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ead9a227-8187-49d2-b7c0-ba10cd3f22c7"
        },
        "item": {
          "id": "89df691d-db3d-4cd5-b8f7-fd6f151313d6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f7c0b6b4-dcde-4de5-8cc3-db24cc872a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d16e84-75db-4fdf-8cce-c03149a85243",
        "cursor": {
          "ref": "de774c3d-6989-4b1a-a806-c23ff678cd82",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f96ae3bb-d2c8-4b1f-b702-8146d6fc5ae3"
        },
        "item": {
          "id": "31d16e84-75db-4fdf-8cce-c03149a85243",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9b84ef5c-6c89-404f-a23a-fcedd1995918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e94f0c-96a1-420e-954d-a34a67963f39",
        "cursor": {
          "ref": "6f50ece4-fbb6-4670-ac00-b53d7b4af62e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "06001119-e76c-400d-99a5-f20a6fc39f72"
        },
        "item": {
          "id": "31e94f0c-96a1-420e-954d-a34a67963f39",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e7811e80-9b2b-4143-af21-f945b638a38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5cce93-3a22-4384-91cc-7813d92346d7",
        "cursor": {
          "ref": "bb9b3c6b-5e27-4a49-8e6f-066a7364a08b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "761d60fe-2d28-42f5-b110-8674e4645d88"
        },
        "item": {
          "id": "7e5cce93-3a22-4384-91cc-7813d92346d7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "df9e3cee-4bfb-4394-bc06-beb8c7bc6dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed634462-bde6-4140-a08e-3516cb39f503",
        "cursor": {
          "ref": "fbe9c4c6-58a5-4842-96be-8538858a5b9e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cf37f4e0-42f0-4301-a969-91459c0cb342"
        },
        "item": {
          "id": "ed634462-bde6-4140-a08e-3516cb39f503",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "288560d2-0ec1-44eb-9873-0ff41e11fdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47624528-2da1-4b2c-adc0-ebe069ed3cf7",
        "cursor": {
          "ref": "7d1ff962-0ccc-451e-b07c-4f095fe6b7dd",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9fd198b6-6e63-41b0-af07-a254c4839f56"
        },
        "item": {
          "id": "47624528-2da1-4b2c-adc0-ebe069ed3cf7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0576e547-4b28-44c3-b87e-847054a38189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06db3e4d-f313-4bb4-afe5-d376d3f5ba67",
        "cursor": {
          "ref": "84c1639f-48b0-4893-858b-f14802d6a97a",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2053fd94-1eb7-4c88-9981-4e568b360cea"
        },
        "item": {
          "id": "06db3e4d-f313-4bb4-afe5-d376d3f5ba67",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8b496b85-6bc0-4bfb-97c5-7e515b52d484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9475e919-adba-4d3c-be43-a0163cc24fdf",
        "cursor": {
          "ref": "0cae59c8-0a25-49dc-a451-0cd1b061e141",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "75f48d8f-aae2-43bb-a0c3-e1bc0595a42c"
        },
        "item": {
          "id": "9475e919-adba-4d3c-be43-a0163cc24fdf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "20a877e1-1c20-48db-96e2-2173917ce7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b54b766-4838-4de6-a2a9-183666c08756",
        "cursor": {
          "ref": "1e4496c6-0493-4934-a8a6-78d42b9039f0",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "594edfd2-2072-43f8-ab66-22d5a3af6451"
        },
        "item": {
          "id": "0b54b766-4838-4de6-a2a9-183666c08756",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "83021192-2155-4696-871f-7bd6d69c7849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d913b7e6-159e-49d7-8f03-866015419858",
        "cursor": {
          "ref": "8bd71f9d-38c3-498d-bf48-9817f470e237",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "044067ff-ca5a-4302-8829-a39f60236af6"
        },
        "item": {
          "id": "d913b7e6-159e-49d7-8f03-866015419858",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "869533b0-5721-4f2a-bf21-0210e051e192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef2ac2c-d5f8-46ce-9c36-3059a5557fc8",
        "cursor": {
          "ref": "c489e35f-78cb-4a61-b918-420fd4ba425f",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9b800319-87ac-44d1-9c79-f215362a761d"
        },
        "item": {
          "id": "cef2ac2c-d5f8-46ce-9c36-3059a5557fc8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "da26c3c1-696a-440d-a291-a298c0254025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6128db82-fb0a-4eeb-864e-9a66e958227d",
        "cursor": {
          "ref": "8b23f3e8-d4f8-41a9-9492-c2391fc0c366",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "43e71559-70e4-4d8a-9e03-c570c338bc07"
        },
        "item": {
          "id": "6128db82-fb0a-4eeb-864e-9a66e958227d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b9cb9c05-4c2b-462b-9382-abcb905f3081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9502e598-9f10-4c35-93bf-3deeb8648d9d",
        "cursor": {
          "ref": "b4776dd1-2ed4-4b9e-ac74-72058d7ddafc",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b3c27ffa-08fe-4844-a761-69109b6608d4"
        },
        "item": {
          "id": "9502e598-9f10-4c35-93bf-3deeb8648d9d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "afa95d01-05a7-4af2-ba72-d38bb5347bd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0721a2cf-e8d1-4a9c-8cc1-26c1e6acda9e",
        "cursor": {
          "ref": "f5d1981f-e635-450e-ab6b-aca93536ee22",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ad8ac778-a232-4aab-b2e1-1e2502ea014d"
        },
        "item": {
          "id": "0721a2cf-e8d1-4a9c-8cc1-26c1e6acda9e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9430acfa-d30b-43df-b414-4dabc2c63679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b286e7f3-7c0b-4a5a-9d7d-eda0c7d5cfac",
        "cursor": {
          "ref": "aafb593d-1138-4eda-b46b-7a461154018b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "052e2f8a-9839-4386-991a-4cbc5730614c"
        },
        "item": {
          "id": "b286e7f3-7c0b-4a5a-9d7d-eda0c7d5cfac",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ce40b0b9-b3fc-4932-9e2e-edd54f32d63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0d4e3eaa-dc05-40b4-a189-cef77d062cb8",
        "cursor": {
          "ref": "3f84f90b-201d-4602-9569-265cefd90c79",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "aa4558c0-f993-4fa1-b2f1-6582de411c6f"
        },
        "item": {
          "id": "0d4e3eaa-dc05-40b4-a189-cef77d062cb8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "71b00598-0871-4d53-ba26-b5ffc5a503be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8c413d8c-3568-4e5c-97b7-bd3bff70f0ea",
        "cursor": {
          "ref": "27fb1c1d-2b4c-4ed5-901c-bedba53824fd",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "47bcfe80-de7e-42e2-8cb2-c6629e862677"
        },
        "item": {
          "id": "8c413d8c-3568-4e5c-97b7-bd3bff70f0ea",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9f7c1962-6944-4f44-a098-3d0a10441a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "fb52a36d-3b05-45a5-9b09-33a7ec3c41cc",
        "cursor": {
          "ref": "2060a0c2-1370-4e56-b657-baa9b6b705ee",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d83382f5-6b5f-43eb-8cf8-840c1ee472d9"
        },
        "item": {
          "id": "fb52a36d-3b05-45a5-9b09-33a7ec3c41cc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4258404d-413a-4212-9d9d-8c2b9b529a64",
          "status": "Created",
          "code": 201,
          "responseTime": 6097,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8010c5-ca14-471e-a158-ffacb69b4fc0",
        "cursor": {
          "ref": "f79f3f39-cd73-4ba9-8525-5af11921a6ac",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3fd8841f-4c25-4c0f-a04c-87c6d4b03fd3"
        },
        "item": {
          "id": "0f8010c5-ca14-471e-a158-ffacb69b4fc0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8f0e388d-5b01-4750-8d09-e17d4bbce398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "aedc622f-c71b-4465-9de5-cab33220c1f4",
        "cursor": {
          "ref": "d8f652c6-e2dd-415c-ac99-8e1e2f296092",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "09101a53-3d27-4720-9029-23c6ca9cf4d4"
        },
        "item": {
          "id": "aedc622f-c71b-4465-9de5-cab33220c1f4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ff60ba05-494e-4882-ba47-bef90dc234e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2de90ccd-71bf-4b7e-a535-bf6eb3b2d5ab",
        "cursor": {
          "ref": "835ba395-1e68-49dc-887f-e07bce2c7a6e",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1c56c1c2-4d7d-4f64-a919-ba5298754b21"
        },
        "item": {
          "id": "2de90ccd-71bf-4b7e-a535-bf6eb3b2d5ab",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "aca1103a-b148-474e-be43-b3193e87a7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ecf925-e7a0-4f1f-88da-77148c64426d",
        "cursor": {
          "ref": "e42d1b4d-b697-4e64-a5f8-d2e07a3ff4d3",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "574a8ae9-59f6-42c7-a09e-932f2373fdfa"
        },
        "item": {
          "id": "d7ecf925-e7a0-4f1f-88da-77148c64426d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "851f7fcc-09f0-4ab3-b15e-4d9100534946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a3e9b4-c6bc-4d72-8176-cc15841e587b",
        "cursor": {
          "ref": "86dc6c2a-4de7-4a76-8aa5-b45142cbe0c8",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "57374637-6ea3-462e-9b3b-45a5dc72e38b"
        },
        "item": {
          "id": "89a3e9b4-c6bc-4d72-8176-cc15841e587b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b269fae7-7b8a-47a5-b5e0-e3eff3985169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d10d5cf-4177-45d0-93e7-3bc8d5c06baa",
        "cursor": {
          "ref": "0a44a78b-54af-44e0-af23-6b66d274a431",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5b5cdfea-5a03-4b7f-a80f-113c09ee19c7"
        },
        "item": {
          "id": "3d10d5cf-4177-45d0-93e7-3bc8d5c06baa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "80772a4e-f52e-4140-a661-9813c9ca3a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70401df-2f07-4595-b44e-47166a7f738a",
        "cursor": {
          "ref": "2514a8c6-df7e-4fe6-a2d0-02a3b990ec9c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c9f5daba-a82a-480d-9d9e-4a64058be4a5"
        },
        "item": {
          "id": "b70401df-2f07-4595-b44e-47166a7f738a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f81a7918-e3f8-4b53-aa7c-55a57dc206bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fefd07-4048-4a4d-95ab-b30d315907eb",
        "cursor": {
          "ref": "0a49256f-046f-4b10-82dc-68a6dcbe87a2",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a79d87ca-e8c6-43f2-b8f6-c045db56d614"
        },
        "item": {
          "id": "40fefd07-4048-4a4d-95ab-b30d315907eb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f7b2cec0-5769-45e8-b4e6-e8e3ccab4212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80918069-d27a-40c9-9dc6-30d1a2a147c3",
        "cursor": {
          "ref": "45e47596-87f9-4c40-860f-bbb2460833cb",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "badbcb81-a14c-4e32-81b4-0dbd82bce647"
        },
        "item": {
          "id": "80918069-d27a-40c9-9dc6-30d1a2a147c3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dfa15004-0d7e-4b92-8a81-f256341f9e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554ec648-3ca3-4c4d-ae7b-061da13a974d",
        "cursor": {
          "ref": "17324417-3d64-4649-a45c-364078ec27dd",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ebbb43d5-98b6-4947-9e02-9a77eb0dd5a9"
        },
        "item": {
          "id": "554ec648-3ca3-4c4d-ae7b-061da13a974d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "85b904b0-8f0d-48fd-abd2-3d792b57d15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43acbc9c-6cff-45bc-9534-7efb41a34e9a",
        "cursor": {
          "ref": "36aa0564-9c5a-4d07-9177-8fd1918a4020",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "dae62709-c4a2-4bf3-b7db-c1895965c323"
        },
        "item": {
          "id": "43acbc9c-6cff-45bc-9534-7efb41a34e9a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "420d3c0d-a33d-4ac1-901b-568ebd20986f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e644183b-7572-4b1a-ab42-1971189ab1a4",
        "cursor": {
          "ref": "4701488b-7109-46b2-bd53-2bccc8ae0bbe",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a462e6b5-48bc-4890-92e2-231a464b27dd"
        },
        "item": {
          "id": "e644183b-7572-4b1a-ab42-1971189ab1a4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "41e73638-fb9b-4c0c-8131-4c5e8d0f3b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6944edf7-9476-45b7-82e8-c5a815173106",
        "cursor": {
          "ref": "03b31446-a1f2-442d-a033-99750e4058ed",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7daf312f-8e2a-4852-bf97-850cc685043e"
        },
        "item": {
          "id": "6944edf7-9476-45b7-82e8-c5a815173106",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e96720d2-7428-4454-9285-2aa60b82cc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fdac1c-6b47-4d64-af8e-0d90538fe35c",
        "cursor": {
          "ref": "ed120fb8-c035-4634-96c7-e62e193cadaa",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fd9bb5c4-5723-4ecd-bee4-1b19f71e14c1"
        },
        "item": {
          "id": "76fdac1c-6b47-4d64-af8e-0d90538fe35c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aadcf1e2-26c4-4440-8b7e-37ee47a5b00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd18344-dd21-4591-9e6e-52d26f57e219",
        "cursor": {
          "ref": "fc855153-e393-4d0e-b516-6804e782e075",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "affb78b1-1d26-4069-a3e3-48384b5403e6"
        },
        "item": {
          "id": "1dd18344-dd21-4591-9e6e-52d26f57e219",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "708cc88d-5703-426c-afce-10816eecb25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b2aa42-ce97-4474-b64f-ba39a2401cec",
        "cursor": {
          "ref": "f7f99258-099e-4bc8-b2d1-7480fc2ba99f",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6407d5ad-b20a-4048-be2f-8bea390f1399"
        },
        "item": {
          "id": "09b2aa42-ce97-4474-b64f-ba39a2401cec",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c0c0a9bd-d1fd-4efc-88b7-7a9c8d38bc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a1b895-f1fa-4cbc-9d74-196492e7bb0e",
        "cursor": {
          "ref": "5a430c62-25c0-426d-b50a-2b400894217b",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a8529d22-ce0d-48fb-a651-82dfaa68105a"
        },
        "item": {
          "id": "a1a1b895-f1fa-4cbc-9d74-196492e7bb0e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ff527d9c-de4b-4847-97f4-3fb917f76efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a57461-108f-48e9-8a7f-0ab83b9bf0e2",
        "cursor": {
          "ref": "39eebd1a-7e90-416b-9781-fcd90baef243",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c18c12d8-a174-43ad-a570-9a6bd4eaeb10"
        },
        "item": {
          "id": "e0a57461-108f-48e9-8a7f-0ab83b9bf0e2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3fe1d8e1-568b-4f87-b53f-33f5fd9d1fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d54a18a-8d76-46ed-b7de-3f43d84d6294",
        "cursor": {
          "ref": "377f043c-04cb-4703-94c5-75d2b20d63a2",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b49a4c3b-3c3e-46d4-862b-7c33b9cb1034"
        },
        "item": {
          "id": "1d54a18a-8d76-46ed-b7de-3f43d84d6294",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bba5db12-17d9-4c95-9dad-fa090890dedd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "fd9f6f1e-8b88-4441-b881-747c4170c3df",
        "cursor": {
          "ref": "822efc1c-3f92-42a6-b994-2f6a49a58718",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "19b099e9-fc39-441d-bb7f-50621c7e46dc"
        },
        "item": {
          "id": "fd9f6f1e-8b88-4441-b881-747c4170c3df",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7672190d-6ded-4cc9-b280-36dcee8c5c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1e0158-ce96-44a4-a801-513b751c4611",
        "cursor": {
          "ref": "5e5c64b5-4d2c-4df2-8b99-9d3c9ec136b6",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "73b605d7-7480-4fc6-9588-4780f72ee849"
        },
        "item": {
          "id": "6f1e0158-ce96-44a4-a801-513b751c4611",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "23f08517-6090-4635-9f78-366649f96503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16459993-8f22-4821-90f1-bae1b0eb4848",
        "cursor": {
          "ref": "01df5b27-d1e2-40a7-aac5-8e8e9958b60d",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3ed015e0-6fbd-4da8-9bad-cea4d38d23e7"
        },
        "item": {
          "id": "16459993-8f22-4821-90f1-bae1b0eb4848",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9cea9783-6098-44a4-aa40-378d739461c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972674e0-f275-460d-a818-176f547d6647",
        "cursor": {
          "ref": "cdeb64c9-c069-42db-8c3c-05bf343d91b7",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e2b63436-e36b-47e6-a82d-5ad28e9f65cd"
        },
        "item": {
          "id": "972674e0-f275-460d-a818-176f547d6647",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dbdcbb23-216c-42d0-8023-6f76017cfad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a350aa-77aa-4c30-bb4d-325132cb08dc",
        "cursor": {
          "ref": "03cb5af2-4a25-4d2b-9731-fc42448929d8",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e0185000-f60a-40db-85c7-1235aed918d7"
        },
        "item": {
          "id": "e0a350aa-77aa-4c30-bb4d-325132cb08dc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e6c8f3fb-58cc-4201-aa2a-6b38a76ae523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e9b4f3-28f0-4286-aa36-ebbb2ff318d5",
        "cursor": {
          "ref": "afaebf01-dff6-43f7-88ea-74430a8e2f60",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1dab571b-09da-4306-bddf-38cc911734ab"
        },
        "item": {
          "id": "d2e9b4f3-28f0-4286-aa36-ebbb2ff318d5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "16a53d07-46c7-4e17-8992-9f2a4a94f7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef84c55f-d182-4b5a-965f-a432e68ec6bd",
        "cursor": {
          "ref": "65b81ae6-75cd-4bb8-939d-575a23119679",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a3645e1f-60f1-4491-b56c-0e1db2c27eeb"
        },
        "item": {
          "id": "ef84c55f-d182-4b5a-965f-a432e68ec6bd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e59cdaa9-e321-406f-bb6a-aa90fa9c1993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b317ba8f-9ea4-4cd4-8c61-d040869a03f0",
        "cursor": {
          "ref": "845c096b-0ae2-4aeb-8a8f-8687ff8f8069",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d7f77e2a-f8d7-499a-8dbc-0b2454b0e715"
        },
        "item": {
          "id": "b317ba8f-9ea4-4cd4-8c61-d040869a03f0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "56f8f4fb-3830-40bd-81fe-f337094f2bca",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "39c31906-3041-4ed2-873e-255cc28f7363",
        "cursor": {
          "ref": "88555107-75ca-4ecb-b95a-892bb57a97e0",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5391b136-4a52-4b85-ae3c-ca4d61e77d09"
        },
        "item": {
          "id": "39c31906-3041-4ed2-873e-255cc28f7363",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7df3ca36-5d90-461c-9430-711420368710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa5c8af-ba9f-405d-9137-b47dc0abc64b",
        "cursor": {
          "ref": "b3b519f3-400c-4d5f-90b0-30308ba2b1c8",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a6373200-e6bd-48ad-9369-d6e504865b06"
        },
        "item": {
          "id": "2aa5c8af-ba9f-405d-9137-b47dc0abc64b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "765be26b-7637-4911-971a-8d37436232b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f9b594-b891-45e8-a9eb-824cf7aa0715",
        "cursor": {
          "ref": "5990079c-0a27-4cf2-8ed3-2cec6afdacaa",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "09f5a6cc-00e4-4910-9d69-e4fc1400da63"
        },
        "item": {
          "id": "73f9b594-b891-45e8-a9eb-824cf7aa0715",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fb8ddcca-e059-4e24-a5b1-1e178738eedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7287ef-1d83-4c1b-8e60-ebb215225277",
        "cursor": {
          "ref": "3be07c9d-2dc9-4d06-977e-19c5e3c1c099",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "63bc2cd3-f678-4b11-8e8e-82b3756dee76"
        },
        "item": {
          "id": "5a7287ef-1d83-4c1b-8e60-ebb215225277",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ad34276d-27d2-477d-9d2a-4ac798f4b782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9784b4-d04d-4c5c-a537-bdb7d4c77dda",
        "cursor": {
          "ref": "ca0a0236-d368-4ba4-a130-4bae593e6b17",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9fc30187-4d22-457f-b7f9-e2d8d9c8a235"
        },
        "item": {
          "id": "9a9784b4-d04d-4c5c-a537-bdb7d4c77dda",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9c994416-18a0-4e7a-b274-1fdad18b7d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12f680a-c615-44c7-beb4-1531ecdcd0d2",
        "cursor": {
          "ref": "a223ad4e-8694-4a35-a23b-0ca21260c473",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1379e958-312a-4f18-991b-64de6faaa049"
        },
        "item": {
          "id": "b12f680a-c615-44c7-beb4-1531ecdcd0d2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d1212ac1-8cfa-4170-a5f1-16a64dfa18b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a72241-f150-4ff4-8450-1420f49178a9",
        "cursor": {
          "ref": "9b4726ca-37ce-4f3c-b77f-2b024a17a6b8",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7d2deb6f-6efd-4af1-8157-370bbd9cd03d"
        },
        "item": {
          "id": "c1a72241-f150-4ff4-8450-1420f49178a9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8b25b2a1-8f89-4835-8b05-0e1fea739427",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "a0775b44-1ec6-4fe8-8733-039b68d8571c",
        "cursor": {
          "ref": "577c57ed-30fa-43ec-b444-017ceee190a6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c7e4a965-34e1-4883-952e-d0845ceef5c1"
        },
        "item": {
          "id": "a0775b44-1ec6-4fe8-8733-039b68d8571c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cba434fd-c925-483d-b2fb-3797f9843ab4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 100,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "1433f260-05c6-4c5d-80b5-f60db7a2610f",
        "cursor": {
          "ref": "8cb14f1f-7479-40fd-b086-677224aef937",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "09dc6222-74c2-4fe6-be7d-2c7fb6eb1862"
        },
        "item": {
          "id": "1433f260-05c6-4c5d-80b5-f60db7a2610f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1c67c472-c5d3-4e3a-8348-4a49faed13e0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "ca446774-e2fb-4bc2-b6d9-c5937693efb5",
        "cursor": {
          "ref": "e0f9702d-3ed9-4796-ac55-69f8edba4469",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "67012d34-d1d3-4ab9-873c-3d9da1ac3ce9"
        },
        "item": {
          "id": "ca446774-e2fb-4bc2-b6d9-c5937693efb5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6e407400-d90e-4dcd-abbc-18257680beb2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "b1167c60-c81b-486e-b00e-1dbbb70197a1",
        "cursor": {
          "ref": "0b5c4153-46d4-495d-8d0f-29112065a26d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "763204ee-7dd9-4cf2-b534-d17c2071ba79"
        },
        "item": {
          "id": "b1167c60-c81b-486e-b00e-1dbbb70197a1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "73a4aaf1-8619-4978-8ed1-a3fdd5bbda35",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "42718dae-4ebc-480e-92b5-34c712ad3f4d",
        "cursor": {
          "ref": "d515f6b5-701e-4261-8623-85353217f2ce",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "70cda8a2-08c1-4079-a460-a6b3823e27cb"
        },
        "item": {
          "id": "42718dae-4ebc-480e-92b5-34c712ad3f4d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c0aff2cf-064d-4a5b-9d67-e4486d7f5e30",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 111,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "5d638a91-544d-4dea-b4b7-cc50f345944a",
        "cursor": {
          "ref": "b306caef-6bd2-4f75-b2bc-3c466d482206",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fe26c21a-ace2-4ce5-9555-ad1cda806443"
        },
        "item": {
          "id": "5d638a91-544d-4dea-b4b7-cc50f345944a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d3ffbe48-ffe9-48c3-81d1-98ffd92c6168",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80b9f00-93ef-42a7-9d90-87b43bd00d66",
        "cursor": {
          "ref": "b6469f1b-8ba0-49cc-b631-ffb04d8e61ca",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "242f2d52-23e7-473d-bcee-25311be4b60f"
        },
        "item": {
          "id": "b80b9f00-93ef-42a7-9d90-87b43bd00d66",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4c9abac0-6184-4894-b6e6-ab43dbb8854a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4d1697-246a-4b2f-b79e-689081ecb137",
        "cursor": {
          "ref": "813b0480-9ccc-4e13-a26c-de15d6431fdb",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "91da4eb8-155b-4fa7-98b1-8b270aaf87c8"
        },
        "item": {
          "id": "7a4d1697-246a-4b2f-b79e-689081ecb137",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5e4fef0b-a680-42e2-870b-23fd04095c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b475c4-1c97-4486-8a88-0b7e846dc1ac",
        "cursor": {
          "ref": "2a142571-d0bb-4b7e-839d-9c79da31d249",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "99705e07-13b8-4e7c-a6d9-093a9109770b"
        },
        "item": {
          "id": "c2b475c4-1c97-4486-8a88-0b7e846dc1ac",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f1562467-4aac-4390-83fc-2ece368d54d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa657f6-c457-4a3a-b23f-106eeae02783",
        "cursor": {
          "ref": "fffe7d61-28b2-4c81-83b0-d2dadc382461",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "831fa9fd-8f8b-47ef-8fc1-ad4ddb181659"
        },
        "item": {
          "id": "bfa657f6-c457-4a3a-b23f-106eeae02783",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "906e38a2-a92f-4371-83cc-c46060779ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f458d88c-8450-4f7c-a3d6-a5fb5f9ab32a",
        "cursor": {
          "ref": "6f8a5911-ca29-474d-98fd-60e1e3ffdfcc",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b23a03e6-8c50-400a-9680-53c4e5eabfde"
        },
        "item": {
          "id": "f458d88c-8450-4f7c-a3d6-a5fb5f9ab32a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1b68682c-3e37-4b50-9773-93fa4b9016e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf55cc5d-64bb-4652-9073-8367762d524f",
        "cursor": {
          "ref": "63eb2ad8-25e9-4951-8df1-2415000b3f23",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f0c79808-3e88-421f-af77-9a4539fcd54d"
        },
        "item": {
          "id": "bf55cc5d-64bb-4652-9073-8367762d524f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "68da8748-a093-4ac4-bf98-394f7b43aa33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d866f55d-92a6-4426-a16f-efcc406bdce2",
        "cursor": {
          "ref": "756f511f-d7b0-4767-931f-9992ee2b443c",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7a89813f-bbb9-4a58-b4ce-272865b04489"
        },
        "item": {
          "id": "d866f55d-92a6-4426-a16f-efcc406bdce2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0d1fe186-aeb5-4c33-8165-8776693452c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1258dc5e-b4fd-42e4-99f5-72a6c5295cb8",
        "cursor": {
          "ref": "68f90303-0c55-41cf-8e89-2b0180865660",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "138b4527-816a-4bd9-a179-efeadd33293a"
        },
        "item": {
          "id": "1258dc5e-b4fd-42e4-99f5-72a6c5295cb8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9a4497bc-8c12-478e-927d-d34ff2b69a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c1ef74-3bd9-499b-bf19-3888d62dec18",
        "cursor": {
          "ref": "e8e51933-e66f-409f-bd11-c9bf6e152e48",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9913d220-306d-4af0-9eb6-7ab54ec49e2e"
        },
        "item": {
          "id": "a7c1ef74-3bd9-499b-bf19-3888d62dec18",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3e248467-c229-4468-9c5a-78af7fdb5ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ad870e-5f1b-4cd9-ad75-fed6d867d723",
        "cursor": {
          "ref": "62adf290-3b8b-47ec-a8b0-811b78abca81",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2a2a5ef9-4652-4b66-a009-2e9e4e654c8b"
        },
        "item": {
          "id": "a0ad870e-5f1b-4cd9-ad75-fed6d867d723",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7b75ce86-40e9-4e15-b9d7-9b1f56c08138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62733892-9f3c-4ecd-ad57-491db4345e99",
        "cursor": {
          "ref": "df0e7cd8-69a9-4418-89d8-6f91d6550da5",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1824ae15-d28a-4313-963f-693807ec57b5"
        },
        "item": {
          "id": "62733892-9f3c-4ecd-ad57-491db4345e99",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bec93e49-1677-4d4b-bfa6-48382ddee954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273746de-0fea-47ee-a0a8-c7b9e1122d06",
        "cursor": {
          "ref": "8fc42be2-e1b4-450e-8a91-f80ae797d761",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cb881f78-88ad-4883-943c-b0a133d71bb9"
        },
        "item": {
          "id": "273746de-0fea-47ee-a0a8-c7b9e1122d06",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c3376216-e8e8-48ca-acf6-49ca85c9a3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f79c0e-d379-4175-8a10-c78741809758",
        "cursor": {
          "ref": "ad36e920-387d-4817-974f-0bba59a82a2e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2c09e87e-85b5-4903-9687-e5fb735a080c"
        },
        "item": {
          "id": "27f79c0e-d379-4175-8a10-c78741809758",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4c3d6a1d-6fa6-4b2c-a555-1561879a2b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da265085-547c-47f3-9da3-11fb9bb7ae74",
        "cursor": {
          "ref": "e82215a5-7089-4606-8dcc-ec95449ef7ad",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "06284570-743e-44d0-8831-2d4bd4367db8"
        },
        "item": {
          "id": "da265085-547c-47f3-9da3-11fb9bb7ae74",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "483f611f-ee69-4d47-bcf9-c387515ecd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d860360-0daf-478e-b49d-de609fe32d1a",
        "cursor": {
          "ref": "45a7c43a-3e03-4870-ad5b-79271aa73847",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e3e0169d-7fe3-47b7-a290-2e02b188da84"
        },
        "item": {
          "id": "7d860360-0daf-478e-b49d-de609fe32d1a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1c85ddf3-16b0-4a91-9fce-b3ff2a777ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3af741-4601-4748-838c-aaf68363fa24",
        "cursor": {
          "ref": "d04176f1-fa59-4ac6-996c-27ab0eb38fe8",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fdad132c-5100-4236-8773-faafa9a02fa3"
        },
        "item": {
          "id": "7b3af741-4601-4748-838c-aaf68363fa24",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5d065bb3-bfe9-4770-a7c7-d609817fe2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a1b42d-8613-4d0d-8290-4dd421f5ad26",
        "cursor": {
          "ref": "039ac7cd-c86d-4004-ac05-c434833680ca",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8b89cd8c-c81a-4f3b-b843-7ac25da6f716"
        },
        "item": {
          "id": "45a1b42d-8613-4d0d-8290-4dd421f5ad26",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a72b817d-956e-4f4c-ab0e-5a8356045283",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "c8c535d5-7a49-4f84-8155-ef4dd49f1bf6",
        "cursor": {
          "ref": "cdddf608-8188-4fc8-bc19-68abacace856",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6b978149-452d-4e68-aa32-891768d0f1e6"
        },
        "item": {
          "id": "c8c535d5-7a49-4f84-8155-ef4dd49f1bf6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "122b7a86-47ce-460b-947c-d16b1c174a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41ae458-a77f-4640-897b-41081f10ae83",
        "cursor": {
          "ref": "5134bddb-224b-484a-a843-3215149ef1b3",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e76905bd-d78b-440f-b344-1e20c289e14d"
        },
        "item": {
          "id": "a41ae458-a77f-4640-897b-41081f10ae83",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0917961d-f28a-4e6d-bff1-421a2ddf26c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9f5e32-47c8-4976-88db-10d4151446f8",
        "cursor": {
          "ref": "0844c179-65e7-4ec5-b3a2-eb7b5f457c72",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3628a078-6a71-42f5-8c10-17e0099b33c8"
        },
        "item": {
          "id": "3f9f5e32-47c8-4976-88db-10d4151446f8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1971024b-6cab-4b8b-8636-302f6cef9db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53756515-906b-4706-b9b5-4e1ad272ad83",
        "cursor": {
          "ref": "7d1878ea-89e0-4a60-b932-263daabee80f",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "94224788-cd6a-4cb8-9672-69cf7c9bf4d7"
        },
        "item": {
          "id": "53756515-906b-4706-b9b5-4e1ad272ad83",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "29a5a43a-efb0-4870-869a-28763ffc3081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc1601f-cb0e-4e8f-a037-07054a8e6e0b",
        "cursor": {
          "ref": "e39016a5-af02-4b22-9fd7-3429ea566272",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fd22511e-59d0-4d95-99a1-0ad8e01989f7"
        },
        "item": {
          "id": "4dc1601f-cb0e-4e8f-a037-07054a8e6e0b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "549110c6-87e2-43f1-961d-c81bf679fc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4d68b0-048f-484b-b143-e7b3ae846355",
        "cursor": {
          "ref": "45199865-01cd-4e7d-b23d-8cd79a7e69c8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b7d53981-9427-4f17-8ef7-f25b829d6e2f"
        },
        "item": {
          "id": "3b4d68b0-048f-484b-b143-e7b3ae846355",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "403119eb-ef1c-405d-9c6d-bfd4ce295022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10575531-8eb8-40cf-842d-00604764fe15",
        "cursor": {
          "ref": "ced56b4e-0d79-40ac-83a4-8d044b2117ce",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0a1a39e0-0c88-4eef-a60f-5d8fe6c572ab"
        },
        "item": {
          "id": "10575531-8eb8-40cf-842d-00604764fe15",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "83d5dcd7-78d9-4a44-a569-ac4f17261be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd29fc5d-c810-4378-9e08-5a85f478b6b4",
        "cursor": {
          "ref": "04cde598-c27d-4939-88ac-bb9a958481cd",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9a585d74-d163-41cf-810c-f4bc2af0bd23"
        },
        "item": {
          "id": "fd29fc5d-c810-4378-9e08-5a85f478b6b4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "adc40131-f857-4390-8076-8b2e0d807ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b819b3a8-81e2-4940-a53b-08e736dc3ad7",
        "cursor": {
          "ref": "214d3371-c2f3-4cb4-8fc0-6bdc876dca78",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9fa18817-3a72-4c98-832f-77732a974d9e"
        },
        "item": {
          "id": "b819b3a8-81e2-4940-a53b-08e736dc3ad7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a51eeece-70f3-430d-acf4-dc674d7c1b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b465362d-c5cc-428f-993d-2fbb68b28b7d",
        "cursor": {
          "ref": "1efad062-d612-4cf6-9067-53bb463a3a6d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d4f949c2-24ce-47d7-9140-c618e32be3fa"
        },
        "item": {
          "id": "b465362d-c5cc-428f-993d-2fbb68b28b7d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0a231fec-e121-45fe-ae92-e417f0364958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1352cc61-7abe-4459-bf41-abedf361554b",
        "cursor": {
          "ref": "fe540950-f5aa-488e-8e41-821e06f87bfb",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4adf63b6-8db0-40d1-8033-17a9500d6d29"
        },
        "item": {
          "id": "1352cc61-7abe-4459-bf41-abedf361554b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5de1cdc4-f2e3-4d07-b356-a0d363bd2ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b54f18-f2bd-46d2-ac61-e40f380e4424",
        "cursor": {
          "ref": "614fef56-1151-459c-b082-3f6cd74d027a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "92c8d214-ec1d-4c5e-8312-79a9439654b6"
        },
        "item": {
          "id": "07b54f18-f2bd-46d2-ac61-e40f380e4424",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bd9c6e9b-5a7c-45ba-9bed-c4bc45e17373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73977594-6550-4796-9351-77605f13c7cb",
        "cursor": {
          "ref": "10718bde-04e8-4158-abf8-66ac61f17816",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c8dfb27c-e364-420c-bd0f-a20057a84cd8"
        },
        "item": {
          "id": "73977594-6550-4796-9351-77605f13c7cb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9dd22073-7d74-4076-a434-c601213130a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9c2dca-b2d1-4283-9d7d-1018c0783790",
        "cursor": {
          "ref": "e66d1e80-3a26-46db-a1e9-70d1d96de72b",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9457af29-2ec0-421e-9ae0-67ca2f2d8563"
        },
        "item": {
          "id": "de9c2dca-b2d1-4283-9d7d-1018c0783790",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ba256169-e03e-4e83-8c45-8b3a7e7a2581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0611ac0a-1010-46d5-9371-724f1ac33ea0",
        "cursor": {
          "ref": "24bd8ff7-98e4-4516-9379-bfff8c2b0d8e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "005f5717-a784-418c-88fa-4452c43f714a"
        },
        "item": {
          "id": "0611ac0a-1010-46d5-9371-724f1ac33ea0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5daad6ea-2802-426a-9b69-fff654b9d8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6c58d0-be90-46c8-8302-b9b3562d881b",
        "cursor": {
          "ref": "40fc1568-0f20-45f4-b3e9-f66835d01cd1",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "26ac89a5-9294-47d0-93cc-a659886cc1da"
        },
        "item": {
          "id": "5e6c58d0-be90-46c8-8302-b9b3562d881b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7b34be6f-ce3e-499a-8986-5aaa0867421c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c206a2-d7d7-4783-9c56-aa7bd1a3c3d4",
        "cursor": {
          "ref": "212c6fbb-8f1e-410d-a811-5d92c2644080",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bf7c92b5-822b-4ef6-9211-280128a5f20e"
        },
        "item": {
          "id": "23c206a2-d7d7-4783-9c56-aa7bd1a3c3d4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "19144006-3b88-4054-b4a0-5152361d2970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be139f66-098c-4073-bc7c-e484d04c6cb1",
        "cursor": {
          "ref": "59a4de23-8cdd-4f33-9cdb-263eb5667a02",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "cf8019e6-6d39-4e3a-b5c0-d32010372e93"
        },
        "item": {
          "id": "be139f66-098c-4073-bc7c-e484d04c6cb1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e5d9402e-8b9e-40b3-a440-f31cb66619bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882f6e06-c45d-453d-826c-bd11ebd37546",
        "cursor": {
          "ref": "f363943f-0512-4d48-ae4e-b9b6efc0c76d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "233f1636-3d86-4481-86d0-39f34c3ed4c6"
        },
        "item": {
          "id": "882f6e06-c45d-453d-826c-bd11ebd37546",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "addc4346-25a9-461e-94d3-80eaeee720a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554ea812-ff9c-4dd7-8780-16316feb727b",
        "cursor": {
          "ref": "71897f18-ef24-4eca-a6ea-8dcb71546466",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4f84939c-fc32-4e59-aa3e-51cccb492a68"
        },
        "item": {
          "id": "554ea812-ff9c-4dd7-8780-16316feb727b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "014a2454-86a7-4c01-b553-107a1e9db507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb86ecf4-fb03-4b6b-bd07-e0677d922beb",
        "cursor": {
          "ref": "69e0530b-fbeb-418c-9a9b-a6fab3bfaa3f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "623f0fcd-72d3-4dc0-96d2-4687ce6ddaff"
        },
        "item": {
          "id": "eb86ecf4-fb03-4b6b-bd07-e0677d922beb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4e5d7256-29b9-4dd9-982b-814f27f4e369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a86a6c-b746-466e-b949-01a306fb9db7",
        "cursor": {
          "ref": "50c296b9-06d1-46fb-96e5-73397dc3217a",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7dc1dda9-8341-434f-9821-02e80d5989b5"
        },
        "item": {
          "id": "19a86a6c-b746-466e-b949-01a306fb9db7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d8b6406f-97da-4c71-bf06-9abf00d25bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acd97e3-d62e-48cb-85ba-12e2625d78d1",
        "cursor": {
          "ref": "f0a55f92-3d7d-49f7-b5ad-8cee78f2b110",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "629a10ec-f45e-429e-b24c-dcdab0bd0a4f"
        },
        "item": {
          "id": "7acd97e3-d62e-48cb-85ba-12e2625d78d1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1fb287f3-bbb7-41a3-ae08-a25765d14cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a623e856-89cb-41c6-9080-23a5cb21668c",
        "cursor": {
          "ref": "8d7c4740-dd22-47ac-bb5f-40cd1c125900",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "749c8ff8-1af4-4153-b7d7-29c904ea9f6f"
        },
        "item": {
          "id": "a623e856-89cb-41c6-9080-23a5cb21668c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "79b19030-d478-498b-9e28-7b140e3f7521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8b6715-ecb3-4515-ae0e-9648de3e9a3c",
        "cursor": {
          "ref": "8e626ecd-9ce4-4f57-985c-ada18aa31b96",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b364dcff-3877-4424-8086-e19da0bc3e13"
        },
        "item": {
          "id": "0f8b6715-ecb3-4515-ae0e-9648de3e9a3c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f640f5ed-5d8b-42e2-af67-1b9dbb0d48e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd951543-7ba8-4e11-a1f3-4cc3800d48e7",
        "cursor": {
          "ref": "b525b570-10ec-4ec9-8b65-fdb3407f4e20",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7b9283c5-c45e-463f-a695-965d2c2407db"
        },
        "item": {
          "id": "dd951543-7ba8-4e11-a1f3-4cc3800d48e7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "67d84c96-2164-47cf-908a-8200e06c3fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184e7c5d-f435-4796-af3f-43d3ca901d7b",
        "cursor": {
          "ref": "860d0cc5-90f6-485c-a277-3d9429d9a377",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0abbd1c6-c09b-4555-8f56-1401d6811436"
        },
        "item": {
          "id": "184e7c5d-f435-4796-af3f-43d3ca901d7b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8fd234ab-7f7f-4df4-bca0-5587cda37672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02c64cc-bb43-4e60-9d07-730e79a7e191",
        "cursor": {
          "ref": "d6190352-4ca2-40b2-ba20-195277118b09",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8fd3e6c6-ae4b-46ee-9a17-3eef840fc5c6"
        },
        "item": {
          "id": "d02c64cc-bb43-4e60-9d07-730e79a7e191",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "89d11a87-178c-4620-8202-6d64b423b18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5618cf7d-309e-4a9c-b7fe-700b67ad0ce4",
        "cursor": {
          "ref": "92fc57fa-eb46-467b-b974-80ae185e3896",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d39ed598-7457-4ba7-bc3e-5b4295415b31"
        },
        "item": {
          "id": "5618cf7d-309e-4a9c-b7fe-700b67ad0ce4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "537ad394-4af9-4f6b-a1ec-d628e275127c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c7abc7-c50e-4c65-a461-9fa187035fc8",
        "cursor": {
          "ref": "0a66dbf8-c0b8-43f4-9ee0-22430e0b2691",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "84ac8348-5c66-4ce6-9544-535abebee086"
        },
        "item": {
          "id": "c1c7abc7-c50e-4c65-a461-9fa187035fc8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fd1d0afd-b071-44ce-93a7-4f1353ab96c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92449b7c-bac8-42c8-99db-577cc011b081",
        "cursor": {
          "ref": "be539e28-9ccf-4e15-a268-7fb36f41b71b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a07100e4-9b2b-4e58-bb33-2c7027ae33ba"
        },
        "item": {
          "id": "92449b7c-bac8-42c8-99db-577cc011b081",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "66892bd6-5f37-461a-863d-54382a5a3b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e77720-5825-43f4-9e28-40acebced937",
        "cursor": {
          "ref": "cc90dca2-eeda-4fee-9f83-cd35e3e3ab32",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6f585b28-5b85-4f7b-ae28-31969cdd82ec"
        },
        "item": {
          "id": "67e77720-5825-43f4-9e28-40acebced937",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3d9c4ea8-e871-4e4a-8983-545291c19a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed338420-01cf-46ee-9807-0683f05dfbc9",
        "cursor": {
          "ref": "4c9868df-f819-4c04-980f-a3fbe959ce20",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6fa681c8-d3b2-49ed-b79e-3c96ece74d1a"
        },
        "item": {
          "id": "ed338420-01cf-46ee-9807-0683f05dfbc9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "051db84b-a272-4e08-9706-a25b95d39d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24450730-891d-4fc5-8ec5-867b3f55b92c",
        "cursor": {
          "ref": "e13e0401-013e-4caf-9603-15644522ef81",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "133f35b0-303d-450f-b45b-6155a4f2716b"
        },
        "item": {
          "id": "24450730-891d-4fc5-8ec5-867b3f55b92c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1c8f1ba9-af64-4d70-98a1-1b6e4aeff6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90ba385-5372-49bc-982f-c8b4f06af75e",
        "cursor": {
          "ref": "424e53b1-5326-4696-9e5f-cf8453ee6646",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4f82e729-8505-43e8-85de-bcd653f02716"
        },
        "item": {
          "id": "f90ba385-5372-49bc-982f-c8b4f06af75e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "68fe40f3-49ca-4444-9e3f-0a44df3954aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61539443-db17-424b-a0f8-d4ac13e95e83",
        "cursor": {
          "ref": "3c05045f-93c6-4c5e-a961-540a396cbfb1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8b9d7484-1e27-49b1-af3b-5c2c66144024"
        },
        "item": {
          "id": "61539443-db17-424b-a0f8-d4ac13e95e83",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e5b47636-e0eb-40a9-9895-c0eac9db9a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfbd790-36f9-4e8d-9852-68639d908e99",
        "cursor": {
          "ref": "a9985072-f4b3-4209-8a52-b773647903ca",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ee17f028-661b-481e-8477-840b5f2e667d"
        },
        "item": {
          "id": "fdfbd790-36f9-4e8d-9852-68639d908e99",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a53abaf9-212b-4453-98bf-ee485f89c320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c262e9e-6cd1-4930-9887-494281b6141b",
        "cursor": {
          "ref": "674c8c1e-51c2-46cc-a560-2481e78dd904",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "367854c1-286d-43f7-b671-1b61ea3ab5de"
        },
        "item": {
          "id": "7c262e9e-6cd1-4930-9887-494281b6141b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7616e373-eee6-4fae-ae43-1998bcb13783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac439b45-585e-4251-9c22-7dd078ba5124",
        "cursor": {
          "ref": "95fe79ba-31ea-45f3-9b0a-1d5363de0254",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "066346bc-7bad-491a-9ce0-9f7e995170c9"
        },
        "item": {
          "id": "ac439b45-585e-4251-9c22-7dd078ba5124",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0ab05f8e-b22a-411d-af17-cdb4e959197b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2b27a0-7b71-43b1-a159-9f9df05eaf6b",
        "cursor": {
          "ref": "9e983d97-900c-40e9-b8d4-1a3af6ce35fd",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cbcd8ff6-00c6-4e83-86b6-50ba62040341"
        },
        "item": {
          "id": "1c2b27a0-7b71-43b1-a159-9f9df05eaf6b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "feee48e3-b0a4-4a1a-b61d-4723e5130782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74391121-8bc7-4f25-a8f2-a8a3fe67388e",
        "cursor": {
          "ref": "5013c876-57cf-4cd9-a3e3-c03877673b65",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "773a138a-9214-4872-b20c-62283f010d47"
        },
        "item": {
          "id": "74391121-8bc7-4f25-a8f2-a8a3fe67388e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "231a00dc-7c5d-4540-9e09-cce1354f16bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bc80cd-ab76-4d82-a4dc-6fd665bd2a91",
        "cursor": {
          "ref": "ecf1e024-87ab-4b13-abaf-f7a01359a623",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "66f3731d-374d-4a31-b959-4302a4af49d6"
        },
        "item": {
          "id": "52bc80cd-ab76-4d82-a4dc-6fd665bd2a91",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "cfd52830-56a3-4464-b903-97382a7ddcc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da01f7eb-9e00-45af-96e3-09258b82072d",
        "cursor": {
          "ref": "8b0c7962-3ee4-408d-b943-86e2a388b862",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e7b4b6b6-9eca-47ae-8c2d-98c6b3dc6c34"
        },
        "item": {
          "id": "da01f7eb-9e00-45af-96e3-09258b82072d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c47b40e1-85dc-4274-beac-727e3a9643b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16fc667-9e5c-47a5-bea7-671bf095eeb0",
        "cursor": {
          "ref": "a97fb3b8-6553-4d73-ae34-af1f6e875793",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "69811ed1-f608-490e-8ed4-9b06e0b5c454"
        },
        "item": {
          "id": "f16fc667-9e5c-47a5-bea7-671bf095eeb0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "44bd9e7c-b532-4d6f-a8fc-c0c80f7af5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1711b7-8c7a-4d87-8d8a-4a15040bae74",
        "cursor": {
          "ref": "543b396a-738a-4db4-9c20-f8f1d2107af7",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fbacc549-19c7-4e43-9c7a-20539ae8ffc4"
        },
        "item": {
          "id": "ae1711b7-8c7a-4d87-8d8a-4a15040bae74",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "03418b2d-a568-47e0-a65c-dae534f099da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ce5a00-0c2c-4f11-aba9-f743135c6fb1",
        "cursor": {
          "ref": "b3807e7f-68c6-4ecd-a9a9-2daf9ff34868",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "36acd411-99e6-48b4-9bcb-0e095dea146f"
        },
        "item": {
          "id": "57ce5a00-0c2c-4f11-aba9-f743135c6fb1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d169d762-20fc-4b40-b17f-7bead09ac391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1906eb-a68a-45a4-8a28-7bce7a5a669e",
        "cursor": {
          "ref": "1b7f4e50-b363-47a2-b8b4-f4b7389d1056",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5fb2f2ac-3b1f-46fb-ac22-a359411ff9cb"
        },
        "item": {
          "id": "bf1906eb-a68a-45a4-8a28-7bce7a5a669e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0081a060-58bb-4277-9f13-e0394a07a11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464882ad-c18e-4c49-821c-0749abfd7de7",
        "cursor": {
          "ref": "6c3050cd-ef57-42da-b9dd-5c189564c8bb",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e84b7c8a-91c1-4091-ae64-8d3286773793"
        },
        "item": {
          "id": "464882ad-c18e-4c49-821c-0749abfd7de7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4b64cf9e-d7f1-4c2a-b429-9592fab963be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197b5ac4-efc3-4b1f-9113-ade3eb87ca63",
        "cursor": {
          "ref": "035c6720-90c8-498b-acbf-9797662ffb41",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "66adc851-3545-449b-a965-9270af6a6cb5"
        },
        "item": {
          "id": "197b5ac4-efc3-4b1f-9113-ade3eb87ca63",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ed8999fa-5e4d-4248-952b-d96b22a20ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d7cba2-cb6c-4d08-9a74-d09716ee691c",
        "cursor": {
          "ref": "a572ad6e-8a18-468c-a7b7-cde832f8697f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "85f080f1-d2c8-42c3-9579-8e5abafb4b9e"
        },
        "item": {
          "id": "d3d7cba2-cb6c-4d08-9a74-d09716ee691c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3efa43f4-7697-4fef-9756-085172951af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118bfd6b-0b2c-4432-8d5c-4ce93377afbe",
        "cursor": {
          "ref": "739f502c-c36c-46d4-bffe-e2a35a26781a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8e30ee23-72f6-40a7-b14e-a895955fa41e"
        },
        "item": {
          "id": "118bfd6b-0b2c-4432-8d5c-4ce93377afbe",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1b433d33-69bf-4f6f-83bb-114b859a3d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29693ece-ab72-425c-bec9-4c82a608f2af",
        "cursor": {
          "ref": "8c3646b1-cac2-4756-9bd1-ab5bda911e45",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0fdcb284-7736-43a1-9c9f-3bc2bdfd79b4"
        },
        "item": {
          "id": "29693ece-ab72-425c-bec9-4c82a608f2af",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4a9a8571-65e5-456b-838a-89d9b229af24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82ef196-bda8-42db-92a4-dcbd2788c602",
        "cursor": {
          "ref": "13d5fc25-fd17-4a84-8c45-bcd12017e1e9",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b4a23f0a-ea80-401d-818e-5ceef5e8dd1c"
        },
        "item": {
          "id": "e82ef196-bda8-42db-92a4-dcbd2788c602",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a7ee9cb7-37ed-4277-bc52-021f70a729a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a73ce1-a431-4fa8-bf59-e8e312c69f8a",
        "cursor": {
          "ref": "7ccb9387-8192-46eb-8a7c-7f24b1b589e0",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "057b54e2-b9ea-4cec-8de2-7efdf65772d0"
        },
        "item": {
          "id": "b5a73ce1-a431-4fa8-bf59-e8e312c69f8a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7b631908-1b78-4ca0-ba2a-1115fa26de0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427ee764-82c5-40ce-9759-0e9ef920a101",
        "cursor": {
          "ref": "6cd03f80-ae9d-40ed-b260-525917d19a0c",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4b4e68bc-88b4-4c6f-a3df-0da54f9f317d"
        },
        "item": {
          "id": "427ee764-82c5-40ce-9759-0e9ef920a101",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ddbb0975-613b-4281-9fc8-c03f4af96967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5f65c9-b2db-461f-92a3-707cbd387013",
        "cursor": {
          "ref": "fb7d60ec-ca79-4c4c-b025-8a137d07f01e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "93155d71-51b5-4d94-b70e-d1938e0b00ae"
        },
        "item": {
          "id": "ff5f65c9-b2db-461f-92a3-707cbd387013",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d53e6467-b148-418a-92f4-271d0b61cf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4f1d60-76cf-4316-9bc1-56659b796a5b",
        "cursor": {
          "ref": "6d28eeb7-8d61-4010-8f68-47cc6391fae0",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8f762887-617f-46e4-9319-2e7eacbfe232"
        },
        "item": {
          "id": "5d4f1d60-76cf-4316-9bc1-56659b796a5b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "11119af9-5506-489e-a7e5-4253d662d881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f525c576-fe0a-42ae-8faf-d1678658843a",
        "cursor": {
          "ref": "e75a7225-1ad5-4375-b9cf-5ddc5a3e5bba",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5664b18a-acb2-4545-a141-08cdaeb01c62"
        },
        "item": {
          "id": "f525c576-fe0a-42ae-8faf-d1678658843a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "238b3cb0-fac0-4d01-bb2f-59644d4632c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e628b34-877d-49cb-a698-b815b01ff8fc",
        "cursor": {
          "ref": "52185ee1-bebb-4da3-a87a-30b42560493c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0dfffd3c-3bd8-4df0-98b4-96d7095a589c"
        },
        "item": {
          "id": "7e628b34-877d-49cb-a698-b815b01ff8fc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "13d41d78-eae3-4dfd-8f04-57d0b53982f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eccdb11-090d-4945-802a-c456606074a1",
        "cursor": {
          "ref": "9142766c-e113-42c6-91f9-e772f38a4d98",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "75f22bb5-5727-4871-956a-db5149a0dd99"
        },
        "item": {
          "id": "9eccdb11-090d-4945-802a-c456606074a1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3cac543a-f904-4acd-b023-235ab8972053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a30b3b-9830-4372-ae36-5c7453ec048b",
        "cursor": {
          "ref": "91f286a7-e539-4556-a3f3-ab2ee12f08b5",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "23948cc5-4fae-4c29-9226-866ab0c05c5f"
        },
        "item": {
          "id": "c2a30b3b-9830-4372-ae36-5c7453ec048b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "37bb198b-09cb-4feb-ad15-57d4df9f44c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd78c4c-fbde-4ec4-80dd-4499f6243bf5",
        "cursor": {
          "ref": "4fe1aaca-9fe1-4edd-94a4-77313015f828",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8c8478c8-883a-4bbe-9d16-878dd44e6c66"
        },
        "item": {
          "id": "3bd78c4c-fbde-4ec4-80dd-4499f6243bf5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cd6e2121-f7ea-40c1-a9db-9633c86a01ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7522cdd-98db-43d2-9fc9-0e5fa35c06df",
        "cursor": {
          "ref": "61608db5-1f6d-476d-ac20-242ef3450d51",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2c2f3e61-531c-4596-a4bb-d8fd232d220f"
        },
        "item": {
          "id": "b7522cdd-98db-43d2-9fc9-0e5fa35c06df",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5e4c0e31-f03c-460b-a60d-868376662b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3ea86a-0cc1-401d-8729-ef45f2f766b7",
        "cursor": {
          "ref": "c38cae17-164a-40fe-8b6d-00fe11979674",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a1751ef0-940d-4678-b16c-4c2beaa0997c"
        },
        "item": {
          "id": "7e3ea86a-0cc1-401d-8729-ef45f2f766b7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "27ba0a3e-1b2a-45a9-ab51-80aa63f4ead2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acdf2e1-883c-4956-b1d2-d970b8f51e65",
        "cursor": {
          "ref": "2cc435f0-a971-4519-9e7f-d13b4807959b",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9c9a6d6f-7297-4d4e-bf7d-bcf2148ef72e"
        },
        "item": {
          "id": "8acdf2e1-883c-4956-b1d2-d970b8f51e65",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "23565e5e-0ba3-40bd-8790-e8d4b28b2f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2277655c-536f-41a0-8dd3-6bc67a64668d",
        "cursor": {
          "ref": "6deb3dbc-5640-4712-a0b7-4872a4c94e80",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "27dc6e50-43c4-4ce8-9f21-14df2456bf93"
        },
        "item": {
          "id": "2277655c-536f-41a0-8dd3-6bc67a64668d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "46a46276-cdae-4e57-b0b7-cd070813827c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7359bb-b940-422b-98ea-e2746973f8b4",
        "cursor": {
          "ref": "168273a1-3381-41b6-bb02-2bec0838716e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0c01bd07-9ccf-4c4f-917e-b7407d8482fa"
        },
        "item": {
          "id": "8c7359bb-b940-422b-98ea-e2746973f8b4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c92a7770-56b5-4f49-90df-093b2f54a0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f480c54-216c-411c-a707-d9c9437a9ea3",
        "cursor": {
          "ref": "011f0dcc-0c67-4408-bbde-77d5bb13825f",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e5d7eeab-cd60-4198-80c1-c110e2f8cae2"
        },
        "item": {
          "id": "6f480c54-216c-411c-a707-d9c9437a9ea3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cf9a980b-50b9-430c-9104-5519dbd35709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1336692e-7fdc-4110-92d8-772aabf63041",
        "cursor": {
          "ref": "c6ac0984-0bfb-453f-a216-281fdaf03701",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1e2fcb66-88fe-46a7-ad67-c068157b7188"
        },
        "item": {
          "id": "1336692e-7fdc-4110-92d8-772aabf63041",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c1cdbb0f-bc6e-4c17-bfeb-6f4a14ca8b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6c010a-7980-4136-8480-05c1be3d9d0f",
        "cursor": {
          "ref": "696ec558-d5c3-449f-baf9-ee343293bf5c",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "935ae3a0-41b5-4c6f-8955-ad7fa2a6577d"
        },
        "item": {
          "id": "5b6c010a-7980-4136-8480-05c1be3d9d0f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a10ca8ed-adce-4bd0-b29d-edaef5c96512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789bfff9-69b3-4e17-b4d8-e056b2cf0aa2",
        "cursor": {
          "ref": "bb70e098-e4f7-4810-97d1-f5352016e292",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "407c7121-26cc-4ecf-ba66-658dd8999056"
        },
        "item": {
          "id": "789bfff9-69b3-4e17-b4d8-e056b2cf0aa2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "93407e48-1f95-4dab-bc27-73c51d210c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42fbb67-4f81-40be-8efd-3bfd3e6f44c9",
        "cursor": {
          "ref": "e31e5e64-08df-4092-8a09-abc12c3ecce1",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f57c765f-8b85-4196-93ff-783b3341c188"
        },
        "item": {
          "id": "e42fbb67-4f81-40be-8efd-3bfd3e6f44c9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9d78ff97-d8e1-42d6-ab3e-779860889e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3e51c7-cb08-44ed-bde2-74538b35b5ed",
        "cursor": {
          "ref": "5c2c16ec-6cae-4ea0-8430-f7f7f1bcfb59",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d5a4d1f1-6bf1-475a-a0a4-3d43a180e369"
        },
        "item": {
          "id": "2d3e51c7-cb08-44ed-bde2-74538b35b5ed",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "40f3dfa3-65dc-4e1b-a859-d9d9fe9f8fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed76aeeb-febe-43f8-a0cf-76fd84764a86",
        "cursor": {
          "ref": "4c809a53-62dd-4a4b-9ec6-fdc4da480c40",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "93bd3154-1751-41c5-950c-81bd9cb38119"
        },
        "item": {
          "id": "ed76aeeb-febe-43f8-a0cf-76fd84764a86",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "099fbef0-fc57-4d98-8e18-448612e810e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317d547a-ab9c-4395-87d2-c221fa816a9a",
        "cursor": {
          "ref": "51441258-9113-461d-86f9-71925bf6f23f",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cdcd562b-6a1a-4b6c-96a4-d2bb340bc64a"
        },
        "item": {
          "id": "317d547a-ab9c-4395-87d2-c221fa816a9a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "edbcaeeb-d755-4078-b822-0d19ba2f761c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a257d2-25f9-4dc6-8561-5c95f7b30575",
        "cursor": {
          "ref": "ad5f31a9-a65b-4ad1-9a5c-1a766c813e88",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "78fb4c3e-402f-4864-8108-b5ec9804604b"
        },
        "item": {
          "id": "c5a257d2-25f9-4dc6-8561-5c95f7b30575",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e6e96162-e66f-40a1-b3e2-471005a13be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e951e90-584b-4e80-ab82-18eea0ad6452",
        "cursor": {
          "ref": "d75f1f84-ba0c-4f9a-bfc8-97aa9f3bc411",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dde2d208-f535-47bd-91c9-4278a53b8255"
        },
        "item": {
          "id": "6e951e90-584b-4e80-ab82-18eea0ad6452",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "99f5d1fc-00a5-40b0-b5f1-3fa1ce6e442d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6443180-bbab-41ff-9f19-0e4fdf733544",
        "cursor": {
          "ref": "75ec8daf-ed61-4e01-bd78-d03353c3e886",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f9f6c6e2-3427-4d43-8ee8-131f190a1673"
        },
        "item": {
          "id": "d6443180-bbab-41ff-9f19-0e4fdf733544",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6ac904c7-fa94-4ac4-85a0-e68207e9638d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b388ce-9e87-4e8a-b2d1-1cdce2e2675b",
        "cursor": {
          "ref": "c39ac654-44e4-44f3-92cd-5077689f7c76",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4874efdb-a8f9-4c5f-a3e3-6e29a4298933"
        },
        "item": {
          "id": "b8b388ce-9e87-4e8a-b2d1-1cdce2e2675b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "26c750f4-653f-4c12-a551-c9d379bf71a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3772d1-0c74-46b9-a9c8-9c23c5bcf4b1",
        "cursor": {
          "ref": "f6e389e3-9230-4d93-b035-1bb8964ceab9",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "df9f5c06-04dd-4afe-b015-ab444861841e"
        },
        "item": {
          "id": "be3772d1-0c74-46b9-a9c8-9c23c5bcf4b1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "da46a8cc-5348-4889-8e7c-606d144bb691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0c5961-8887-404a-bf49-677db20a744d",
        "cursor": {
          "ref": "1d80b217-95a0-4e07-863a-602f85abaee7",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b5e91b50-d7be-4e33-9216-7e37845b7079"
        },
        "item": {
          "id": "2a0c5961-8887-404a-bf49-677db20a744d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "af3a31e0-6051-48ed-a926-38233a76f378",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64173f02-c3aa-43cc-94d9-4dd0a5da4fc9",
        "cursor": {
          "ref": "3bda2863-2b87-4ea7-adb6-6a198b832166",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c07e32dc-ede7-4e7c-acd8-4bec6fd99768"
        },
        "item": {
          "id": "64173f02-c3aa-43cc-94d9-4dd0a5da4fc9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ec48a5d5-c27b-49d6-8be9-11a7ac94d2d2",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d3934a-065e-423f-ad88-d07a4633def5",
        "cursor": {
          "ref": "187c9ab9-9c3d-4b5e-98a7-e674b56e3172",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a849925b-3fa5-486f-b3d8-fcabab1e562f"
        },
        "item": {
          "id": "e0d3934a-065e-423f-ad88-d07a4633def5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "01f26900-bdaa-4903-b612-ca50f06a511b",
          "status": "OK",
          "code": 200,
          "responseTime": 3066,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa70f80-d4cd-4820-82e5-8368fce2ca78",
        "cursor": {
          "ref": "cf02cd72-1bea-48c1-b20a-394671248bc2",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9a159a92-4a21-44b0-bf45-fcae504cc7ba"
        },
        "item": {
          "id": "faa70f80-d4cd-4820-82e5-8368fce2ca78",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "899538fa-2f25-417d-b0fd-7293e53aa77f",
          "status": "OK",
          "code": 200,
          "responseTime": 2085,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f40a961-2f34-4d4c-a1f6-0d70432f28ef",
        "cursor": {
          "ref": "595a0fff-9f8a-409b-85c2-ecdd16489977",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "04c5969a-3560-4e06-be43-09d82dea416c"
        },
        "item": {
          "id": "8f40a961-2f34-4d4c-a1f6-0d70432f28ef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "266d8280-5695-4dca-a976-ac4d78e75fb1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f40a961-2f34-4d4c-a1f6-0d70432f28ef",
        "cursor": {
          "ref": "595a0fff-9f8a-409b-85c2-ecdd16489977",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "04c5969a-3560-4e06-be43-09d82dea416c"
        },
        "item": {
          "id": "8f40a961-2f34-4d4c-a1f6-0d70432f28ef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "266d8280-5695-4dca-a976-ac4d78e75fb1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78deff70-67bf-457f-b38c-f105c3ea1849",
        "cursor": {
          "ref": "35543688-6430-4f67-be56-1080b851c01e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1e79f521-bbb9-47b6-ab13-5ebcaee5d46b"
        },
        "item": {
          "id": "78deff70-67bf-457f-b38c-f105c3ea1849",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f06e861e-a18f-4407-9f34-409971e03f56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4a4f82-5cd5-461e-ac53-29061c28e011",
        "cursor": {
          "ref": "17160ef2-278e-425b-8960-9bef7af5b693",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2c87b1d1-b9d6-4af4-8815-f6c4fed0da37"
        },
        "item": {
          "id": "4e4a4f82-5cd5-461e-ac53-29061c28e011",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4d2212c5-bab8-45ab-96b4-c40fc7d59006",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}