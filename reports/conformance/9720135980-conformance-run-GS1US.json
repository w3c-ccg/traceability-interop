{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "da0f82fd-99ed-4764-9be6-3d39c477f08a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0fe46308-bd99-4990-a612-d455e1932ad3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cfca1e2e-d510-4151-8a23-9c1809601e6b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a6e9738e-9e55-43e2-97b2-b31624eeeaa3"
                }
              }
            ]
          },
          {
            "id": "3baefffa-78c3-45a2-b606-e40b5afce54d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f6e48f37-477e-4dc3-afc1-48788ed88297",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f63888cf-67a9-4c6f-a22f-f72621f2294a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5617a0ea-d8b5-4af1-8cad-acbfde9b5003",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3136f9f0-e257-451e-95ad-54b44bf21944",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5493245b-9020-47c4-8c8c-55370e6c78e5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfbec0ff-dfaf-4bfc-989c-e1d49dc2a81f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57a7250e-692c-4714-a22f-a0b83c1bd123"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ebc04320-5675-4b28-95f7-e09c413f5c0a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9afad360-387b-41d8-90a8-1dafe775a90f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3f2375fa-fc7a-4f52-9d24-6a4849c578ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e42d0a75-b41e-4c4e-a47a-3f819503f6c6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44ff3358-5e34-402c-8031-e3128915f0a0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c19e6ef3-febc-46fe-a70e-599ef105bc93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6c263c5-3842-4cfd-b5c1-4d4d515a58a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed8802b0-5b1c-4809-976a-f5867373e719"
            }
          }
        ]
      },
      {
        "id": "9b685114-6bd1-4463-a84c-d168c4261994",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cfc2fb00-9e0f-436e-bb15-3d0287b64718",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db08559a-64e6-474d-b65d-7528d508512a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d2a2156d-7e27-422a-a200-a7ed9b77f453",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac53d1a-1838-4677-a85e-15d428df9f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60e743ef-9b51-43a0-91d1-4afe3585061f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4b86cb-a86e-48db-a5f9-a4bb5c01be9c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9078d9-67ad-4f55-b512-c70e73f452fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ceab3115-d4f1-448c-8e70-39756f5ef8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f21886-5b90-45cc-83f1-505635b933cb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b582723f-82bb-473b-bf4c-fafe73f59749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc976867-8451-4bec-9862-5dcc4f197beb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "55188f0b-578a-4816-8d29-5ff7db4c5ed9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78d6c770-018c-44bc-b11d-776b9edf5531",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9fb395-582f-4c6e-b7f7-eed4674fa724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c132308-26ed-46a9-8c12-7b6be4c23368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de66660-ee88-45c1-9fe6-d2f56e93cddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36c55ac-c056-478c-a0fa-89a625c51c8f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "df2912de-a1a4-442f-a422-2b12d63dbcb2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "446294b9-691e-4b64-b86d-1ac34d9bda99",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bb13c03-4d92-40a3-b50f-f71ed884ce71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8f934234-bd7c-4c12-96ed-d78b8b8d09a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00ea33f7-e2ea-461b-bab3-c9be2393c403",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3dcd0d9e-cbd4-4247-be1d-96001eb3ca04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e8f9705-8920-4023-a556-4cb80eae465f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11f9a202-3ba5-4b8b-944d-b2419b94bd90"
            }
          }
        ]
      },
      {
        "id": "cd525dba-3eec-4a80-88b6-59d77e1d7195",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "21bb97c2-4a0b-4fd8-9a8e-b4e8f80426f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "902382eb-e254-4694-b4f6-6f265e62088a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b12e80f0-8709-4beb-9de5-b1290408d37a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e900c65e-05c0-4b15-a2df-1e085b4525c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741d757f-49b0-43cf-a240-37d5b48bcec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a312385c-3347-4f92-837c-a4e1909492ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a5a47d1-c400-4657-a4d2-ca00f0d8a67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a878ebe-a4a6-4a52-b10e-3fc47d969091",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195deb25-924f-4e90-bf8e-788b2c45a7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89e4ee5-e667-46b5-8c2e-5cc35e897562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6171d9-b583-4a61-bf45-4b71f8943a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a528ae26-c80b-4625-aa41-67f6efb44359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdc4ceb-9dd0-43da-aaae-bc38b086d0fa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c653bd1-6a60-458b-9e04-36629115d7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90b1b70-5d6d-4b63-a178-c7512e4f6966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a408292a-72be-4858-bb1c-0a813f8b08fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37214220-e276-4b1a-9939-1d9eeef83034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e70033a-c570-4f84-b37f-f130eacd9a36",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3a377b-d0c1-4711-9e62-3a3f0207b5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70cecee0-4c2f-479f-9bcb-70aa0de875ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a8002b-4978-4162-b589-4b4d02dc642f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8bee3a9-4ada-4310-8812-98bc786ac59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba123c27-14e2-4675-87df-c7825dce0ca9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf27c710-78b0-4e92-9931-f92ba6d29e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27b5baf-c099-4d0d-906a-02bd4bb24fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019a762a-e74c-4348-95ef-84cfe4e3517d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4f9a019-a058-4fca-8bc0-d47a0b12c446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe961278-a6a0-4753-a53f-8a151483ba9f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474d3438-d517-4e04-853f-b452eeb21c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad446c05-7a5a-446f-89c7-fc03d0e37a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e308de84-8338-4d11-93bc-d69f8c0024c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ce18ab1-ea50-4e4b-95ce-b48243f7aaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da89f70e-b058-493c-b3a6-044d0b99f449",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34d8eb5-8543-4e6c-b789-d11f4650f9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4bbc813-57eb-4b00-888e-182a330b7160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2bd748-91f8-4c48-9f3c-5f77f481cbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c25193c-c43a-4d4e-9ecc-e8c14ff61df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aaee8d2-d61c-4335-830e-80a58cc5ee59",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be86f112-a7c9-439e-9a8d-e5f4af516822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790dc053-2c07-4bba-a104-8ca1d574168e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f21bc0-4ff1-4439-9860-78f645cdaf30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3eba2dbf-68dc-4b7a-b3c0-7005cd5d4b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7aeb875-b64e-4a31-b1d1-85a291750c23",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7730cd-8a19-4f52-aa7b-e089c0dc4697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f93465d-8769-412a-b7d3-7dd5b661fd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade1605e-331c-4ce0-9a7a-c6f299e0b1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e3c19dd-f680-4ff9-bf01-2faf83db8b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c7870a-308c-4792-b49b-5e453a1cccf6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0fdfdd-33bf-4841-8186-29380109212f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923023e3-e0cc-4966-becb-b9bc6f6d4d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1fd188-9e4f-4e36-8f2c-b0e7f0d6b056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cc92a7a-18f4-425d-81d9-f3c99f12580f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab10ad4-8e00-40ea-bc29-51acea031f6a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51a0b01-d1e9-4a80-a180-3157c34384af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d89d97-de0e-45ba-aae3-f0d505c36ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb0a5b5-0b19-41b9-934d-11465de3f2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ee9e311-610b-4fa4-818c-84733a3ed2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6b5c7f-5f3e-4641-888d-7081168170fd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071a1336-01dc-4d83-8ecd-125efd5e81e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7e5af1-8a97-4181-8516-a9def18a803b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef19355e-76ea-43d9-93ac-70fdb3b39642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "903b6324-13ec-4b02-8f45-53d56b2f4cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5910cca4-35f5-4762-bea5-5997b5ecb508",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d6d338-7940-4592-bf0d-ebfd6ce3241a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81475835-7d3e-4214-a931-5520fe99e8bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce54eff1-1bfa-4a39-831a-9a7fcff91101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "786c863e-79f9-4441-afac-800cda252c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5668ec09-daab-44c0-8122-28e5ff28aa2e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1db66a8-dacb-43a5-b9a5-90f875bd4193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c94c85a-7bc6-4383-9780-996ac69e7996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29a5382-7fd1-4b32-b1d3-3fc08358a5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f23c427f-40c6-4e60-9f40-7a81e25ce431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539fad73-d86b-41af-b20d-6ff0e7986c11",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad0aa49-fd9a-445d-9ffe-d24c31bc7bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2641d6e4-28a9-4890-9c39-3251fca7fd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990e0f1b-b236-4146-91d3-cfe9b56b0dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cc338cb-201d-4b32-8b85-35fbd24368ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd765ae-840a-4a9b-8a1e-1bd50c394162",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3078247-5989-49b1-b160-7139a4bc6353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5313db0-539f-4319-9052-df18c4701dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d277c7-c888-477a-886e-19213ca58c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5580869d-3559-45a9-aaae-8d5f73ac1c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e052ac21-ba3f-45e0-a78b-b448ccab729f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77c004d-e971-415e-a7ab-cb96a380878a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325b1818-3002-4030-9707-eef2773e569b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4038cc-b1fc-4af3-9609-2a237a89d15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46279a89-92c8-4285-ac86-34387b6408aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb32b039-e15b-40f2-a009-0783d7e9c4f3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675aa72e-68bc-454d-842d-fae94984af6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ca342a-da1f-4cb5-8583-9144770dd1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43082f30-caf4-40a7-9c8a-13f4b2d4b2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "647003ad-dc24-48e4-93c6-45bbad3db1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9481a896-8b30-4466-bf2e-f5269fa2fcc3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdc6b2b-ddb7-47a1-9972-96b54eccee20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a104b5f-e792-4ccd-871a-c44839f9f23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d722c5-e184-418f-8f10-b00b991e8576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "477366fe-6d5b-462f-a8fd-5352ce80042a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf63c7c-52c7-451d-a2ea-a833ca846052",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429e5aa0-0eb3-4e2b-bd86-fe1bd5a2b709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38279ff-3303-4a9a-8a90-84bfb6b9f9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daddea43-2a66-4402-bd8e-8b3fbfab81ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dca8636f-eb7b-4c83-a3bc-36d44be63e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6df6c2c-6688-48ca-bfff-bf2bfa7e91a1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a115b4a2-6a82-41ae-90b9-02d71a84e635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d8641c-5683-4d47-bc9e-ffdcab7bf934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d688f3-1e3b-4ce3-b65b-f8247e50e155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1c7b40-2e4b-4790-924d-886ceb131c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a805bc-45a8-4aee-8b66-2bb867d3be73",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d08ae7-9f73-4d4a-9063-3db6f729fe72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ee31d2-1e99-4690-baa7-10edfc983e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df004ae0-13ba-49cb-8752-ec35a22683df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9acd5d10-8142-4628-9f88-e7cdfc34d320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb0d3b8-e142-4628-a1b5-d65b08fbbb89",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827089d7-d3e7-47c5-b4e7-1a510dd32ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8075ee8-4317-423c-9465-ce6b446bb0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9de1127-1511-41f8-a1f5-da001f8c6861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6399ae7-6516-48ea-8124-f57add3cb6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acf4f90-628b-4bc9-87a6-d32dcdab73e9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80881667-40bf-46ba-b1a2-ff71b18635d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7d5632-6fd3-411e-8336-949177d7e0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d49b99-4a38-4f82-beda-b04940867ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "32feceae-18d9-41f4-88b4-a6224d943e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafb4b5b-2fae-43fb-9785-e8c3ad62d560",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0896c4-235b-4a8c-923d-d944df4a9cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad9f227-5b85-4a38-89c4-65eadbbc22a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a954f9ce-1f29-447d-a782-7c6623e3e34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d671006-9c0b-4170-be21-6d141260719d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464d8ef7-4238-4881-a42a-c4db07928628",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c1ea6a-31e7-448e-9945-973902e24506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cc5ec3-d8ca-449a-bcc4-d9284993642b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77dfa0d-d95b-4043-964a-01af5b6b123f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8499f0d8-62f9-4e69-9bdd-39c71c974268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb06a89f-e2ad-41cd-ba0c-adc5bc40b289",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04ba4ac-ddc1-4441-b825-cdb5927a1224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7837bba6-9dff-4230-bfa3-6ed4c2d1f9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c66aa7-4252-46f2-ade6-9fb961dd1725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "37ec8b0d-3ae0-42e2-a396-e307018de576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24400307-9d8f-4534-a8ee-55973913ee4a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a5c59c-b8b1-49c2-9aa3-cdd734b4b95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22e69fc-2a84-4c02-8a48-c117aba4b149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a534df-6087-44fd-ae03-437bddb65f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03fa8b57-1470-47b3-87c2-1c3323e81126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddfb978-28ab-4129-82f5-b4acb7acd541",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa54af7-9c7a-4ee1-9173-e5ee1e35fbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632bfb40-5610-4631-a2fe-b63ead9ea1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad8574c-cd10-4253-9627-ba34e3f2c3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75a2fab5-fa53-4592-8190-f9e8d9b4d5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ca6903-bcb0-42c2-a241-063d437c0a21",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd7e4a4-e694-4bf1-af13-d6369aacadfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764cfd32-8ec2-4cb2-bd89-d376c2fb64a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00041a50-6040-48b0-a2c1-8afafbc3e3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e617a78c-dbcd-4370-80eb-9bcd187e5f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e720ce-bf9d-41da-9f94-f18477f50594",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490bd9f4-2275-41c1-80a6-85226150f306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f9d847e-bb36-40a3-8ce9-a0a9507dd78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868f5695-1dc5-4674-b8d2-e420e84c29bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "deb9eba8-efb7-4be2-9594-bcf3db36b7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ff7375-54e9-42f6-a800-f9f9dd812475",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34202640-18da-4314-b939-a4a7a454390b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406fde62-d96e-4a93-8d04-2093da231a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820c295c-d4f0-4626-a4a7-fd2f2c5ffc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67cd1c42-1054-44c3-93c4-5349dad8ac1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f0ffef-d2bb-48f2-9015-5f0cc7547d94",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a484079f-ed58-4b1c-8883-707b4ee2153d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c75388b-67eb-47ec-a79d-cbf7e1577bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1309058c-b81c-428f-9077-eb5482009f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdff2e1f-7852-4e36-b2ae-94127bcfa98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7f475d-90eb-4fc3-b73b-6dd1f10801b2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb96b1ec-e7e6-465b-8fdf-b586203e040a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94d6ac0-4347-4e07-ac8b-2ff111bf318c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bfdc33-6b7c-482a-9439-746b41d13c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9bd0476-e3f4-4827-af68-9c188a271ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2baaefb1-5694-46f2-abdc-3f7a66f2d599",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653ec59a-db6b-47d8-ba0a-1a48f047ff3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc03b18-25ac-4488-9101-5c8a1916176b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bada9482-667b-481c-a3af-749c72b5e84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6fd977-667a-43b7-b42d-ef7590bbe4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15008ac-dd42-4c02-95f0-404f8d4e801e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1946d9c7-ed79-4446-a25f-fc7da5326d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6939b166-141f-4a8d-b224-2445aaaac43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d12707c-d98f-480d-86d5-5921b72377ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e55be3f3-e035-4e4d-9159-1424399c3a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572330c0-ee67-42ca-82e3-d6e72200a382",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47695e0-4556-402c-891d-804cd36b1508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59cd1d4-6f95-4c26-aa29-6d3cd7eaa726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077bd8dc-075d-4864-9f45-560a2232f00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fbd446a-8540-4e4c-9f50-1dd03bb0aba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08afdc4-2e88-4e37-999c-9985edc7b3e0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98791405-7c44-40f2-a7f3-46646e3363ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21cb658e-9b8c-470a-b4af-1c5e54237f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db10285-af19-4f3e-b1b8-ffc1359153d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1081c8d-52da-40c3-990d-762a85bb6a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f74bb6-8895-4da5-8090-f08f110c705e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5822b6f4-2fb2-4be3-b277-b5947d8b33b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc39b3a-18bf-4963-8f0e-fe21dfae8e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da8db17-ed68-4b4f-a436-5357f2241193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "729cf045-cdd5-4ffc-9eb2-81593380d863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8648742b-3279-4711-97fc-11fb160c4f53",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a04e2f6-5187-45e2-92a6-8126154c3e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec159ad-531b-4219-838d-704de5cb008d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f10e7d-6a5c-48f2-9c3c-6280c868408f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f94c1ce6-f639-4e59-bd4c-db35fcfe499a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8c1b9b-6ba4-4d37-8ad1-593fc31fc14c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa9a2de-a9e9-4d0a-8870-3824fec2e8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2919c7ec-79c2-4433-aaf5-21be141ad7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21780f93-c1d2-431a-abd3-7007d1524be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4608927-86d7-4f14-8f65-d7db4f1a601d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089ff97f-9ec2-47c1-a450-46c921f6c1bf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d3f3dc-d202-4584-8031-19b2747df4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aeee52b-e1f0-4c1b-8ac5-d1dd0d9b6e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b16d6e4-d6e9-43ae-a1ea-1ec39026f47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf70090-493b-4f23-9a36-86504ec1dbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b60b543-eca8-4f46-9adf-096f80e42475",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5ce0e0-776d-4adb-8c12-49af746b86b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e923869e-3621-4ab3-bf92-9e3f334358f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83519f94-2d7d-497e-970a-4e1c72784504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "13163492-ed1e-4cc2-b744-904ae1884dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be307c7e-74d8-4c29-aca1-c60799d4e2c8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b20c571-3e9a-48e5-a298-617c8ef48ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cc9693-076b-453b-ae2b-79a4018bf82a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1cfb22-4690-4568-8a1a-b95e55c748e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d428e0-f6fb-4b6f-b4e2-6adee6f78c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a028ae-ba57-4bb1-bd55-5f56f6ffce2b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538d465d-1d1f-404f-88eb-8fc927c87e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2344586b-eaf9-49c3-8e88-e7a79d85ae2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c56581d-06a3-4691-9cf7-87feebc95e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9017b5c-5b3d-4233-8eb2-4f0f93d31c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076b41c4-9377-4d90-81e8-6e4a5a63a6cc",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722857ea-9215-429e-b632-032e9c4e7d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265534d6-425e-4dfb-84fc-a65a3ca8bdc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d37305-0186-4094-84e7-bca3aa43fd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bec1e2d9-135b-4a3a-812c-8d1ea1c9fc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e59d8c8-eff2-4952-918f-fc418fa55fa5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84df1262-8010-4856-82d4-496b27db557f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ef3ce8-ff0c-46a4-be0f-6e7dc4e0e570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9e09cf-ca9f-44fa-bf96-3232dee9cbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d601c158-24cb-4ef7-b94c-0e3614133198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde666fb-3166-4d56-89a2-528bfc697799",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81431bc-0442-4fcc-af4e-9e6b4a0288c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31238033-7f0e-4143-89fa-df5860dbef89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d4c3aa-ecd7-4191-8597-d2db1a464014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87c22238-78e6-496a-b977-9537cec00620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6764bf49-e6a3-40c5-ba9c-8f317339107f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e49fb9-dee9-40c6-aefa-49e5364ab59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec32e6d-f6b4-4957-8c32-70e12dd1453a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f223b49-0f23-45c2-823a-60d5c061f3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb13a3a-17ad-480d-a866-65875888a795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efad771-fb8c-411d-a582-d95dfebbaee3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6cb801-b5b3-4a57-a670-092157bd4a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ecb4e8a-a743-4a04-9fbd-8c1664751af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a29b8e5-5554-4e94-b096-03344679c7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ebc677-6b5e-4df1-972b-78ae8ee55c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7b654d-681c-4fb0-8d93-c28083576b16",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b6e0e8-b03e-4606-b3d7-075c183dd650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913787d9-fe3d-4176-b4ef-1ab6344d8155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42c0e82-930d-4d36-925e-7d82b835370e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef4f150-71a5-45af-8721-78d5bd106dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3133682b-7fd9-4b5a-88a9-5cf885556668",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1624a7-787f-46cf-938c-719eb5713ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e377b585-eef9-4431-9e5d-d3b8a0e973d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743bcd9f-d031-46a0-9767-37d933ae3a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "546dcce2-7734-42db-86a4-e3ae2bcce80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11becca2-ed39-4784-a4d4-65a891b700f9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd600404-930e-4110-94b5-b61078221dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f717f1c-1f0f-442f-af85-29473e74bde0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bbfc6c-0aef-4bb2-9ff6-5dcfb6decc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad5ae4c-2cac-4d1c-b9fe-488c8ebb0b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f8fa46-b4ee-403d-a198-c12892c734f1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ddebfb-d490-49e4-ae9a-7cc9190c542c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce44d409-2547-478c-ae85-dc11be6f75fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8860c942-dcfa-4b76-ae32-bb69d000d745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6472e2-db86-441e-a892-c9353d646914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e7d52d-9174-4281-9be0-8fddb183855c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb814e62-1f3d-4dd0-aca7-78ceae063894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89b918a-0f65-4849-8966-2d624a432ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00aea63a-87ff-4dcc-a158-65e7430f7425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b19a906-ad86-4266-ab19-778858d076cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a2d300-e303-41b9-9667-de317bb888fd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f041a728-5f92-47d4-8bbd-c68e1fc82a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1717aaaa-f3d6-4f82-85da-c5c1d6fbc4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ce0e33-d91f-4699-88ec-1527b451cfb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1683e619-2416-4e24-836d-9c7d99498605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5f0260-36a8-4f66-b22e-dd0d283b01c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445e8f06-2e84-45da-9375-fff958c8ad77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d29b190-019c-4c6a-9f65-fc152c414002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711a3cf3-7804-49ed-9756-d853977e9d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfa550e-b13d-430c-a62e-4ceb653882b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224c0c79-65bf-4ae6-9bef-7da6b837c465",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761c2c1b-b2f2-4947-ab24-3cc2a5ab25c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ada2467-cb92-4829-a781-3a424828991d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77df3a04-7197-4571-b267-b57c28925c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6f8e09-9fec-4b1b-8d25-97418a4db5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81a45e2-6048-48f9-b81a-e4345ea5ae26",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69536d0-1e1c-4977-affc-96c6af111692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c914e130-d239-45ff-bbc0-88fffdcd1461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b515adfa-3086-42c5-a89c-c8714a495c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2536a4e-d884-4688-84da-9ba1f8017cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8f90b4-3d91-4b21-9c6c-042c0c3b3052",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac15f180-5ecd-4d44-ae0a-bcc1383dc0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f616b0-9cd3-4a14-a235-05c76849bd27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814b5c8d-ecab-419c-aea6-e703a979aefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "966d0bc0-8dcd-4ce3-a79a-75bd421fb722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998776f3-cf5c-4d00-a3a5-ede9566ae860",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20c3b5b-3bc8-49ef-a7c6-e86905133ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24042af9-1823-4f2d-b241-430309848af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8314b892-25ee-4ec1-8aae-8c8b550b0c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7054b0-6c8c-4e81-953a-558c9d152abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783319c4-f4b1-4e52-8e5a-e37f4e3be410",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e055378-ab78-4416-960a-b4e7f906d405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6409bc64-4c28-40b3-a1c8-5f81408c1767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c89f54-99b8-448b-860b-8e753b30a026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8515b48f-0116-4ba8-9dc7-841426ff8e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48758aa-5d23-4f3c-a22e-5393d0f31e2f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b26aef8-83ca-4a0c-af38-8c7f2d2ba808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d64bab-1f09-4ca6-bc7e-66a9cc047992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c584af3-c6dd-4873-89ce-63b0b9141c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f050d2-00c7-4dab-a8d6-ceecc46b90e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97669c2-5f87-4ddd-9f01-d31cd2fbfee7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a762a843-7cd5-497f-b19f-38037427769d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9c928d-24e7-43fe-861a-a1343987eb2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c71307-3ddd-412c-b402-c06a1edbc66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "becbbbac-cc64-4dec-96b6-15c044865d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b5b7cf-9810-43d6-89d6-b11f17d7c05f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03deca3a-b294-47dd-a2d1-0abda7a497d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb67258-1b46-4adc-b05d-60f3375dbaac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937cedf4-1818-4ffd-9749-46590ceb93ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a320e465-0618-4876-b175-906774a76932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228658e3-6b74-4031-a95b-56472f969e66",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1089bf5c-6f56-48b5-a9e8-f5e6a1f7c6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4c87b2-ed57-420b-aac0-17c02cf4a9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370905a2-1a98-4aa0-aa0e-a1fc82f0b83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7986364-0754-478c-a1b5-de77d8a9687c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b259c281-4b54-4ab3-9dbf-aa8e8a650d7c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93cbdf8-b0fe-4572-9fe9-63bb9b94dc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375401be-4453-4449-8cfe-7ad87dc5c5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b203cf9f-8c39-4a86-8bd0-2271da0e5460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94c25e0e-c4db-49cf-adc7-59397c48f30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a69735-c2a7-475b-84e9-f6bc0c58133c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6e6780-6ec3-4092-852a-10d6d6e685a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807eb7bc-8a3e-4dd5-85e4-79871eca971e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04f6b57-2973-4b06-822b-4b2a26a99679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0270a725-8a80-44c3-88b2-5a84de7e498c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690e80eb-a40a-4722-991c-e067c4968e7c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551e9cdb-22a0-4a68-b179-e07af8681b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd89807-9fcb-43ce-af8e-63dd0a430ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e5db92-554d-4b30-961b-838ade4d40cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f79b2c30-532d-490c-959b-540ac4636835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233a9686-ad71-4e81-8c1c-3e570103d9cb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cb54e3-c872-4e7a-b709-d33f3083b1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6fa0f0-fb9f-4aae-a341-2a11b10a32b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354b5fee-7147-4191-90bc-c0ae3ba084a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db32725b-d780-4708-bca9-ee51a3c50ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00400f4f-56f5-448e-b884-bbea7862034f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b38e7b5-57cd-4303-9302-c90025e6251a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060c9eba-8bd6-4cda-b57e-64c484b996c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5472c7ae-665d-4580-81bc-9f1b31fc2530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a9027f-5e24-47b0-941e-55468b6bec67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3862c7a-b1d8-4f54-a4c1-ddb329cb8dc5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a252b9-1fb8-4842-9109-48c7e75c2d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a80d006-603f-48e5-96d2-1c1737ae94e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921b0056-3091-488a-aa7b-1c594fd7230f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af1a0373-e4a8-4a74-8528-6100a5a4ab67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338f6b00-1684-43b7-a5ed-19795a2d9aea",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3932de-c04b-4b29-ab1e-365f5fb840e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd671350-a8c2-4e4d-97fc-bb9240f8ea51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b599c35-6f55-4499-bb07-af78c2af95ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84aa78be-c2b7-4efd-9b14-b440ebff052f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb261b46-a37f-4578-bd65-b5805c2c4da8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153f1329-0d5b-4862-8131-4d00bd64f086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a8e366-430c-4984-97f6-728cd46f064e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741bd8d7-1a01-472a-884e-63d525be7a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35524302-dd42-47f7-bc89-2cb9c22bff0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052cee0b-d73a-4ff7-a40f-7d028efe74c0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5782c7c-ba44-4fda-b985-9fadd93cbeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7af48c-aca3-4f7f-9eb1-a84b85b069a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029135dc-f0bc-4c66-8902-3812f5e4cc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "808c4cb9-59c2-4d56-bbfb-b2a9f5cc4cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248c160a-6412-43f8-bbc6-fe5e025a4356",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950d4ce4-cd0f-41dd-bbf2-ce03d7f72ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3c69b4-34f3-44cc-8b71-26b7d3109ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5c6948-4696-40fd-89b3-809031680816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2048bd0-72b1-4960-8d7a-7b81d1640ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f6fdaf-b547-4144-9dcd-794b71c2f86d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0790db-f447-4edb-98e8-6953be60014b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b9137f-81d9-444d-8235-406d8b0d0fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4130afd-a654-473b-89bb-9c48c2eefe2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9f0f0a-5cb0-49b9-a345-93bd13f4fc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68557f24-283a-40a1-98b8-44d95292dce5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f142d374-4f22-4903-a3d9-dad5dfb71b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334ab905-536f-49ae-b9a1-c331dac3d746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c6d4ad-b59d-48c1-91d5-3543222f6de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "060edace-8c7e-414f-816a-9a28a0825051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a5b94a-5ee4-4605-a1b8-5598ae55db2d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1259448f-d2ca-4760-adb3-c5937aa015e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54bbea28-960f-461c-b5af-b2798a8520cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c3f0ad-5a89-454f-9307-a87a16e29a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5700b4aa-b2ed-42a8-8f9b-ec544d1dbb85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cc11ec-e77b-4581-9c6e-e7261bb57954",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d8e53b-2ce8-4a20-ae76-8f88519e3f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8bd218-db6f-4963-b58b-8493ab196f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3494adbc-255b-4bdf-b18c-cd5cebb8528d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ef186e-5f40-4471-a0db-a6b6c14c7d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea6c197-291f-46d8-8eb3-9b181afe734f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c4e39d-c2dc-45d3-85a2-08c7f5d51650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f621dc-ef41-4b29-b2d1-50fe49f10064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a91af44-28cb-410d-925b-4fa80db5aa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1db6509b-cecd-4b33-bb75-6154e3ac9a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a83534-4255-434c-adb6-4cc4b9e30730",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5512878a-dc9e-4c9c-b887-768e04be29c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e7716c-fe9e-4c10-905a-f1d3268e6e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74e2e8f-02d0-40e6-b0e0-5da75dce0040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0dee88-b3e5-4d8e-bec7-0c5b7b85b886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0db3a10-eb34-443b-8148-7aa0b3d1282e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d6a328-385b-4d34-adaf-91f6d1a535c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ac9fbc-bd67-442c-8493-cb67e88fb5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c07d06-4d00-4b40-8e5c-5f7caf1a964e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3febfa-63a5-4f31-8bad-95d7290295c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4648463e-4c81-459a-8d4e-d62451708e57",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090d4997-d2bc-405c-83ce-0d655ce63693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477febf7-2175-4602-b96a-73db78cf69a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d58b05-f576-4ede-9cb8-0540a6a2ebea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51ae3156-b4fb-464e-a27f-3007a4549142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdd24c2-898d-425d-a09f-e46557ad6a28",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581bd675-0cd9-4965-a529-e13aea3b4865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83620a76-95f5-41f8-9b91-db9cae5187df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9efc09-0d3e-48ec-bb1c-8f46f33dd0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "070a1467-e63a-4615-822d-92f5c5f5a56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7680c4-9111-42e0-ad9b-8805c73c8ec9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a25ab3-ccab-40f1-b2c2-b9b34c213d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d902d0-94ee-4a2c-b6c3-a6bb69febf09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d3ebdf-03bf-4c23-a91c-d6fcd2b716d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38b39f18-9a97-415f-8418-1c56762f363e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950430b5-d192-4f1f-8c43-de7b5caff0e2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a601cbb3-b329-4d36-9dec-ebddcec2d725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7cd25d-f8d6-430f-b53b-86f314c67913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fe8f73-616f-41bd-ade9-15590434f4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "abbaf228-91d1-4343-a88e-8b78a10b4670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a46b647-d93f-4440-86f8-6c9f9fb2c945",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fcafe3-a658-4c76-a044-427d11dfb7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20125c2a-92d0-4430-a311-c2e37bbeb0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edebfc55-0562-463b-9fb0-f3a510319c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba8abef2-f9a1-4ade-959e-4b47a0cffa71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fea2a94-9942-4eab-a2a0-a1f781ef37b0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5570644-fb5a-4259-b846-c7ba2045837d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "454f215b-6f59-4d0b-ad24-4883175109ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0e1141-0b35-4415-a52e-4a9f08ca5c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d34b2c7b-7b8c-4d1f-b4e8-ef59caeaa100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b3f534-c43b-4d91-9a81-078add115678",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1ad9e0-d59e-4557-9ee8-93e7919c3d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f8ad84-07db-4b92-8d16-5c1510a90688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbac8909-ec77-4105-b48a-80e414edccda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d199537-8e07-4880-92b0-74e8c9f14ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8865bcbc-5b0d-4ba0-af8e-1551dc888fbe",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c6c223-b704-4325-932e-130b8ea8d9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bcac6e-e13f-4199-b39b-965dc995f8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c77f57d-fad7-40e7-b9db-763db472d0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc4b7014-00a0-433b-9834-5a2f12c5b3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3607824-5f66-4276-9394-9e49d1a576ef",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab6fe43-f7a5-4552-8bac-a1f0662f2426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "69b4e6ba-6376-4e1b-9c85-7219cd585cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce06a03-ae99-4c97-8ea8-1d67fdb2ba9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8d6ca1-215a-4ea1-8fbc-2278d9f20bf3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b9e07884-c7fe-4fcb-b343-7ca7f74e50a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4650ecbf-686e-4b93-b6f7-89d3bd286785",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7367659-2d5d-4b58-a9b4-2096bc8094bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5248aeb9-e1c2-4824-8c88-6d44cb598a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb295e6-e700-4245-9ab4-278bfe2e92c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43daa725-f543-48b8-89aa-112a408f9775"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "decfc161-090b-4867-979d-bf0ada04a8e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ba9f995-e111-4866-967f-8a563e27ffb5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53692ee1-7a08-42cc-88d4-6a666b7d1b50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60669dc8-b499-4911-b106-8ed6fe9a9b99"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "22a2ba3e-cd73-44a8-a301-22990ad11639",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b757076-5ac3-4532-880e-079d7463a0a2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "995d99b1-c436-4348-9aac-c404a8589323",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bcdf6c63-bec3-46b9-b4a4-a58adc01a8ad"
                }
              }
            ]
          },
          {
            "id": "2c1c5db1-0386-4be6-9c3b-5db0dc6a99a4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6228ff54-8294-4d86-8ba7-9ac17bcf21c0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b0878463-8ac7-4022-9cc0-1f6b8e507edd",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d37c4c-71fe-46b5-a519-2cdf1310ebc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "44583e7c-db8b-4dcf-bfe4-762fc5b7072d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89b5e79-b268-4dc3-ab47-966e2f3d7eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538b18cb-ae0c-46fd-a33a-9747bb805fc5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9f6200dd-284b-4701-8b97-40d33a9e6842",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d638534-1889-4f0e-af77-3accfe9d7426",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5dff489f-6f5a-4485-b19a-b6fa10b86b63"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b7c90a8-06e3-4636-9aea-1d540dd7e716",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f480c356-6f5e-4ee6-8c78-1249e9b903ff"
                    }
                  }
                ]
              },
              {
                "id": "655778fc-59b7-445b-9db4-b7d60f8590cd",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff9ad556-5ca9-49d5-bd64-22ef7c820c9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab1188e7-d68f-477f-a703-b79cc6eab4fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5559173a-4b5b-428b-939a-9c9e966b04f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "66f8eca0-82d1-440a-a8a5-738881162574"
                    }
                  }
                ]
              },
              {
                "id": "dd32ebbe-0001-47f0-b538-83340d571dc6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48370881-2d46-4f7e-9ec1-1e5525c7fea1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9297708a-d674-47a6-b2dd-77397c2f64b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1955af5-b5a2-4e58-974d-6d00ce02825d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd8a7f11-1b1b-4c5a-af8b-acdd201d2462"
                    }
                  }
                ]
              },
              {
                "id": "254d9d3f-7601-4a2e-96ec-727fd9256d08",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "933b2ce1-a7e2-457c-93ef-282b7cacba1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0da21091-30d2-414e-8be7-654bfea855b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0efa02d-d5c0-4933-a6a9-1472480e0a53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0a1f86b1-facd-4dd9-800e-569488b1b011"
                    }
                  }
                ]
              },
              {
                "id": "ce68267e-3632-49bd-a783-c704cbd2605f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd5a49d7-c2a5-4603-afb7-b7df206a018c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ebabfff-e99a-427b-b9ab-b6c32f19dc1a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6452b17-380f-4ab1-acb4-b36f260f9ee6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "39e69b22-a6c6-47bd-890d-0aca4e2d0f31"
                    }
                  }
                ]
              },
              {
                "id": "7a3a71cb-595d-41d1-929f-a3e54ae3065f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9565e9b2-96b7-48ea-b44c-f2a72a56714a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0124bd64-cbe3-4fff-bce6-dd71c144c3f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd2da752-1d49-4c85-92a2-9f6648d8fb83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4b58780e-e0c6-4adf-aaf3-65eb40aacd57"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27518efe-0a33-4a94-804f-a47896dbe088",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db5fa9b2-c458-4e15-a43b-f28ea1e371ad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ec946cbd-71bb-4c82-9210-3e03df7ee26e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ddb1c4da-f833-4132-8556-db30dc4fe1aa"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c81c4d7-19c6-4eb0-b3b4-e861c1dfec0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f65dd3df-8496-4386-8dc2-7ec34062607c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "248e54d4-74ee-4be8-926d-4d6252b832f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c592386-5bb0-4cb3-b16e-9ee3ef5075be"
            }
          }
        ]
      },
      {
        "id": "b02664c6-e889-4872-95b4-88d46a01d91d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5e4fbd99-23ae-405e-b134-cc13b87602f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7bc7199-761f-4844-9321-b737ead29c90",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dd9ea4e3-c56a-4018-a031-2dfc6fc275cd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b044dc22-1f6b-4de5-b41a-59dc958c52df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a0f67d-4f45-4f69-b218-d5084cf3ad0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ba8830-953e-4628-a703-0de3b28bfd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b9a5db2-02ff-4d98-bbc7-d9a6042d2791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad21ff8b-7150-470c-814b-a248a84e6d6c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef512256-9b37-4d7b-a352-756e6c7d84e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8be9c1d-de34-4f67-98bd-f10c3abfb659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f297534-be7e-46c5-ba0a-ac614bf6ff6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "14f1c324-7bae-4575-ae3d-d669c83bbb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67b3478-c752-400b-acc3-ea1203ac8c31",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff278af8-a55a-42b3-9038-5a9b3b2c0c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4746793-7bfe-40ea-961e-2478f83dc86a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e1b94f-1eb4-4638-a319-8f7d0e3dde86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a15621-6988-4e1a-9483-8dcd63f3f558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51841421-b694-4491-9269-93f7ddb23e49",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c19a5c4-4e09-4481-83e6-9459651ac92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b267a006-912b-45cc-9957-aa5e4d4a0b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c6f149-06da-4b3b-8f9a-5e9d841c94fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35ebe4f3-1530-43ab-b5e1-442491a83b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b8ad53-c420-45fc-9bd6-77e6cea2a7e4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d453ca-5f57-48ac-b296-4d3acc441c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb0b7e9-e9f8-4e16-8bc7-0f21945133bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee88cac-3199-43cc-95db-ba0ba5597a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11b86f23-016d-45bc-ae41-e48d46e3b01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05e218d-0664-4804-bca8-0fc697e8579e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e25f947-e589-4914-a8b3-3b68f6646c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86874bb-cb22-4063-9608-5fcf346c7ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15654f5-80bf-4398-9450-c7e0bbd31417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29b1c56a-668e-4e8a-9afd-f6324e56576c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7948cb-fe4f-457e-b10e-a004cc8a0e26",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225ba775-09df-4051-b14c-34ec9285f62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123f598f-ab56-4275-9760-05ec41f885bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6952c3b7-2ab9-4545-94e3-dff3151ffdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddb2961-5a2c-40ea-b2ef-251e858382c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b86b5a7-ceb0-47a1-b013-67ec25d97b4f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32a1b35-7a08-4835-a400-9bdeeaad5840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d16ab5-3ada-4e97-8d6f-7d6181fd77e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5498f7d0-76c4-4300-84d0-740839c74023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "952113d9-bcfd-4819-bc0f-432ec526f36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e5c201-cb5c-4e0b-abec-f52947fc3972",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5020528d-5edc-49c1-898e-55f7274bfb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d781b9dd-98d5-4cd3-8424-f6db9181994f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19745e0f-4af8-4fba-a3ee-078bb04ff9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1449db52-8671-463d-99a3-d9682c727410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584e56f9-c36e-4522-bbd9-287eb2060845",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1005e987-5683-47aa-b116-a012c9e48c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c422c001-6398-4410-83bc-ab6a38125222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf43793-08ce-447e-bb5e-926f3ee4554c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5fbac1-f4e3-4835-8dbc-6efbed0545b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3c1888-061d-45aa-a6c2-26de0b73a62e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac43ea5-ed86-446b-b5d7-514341c8ade8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8a671c-941c-4a4b-a3b6-1541cf4f31bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e7a22d-61e1-4514-bf30-133831988e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d1fbc7f4-cbc3-4587-b16b-83a87db6fd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02d4052-ad16-4ad1-b100-6b7eef4280b1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20d5ff5-0823-48dc-b8a7-dbfa0ffcfa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24037d1-6281-418c-b9eb-f67f6259eb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c973535-6f4c-4e82-9dce-ef369f72c4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abd7b40a-cf9b-48bc-b6ba-8d7d87f70d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea59d4d-55b8-49ec-a3e4-14527bec316f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2a9bd9-b43b-49d9-b0ce-8d613aa3e280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3889bd-b298-45a1-82ad-84a9d39b2b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab58f8b-a9f4-45b3-aa0d-a11794991acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a666212c-c493-4323-b8e3-6a81d1835d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea521009-6e30-40b9-a296-1364aa1fda72",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412ff075-8c3d-44f8-8c0b-e0f3b2907de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2488f274-51e1-439d-a7eb-e668d1edf723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9b3475-4012-4147-9862-60fddabaf6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "87e99f20-ce70-4de9-ad52-c4981a7b2dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbd7b81-45e1-49f7-9ea6-c3ddf642c656",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc75f78-44b1-4467-b043-c897e3feec50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a809a874-e563-43c4-a74b-9a960b661332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b79c00-08c4-4c8b-9588-3bcf8d4dd92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d64275e9-5cdf-4522-a96b-b88ce47aa16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8865e79-567b-4afd-9008-9b4405fb8820",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c81fbd-3bcc-45a3-9ab9-236db9754755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b64439-2041-470a-8e92-fc5c5640679c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c33c3e-e73c-4fcc-8392-d2bc0d9d9b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5be2833e-3fc5-41b3-bde9-3d54f5af6387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740f9654-8f1f-47f4-9f79-c9f9e5bc3089",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76294f8-bdb5-4f2c-aff6-6487a37361ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd9c38e-25bd-41bc-b11b-d541503a4fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726dca00-c730-4d43-af5c-293339bb5746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c076d2-0711-48ea-a707-2f960e075331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040e2ccb-a0e9-4e52-b0ec-8a0279e0e52b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05adf61a-9fd4-40cd-810a-8cbcc0cff79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0773b5d-b2e1-4ed8-8564-b1068e73b0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c990326-a65e-4363-9c23-e55a8fa90acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e417036-160c-4890-b91c-2f6546bcf865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8433571-0918-4e65-90b7-f831881a720b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3186890d-2827-44a3-8d0b-4081107e198b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f692035e-567d-458e-862a-ca464c9ee0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ba9ac8-73d7-4cf3-a42f-ceb86f8593cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9dd3f25-b4b1-4eaa-aa26-dc15d1baf453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51bf56e-d757-4e61-89e7-57c93a4542fa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534e7904-b62d-4ddc-b793-ed3af3225851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75420b6-0477-4e9f-8592-81dec92895c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0766cf-3cb0-4fc5-941c-2d68bd7a43cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "423ab90f-d515-4a04-ade8-b726ee5af024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5fa887-ca79-46d2-afda-d62c5dc0f4f7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20643d65-0ab2-4224-a2ae-093626c59821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "773f8bf7-e46d-40e2-b436-7944072b2d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa77f627-3e3a-43d7-b078-e693b3400c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c10272-ee97-408e-b288-978b91b223e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f64403-a47a-4d60-bf7a-8dc2e18f1f77",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c76b01-ed2d-454a-87bc-70b11b44eec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cb2738-88b7-4f4a-a66a-0dad20e0f36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aecdfcb-4f93-4173-83d2-e18ed54c2e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf4bf52-7107-48a6-a80a-7536b3fc0657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73e490c-f7b7-4b82-ae76-f2cc5616dd98",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c761a71-f24f-44e4-804c-cf442069bc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dce3f9f-8cdb-4295-b634-369e45829a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b034c7-37b0-4e7a-929b-07d8fb1b5082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "180b642b-1d09-4e80-ab17-0455c94084fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672ad1c1-e3ee-4073-be41-198d690027e5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae79897a-a722-4346-acff-cf3d48e66e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a41abda-e70d-4c46-82da-492b0faf8883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11fc065-5a3e-4018-bfd0-959b9ad795fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "509f2a72-9b05-4fdb-912d-b0f51036b2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235a1f75-1b46-4c04-a7e7-25cb8c20d803",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7940fd28-45b4-4282-ae88-b97c673d6141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c83a1f-4274-48f0-a432-cc55f915b273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04da59f-5589-4543-aafb-9d5551c66421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b9783a-6563-44b3-89db-34f9546bbc72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b816cc2d-b94c-45b5-b37b-3cc417cf4d28",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ecd323-e28c-4cb3-917e-cf08c91abb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7e3630-fdfb-42d5-9cb6-2992701e4649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002f93f0-c97c-42fb-9ff7-c596c029ba1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b70308d-a357-4425-8a84-073b084d0fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b75030a-56fb-4712-81f0-5ad78b7dcf42",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ca5362-caf4-48d0-b091-d285146a3ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa0a9dc-d3d9-4000-8dfa-e067c8eb9016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfe6e71-5426-4a78-9ef5-1c37b91b88ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c16e2ec0-b097-4d87-a869-5266d3a8e406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522a9afe-31c0-45d5-9d8f-10e07991179c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5952168-3ae9-4c8b-9cf2-9f4ed5b754c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4ad1dc-e08b-4ea4-a0d7-7f47cabb07d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0be7be-e325-44a3-a15e-7191028a7c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8251d6-98a2-401b-a12f-b4e13ab97973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2315b24b-2801-4f07-91d9-e13df95c453a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58215864-8a4f-4319-bd6c-874eeee83e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe5efe7-7672-4191-8aa7-4e4d787c10e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fd2b47-8dc9-43e4-8b2c-6955f5476b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3446f78a-cf51-47ba-a39b-14418f25cefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3d0f5e-514d-4934-a6be-78c64345632e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f6020a-99e9-45da-a731-33adf20dc148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87d018b-fb1c-41b5-8487-a0680e0c5b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5596ea1-eb19-4507-833c-36a9afff3e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "923469de-0ca5-407c-b2d2-d465d5886b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc76347-8d70-4101-b0b6-63de34efc6d2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b99903-0a3b-424a-8dbf-d5fe1d461bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c5970b-59c5-4f55-9d06-61a2b80c13bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c441ec7-24a7-4275-9e0d-5cbaf8fad0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd5f895-fa7a-44a0-b5e6-399a4d7d245c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2407389-90e4-4391-90c2-76951b771530",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109832b5-daa2-41d1-a48e-0eabc7b1e257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcaf2d72-3b7c-4f60-a56c-b653a4362ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753e66da-eacd-4b2e-a909-fd70feb2fe6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d12d3cb-ea3f-4876-930b-9904bdee6094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a05acc-eddd-4cbe-a101-0a52ce81ef16",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d2fad8-97dd-49dd-b7f7-6f4ebb2d8925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6544901f-9811-462d-8db2-db932312c004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43bcb33-ca8a-47ac-bfb1-e6cd034feebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ef9a04-cb9f-497e-ae59-61b111835816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb7c9b1-1249-41c4-aa0f-b0758adb17dc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245bfe6d-0af9-485e-ac98-3c935b4f4c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f219eb4-f4b7-476e-922f-0669210bf7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be870665-b997-495e-94ba-ec8deb15271a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3329417c-217a-4fe2-8b8a-afb464db2d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea31f79-c466-4769-b58b-499ad7f0ad9b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be6536e-3094-4eb5-85ab-62711edbbe2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c950fd3d-1ff7-42d7-b646-81a9fd73b38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65435608-cf3b-4d5f-bbab-c722761cd202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61a87d45-c97e-4f04-8c25-289b9b601df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c6d0b0-d52d-4d7b-9c1b-ffc1a4498781",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de17b96-fcf2-4679-9848-68449161bbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba63da02-e8e7-43e3-a0e1-bb0f4ba24ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11d0505-8770-4615-82b8-2391e36aecff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3647d6b2-b85e-444f-928a-2afae9a18cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7bb1fe-bf57-42b7-89cc-7fbd95ca73b4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b370faca-539b-4f52-a45d-4872e41404e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c9ccd2-3766-41e2-8261-c7dc28c6b968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40278c74-dd3a-4456-8e81-6b743803b353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6ed10a-2b15-4e0d-8fee-1ef79d1b386e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a323d8e8-178c-45f6-9950-c30eefbd8646",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6f467c6-7ee3-4428-9d77-c3281c6c53b3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4c1f46-763b-48dd-8280-108ec33c735b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9983fd-20ae-410d-8837-3f3619f6bc21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fad724-74d0-4acb-817c-4ca614120e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99cb2d3a-8c35-4a9a-af7e-5eed1d2f1d71"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b46b1fd3-3781-4f7c-b905-8b32e56604a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d136160a-dc61-47ea-95b8-7b32408df505"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90508c3e-46eb-4bb9-b329-925db4f3d081",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd3981fd-58b5-4a10-9ae3-230e56994ccb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e2e853f-303c-4494-9cc0-964e8c82b8b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "42c426b6-44cf-4626-b0f7-05c6666d99fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "537305b6-9834-4e0e-8638-1b013fa053c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4119cfe7-8182-4000-99c3-50f63c022e6c"
            }
          }
        ]
      },
      {
        "id": "3dac506d-e24c-404c-8dd0-b43c172af547",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "db5e3a03-de70-4e73-925d-292e9547903c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7efb407c-930d-4cb6-b829-469655b9641c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a768a0a4-9ca7-4a07-a695-7e7a226c7346",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a1085c-eff5-4d9a-8df3-62d6996a200c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3f5e67-cba1-45ef-8737-308f79be8345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14eb29cc-186e-4f3c-9e5d-01940f101092",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849f9b1a-dfe6-44c0-8ceb-6484f3f986ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372034e9-7b39-4d27-9532-524de25b7665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ef7062-ba44-433e-9c80-8794791d33be",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1c46c5-807a-4bac-9143-3de76ceb4990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e51418a-1294-4d69-9ebe-799ae372c971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e85427-4506-4f93-8f20-b96d7ef9a51e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cdf6a1-73e9-4668-8a37-aafed554ad98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8711d6d4-5c8c-4613-bb40-fc9dfbc52377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b710983-827e-4930-819d-2b2def4fa289",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238ccd39-9d1f-4da7-adb1-30d5eec2a68e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72138014-ac07-43b7-93bc-b49d322db199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222d81fb-dd82-4e47-985c-be0f6f167ad2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3d4edd-601c-459a-91af-9a01b34a4edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdcb9ff-ba7c-4a97-b8f8-73ff903207ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8242f077-732f-45c2-b38e-8e2dd318bdea",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce398015-977b-4386-ad18-8d52a8f80672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a707aad-16f8-4b01-bb52-fe1241df802f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea09522e-8e6f-4f8a-9bb2-5d0810c06068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6543552-d862-4e0c-9fcc-54959772edda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3e3edb-5335-43e4-b752-6045de2cca0d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89456606-d9e6-4fb8-8721-e6aefa6b4434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbb70d33-5191-4813-af48-d14401a433b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f7fe76-6319-465a-ab2c-955d85292aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1c1c7e-5a1e-4f35-b774-224519a8cd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0b49d3-4f98-4c47-b85b-d002b74d7e1b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67da0af-cdb8-4910-b837-2f2981aa4461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18b47111-e985-488c-8f36-edcb89406007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91b64e2-2b77-4a38-98e0-83bd51634d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab8a7f9-062e-46b4-83c5-a2be0ec4172d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22899f51-fb46-4d36-9ff6-6afe3bf8cada",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84889ad-f0d5-4bea-a0b7-f09b1c1dfa69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58eb310c-16bd-4bad-be75-b71ce49fb25d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92debb4a-d9d0-46f6-b5c5-bf57047efe0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa54459-0848-49f9-8b42-cd74bf0102bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf343985-ed7f-4725-90c4-4f74998254c6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f984430f-1e22-43db-9354-1da619e89d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cea7d87-a8d2-47ec-b25d-6022f8da45b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41b26de-f930-444c-b5bd-9312e477fb0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1103eb1b-f39d-4665-8dd6-124570d076fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff052131-7eb4-4b78-a991-09edb87ac6fd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2328e20a-5265-466b-9ba0-28d26e59d2f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78586e12-10a4-4805-aec4-b9957ad0dae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d3dc11-e535-4c03-a8f0-c23fd822cb8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844e434f-f36e-4e63-8d65-9d2c9ae2935c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a55d57-ea66-47ef-bb62-5927825cabeb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78dcc82f-cc94-43ef-8b2c-ed07e8c33c6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2299bba-9937-4e23-be0a-2d02dae045ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f9b454-08e5-4744-8b74-c87517394d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "872243b8-c9fd-4e5f-8d37-b9cb374401c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56983bda-92ca-495d-8eba-fa71a1cd3166",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c78bae-f9be-44e0-bd02-4e9d8190c26d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "625f9a23-b332-4c9c-9f82-34c6505f9110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404d93b8-9794-49ec-a390-2eb2e4f90f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f2a260-2b25-41ac-aeea-0658791e3ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c373bd5-a2d4-4dfd-9fc4-a43263a344d9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682b0bd6-4ec3-4be4-8d15-39815276310c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b20a4498-29d5-44a0-aa1d-75221f6eaba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62156889-4851-4232-a2da-279c632ac609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59423e34-9287-46cb-bfe8-a1679be54380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7e3903-ac4d-4fb0-bbca-ed8eacf0cf0c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3b6d79-67e8-45e3-b550-5d3c445fcf11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98f1df40-59b1-4c3c-bd47-a9462c7e5be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3b15e3-15af-4737-a6af-1ea3fd4d6dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b377c6a2-cb9c-4068-a5e6-495583e826ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364cef23-e298-43c6-9b9a-58281cff1859",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502afef1-5924-48db-86da-549a66eae24c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129fc62f-baa3-4aa0-bb24-fe31d53129ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9550042d-39d9-44c0-a8a5-a76ace0b32a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ced027-2c11-4b1f-b065-9377e3aa7cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18aaf56a-ee8e-4ee6-a317-dc878eedb0c9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504feeac-ee95-4260-a149-d1e20e155061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1f800d-a558-49d5-9b93-7d5b65d3bb2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3802ac-5c58-4431-a20b-44f043513770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bab503b-4bd6-4912-85c2-440a3bb16ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72967e7-a7f4-4b46-b82c-d5f2250efab8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb1904a-b40c-4182-abed-e641b187b3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524a75bd-f5f9-4a92-b29e-682187540948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f656e7-629a-41d0-a11e-66edc5f138b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee7f307-f76b-44c6-9797-7c97a198c25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb37b4b-4032-4c97-bcd2-e7610c65def8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83916e86-49d8-47d7-9f5d-70801bc6692f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7cb1e0-3c2e-432f-96fd-6546acfaedd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89305aa6-2e43-4c0c-b981-f73e5dcb0fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d21fca2-cccb-4286-ad2e-6618d95c075d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867b87c2-67d2-4f97-8a0d-f398d27c8b4b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460f5b3e-bd7f-44e3-b389-88013ec18ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00dc89c0-f212-4ec5-afaf-6095ae5399a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d85dd1a-e365-4e77-88d2-8ba4e626d1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b24e402-8578-4984-9416-72d1bc3e7e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c54851-489b-430c-a9b7-0d8bd448720d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86d2cc9-07ac-4723-b0b3-c02c18719eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7837f29-d291-4b02-bb77-fcd4014b9f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24a7ea3-866a-4778-bc29-320487eccd96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5ac106-a82d-4558-bc0d-2a5ce7d60be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d82771-28d1-4680-bdae-895a94b14c9b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2355fc4-6b6f-4811-8529-d1f81c09f9cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde7d59a-2826-4a1b-b79d-2b446061ff04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1dfec3-f377-46f7-bd32-34959d4dc189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d2012e-961f-4b0b-8409-492a39c9bd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219772af-8557-49fa-a718-ee8711f83249",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d504351-7208-46d2-96bf-5ecf682ecfc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cd5b959-d133-449a-9fe0-c7b21e6ba9a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd160133-2f33-41ae-b9c0-80a1eb87b5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77d7c36-ed78-4764-be81-bc222b53ea92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4707be-825b-4fc6-b09e-2f36c3446176",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f861250f-f317-43d4-88e9-cb07c34f06ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6259059e-7f4b-4d3f-9541-b8304c2e140e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bc7e06-22c2-4d71-9ecb-1623d58c420e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9682db12-1931-4f86-87bd-fabfe5931e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0d9ca6-249b-454f-9a77-62fb4923a930",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe7bb8f-2706-4eff-a092-22cf54843123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95a24379-129e-4209-8392-d0a86ce5eff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f0b10f-6807-406e-a09f-1e62971c163c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ba39dd-b506-4aa4-9fe4-1fcf16161e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ea7a2e-e904-43c6-a4b3-d30a82acc4f0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c13eca-37dd-4065-8a27-6e1604c65afc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a545acab-d446-43d0-bf18-cd6e228f1a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601bb708-76b9-487c-a494-e93bf3037232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58294a0b-dcab-4557-9110-c785f3b6ab26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde4a83f-1765-4456-8e28-011cafe0ed98",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568f76b1-69ed-47ad-b66d-6058096d72c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0835d5c9-fa23-42d8-bfcf-6d4294fe57c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f239af-3433-4113-bd68-982e47a2c9ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d31817e-dcfe-4184-914c-308f0fec2b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f5cd18-40e9-4939-8e11-ca165eedff68",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638bc42e-17cb-427c-9a6a-1ef1f27eac91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e0bddb-d23f-4fc1-b17b-c25fcb06e54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148aa4a2-f291-4747-9bd9-54039578fa85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ed4461-1ef8-4a27-ae8a-28770e2146b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03952ab7-af0e-4ee4-868a-16493a147c84",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef72503e-b887-4f85-9caf-e507cd9084de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7a240bc-df79-48d7-9035-e77f1dc89e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f8b071-6989-4b42-a218-9565c0176a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071bb650-ef22-4a65-abec-c42c5c8fa16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e488586-dcea-4dd0-be14-6b3f00aeadae",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2797e6b-e7b8-44d2-bb84-3bea818afe0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b813a7ad-584f-41be-a972-851c23490389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0687d2-b25f-4d90-8a8b-0202216f6095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034c3ead-ec68-4c93-b8d3-926c18d5dce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f7ba78-cf9e-43f5-a8b0-290ebf00d005",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf72bb1-4734-4a75-b0b9-ce7dddf85fc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "565ac8fa-7312-4dd4-a166-8ec9139d6ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4680904-dab4-4c1e-881a-f13045d906a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08604679-9bd5-4751-b2dd-59728e4713aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa6fa54-51d2-403f-b3ed-ff40854e4fb1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f56a1f-4aae-4ff7-a7f9-f5f007a585a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f435019a-ed36-4889-b7f7-f75e8d642ff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8658dce4-6da1-42eb-9bdc-117f1345e41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2eee92-f2d5-421b-a000-ac96c401a0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3295de7d-3c83-4817-8403-a959f8df9543",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613efef6-eb3e-4ea6-b7e6-25035048e3b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cf8ba79-f805-492b-873c-1d00f19e5d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dc6bbb-3ba3-46c6-8d3b-eb4def57349d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9a5a5f-2345-4272-93cd-f4e9d8349691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a8e096-8520-4160-b9d1-a4f751d3bedf",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d12f1a0-3334-491d-9628-a95262d3d89b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593f7bd7-e6ed-4482-9be3-60f22cd671c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5378ce2-f4a9-4d03-a2e3-cf374d140ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547e72c1-6db6-42a7-bcf9-da5fcc14d288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7050b0-f8d2-4fa0-86b6-079bf6f12daf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6caa5d1d-a6ba-4b98-b5b1-9c58412d6e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e77595-3011-4dab-93a5-580f310d4d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d55de72-a7e7-4fcf-b945-89e2035a33cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7efcd5-67a3-4323-9502-ed45eaf4c8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd879c06-1379-4f45-bf63-03d02db3a45d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abf6c77-9e67-4769-9c53-6be225a51728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0f3447-8b9b-41d1-9067-c2a4fe42430c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75bc4e8-94dd-4cd2-a8d8-b5022bb87cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aac1f6d-fadd-40f8-9ae6-9edd40535514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab0e120-8fe7-4371-ba3b-98a0009f63ba",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0151e79-3b7d-4aaf-abe5-f511d6c3107a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6d9738-2a7c-4ca6-8d36-71beefc65314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a373e81f-0c36-414f-a97b-4e2aed36ebee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d233d8e-5b58-4037-8c8c-1ff196e5e4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adeac1a2-4079-4d19-9b48-6f4181fde45e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72336aca-2d2a-4088-99bf-99b907c6c906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a622b6ca-68ca-44c6-ac2e-44e261a4a252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f669753b-a1a5-4f82-8b18-7cd446c10757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1b95a8-b83f-407b-a21a-7ff882407882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c83e72b-ecd3-4790-a978-773c73b0646d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d052b5-20e2-4cde-8863-426f27cd5651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c557b5b-7e70-4b58-9cdf-d04477c5d47e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68d2f87-cfb2-489b-8f4c-6bbf1cf9a884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9360821e-e8c3-4ee5-8437-c9133cd46606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f525462-0148-43a1-a47d-9f61273a8242",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3329f6-7475-4ece-98af-a9be31abfb7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eca1ca1-78af-426e-b04f-40b068aac514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced8e03b-929f-420b-b08b-0a8f52cd55bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15240f6-38a8-4add-865b-61fc536d4d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c65e7e-8e04-4725-b704-31f7319ba26a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14096ada-9a6d-47b9-b8cf-0db8326e98b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc65163a-9320-456f-b9c8-4ea362071e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfaa940-c666-4258-a058-94541323cd67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a12db22-5172-4708-81e1-510ac0d65ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4007b3-e9ce-4f7c-acdd-0d7b7cf1f0a0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20e9477-55ef-4844-b68d-6561622c0c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47139277-b476-4af2-8b54-55ed89687f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13e2be0-65fa-4188-8b7e-cb7efdf47d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a66374e-2a99-4bc1-8962-ca955ecd26b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c225eb-b7e4-47b4-a357-e8c1b7ee4f01",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307c8696-73f9-46cb-ba26-fbe18d221d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79c48a9-a96f-4c06-86d3-ee4e48433171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81731d85-d692-4bfa-8c69-524c228e5644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8d13b8-fa6d-40a8-9047-4388fa312be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21fb11e-0687-405e-b470-36723a11a856",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0bdeea-7299-487a-986c-27a12c3f335e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd3e402-cf6c-4c35-91f7-1e200351b814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac248a8-eb5b-4e6f-b3f3-43b286f0eb07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d310e92-8a88-4964-998a-a38eee9b0d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8718eb6f-f0c2-413f-90d3-d8bc8baad5e8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e871ad2-90f4-493d-b6b7-b19ce2dec235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33d9518-0e04-47ac-b237-37d60547a7ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6d5016-d701-4eef-9a41-4a9a4b19e9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4bd385-09d6-4525-837a-05a683863bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0454fd69-c185-4f36-9f3c-54efb6f84d18",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88961dd3-407c-40c5-ad2f-f7a6e253340f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38d494a-311d-43df-bf50-38e98bb2782a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f5872d-7329-4e7a-9503-e56f90009d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeff0f83-4e91-4f03-aff9-d5db8e3ed28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6715e55e-8554-4905-aeed-cacea8f70c40",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e349a6-2295-4ba3-bf65-0e41a37fec40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5558ab3e-85fd-4d23-8cde-8d35e0394c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a55f1e-fa50-43dc-a415-76b1e0c50515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d8b45f-db8a-47e2-bb21-f77aee97811a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23617c7b-2795-4f9e-bc71-87b8bcd300bc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f23ddc3-c541-4501-8e60-76e5a54c53b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a016ed33-5644-4b97-b4aa-b38ee66d9fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8b846a-bf16-4d57-b070-5bed2d051163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c836d41c-5ada-4ff4-8d13-d703a7a026a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed99a12-98eb-4482-a24c-332ef4ec287f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7febe43e-3242-4d82-8bad-c514c78a1aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7d3dff-4724-4cb8-8ce2-37ed3d725af3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc0c9d3-d6b4-45d3-a94f-7e632e7976bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed20e13-7572-4d04-afd2-0e1944874571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83dcabf3-5421-414d-a570-0d0847bc74d0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff8d09a-a47c-4e55-8703-26e118d408a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b6e1b9-929f-4d5b-9290-1dfa7b6a256f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83fa874-e4c9-4800-b244-e734244fd31c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3259f44-e38d-4617-bd3d-a4e66fba9faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb06ae08-9eb7-4074-88fe-618de9b5e215",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33813a3a-98d2-471f-8b00-23cd901055c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9503fdbb-052f-4a55-89c1-83533eb977ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73dbf22-962e-4378-80ed-352d48037e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33922a72-881f-42fd-95de-c6abf4c64deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4feb90-8785-4820-9ad0-b2e65f193a4c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325e3115-0fde-495d-b04b-2c4b0bb783c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247db751-d03d-422f-a1a1-c1ee8a8d4cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99d09a3-c000-49d8-83f5-004903e953a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38e6c6a-33ed-47b2-bb75-7ecbd367e275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de040af9-eab4-4ff4-8e62-37cf4660dd1e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd22f7d-da21-4587-be99-a47a36c73d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ce8802-250b-43e5-95ed-7c9c5067aaca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52542a5e-600a-4c51-967e-7a0444f395b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0f6fc5-aaaa-4dd1-80b4-28c706619d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0675fd6d-ad1b-4971-8238-9e7c43327c4a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ad431e-2c7f-478e-ad66-ed0d7cb87467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6963423d-2651-4920-8013-467377e0b47e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f2e46b-1110-4765-a34f-58a1bb133399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abd7380-f6bb-48ea-8f52-23df19191f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10c54b0-e3a9-421f-996e-f80ca497fe16",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0256f00a-559a-4847-95a3-e153ba282e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3242a9b-b491-426a-8444-8531efee2378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5bd8f7-9324-4b90-87cf-dd8f6896d6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6562460d-383c-4e42-b822-fc2a45a5b7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190c4e93-cf95-4f23-b9c3-e1c0526053aa",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c8afb1-240b-4b26-9992-aa862b803174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "968a97c9-d386-47a1-88d8-f6bd560cc1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de2272c-23b4-49d6-bad1-58b0318f632d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80eaed7d-3dba-4adb-a63e-a0a984be7d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d9124f-5239-4058-b0dc-29664f8b4bad",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd1ca7f-6ce8-4ed8-8244-59c34ce32e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb25dcb-3b24-4119-b1cc-ab5a1f572657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fcb75a-746e-44a3-9a36-adc47e6787fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ab28fc-c996-416e-96dc-0bcfb17efc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8f910c-108f-42e9-bea0-653523ce468f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6b905f-658e-4dff-a122-a3a3d6b1e336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1d1439-eda3-4633-8ed0-edf16c677950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3ffd72-b347-4b30-a3d0-6ce3174929df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c253a8-4b04-4de8-bf99-addefc32e392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f1cb9b-d061-4467-804d-9a3a0eee5de4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a90486d-0c92-4beb-80ab-5db1faf1bdf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d36cec9-f8f6-4b5c-bff6-858e288316d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9cc81b-594d-4c15-a188-587352915c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed158fd0-5078-4f0a-8701-1308dbba0ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51dec231-847e-4b37-a8b9-28162fd0063e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7db6fd9-1a72-42eb-8ac6-b96f3059c234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd127a2-b993-4a35-9298-67cadfc190c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d203da9-7ae9-4000-9708-d3805990ed89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abfc5c27-f9fc-4234-974b-513753c06f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c501744-d495-4c92-9c07-9d24cfc87e50",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f432f3a-75c0-42ad-95f7-d01c1a2f0dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fedf90-c4f1-4a9f-b021-cad24f6734e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35137934-8d52-4628-891f-104d818ed36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65be740a-f395-4561-903f-741b12ccd111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d8145f-0660-407c-ab22-b96b27ccbd5a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3e0940-720a-4bd9-bdd0-63cc7613b1fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e7f165-d428-4ec7-a37b-5c9ee5bf05d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d28ca1-feac-4798-9f14-9d64d657f152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d91f6b-66e6-4a05-873d-b33d2f9243a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b49387-e338-4bdd-b67f-9b731e6bfb2e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c75cba-9c65-4b97-ab3c-52924fbb23da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acea638a-aad8-4740-827a-5c2e3e78ef39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6632cd-3946-41c1-af3c-c2eaccd46845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b79719-1848-469d-8eb8-ac8f44a4d6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37fa4a3-837c-4586-8eb4-4d4107212414",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c4642e-dfd1-4e6a-aaab-f529310b1980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b7f4d88-05de-4220-b985-0b2d80de9cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1447b1-8e97-4073-812e-348dbf06eb60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c03c37-ed0d-4ff0-a25e-d795dcf670e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd39cef-29c6-44ab-8e08-a133788bf78c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a8279b-7335-401c-90b0-d36fad7b072a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec94bc4-1b00-4cf9-a2b1-d7a47b20b35e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbdc790-778d-4879-8518-702da2a63003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d156fc-c3b8-4438-9bad-322f7daa4ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eceede86-aecd-4d00-876e-c2fac96e193a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56858045-3c22-4e42-94ac-234c520abc9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b91584-feb3-4d9f-b19c-79e3970dbe0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7bc910-ffc1-4f1b-814e-36e014685483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def2c82b-0288-4115-a3f3-d92beafc6d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727c23f0-bcd2-4f7b-bf6f-f03fd25816bd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e3af0e-57c4-4eec-84a8-60cb4531d6d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60b3b42e-65cc-4101-8330-ad2189ce6dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2349ba98-2341-4b24-a879-6bb14cdab947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6740b60d-803e-4f51-a87d-46320d3e1f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe327f9-f0d3-44d7-992f-134a04a337d0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d82ffb-7799-4fe9-b48a-624ade20dc2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf66d3e4-4734-4d7a-b192-b16793f52ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee38b18-5ef6-4de1-be2e-2ed4ad787bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11cc658-920e-4496-810b-8e987085d092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f79b6f6-dfd2-48bd-9427-5da56f3dbf0e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cdca67-db77-4e15-8ba6-09f872d68317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f28069e-43c7-4464-8540-bcf07ca98bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9a0722-3008-40ba-8e80-c1ed067c3499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0662c351-ca2b-44e9-9521-60629818b981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a0df7d-cec5-43b7-aca1-5731ea95eb60",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68d57c5-570b-410a-9f22-5bfaa60af491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2ab4a0e-7838-44af-8fe3-a983b5ca9762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90379988-eb73-4b7a-a80e-a89e61e341b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68747c1-14c2-4969-8a39-83edb1b4179b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c26d167-d3df-4c6c-8124-9484300ef013",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b37407-8cbe-4596-9a7d-ee5d8866a533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01cf4c5a-65ec-4845-92eb-67ccbf5d2709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04c2cd3-4a65-4758-8d71-cba749beb990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abda0b22-5e9d-49e9-b750-405ad3613fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b026329-4d08-49ce-8f17-12ad93090e07",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81c62da-e438-47cb-8b73-baab29430366",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5935d04-a58e-464f-92da-f7ef2eae4b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a3effa-0063-4295-b3d9-f389c1395542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9124170f-d817-4820-91f8-a97bc44f6243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ab146f-8920-4789-85fd-4ea086805c46",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e2f201-fa2a-49de-bb76-2ef181cb74b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e35fdf26-3979-4c4b-b9d6-a38c767b3991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df1d581-60b2-49ff-9502-5f2a489819f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06562ff-aaee-426d-a8bf-2efe25647f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573205eb-99a8-447d-9647-c16fea867eb8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670b1a66-538e-4bb9-a30e-9b01fe2a6f8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a32340d-63d4-4c03-990b-f3bae61d5feb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33fd7b5-dd16-42df-af29-6f0d63256ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab324b6-fd80-4c46-9c82-30bea5be87c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76745e4b-219d-432e-b3fa-e3a8a4842a2a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafaf6ca-16f4-4c64-9372-e9680895aae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8557823e-8dce-46d0-9744-3a39a3b28e4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd96de3-5f80-4e60-920b-dd04913bf808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b46642a-257a-4852-b864-53a468ebf745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f84cc3-0196-41e0-aeb3-b55b4f765a95",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab88ef78-05ac-4efb-b9ac-dbf6bc8f6f34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae0b8886-e435-4434-909f-06825424afc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d1583e-4432-4d17-93a3-bb90e9ba6770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3b3705-2321-48d1-a74b-dfe3d1d4ddb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc97181-4362-48a0-b867-02d96cc60979",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdd1623-c217-4eea-914d-28af921748bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f22f1e93-7f7d-4015-bc28-50169100e1a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f13d49-d8ef-40e0-9166-76f24cfe7b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f794d3-0577-4bee-a7f0-850aa2358a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb74d91-4ee1-4082-b59e-d099822b52b0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d258343-6d76-4da8-8018-4900318e286c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea95c45c-4569-4469-beb5-230c72573215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7f3215-d8a5-4dd5-8d01-9f5369f0a807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5fbf6e0-c328-4c23-aa54-bbdc68c04c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846f94ec-6273-4a83-9f67-4b75976817fd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35eda354-02e0-4cec-989f-a1cb72910a6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "014c88d2-5cf5-4862-b738-e20d519eb503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3da858-9b05-4229-a07a-5d90aa2d1164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e5e4e5-e757-4a08-b154-6a8e15f24f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81e07f5-85e4-4b1c-8e45-14ae40b4a1d0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d77ca8-509e-42a5-b221-5763f9f1b78d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d26721b8-866f-41a2-a71d-3b78100c64a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "473bb974-7554-465f-add4-2244914b8cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d2117ee-a8d7-4490-a41f-3f796d7b1d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c2a09d-2c8a-4d73-8acc-a832d7266175",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e1ac22-bca3-49a8-b94b-43203a1feffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d078f91c-e984-432b-b507-45dd5865cf11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e450aa4-a56e-464c-a895-e05995eb650f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a57ce64-1ba1-4a38-b725-36376767caf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f56592c-1378-4d39-b1fc-2fc62fea5420",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54c12a0-f422-47f6-81bf-81ce0d5a943b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3532475c-917f-47e8-b6d7-eafae780418a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ef0a53-4122-4c68-b3ba-c33d6fd55afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b693a44c-a0c5-4d82-af2f-cadec8cd396a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b837cb97-0fb8-484a-aadf-1a8bd8f2c012",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fa2f93-fac0-467a-a61f-f2ddd6467619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bea6e6e-1ff9-4e08-8a7a-93bbc7352cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20980023-c7ac-4c48-80ef-ea3e6cc60c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d7dced-40fa-4008-9514-2a117bda2d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53493588-c0f9-4c31-ab66-b65bae7960d7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db071fa-3ff3-419e-bcef-595f23ae6f87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c565056-c688-4d81-bd8d-dc04e837cb89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd92506-7cc0-45c3-b90e-a46922ff6346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b807f1b9-5549-47bb-82d2-e830fb465a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea31a1b-5825-4fcb-8d08-f796961704b2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020bbfc6-fa1c-4eca-9d66-574de97d0a55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fd395f0-74d6-4d77-b3c4-52ace322e1c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ae8288-f58e-4e11-b32b-59dcf62543b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7f83e5-ba19-4fca-882e-ee8b2ba7c072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f013f1-d74e-4c5f-9f2d-1de466697220",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3ee2d7-cfd5-46b1-9f51-2f87e0e3ee9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a3796f1-f199-4b24-bea1-74afc25cf58b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88afb783-e5bc-4a2f-a3e5-9ce15b8b6e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7948eff6-fb35-4a29-b3e0-5097a855a5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe6dd56-1008-4342-9b1e-be42d552f29f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f51ab85-e8ea-4681-9ce0-ae0eef441223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf25c004-b52a-4843-9b63-de7522bc716b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4479f7a-048c-43d8-bc93-1fb525d71858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacab904-800e-4718-b2b7-fb9fb604f3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1abc892-0b99-47b2-8fce-021112dd6feb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69e3ca9-2e14-41ed-8a05-ef1e67f33c06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f3d82ae-ad16-4938-8599-a3a18a43e6d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b51c79-3905-46e2-9fcd-2d3c1d6b9456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471976d9-a501-4bed-91cd-2c0f542ef76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f095bd9-3648-42b1-8fc8-0e2dc6250a72",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacd1569-050e-4a82-ac7a-599575ab9522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0356ded-3352-418a-ba81-1771a70433dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1f3c4c-2eed-4460-bba3-cbecfea5a137",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f0a24f-01b1-48cb-9a03-cc1535cda362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe45338-cbeb-4838-b9cc-5a1a7d97465d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3dc4bb5-2b06-4152-b890-defa40e3edb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25a581cb-904f-471c-aac3-87f841a8c464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4abe4b-1c89-46bf-aca3-160910a0b16f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4730074-3a0d-4a5a-b9f2-cb05d1413fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9014c3eb-6a33-466a-b54b-990fdf5137c2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc79d6a-2360-4d57-90ee-572d88d46d46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2de7e032-9a39-47be-b9db-0d170e828afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da2ff3d-d160-4088-8b89-f8691e3fd29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e72edd-5afb-44c9-825d-1b75c025d24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7822bb2c-ea5a-4e9d-88db-36c6d675c9ce",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2666e962-1b39-4e5a-8a38-8822e46a2257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8741ad6a-38e0-4ad8-bf01-34878b0d821b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed27c008-c756-4948-ae23-b25b25f25859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604504d7-dd9d-47e9-b118-f1a7b2ae1c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bd8589-337b-4e5e-9714-ed6a73d92a09",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22a7244-536f-43e3-874c-ef87f4667611",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "529d592a-b77f-4594-921f-a3136cec8ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf9a8f6-ba99-4feb-8d01-897879a9a790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd57c14a-5c4e-4a18-8a50-50ab849329fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15bf659c-aeb8-471a-8d0d-dbef36f1a209",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b62d851-529b-4718-a9a8-eef300ceef8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c310098-1ea6-49bb-ab7e-def839b04ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0398784c-3154-4dcc-8e13-af343c300478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce51fef-cc15-4f72-a7fd-3946e2e8ff22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58903bab-360e-40f8-b24c-760ce3675fe8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e982b78e-a9c6-4007-8a74-415fd474fe86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b7e1fd6-b2b7-4743-94fd-a41b8dccb7f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca4ea44-261e-4602-96c6-38730bf6871f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e175c37d-2557-482d-8115-12558220850b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857ec194-d6db-4049-9be2-a573a46c19c0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729a4278-ab1e-456b-ac6e-9be86404013a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4054be36-fa27-440d-b2e1-e37b4f11018a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78376031-8826-4a59-b5d0-7abecb008952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b3fe0a-11b5-4e15-b58c-4417512df56d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1df6e6f6-1a05-4d08-8b39-3331d69d6059",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0f4a4d2-63ee-4b5f-9a25-3f70a08cf2dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a87b3b8-52e0-4997-96a6-e946aa747d3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f2f3397-54d0-49e0-a4da-30ae730fc98b"
                    }
                  }
                ]
              },
              {
                "id": "63d715db-a719-4d64-abf9-4781aab714a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3cb2a658-5112-4187-ab91-0e07ccd016d8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6b249b-27ca-47a2-bb8f-f44910c04055",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "34b40690-8233-4da7-aef4-8f7b879a20b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79aaab0-d0bf-40b9-9c66-00a337ed468d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5fe0beb-c6f5-4bd0-8b54-883979140e7e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb7a7610-0c1f-4139-a328-e9358b5b34c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dc97253-b8d0-45e5-b93e-1eb809b89ba4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a658904-e038-49fd-ae0e-3c0171d3b5c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0c217cb-1bd8-4158-8883-cbb47440c7b4"
                    }
                  }
                ]
              },
              {
                "id": "dada30a2-cbd8-4ec9-aab5-5d5720a00b41",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4b67f878-1752-4f4f-bbef-be04399ea266",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fb3810-5237-46fd-8d37-781991dea0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "76182474-b090-4bcc-ac3c-be274306bb4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0ec629-bae7-4388-9c3b-303a39bba05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad68b87-1da0-464d-a487-a80d2e6d536f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d994b81c-e0ec-461d-bef3-aff6c8d427bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f640f746-ff22-42e8-a53e-dbe11dcf110e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72d94918-ae63-4f20-8516-eabd60c7b5d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cd744ad9-774a-4d3b-a952-0be9294dcbcc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac58e361-1ab5-4b12-b8a1-f73f3c70957b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8753af9-5050-4bec-a85d-8e96b84cd0f3"
                    }
                  }
                ]
              },
              {
                "id": "8cf02368-eda8-40ac-b2b8-82b62b79dc5d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb853415-7906-4c20-901a-1caa8a39fdd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ffec882f-8a79-420b-91b2-60ea005cb576"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5ff696d-6d53-4dc3-bac0-4f847ad019b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe02718d-14fa-4ea9-b731-0829d43b10ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "084eaab8-28be-4caa-be78-4a48bfc3eeb3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7a6d75b1-966d-4fcf-931b-689c2e84c177"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbf5baf5-a6cc-44c5-95b0-412279fe97cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e34b8bae-08ab-4246-9429-aa4740a3d4de"
            }
          }
        ]
      },
      {
        "id": "75a5076a-986a-4587-9510-e4bc9ca65954",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "619a391a-b6ac-4411-bb4f-bc8d724485e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad769f44-0849-45cc-b093-a22199fa3868",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "276415bd-ec12-4563-a0d4-a884138786cf",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c8ff2f-074f-448f-9211-35c1adfb0c33",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d6e5bb4d-c67e-411e-9b07-89971b3f8cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4617b164-da9e-47df-836e-a5fdf7b1a3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e587d88-bb1d-4018-a146-142ccc2ad083"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e6dfed1-a76e-4b58-919b-dc23ce543f6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "574f1f5a-6464-44fc-86b2-07160b6f4081"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58180416-8027-4811-97d6-5f7330bcb881",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e15cbb1a-8ca1-4d9e-97a7-4735fbb77669"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5836edff-bc2e-464b-b90d-540eb51e0dbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8ca4efa3-5842-4187-a732-76f6342c2489"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a73f5014-2f61-4415-b915-5437f7f2d6ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a33668d-e893-4887-93fa-c9379a818b9b"
            }
          }
        ]
      },
      {
        "id": "1d48fed2-73ee-4263-83d7-42f9c33b13a1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2c4efcdf-085f-4da3-af75-ce1289fee995",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5299697e-2c6e-47e0-8290-dfcc0eeff912",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65ce7cc7-be31-4c41-acab-5518a1e79698",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9c8446-dcca-441e-8740-9dcabecfd702",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1d6af40-8f3c-454e-85da-0b27b38363fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f08c12-0295-49c0-82c5-c8729cb93425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84093472-381a-452f-bcf4-d6cf60024a13"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c6ffb19-37ed-42d1-b893-699932aae3c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad3fba8c-22c8-4130-a478-66923485e5aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56130715-4801-487b-a138-40f6e980fe6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2f4ea41-c58c-4462-aa93-fb44d9abf776"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "529b8348-310d-4e34-95f9-a5ff0fa06f70",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "586c31ef-9e75-472d-92c2-abb64ebfd9a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "610da215-8f78-4677-8cf9-e83714498c6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dee621e7-dc0c-4970-9b64-d1b9e62efbbc"
            }
          }
        ]
      },
      {
        "id": "966791d7-97de-4a69-bafc-24352edac1f1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ba375b37-696e-47d0-8d9e-427b2be30bb6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c935a9ab-e535-4903-afbc-2af004b6a918",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3dc6f0fd-d8b1-4052-a84a-ae92b5a60b2d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ef5126-e5af-4a77-b923-7d4d990e0b4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5c3726b-efed-44bb-9251-9f0cdee9d6ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ed3835-3d2e-41dc-aa59-824cfc22448f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab28f3c0-4497-4775-bf9d-be8f17204451"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e36bc92-7848-4f84-bba0-11aeeeeb8111",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9bd08f0-4563-43e0-a439-ecd5084b3d1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9c58360-3fc6-4ebb-a3c5-6d0787923f56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0de87850-ed8c-4d07-a9c1-e3205f052eb0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02231b50-840f-4558-9210-140b45200149",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "177415b9-de66-4a73-8ecb-d2c7b80a332d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09bf025a-fd16-4248-8fa2-5168a3293f38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74fc1d10-f527-4dd3-b964-385beeeaf313"
            }
          }
        ]
      },
      {
        "id": "1975931e-f493-49c8-be11-063fcfff1af0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4eb8de73-7fb8-4e3d-9d8d-ccc32056665f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b77e9493-9946-4610-b8a8-8b9c88257562",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4912ac21-e857-4b5b-987b-4f6ad2c6c29a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5f472b5-24ff-4617-82d7-f44d4d63caed",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ca19652-9958-4253-add0-a8e81f2ff110",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 72.21031746031748,
      "responseMin": 4,
      "responseMax": 8734,
      "responseSd": 584.4886309713987,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719621460687,
      "completed": 1719621487125
    },
    "executions": [
      {
        "id": "0fe46308-bd99-4990-a612-d455e1932ad3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5a1b6760-57e1-4c6d-a283-a01cf10e87fc",
          "httpRequestId": "a225748a-fe98-4ac4-9514-bc17192ab73b"
        },
        "item": {
          "id": "0fe46308-bd99-4990-a612-d455e1932ad3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b931b03b-1f55-4a5a-9b64-574b4a6d3c33",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 0
        }
      },
      {
        "id": "3baefffa-78c3-45a2-b606-e40b5afce54d",
        "cursor": {
          "ref": "e28e7509-b8e9-4cc6-8a1a-295f52873002",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f044222d-8203-426d-bc31-32123beaab39"
        },
        "item": {
          "id": "3baefffa-78c3-45a2-b606-e40b5afce54d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8aaf0208-68e5-445b-8c40-50d23d23bce6",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "5493245b-9020-47c4-8c8c-55370e6c78e5",
        "cursor": {
          "ref": "3af0406c-8a5d-4bf8-a64b-3aa4920a0f01",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "45c36dd1-013c-45ef-a257-573d1057bc8d"
        },
        "item": {
          "id": "5493245b-9020-47c4-8c8c-55370e6c78e5",
          "name": "did_json"
        },
        "response": {
          "id": "4bb2c5f3-3b7a-4e71-a8b0-fd64d75e0b48",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a2156d-7e27-422a-a200-a7ed9b77f453",
        "cursor": {
          "ref": "57fbfc3a-12d9-45bc-b6dc-d41c5aae521b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fa84d01b-7c02-4921-9ea6-73a17cc7b389"
        },
        "item": {
          "id": "d2a2156d-7e27-422a-a200-a7ed9b77f453",
          "name": "did:invalid"
        },
        "response": {
          "id": "d9a65fa8-e358-40ce-88ec-40fcff9d15d0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 195,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a2156d-7e27-422a-a200-a7ed9b77f453",
        "cursor": {
          "ref": "57fbfc3a-12d9-45bc-b6dc-d41c5aae521b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fa84d01b-7c02-4921-9ea6-73a17cc7b389"
        },
        "item": {
          "id": "d2a2156d-7e27-422a-a200-a7ed9b77f453",
          "name": "did:invalid"
        },
        "response": {
          "id": "d9a65fa8-e358-40ce-88ec-40fcff9d15d0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 195,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4b86cb-a86e-48db-a5f9-a4bb5c01be9c",
        "cursor": {
          "ref": "2b3af727-9967-49c1-a4fc-cc758884f52c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7cd0b980-899a-4a59-a404-b1b4684e8140"
        },
        "item": {
          "id": "1b4b86cb-a86e-48db-a5f9-a4bb5c01be9c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "75d100eb-780b-4d79-8077-fcd3fb890225",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f21886-5b90-45cc-83f1-505635b933cb",
        "cursor": {
          "ref": "302a821d-f815-4cc5-9045-44eab5778f96",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "03bfe7f0-68ee-4090-8e51-f6282f904fb0"
        },
        "item": {
          "id": "26f21886-5b90-45cc-83f1-505635b933cb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "910f31b9-bada-474f-8a8a-569a9253b4ad",
          "status": "Not Found",
          "code": 404,
          "responseTime": 22,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d6c770-018c-44bc-b11d-776b9edf5531",
        "cursor": {
          "ref": "5af59a9f-4c46-4ea8-aadb-90aba1210fc1",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c7455dd4-9b1d-4222-831e-2ababa1854ef"
        },
        "item": {
          "id": "78d6c770-018c-44bc-b11d-776b9edf5531",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7a92a868-fba6-4645-b933-60c90c8c7bc8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446294b9-691e-4b64-b86d-1ac34d9bda99",
        "cursor": {
          "ref": "ef5ff4e0-1c07-4158-a3aa-85327128ded6",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f834a57e-b482-480d-bf0a-383631c41207"
        },
        "item": {
          "id": "446294b9-691e-4b64-b86d-1ac34d9bda99",
          "name": "identifiers"
        },
        "response": {
          "id": "8a9300e0-dc96-49e4-b8f4-c26f073bd788",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12e80f0-8709-4beb-9de5-b1290408d37a",
        "cursor": {
          "ref": "581b0279-8ee0-4389-8fc5-dc3e3d57f803",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "404fa8df-9ea3-4804-9599-ded1ecb24d05"
        },
        "item": {
          "id": "b12e80f0-8709-4beb-9de5-b1290408d37a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f8178e46-d2ef-4880-b29f-1b11acf0e9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a878ebe-a4a6-4a52-b10e-3fc47d969091",
        "cursor": {
          "ref": "7bac5643-aa8a-43df-8b04-7c997edf89c0",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9128d166-b791-4b7e-9bd2-f88eb1954873"
        },
        "item": {
          "id": "5a878ebe-a4a6-4a52-b10e-3fc47d969091",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f3c1b9e2-f5f2-4744-81d5-db0a300ce99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdc4ceb-9dd0-43da-aaae-bc38b086d0fa",
        "cursor": {
          "ref": "429fedcb-fb56-457a-90e1-8e858ec0391e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "efe5e431-265f-4a3e-a39f-c23f0d7741ae"
        },
        "item": {
          "id": "ccdc4ceb-9dd0-43da-aaae-bc38b086d0fa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b23fce26-74c8-4d70-bef3-d0b080d07b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e70033a-c570-4f84-b37f-f130eacd9a36",
        "cursor": {
          "ref": "ae3fe4a0-e0a9-41d0-bb92-01e38e2e38a6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0318d282-1e3d-4980-b608-ca81d5f4a549"
        },
        "item": {
          "id": "8e70033a-c570-4f84-b37f-f130eacd9a36",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "04e26bb4-c03f-4546-ba95-6da939cc1ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba123c27-14e2-4675-87df-c7825dce0ca9",
        "cursor": {
          "ref": "fc0e01bf-a91b-4bd2-b49e-72d6116d2296",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1c2c3e00-b2b2-4ee6-9de3-cc7fa7546cad"
        },
        "item": {
          "id": "ba123c27-14e2-4675-87df-c7825dce0ca9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2639fabf-f383-42a4-b6e0-6505ca98a8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe961278-a6a0-4753-a53f-8a151483ba9f",
        "cursor": {
          "ref": "ddee8d5b-9133-4365-ab49-d08c5db65921",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5771c032-b6bb-4195-8a22-2640e99fd05f"
        },
        "item": {
          "id": "fe961278-a6a0-4753-a53f-8a151483ba9f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7b77b134-f94b-4314-a7d6-b1525acb9955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da89f70e-b058-493c-b3a6-044d0b99f449",
        "cursor": {
          "ref": "bdf7bfa0-1bcd-43ab-9a44-afd1d9b99298",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "008f2335-0633-4079-869b-79639a854319"
        },
        "item": {
          "id": "da89f70e-b058-493c-b3a6-044d0b99f449",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "83dfc31c-15f0-4a31-8fc7-fc4e9a13a0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aaee8d2-d61c-4335-830e-80a58cc5ee59",
        "cursor": {
          "ref": "5bd9e61f-9d62-46a5-b17d-f498369ccd9f",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "71c7cd2f-ca5e-44e8-ab35-4d3c80c0fbc3"
        },
        "item": {
          "id": "7aaee8d2-d61c-4335-830e-80a58cc5ee59",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fb471696-7d28-4a1a-b787-380f75bd64a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7aeb875-b64e-4a31-b1d1-85a291750c23",
        "cursor": {
          "ref": "afe7b45b-dac4-4a72-9a78-098bbec3a131",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f9972c0b-811d-4d94-a373-ac7341ccb91a"
        },
        "item": {
          "id": "b7aeb875-b64e-4a31-b1d1-85a291750c23",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b5224bcf-dc81-4006-b92b-99eaaef2d960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c7870a-308c-4792-b49b-5e453a1cccf6",
        "cursor": {
          "ref": "af2a2042-9f85-442d-ac50-887d5552ef3e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "acc82238-7128-461b-ad79-9ea1b73d18cc"
        },
        "item": {
          "id": "58c7870a-308c-4792-b49b-5e453a1cccf6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "944f0f89-ec77-4259-a690-174e6e8e9836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab10ad4-8e00-40ea-bc29-51acea031f6a",
        "cursor": {
          "ref": "10b2ca6d-34d9-424f-bd13-0d6bd2b45354",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "da49389f-9841-4e07-a629-5558d28aa6d4"
        },
        "item": {
          "id": "cab10ad4-8e00-40ea-bc29-51acea031f6a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "56b9fc6f-2ae1-4037-bdb1-ee7b563cba13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6b5c7f-5f3e-4641-888d-7081168170fd",
        "cursor": {
          "ref": "106f30bb-558c-4cca-a5d8-8d70d6f064e5",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3521893b-293a-4f19-893d-904754ce2a5b"
        },
        "item": {
          "id": "ea6b5c7f-5f3e-4641-888d-7081168170fd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f5449a1f-fe98-428b-8410-16fe8635de1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5910cca4-35f5-4762-bea5-5997b5ecb508",
        "cursor": {
          "ref": "bbb9d88b-e0d1-4f54-9c0e-63de479a306a",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "04f37fe0-0dd5-4177-bd24-f9c689062540"
        },
        "item": {
          "id": "5910cca4-35f5-4762-bea5-5997b5ecb508",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ac010c2a-a9df-4a64-a08e-3b85588a15ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5668ec09-daab-44c0-8122-28e5ff28aa2e",
        "cursor": {
          "ref": "1c4420de-3d11-442d-a40e-76752e91d25f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1f2a2472-bef6-4d29-8c75-c1d59319b592"
        },
        "item": {
          "id": "5668ec09-daab-44c0-8122-28e5ff28aa2e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5f974ed4-1e5d-4473-b2f7-09942fa3cdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539fad73-d86b-41af-b20d-6ff0e7986c11",
        "cursor": {
          "ref": "c0536436-fcd9-4884-9cba-017b82d3c7f0",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5254951f-277e-406b-8565-1193b1f4344d"
        },
        "item": {
          "id": "539fad73-d86b-41af-b20d-6ff0e7986c11",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b6c426be-1cd2-48f2-ba86-1fc881140c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd765ae-840a-4a9b-8a1e-1bd50c394162",
        "cursor": {
          "ref": "ec1c8c35-1231-43b8-afbc-a96c9d4d4ed1",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d0b8e088-3246-405a-906d-ead32c0c6962"
        },
        "item": {
          "id": "3cd765ae-840a-4a9b-8a1e-1bd50c394162",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "16d67ce5-1e4a-4466-93ba-c81e21abf82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e052ac21-ba3f-45e0-a78b-b448ccab729f",
        "cursor": {
          "ref": "b60af626-5186-493f-8a4c-d9ca0f5e0aff",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6da83185-4ec7-449c-b915-87088df1b312"
        },
        "item": {
          "id": "e052ac21-ba3f-45e0-a78b-b448ccab729f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cc429d79-fcaf-4214-ae28-4efac366cf38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb32b039-e15b-40f2-a009-0783d7e9c4f3",
        "cursor": {
          "ref": "2b104b60-f474-4bed-b34c-d6544a7d86cf",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f77b4b23-839b-4fe1-8e02-9e494f9b1b07"
        },
        "item": {
          "id": "bb32b039-e15b-40f2-a009-0783d7e9c4f3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "04da66a7-a27c-4b7b-ba0d-d056e0fe064b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9481a896-8b30-4466-bf2e-f5269fa2fcc3",
        "cursor": {
          "ref": "fed6ee39-a475-48e9-817a-0437862c438d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b04c372e-2691-44f4-9cf4-eea284b7a9be"
        },
        "item": {
          "id": "9481a896-8b30-4466-bf2e-f5269fa2fcc3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "88f3b98b-9c5e-482e-80f1-65e819483a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf63c7c-52c7-451d-a2ea-a833ca846052",
        "cursor": {
          "ref": "db90ea5c-2537-4100-9851-cf89cf53cd3d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1cd1b0f6-b094-441c-a9cc-32f6e171bf98"
        },
        "item": {
          "id": "ddf63c7c-52c7-451d-a2ea-a833ca846052",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e8efa09e-2511-40e3-ac06-82ec1b038f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6df6c2c-6688-48ca-bfff-bf2bfa7e91a1",
        "cursor": {
          "ref": "d42a9dd4-2cfe-48e6-ad6c-471e0d8059e6",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7d124eb5-c2c7-45da-a865-c12a89a28900"
        },
        "item": {
          "id": "e6df6c2c-6688-48ca-bfff-bf2bfa7e91a1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "68d3e638-eb12-48b4-808d-ed51d0af4e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a805bc-45a8-4aee-8b66-2bb867d3be73",
        "cursor": {
          "ref": "c69c3d53-e780-4a05-88c3-877bb6726031",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bf81208e-ea17-4085-a584-e74aa5f129dd"
        },
        "item": {
          "id": "03a805bc-45a8-4aee-8b66-2bb867d3be73",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8aa8593c-14d4-4fe9-a194-7e9863424271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb0d3b8-e142-4628-a1b5-d65b08fbbb89",
        "cursor": {
          "ref": "dc23df66-3113-45a2-a570-218d98dc26ed",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8f3d1277-1675-49ec-b752-35cfc70bbf80"
        },
        "item": {
          "id": "1fb0d3b8-e142-4628-a1b5-d65b08fbbb89",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "38c94b4d-4f90-412c-b82f-054e8b8088da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acf4f90-628b-4bc9-87a6-d32dcdab73e9",
        "cursor": {
          "ref": "74cc919f-2e19-4195-8c86-73fe24f0f660",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ed2d9f69-8dc8-4bcd-9e40-b297709db643"
        },
        "item": {
          "id": "9acf4f90-628b-4bc9-87a6-d32dcdab73e9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e0d8983f-f127-4cc2-b119-38595c40f643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafb4b5b-2fae-43fb-9785-e8c3ad62d560",
        "cursor": {
          "ref": "0d656fe3-0e23-42ae-9288-58b856d6a2e7",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "024ab29e-997a-468a-b743-2199b53dd794"
        },
        "item": {
          "id": "cafb4b5b-2fae-43fb-9785-e8c3ad62d560",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ae3db079-601c-4105-a5b6-aa648cb8f820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464d8ef7-4238-4881-a42a-c4db07928628",
        "cursor": {
          "ref": "cb743b66-de39-4820-aa19-79be3c66f618",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "56320c20-8938-404d-b6db-66a44c83a5cc"
        },
        "item": {
          "id": "464d8ef7-4238-4881-a42a-c4db07928628",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "16ccbe40-9dc5-434e-a6fe-0b9c88fa324e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb06a89f-e2ad-41cd-ba0c-adc5bc40b289",
        "cursor": {
          "ref": "76c44118-df87-4d84-9e81-66d984fffa9c",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "21de0ef4-fe70-442b-b74d-bb76d02f12b8"
        },
        "item": {
          "id": "fb06a89f-e2ad-41cd-ba0c-adc5bc40b289",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f57dfc76-b0ed-40f4-a638-c45806721cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24400307-9d8f-4534-a8ee-55973913ee4a",
        "cursor": {
          "ref": "42abfa4d-dcd5-4b27-b5bb-ead2c5b96329",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c7f207de-4fe1-4c59-b32d-0505b7d0f028"
        },
        "item": {
          "id": "24400307-9d8f-4534-a8ee-55973913ee4a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c13a5c28-f689-4351-8b2f-843f27f45053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddfb978-28ab-4129-82f5-b4acb7acd541",
        "cursor": {
          "ref": "150dce44-df29-4310-a0e8-bf432672d7a0",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5ea17f1f-3b08-42e3-98b9-2dbe4dc1c78e"
        },
        "item": {
          "id": "4ddfb978-28ab-4129-82f5-b4acb7acd541",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "711d4030-59ff-4451-a12e-86d113552e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ca6903-bcb0-42c2-a241-063d437c0a21",
        "cursor": {
          "ref": "40269e9e-7093-49fe-8030-0c21313186d2",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "db0d316c-17db-484a-8327-691bf180ec24"
        },
        "item": {
          "id": "39ca6903-bcb0-42c2-a241-063d437c0a21",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "20f9130f-25e2-43ff-9105-80ac5dc9c220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e720ce-bf9d-41da-9f94-f18477f50594",
        "cursor": {
          "ref": "e5729c0b-4391-448b-8978-d14c1951147c",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dbcc45f6-7b3a-4a4f-9dd5-8f7416c73f4a"
        },
        "item": {
          "id": "57e720ce-bf9d-41da-9f94-f18477f50594",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c883593a-a221-4529-945a-4bcc0f5ff033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ff7375-54e9-42f6-a800-f9f9dd812475",
        "cursor": {
          "ref": "116903f0-19bd-4748-b635-59d046578e9f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a1019aaa-ea4f-4470-9994-cc033ce2a536"
        },
        "item": {
          "id": "f1ff7375-54e9-42f6-a800-f9f9dd812475",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e7448841-d03c-49c0-9027-c964717f589b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f0ffef-d2bb-48f2-9015-5f0cc7547d94",
        "cursor": {
          "ref": "91038b14-e850-4989-9bd9-02e5679057ad",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "54cde061-792c-4718-8f33-168efd9ccc1b"
        },
        "item": {
          "id": "19f0ffef-d2bb-48f2-9015-5f0cc7547d94",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6f3feef7-361d-487a-85df-f93373c6231d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7f475d-90eb-4fc3-b73b-6dd1f10801b2",
        "cursor": {
          "ref": "273109ac-d2cb-4a0b-ad9e-4053d04ebe67",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5d92d2c2-07d5-4e19-ba21-5e3cb30fc19d"
        },
        "item": {
          "id": "4d7f475d-90eb-4fc3-b73b-6dd1f10801b2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fb8ec08a-3966-4eec-a3f4-3477542f9e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2baaefb1-5694-46f2-abdc-3f7a66f2d599",
        "cursor": {
          "ref": "34d5acc1-3ab0-4221-82a6-8925c2e8775c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6481d0be-c9a1-4947-b87b-22548a0e9946"
        },
        "item": {
          "id": "2baaefb1-5694-46f2-abdc-3f7a66f2d599",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6ed05ec4-86c7-46a3-beea-9c60b069e2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15008ac-dd42-4c02-95f0-404f8d4e801e",
        "cursor": {
          "ref": "2a25a2f3-861f-4b0d-a45a-8fefe2968bc2",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2bbe4b8b-acf6-4b1b-b07e-b736e6e9adf5"
        },
        "item": {
          "id": "c15008ac-dd42-4c02-95f0-404f8d4e801e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4b4f6892-0296-4004-92ab-ce5046cf7c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572330c0-ee67-42ca-82e3-d6e72200a382",
        "cursor": {
          "ref": "ea3965b1-5de1-45d2-938d-ff43260890e0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1d67002b-3aca-4e1f-9c8d-13ef0a176a13"
        },
        "item": {
          "id": "572330c0-ee67-42ca-82e3-d6e72200a382",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a1ade1bb-2460-4ec9-af4a-9ba075f16480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08afdc4-2e88-4e37-999c-9985edc7b3e0",
        "cursor": {
          "ref": "d405d21d-e9a8-4f5d-86cd-264c6584e850",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "22e6c13c-cdca-4ff3-bed8-8a6a8cc1a35c"
        },
        "item": {
          "id": "e08afdc4-2e88-4e37-999c-9985edc7b3e0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8ea047c4-ccfb-486c-a5aa-cedaa6c39204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f74bb6-8895-4da5-8090-f08f110c705e",
        "cursor": {
          "ref": "083fcb2d-b270-4f63-9b5a-edb051315f4b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4a114d7f-6889-4475-95db-ba1cc1d3351f"
        },
        "item": {
          "id": "04f74bb6-8895-4da5-8090-f08f110c705e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6b2352aa-f531-43bc-9e81-7af29c9ba5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8648742b-3279-4711-97fc-11fb160c4f53",
        "cursor": {
          "ref": "97ec2178-cc2f-4d22-b89c-9182572d9844",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "17ba38f6-b195-49b2-8e7e-b58bddb674f8"
        },
        "item": {
          "id": "8648742b-3279-4711-97fc-11fb160c4f53",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "84c86ad4-234f-4e92-b75c-93c9e8e9ed1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8c1b9b-6ba4-4d37-8ad1-593fc31fc14c",
        "cursor": {
          "ref": "c2d7279b-befd-486e-9b0e-45f5286fd96a",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a564b712-2469-43f5-8fed-338ba5841890"
        },
        "item": {
          "id": "9f8c1b9b-6ba4-4d37-8ad1-593fc31fc14c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "575d7db4-373b-42d7-a9fa-c251185d6668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089ff97f-9ec2-47c1-a450-46c921f6c1bf",
        "cursor": {
          "ref": "8a07e566-1edf-4e6f-a238-cdf35b648fc5",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3f22e685-abf1-478d-a4eb-4f786ba2d6d7"
        },
        "item": {
          "id": "089ff97f-9ec2-47c1-a450-46c921f6c1bf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ec69b341-d7fd-4308-8a51-ad3375569802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b60b543-eca8-4f46-9adf-096f80e42475",
        "cursor": {
          "ref": "3ea2a36a-54b9-43df-8d3c-a925ff46d569",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "20d38326-33d7-41ca-807b-a397bf5fecad"
        },
        "item": {
          "id": "1b60b543-eca8-4f46-9adf-096f80e42475",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "87aaed51-944d-4d4a-9be8-f395570937f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be307c7e-74d8-4c29-aca1-c60799d4e2c8",
        "cursor": {
          "ref": "65896b25-1ef3-4ae7-b41a-1162948babd0",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "489ee0e9-a89f-4905-97b9-59e500b21ab0"
        },
        "item": {
          "id": "be307c7e-74d8-4c29-aca1-c60799d4e2c8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7353b841-60a3-4eba-9d81-fb4a4616db1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a028ae-ba57-4bb1-bd55-5f56f6ffce2b",
        "cursor": {
          "ref": "5bd8e047-26b7-4ed5-b3a0-e6111ef1e066",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "090808bb-b6a3-43e6-a7c7-ca5b02e60584"
        },
        "item": {
          "id": "71a028ae-ba57-4bb1-bd55-5f56f6ffce2b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "908ac053-9528-4136-8eb3-15d49732b0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076b41c4-9377-4d90-81e8-6e4a5a63a6cc",
        "cursor": {
          "ref": "64ac05db-a458-4881-8276-ec6331425045",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ec039ad2-5053-4cf0-be64-a9c155cbfe1b"
        },
        "item": {
          "id": "076b41c4-9377-4d90-81e8-6e4a5a63a6cc",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "afa80823-ef7f-4346-88c5-5baa851d2e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e59d8c8-eff2-4952-918f-fc418fa55fa5",
        "cursor": {
          "ref": "329acb99-4a19-4d04-b1d5-0b5293a8fb5d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "398d63eb-be0c-45ab-8bd5-92249f3aa651"
        },
        "item": {
          "id": "5e59d8c8-eff2-4952-918f-fc418fa55fa5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a5bef994-6ad0-401c-932c-93608d59ea68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde666fb-3166-4d56-89a2-528bfc697799",
        "cursor": {
          "ref": "3779b311-0c04-46ab-b854-acc201752faf",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "539c5068-1cc3-4a9b-aa59-58f179462f02"
        },
        "item": {
          "id": "cde666fb-3166-4d56-89a2-528bfc697799",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d3db6441-871d-4d3a-b433-a7653fa33bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6764bf49-e6a3-40c5-ba9c-8f317339107f",
        "cursor": {
          "ref": "8e443278-5c30-4406-bc90-5ec08eded487",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d485e4e3-e301-4c45-9d59-fdc28db1c7ae"
        },
        "item": {
          "id": "6764bf49-e6a3-40c5-ba9c-8f317339107f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "646a2bdc-bef0-414e-94d6-451533e39df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efad771-fb8c-411d-a582-d95dfebbaee3",
        "cursor": {
          "ref": "0ab8cdc9-c107-47b2-bbf6-2bded26817e0",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "983e4078-7b60-4c21-9efa-2042ce79afc0"
        },
        "item": {
          "id": "4efad771-fb8c-411d-a582-d95dfebbaee3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bb607e05-72a1-4f1e-b335-89dbd48176a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7b654d-681c-4fb0-8d93-c28083576b16",
        "cursor": {
          "ref": "1d0ddb02-6f99-4ffd-884c-22fd2804888a",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a8fa790a-bfce-461b-b15f-0e15348594a7"
        },
        "item": {
          "id": "6e7b654d-681c-4fb0-8d93-c28083576b16",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "33cbd12e-d861-4cf7-917f-4513186e35d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3133682b-7fd9-4b5a-88a9-5cf885556668",
        "cursor": {
          "ref": "0f39ef71-52ee-4185-a006-ff41056e6ea2",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "70a63f12-45c7-43ee-a554-31b8064eb91d"
        },
        "item": {
          "id": "3133682b-7fd9-4b5a-88a9-5cf885556668",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ce8e5b98-1449-4d91-8046-1b8f158c9433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11becca2-ed39-4784-a4d4-65a891b700f9",
        "cursor": {
          "ref": "473a38a8-2b30-4970-ab81-a083b188fc5c",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "91cfae85-ee1a-4cef-a52c-8d172a9a4d4f"
        },
        "item": {
          "id": "11becca2-ed39-4784-a4d4-65a891b700f9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f10faee8-3797-4fdf-a572-7d0a2baee32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f8fa46-b4ee-403d-a198-c12892c734f1",
        "cursor": {
          "ref": "779fa44d-dd78-4a74-a4d4-a3b5c239752f",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8f817bbf-0610-4475-b48a-b09dea95d20a"
        },
        "item": {
          "id": "12f8fa46-b4ee-403d-a198-c12892c734f1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b95a57ee-5761-4cf1-972c-7b3584759e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e7d52d-9174-4281-9be0-8fddb183855c",
        "cursor": {
          "ref": "ad7b5ca6-726a-4f36-a5ec-e8be101fcf16",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3ecc7e39-3df4-4351-8896-bb72eab1c015"
        },
        "item": {
          "id": "53e7d52d-9174-4281-9be0-8fddb183855c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6fd8b1ab-5319-4e0b-8508-6a48a95804f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a2d300-e303-41b9-9667-de317bb888fd",
        "cursor": {
          "ref": "57651bd7-726a-45ba-9b5f-41d04af72a21",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "628a19b3-930c-4ca4-a70f-f59291e1164f"
        },
        "item": {
          "id": "54a2d300-e303-41b9-9667-de317bb888fd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e8dd4d4c-2079-4722-ab8d-eda64ecee80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5f0260-36a8-4f66-b22e-dd0d283b01c3",
        "cursor": {
          "ref": "82371f53-5bdb-49f0-9a9c-90c489d04f89",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "02c7e772-7f69-4bad-9f88-e7d953962706"
        },
        "item": {
          "id": "7c5f0260-36a8-4f66-b22e-dd0d283b01c3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b7036445-dd72-4ab5-b2cd-0d20f96f47f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224c0c79-65bf-4ae6-9bef-7da6b837c465",
        "cursor": {
          "ref": "364420ea-bd5a-49ed-a1f3-80fb9376ebd2",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1a1e240f-c0eb-42e4-923a-a58db3df1b96"
        },
        "item": {
          "id": "224c0c79-65bf-4ae6-9bef-7da6b837c465",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d4e047a0-73fe-48bb-944c-4acbf5ee0037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81a45e2-6048-48f9-b81a-e4345ea5ae26",
        "cursor": {
          "ref": "c8a57ee2-39b9-410a-9613-2d6762c038cd",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3ad84a2b-2a77-4b2a-87a4-34b81bded109"
        },
        "item": {
          "id": "b81a45e2-6048-48f9-b81a-e4345ea5ae26",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8415ad0f-0cb3-437f-b3da-c79ff5d5273d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8f90b4-3d91-4b21-9c6c-042c0c3b3052",
        "cursor": {
          "ref": "50570df9-0245-4224-bbfe-7e7fd886e8a5",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1f414457-8167-456d-9e06-1d3139daca4f"
        },
        "item": {
          "id": "ae8f90b4-3d91-4b21-9c6c-042c0c3b3052",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b522c208-698c-40f9-9b67-b447a37afbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998776f3-cf5c-4d00-a3a5-ede9566ae860",
        "cursor": {
          "ref": "3daec9f5-6623-4d95-98a7-a3d11d89375b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "92471c2d-2071-47d3-a159-b02feb9fb705"
        },
        "item": {
          "id": "998776f3-cf5c-4d00-a3a5-ede9566ae860",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7bdccb64-1f85-48ef-8cb4-b58b9776758a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783319c4-f4b1-4e52-8e5a-e37f4e3be410",
        "cursor": {
          "ref": "045a86ed-14b2-4e27-b873-592a120d06dc",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d3c7a896-d7e5-4e4c-ac3b-1fbcb46104b1"
        },
        "item": {
          "id": "783319c4-f4b1-4e52-8e5a-e37f4e3be410",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ee0d1879-8e39-40b8-9dba-9e872a3e317e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48758aa-5d23-4f3c-a22e-5393d0f31e2f",
        "cursor": {
          "ref": "f21b8792-4265-40b8-b5c1-f7043e3ce0ad",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "96792920-7d55-43b1-947c-f0d07a363e0e"
        },
        "item": {
          "id": "c48758aa-5d23-4f3c-a22e-5393d0f31e2f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "261e0579-5f4f-4db6-bcf7-8d5213b96b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97669c2-5f87-4ddd-9f01-d31cd2fbfee7",
        "cursor": {
          "ref": "08fe4f25-9251-4b8b-85a4-d830ca016d35",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1619976c-a919-40aa-896e-ba67ae778e5d"
        },
        "item": {
          "id": "c97669c2-5f87-4ddd-9f01-d31cd2fbfee7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5c760715-b56e-4213-99d1-ca59597d5c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b5b7cf-9810-43d6-89d6-b11f17d7c05f",
        "cursor": {
          "ref": "6322eb14-81a5-49c9-98c3-eebb90e8bcd6",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "34ecaa4a-6594-46af-a360-bda5c9d44d9b"
        },
        "item": {
          "id": "83b5b7cf-9810-43d6-89d6-b11f17d7c05f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a91fbbd9-50e5-4db0-9ee6-c3dcedbd6f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228658e3-6b74-4031-a95b-56472f969e66",
        "cursor": {
          "ref": "b5c0ffb0-39e6-4487-a0c7-b720ee061e42",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "73aeddaa-bee6-4c1d-b662-6543cd848826"
        },
        "item": {
          "id": "228658e3-6b74-4031-a95b-56472f969e66",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "47a4f9f1-ee89-435f-9c57-242ebff10509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b259c281-4b54-4ab3-9dbf-aa8e8a650d7c",
        "cursor": {
          "ref": "ff9bf396-923b-41b0-bae9-101ae3d6d417",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "58536388-aac4-4952-83e0-0541636aabf9"
        },
        "item": {
          "id": "b259c281-4b54-4ab3-9dbf-aa8e8a650d7c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c0420b8d-6a23-4107-b781-f879e83c051e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a69735-c2a7-475b-84e9-f6bc0c58133c",
        "cursor": {
          "ref": "cc32f333-1751-40cb-8239-e1fd0d8ee2bd",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fb110c4a-7b23-45c7-94ab-651c461dd608"
        },
        "item": {
          "id": "72a69735-c2a7-475b-84e9-f6bc0c58133c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d82c4ff2-322e-4756-a278-688fdb057e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690e80eb-a40a-4722-991c-e067c4968e7c",
        "cursor": {
          "ref": "dd14e71a-b85b-46aa-92a0-c3db73c0e338",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fe5d02d7-5c66-4b8f-8fb1-44ddd28b9064"
        },
        "item": {
          "id": "690e80eb-a40a-4722-991c-e067c4968e7c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "281ca3ab-7a98-4f0d-9c40-c83c8b917b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233a9686-ad71-4e81-8c1c-3e570103d9cb",
        "cursor": {
          "ref": "03d8b170-fb57-406c-80d9-a175f18aa376",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c467650b-b12a-473a-ad20-5780d6b69634"
        },
        "item": {
          "id": "233a9686-ad71-4e81-8c1c-3e570103d9cb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "85a2c6f7-b97f-4b4d-8582-ab4bb0cc80eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00400f4f-56f5-448e-b884-bbea7862034f",
        "cursor": {
          "ref": "a1cadd3f-69b7-4bab-878d-a868d98a508b",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9e010383-75e2-4120-bc5a-8a91792306fc"
        },
        "item": {
          "id": "00400f4f-56f5-448e-b884-bbea7862034f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "365b8932-0f5b-497c-bfa8-3cc1dbd5a6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3862c7a-b1d8-4f54-a4c1-ddb329cb8dc5",
        "cursor": {
          "ref": "cbaa134c-f4e7-424b-b4ac-888387eadfea",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "885ee733-6d97-4121-a0b8-6123ce8c51da"
        },
        "item": {
          "id": "d3862c7a-b1d8-4f54-a4c1-ddb329cb8dc5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d0299977-8b14-4aca-b51e-f2c0ed64a024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338f6b00-1684-43b7-a5ed-19795a2d9aea",
        "cursor": {
          "ref": "3ee14b18-7fe9-4d01-a74c-84ed78d37710",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c2261f0b-5562-44b8-9ba7-16eb47461ec9"
        },
        "item": {
          "id": "338f6b00-1684-43b7-a5ed-19795a2d9aea",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "02f9dade-7b9a-4d64-bcd9-fafe5b48952f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb261b46-a37f-4578-bd65-b5805c2c4da8",
        "cursor": {
          "ref": "555714b2-9a8c-435b-b5ef-7da6e7de626f",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8d8911ff-7f56-484a-a560-fedd0a1ec8be"
        },
        "item": {
          "id": "cb261b46-a37f-4578-bd65-b5805c2c4da8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bb9ac03d-8d36-4fbd-bb9d-bb21cf99ce63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052cee0b-d73a-4ff7-a40f-7d028efe74c0",
        "cursor": {
          "ref": "88f856e2-1c42-40a3-bf8a-54575df2b662",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bd8e532e-5dc1-468a-9006-5a96fc262188"
        },
        "item": {
          "id": "052cee0b-d73a-4ff7-a40f-7d028efe74c0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "daa9ce02-6728-4040-8996-502ff1109eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248c160a-6412-43f8-bbc6-fe5e025a4356",
        "cursor": {
          "ref": "478513af-092f-4f4f-a56a-df609e66971e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d892a65a-7643-4d61-98e7-fe6f3c31dac0"
        },
        "item": {
          "id": "248c160a-6412-43f8-bbc6-fe5e025a4356",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9e54745d-8bc4-44d5-a64c-9e7ca3181ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f6fdaf-b547-4144-9dcd-794b71c2f86d",
        "cursor": {
          "ref": "4a444e22-0fca-466c-bda2-514fbcbead65",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "db625931-2a8c-4d9c-a9cf-0e612d7e03d8"
        },
        "item": {
          "id": "97f6fdaf-b547-4144-9dcd-794b71c2f86d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0a07de44-8bef-4519-a555-d3248eec5fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68557f24-283a-40a1-98b8-44d95292dce5",
        "cursor": {
          "ref": "24434c9b-ff7a-40b0-975f-8ba6a8dc5d47",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2ab55c94-3228-4ac7-848e-22173cd0a807"
        },
        "item": {
          "id": "68557f24-283a-40a1-98b8-44d95292dce5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "00fb5b45-0f96-4be5-931b-fbfe44e700c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a5b94a-5ee4-4605-a1b8-5598ae55db2d",
        "cursor": {
          "ref": "5542ed81-d8b4-4015-936d-967acb63dc94",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bfece154-8d3f-4062-9001-a86867366257"
        },
        "item": {
          "id": "01a5b94a-5ee4-4605-a1b8-5598ae55db2d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a794a8a2-47d6-4224-80d0-45fdce3d339d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cc11ec-e77b-4581-9c6e-e7261bb57954",
        "cursor": {
          "ref": "80e56868-b8fb-402d-9ba1-4c2985b592d7",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "15ad521d-9ce0-4251-b675-bf2b5d729999"
        },
        "item": {
          "id": "85cc11ec-e77b-4581-9c6e-e7261bb57954",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7fc84dcd-b8ed-4e3d-abbb-5bc6b64de8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea6c197-291f-46d8-8eb3-9b181afe734f",
        "cursor": {
          "ref": "06d8bb60-a96c-4bc8-bb09-361f5eb9fae5",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "607e2d25-1599-45cc-8dbf-1bdd9a2ae615"
        },
        "item": {
          "id": "aea6c197-291f-46d8-8eb3-9b181afe734f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e7bba97b-617e-4975-8283-2ba719e5b87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a83534-4255-434c-adb6-4cc4b9e30730",
        "cursor": {
          "ref": "808bb331-fe76-4cf6-80d5-3e856753dba8",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cf54ffca-60f2-4244-bd32-5eb4caf12da3"
        },
        "item": {
          "id": "c7a83534-4255-434c-adb6-4cc4b9e30730",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "76209be6-bf85-40de-8107-fdcc82a5f834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0db3a10-eb34-443b-8148-7aa0b3d1282e",
        "cursor": {
          "ref": "51a35c7e-51a5-44fe-9d53-8f861f66a5f4",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8a67772d-8dee-4aa6-a711-518860739f7c"
        },
        "item": {
          "id": "c0db3a10-eb34-443b-8148-7aa0b3d1282e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f306eca3-cb3f-4f29-8149-75c202908819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4648463e-4c81-459a-8d4e-d62451708e57",
        "cursor": {
          "ref": "7d4e6808-9e07-4e44-bf29-d50d31b9d6df",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e72d3167-b32d-49c2-bfb3-f82bd6e4d795"
        },
        "item": {
          "id": "4648463e-4c81-459a-8d4e-d62451708e57",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ad4bbd08-6035-433e-b641-de65c7c4bba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdd24c2-898d-425d-a09f-e46557ad6a28",
        "cursor": {
          "ref": "fb3a8add-3757-4e97-a35f-1e63bfeae1b4",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6647e043-bce2-4d6d-bba4-2553c0d97141"
        },
        "item": {
          "id": "afdd24c2-898d-425d-a09f-e46557ad6a28",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ed67469b-a2d3-44d3-8494-07e52e539ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7680c4-9111-42e0-ad9b-8805c73c8ec9",
        "cursor": {
          "ref": "6255ce13-8c40-4e50-8f0a-3138f6148dbd",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "daf0612b-368d-4b69-bdbc-feaf32f1f6ec"
        },
        "item": {
          "id": "1b7680c4-9111-42e0-ad9b-8805c73c8ec9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a9692a1f-baf8-459d-a05d-bca563512626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950430b5-d192-4f1f-8c43-de7b5caff0e2",
        "cursor": {
          "ref": "0e9dd4ca-04a9-4948-9683-71aeb10fcb08",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "62f45fab-ed7f-4f04-abba-29be1f5ae243"
        },
        "item": {
          "id": "950430b5-d192-4f1f-8c43-de7b5caff0e2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "aefd540c-1e45-484f-be42-6160c3fb6c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a46b647-d93f-4440-86f8-6c9f9fb2c945",
        "cursor": {
          "ref": "2e3082b5-33fc-4d69-a782-5da5d9b3c0a9",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bae61470-1fea-4339-81ed-4102ed0281a6"
        },
        "item": {
          "id": "6a46b647-d93f-4440-86f8-6c9f9fb2c945",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f0fd9e60-6f67-46c7-9b2a-d7187cf74982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fea2a94-9942-4eab-a2a0-a1f781ef37b0",
        "cursor": {
          "ref": "7cb03417-2e25-47bc-a28b-24a5745c498e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c6e1248f-4bc5-42f5-bcb5-23e7ff267b8d"
        },
        "item": {
          "id": "9fea2a94-9942-4eab-a2a0-a1f781ef37b0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "30c24587-2de2-4103-85b9-c07e4ea490f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b3f534-c43b-4d91-9a81-078add115678",
        "cursor": {
          "ref": "f06d85f1-fc38-43b2-8ce6-f45e11840bac",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f4ed25b9-dc5d-4a1f-9e4b-b8f3670bf977"
        },
        "item": {
          "id": "f1b3f534-c43b-4d91-9a81-078add115678",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ee4f716f-fe48-47e3-a0bb-e645567afc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8865bcbc-5b0d-4ba0-af8e-1551dc888fbe",
        "cursor": {
          "ref": "48fa38ef-59be-49eb-bebb-b77c5df90d74",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "638e0dfe-dd85-4964-9f53-165aff5b83d2"
        },
        "item": {
          "id": "8865bcbc-5b0d-4ba0-af8e-1551dc888fbe",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4a0a6df9-7d31-4deb-b451-981d47f9be31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3607824-5f66-4276-9394-9e49d1a576ef",
        "cursor": {
          "ref": "9d251eeb-a6e4-45ec-95a5-e5cc8ebd030b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0762e966-9251-470d-b925-2c13f334e9b8"
        },
        "item": {
          "id": "b3607824-5f66-4276-9394-9e49d1a576ef",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7908887d-274b-4f82-b3c9-399fff51c342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4650ecbf-686e-4b93-b6f7-89d3bd286785",
        "cursor": {
          "ref": "017b4c24-ecb1-42eb-b8af-f6b9c5bf67b6",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "31a6c7fb-4f03-4e9f-b5e1-889f03281436"
        },
        "item": {
          "id": "4650ecbf-686e-4b93-b6f7-89d3bd286785",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a628eb9c-b4f6-4b87-8f7a-43805f01a072",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0878463-8ac7-4022-9cc0-1f6b8e507edd",
        "cursor": {
          "ref": "63aa58bb-483d-40f1-9715-0401ee52eed1",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9d1a3d3b-9994-494c-9901-50237608637c"
        },
        "item": {
          "id": "b0878463-8ac7-4022-9cc0-1f6b8e507edd",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c7581ee2-af40-4833-ae7c-5fa67f35b362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9f6200dd-284b-4701-8b97-40d33a9e6842",
        "cursor": {
          "ref": "dfa10d03-c726-4e73-9fcb-c64961d826b9",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ff98a279-021a-4fa2-ab15-65558ce3f1d6"
        },
        "item": {
          "id": "9f6200dd-284b-4701-8b97-40d33a9e6842",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d40b97e4-673e-4546-8018-f3e1327d2412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "655778fc-59b7-445b-9db4-b7d60f8590cd",
        "cursor": {
          "ref": "7c64abc3-e1f3-405d-b639-ddb8cd806b21",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a01dc0cf-68aa-498a-a490-ca9066e98128"
        },
        "item": {
          "id": "655778fc-59b7-445b-9db4-b7d60f8590cd",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9f5360eb-dd04-4721-81a3-1c0730e95f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "dd32ebbe-0001-47f0-b538-83340d571dc6",
        "cursor": {
          "ref": "5fe84cb3-4ce2-499b-a63f-d68fc9c8f182",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3ce98683-d5b5-467f-b0a0-de3eb4954d6f"
        },
        "item": {
          "id": "dd32ebbe-0001-47f0-b538-83340d571dc6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5914c7dc-32d7-4d09-bd27-1f9699bd28ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "254d9d3f-7601-4a2e-96ec-727fd9256d08",
        "cursor": {
          "ref": "e225cae3-bc45-4a6e-822b-76e1ef4a245d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6853b9c2-b6f6-45a4-b11d-aa52d6513339"
        },
        "item": {
          "id": "254d9d3f-7601-4a2e-96ec-727fd9256d08",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fa0a48c4-dc6d-4811-bf25-0a0a13d20904",
          "status": "Created",
          "code": 201,
          "responseTime": 8734,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce68267e-3632-49bd-a783-c704cbd2605f",
        "cursor": {
          "ref": "45fe1e45-969f-43ea-893e-23794a5952d5",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "537669f7-173b-4aa6-8a66-9adc608e874c"
        },
        "item": {
          "id": "ce68267e-3632-49bd-a783-c704cbd2605f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "86a9eebe-e0d0-4b92-9893-1117fb5324cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7a3a71cb-595d-41d1-929f-a3e54ae3065f",
        "cursor": {
          "ref": "53f02ff5-7c76-4990-be66-27feda3b457b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "96387afb-9ef4-4c09-9dc2-b8c6bc32887c"
        },
        "item": {
          "id": "7a3a71cb-595d-41d1-929f-a3e54ae3065f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bb41abfe-1a58-4809-be81-6eda5cde76b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "dd9ea4e3-c56a-4018-a031-2dfc6fc275cd",
        "cursor": {
          "ref": "1c271b04-8a73-4e8a-978f-2d63deb3033a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8d6c43a5-d49f-4ab4-ae82-6c442f3798ea"
        },
        "item": {
          "id": "dd9ea4e3-c56a-4018-a031-2dfc6fc275cd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0a0ff116-c647-4c58-8cf4-20c9a2e5a193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad21ff8b-7150-470c-814b-a248a84e6d6c",
        "cursor": {
          "ref": "196a53cc-a3fb-4f30-bc38-43d0e74f4903",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d925b30e-fb02-4124-9432-c8413b851ae2"
        },
        "item": {
          "id": "ad21ff8b-7150-470c-814b-a248a84e6d6c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6ce7e9a7-bbcb-4676-bf74-2e6d6ef7be79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67b3478-c752-400b-acc3-ea1203ac8c31",
        "cursor": {
          "ref": "45d7fcc3-77c7-42c5-a765-f99a4c4417cf",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "347a5518-9b0a-472a-b22a-4fb1e0c1564e"
        },
        "item": {
          "id": "f67b3478-c752-400b-acc3-ea1203ac8c31",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ee769cad-70ed-4b72-a144-aea896b081e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51841421-b694-4491-9269-93f7ddb23e49",
        "cursor": {
          "ref": "1dcf6446-e0f5-4fd5-b713-207b321a8620",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "db5f97b3-162f-457e-914f-3a654ab9c744"
        },
        "item": {
          "id": "51841421-b694-4491-9269-93f7ddb23e49",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f557f2a2-052f-46e2-a790-f66f9e16d04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b8ad53-c420-45fc-9bd6-77e6cea2a7e4",
        "cursor": {
          "ref": "45bcc095-70b1-40cf-b925-e5081d27b535",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d4e5bd26-eb0e-4f89-9e8d-63bdf6b04aa9"
        },
        "item": {
          "id": "39b8ad53-c420-45fc-9bd6-77e6cea2a7e4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "029d9600-d338-4fec-8c64-fee138fc34cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05e218d-0664-4804-bca8-0fc697e8579e",
        "cursor": {
          "ref": "38ccb566-5d0a-4aa0-bba4-6fab988ca8c8",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bbc1000b-b328-4948-a0c8-fee4fc3606a3"
        },
        "item": {
          "id": "f05e218d-0664-4804-bca8-0fc697e8579e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "31a2ce97-5785-4933-9a12-2949a7d88664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7948cb-fe4f-457e-b10e-a004cc8a0e26",
        "cursor": {
          "ref": "a1230d5d-7b27-4614-93d3-ff2c563246b2",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c77866c3-3927-4e84-a7bd-9f76314b0023"
        },
        "item": {
          "id": "6c7948cb-fe4f-457e-b10e-a004cc8a0e26",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c2f89cce-9e72-4495-b80a-0e6ee6f9ffc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b86b5a7-ceb0-47a1-b013-67ec25d97b4f",
        "cursor": {
          "ref": "cd5b08a1-f3f4-42b0-9631-c40ca819fbe5",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f114157b-7671-4da0-ab28-4fbbaa882d19"
        },
        "item": {
          "id": "9b86b5a7-ceb0-47a1-b013-67ec25d97b4f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "45c2f446-af18-42e9-8311-27d05e5386ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e5c201-cb5c-4e0b-abec-f52947fc3972",
        "cursor": {
          "ref": "eb4a1d33-192d-45af-ad63-ab9e7e4c60f0",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3e54feb0-adf7-4a5b-8ef0-c613f63ec692"
        },
        "item": {
          "id": "80e5c201-cb5c-4e0b-abec-f52947fc3972",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9c35a108-06e3-4626-8a04-c310906b4f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584e56f9-c36e-4522-bbd9-287eb2060845",
        "cursor": {
          "ref": "4817c924-5553-4f95-ba9f-298e3f5e89fa",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d67ab791-30d3-43c1-955c-6cf536b4e8a3"
        },
        "item": {
          "id": "584e56f9-c36e-4522-bbd9-287eb2060845",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "153d40e4-bfc8-41dc-8841-348f27c7bfb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3c1888-061d-45aa-a6c2-26de0b73a62e",
        "cursor": {
          "ref": "c7ccad6b-5a81-4dbf-b49e-b0d0a8f87b44",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d94d58ac-2ae2-4542-b3bf-b8e3acdfad05"
        },
        "item": {
          "id": "1a3c1888-061d-45aa-a6c2-26de0b73a62e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b58dab55-547e-403f-880b-b52458bc0337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02d4052-ad16-4ad1-b100-6b7eef4280b1",
        "cursor": {
          "ref": "21243fd9-ab0c-43f2-ab28-11ea6319e386",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "32bf38f4-ba2b-43ba-8a45-7aff73c6e6fc"
        },
        "item": {
          "id": "e02d4052-ad16-4ad1-b100-6b7eef4280b1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2b3dfde9-82e8-478c-bc0b-26b3e40b3be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea59d4d-55b8-49ec-a3e4-14527bec316f",
        "cursor": {
          "ref": "ac947b71-423d-44f6-bef5-339e59c2434a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "64bb408e-a6d2-475f-aca4-51e8957901a1"
        },
        "item": {
          "id": "fea59d4d-55b8-49ec-a3e4-14527bec316f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5ab92320-8b09-4793-b25b-6565c414e858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea521009-6e30-40b9-a296-1364aa1fda72",
        "cursor": {
          "ref": "662a1e01-15ed-49b4-a33b-047a33b80ab1",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ce98f062-525f-4199-bd31-5c396c15a4bf"
        },
        "item": {
          "id": "ea521009-6e30-40b9-a296-1364aa1fda72",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6b44ae20-afd7-4e55-8bab-3fad815991a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbd7b81-45e1-49f7-9ea6-c3ddf642c656",
        "cursor": {
          "ref": "75887f0d-f334-4d6a-b34f-eebb9b52129d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "66df4250-7015-4d51-96aa-f2503e0d3e4e"
        },
        "item": {
          "id": "1dbd7b81-45e1-49f7-9ea6-c3ddf642c656",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6c5b8def-88a4-4011-a1ae-3452464f8128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8865e79-567b-4afd-9008-9b4405fb8820",
        "cursor": {
          "ref": "b5324f35-b8bd-4836-87fe-5f9c3b8cb180",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "347a4ef6-52fb-44b1-9242-5d4618063bcb"
        },
        "item": {
          "id": "b8865e79-567b-4afd-9008-9b4405fb8820",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1670f49d-399b-4d7d-a38e-001d23f000e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740f9654-8f1f-47f4-9f79-c9f9e5bc3089",
        "cursor": {
          "ref": "7b380468-0a70-4a6c-94e1-9ca5e26f44bb",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5ce1f44d-969a-41fd-a857-c97e732e8d9a"
        },
        "item": {
          "id": "740f9654-8f1f-47f4-9f79-c9f9e5bc3089",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d0d80909-221b-44b3-b368-9aa3a0a0f66f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "040e2ccb-a0e9-4e52-b0ec-8a0279e0e52b",
        "cursor": {
          "ref": "d2d3aa42-8f5a-43fe-ac93-50dec2833ed4",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7e270a21-f3e5-4e62-8e63-780f1b40c708"
        },
        "item": {
          "id": "040e2ccb-a0e9-4e52-b0ec-8a0279e0e52b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ec66719d-8355-47d9-9264-d45ab97f8193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8433571-0918-4e65-90b7-f831881a720b",
        "cursor": {
          "ref": "9710a1b4-a95f-4f6b-82dd-5d7703551edf",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "805f890a-2d25-4eae-8dd7-036de8c97765"
        },
        "item": {
          "id": "e8433571-0918-4e65-90b7-f831881a720b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "44475301-b15d-4a5e-8a65-c4f673e311a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51bf56e-d757-4e61-89e7-57c93a4542fa",
        "cursor": {
          "ref": "8bbddb45-a7e1-4db8-97e6-f4d09dc0bf8c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "38c5adfb-140c-413f-9ac5-1ddc1d093883"
        },
        "item": {
          "id": "d51bf56e-d757-4e61-89e7-57c93a4542fa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7ee35c10-6c67-4bae-bab1-528f56815c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5fa887-ca79-46d2-afda-d62c5dc0f4f7",
        "cursor": {
          "ref": "608abb1f-4bd6-4302-87c6-7fc81701f7f0",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "45b8e80c-b553-4681-80e4-6a7254581ede"
        },
        "item": {
          "id": "ba5fa887-ca79-46d2-afda-d62c5dc0f4f7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "98b7a1e9-c6c8-45ab-b2bb-8076a3f206a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f64403-a47a-4d60-bf7a-8dc2e18f1f77",
        "cursor": {
          "ref": "bb10d025-f013-4622-8535-471f491355d8",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d9c3b42c-d992-4789-91ef-4cebca7cd223"
        },
        "item": {
          "id": "42f64403-a47a-4d60-bf7a-8dc2e18f1f77",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c14670c4-ed95-4c3f-88bd-d2391d901b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73e490c-f7b7-4b82-ae76-f2cc5616dd98",
        "cursor": {
          "ref": "a6c184ba-45c7-482c-a808-6ea7b927d3b5",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8f962b06-8693-4f2f-8db1-e11d35a9aac0"
        },
        "item": {
          "id": "b73e490c-f7b7-4b82-ae76-f2cc5616dd98",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "59af1661-7b13-4b1d-aa57-a120d9bf370f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672ad1c1-e3ee-4073-be41-198d690027e5",
        "cursor": {
          "ref": "78dd0b5d-7213-45d5-8ab7-faf7833d2d65",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "18089010-7d64-4d5a-9eff-8579b1acdf81"
        },
        "item": {
          "id": "672ad1c1-e3ee-4073-be41-198d690027e5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9045bd84-d732-4c2d-aa4b-9fc147eac251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235a1f75-1b46-4c04-a7e7-25cb8c20d803",
        "cursor": {
          "ref": "3a4df14d-b1ac-42e8-95f7-51ae6b931edc",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cd2771db-f2aa-4b74-b993-e05704db59f8"
        },
        "item": {
          "id": "235a1f75-1b46-4c04-a7e7-25cb8c20d803",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "96d51bf5-bf2a-42ca-b5c4-e59d428bf140",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "b816cc2d-b94c-45b5-b37b-3cc417cf4d28",
        "cursor": {
          "ref": "7bd86416-cf5a-4bb2-8a1b-501de7485700",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0a360011-d358-40b8-9259-7d4c5ef52672"
        },
        "item": {
          "id": "b816cc2d-b94c-45b5-b37b-3cc417cf4d28",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fc15b7ce-d6ff-4bdb-91b0-efb2a4d121ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b75030a-56fb-4712-81f0-5ad78b7dcf42",
        "cursor": {
          "ref": "642dff79-c646-43fa-a7b0-03cf6bc20eb8",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "14b88bef-7313-4cd1-bc39-170d8bb92e68"
        },
        "item": {
          "id": "0b75030a-56fb-4712-81f0-5ad78b7dcf42",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1b95d95d-1895-401f-975f-0c00677b5390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522a9afe-31c0-45d5-9d8f-10e07991179c",
        "cursor": {
          "ref": "d141778d-37a2-418f-9818-dd519e36ba78",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "112897c0-eb96-443a-8896-0381dfa9e63d"
        },
        "item": {
          "id": "522a9afe-31c0-45d5-9d8f-10e07991179c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "82981d87-c8f1-4627-8a14-d354ec8cc0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2315b24b-2801-4f07-91d9-e13df95c453a",
        "cursor": {
          "ref": "d8211da0-0281-4d78-83cd-8d15b30a63f8",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "efd98944-4b8c-4d99-a87c-c35c661b8b24"
        },
        "item": {
          "id": "2315b24b-2801-4f07-91d9-e13df95c453a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a8375e1a-438c-465b-b7fb-6341455e6d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3d0f5e-514d-4934-a6be-78c64345632e",
        "cursor": {
          "ref": "c3fbfcdc-001f-4f06-b956-20cf3c5f7ada",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d76286e8-e9fa-4252-9fd4-e3de72345b4f"
        },
        "item": {
          "id": "7a3d0f5e-514d-4934-a6be-78c64345632e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4d6fc4f3-70e2-418a-8ae5-4c7f80d66eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc76347-8d70-4101-b0b6-63de34efc6d2",
        "cursor": {
          "ref": "9f167921-d13f-468f-afd8-18fbf992189a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8b5d78f0-1c51-432c-a7a0-4803056bbc7f"
        },
        "item": {
          "id": "fcc76347-8d70-4101-b0b6-63de34efc6d2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bba316bf-cead-4a92-9d53-d56fa5dfd33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2407389-90e4-4391-90c2-76951b771530",
        "cursor": {
          "ref": "348008c7-8992-43f3-bf95-f947570c1ad2",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1e9ae955-8219-4c31-bcca-e1f14f4c3196"
        },
        "item": {
          "id": "c2407389-90e4-4391-90c2-76951b771530",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "53b02b7f-2597-48c8-906a-009aa6ba899d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "f5a05acc-eddd-4cbe-a101-0a52ce81ef16",
        "cursor": {
          "ref": "a69e4f50-e6c3-4da5-a898-23545b19244e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "36ccff13-8c6c-4a7f-8520-844d78e73e94"
        },
        "item": {
          "id": "f5a05acc-eddd-4cbe-a101-0a52ce81ef16",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "488dae94-a7ab-4fbd-9cfa-21c2ae10bebc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "ceb7c9b1-1249-41c4-aa0f-b0758adb17dc",
        "cursor": {
          "ref": "4e9e7759-1077-4cd4-9881-720f7e0bd435",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "08afcd47-34bc-490e-94d5-20348677c19e"
        },
        "item": {
          "id": "ceb7c9b1-1249-41c4-aa0f-b0758adb17dc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3da42304-ac46-4a94-b789-6faaf9c985cd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "8ea31f79-c466-4769-b58b-499ad7f0ad9b",
        "cursor": {
          "ref": "d8261232-7f2f-4c24-8fec-0125337ce65c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4e858ae4-2796-4739-b1fd-b0608498cffe"
        },
        "item": {
          "id": "8ea31f79-c466-4769-b58b-499ad7f0ad9b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "98107c6f-064c-417a-bd02-4a1edf56db8c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "a6c6d0b0-d52d-4d7b-9c1b-ffc1a4498781",
        "cursor": {
          "ref": "8f8485d0-d583-48df-ace9-c338413e994c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "28df54dd-0a48-4a6a-bfd1-2a85068fbabc"
        },
        "item": {
          "id": "a6c6d0b0-d52d-4d7b-9c1b-ffc1a4498781",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7eff0d2e-bb91-40fc-bce0-b94b61d9a3cc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "9d7bb1fe-bf57-42b7-89cc-7fbd95ca73b4",
        "cursor": {
          "ref": "5e8b4429-334e-4ede-98f1-f7dd5f1d8c9e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f43f8e27-a695-45cd-ac0e-53d2c5e1a435"
        },
        "item": {
          "id": "9d7bb1fe-bf57-42b7-89cc-7fbd95ca73b4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fe4448f8-da75-4fbe-bc72-03daf88d2f9e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "a6f467c6-7ee3-4428-9d77-c3281c6c53b3",
        "cursor": {
          "ref": "6e91e41d-23d6-4375-8a53-56135cdcaa4f",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bd28a5b6-046a-483b-a02e-3e651eb4d46e"
        },
        "item": {
          "id": "a6f467c6-7ee3-4428-9d77-c3281c6c53b3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "49eed844-e067-4fac-89c0-ea3e2ca4254b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a768a0a4-9ca7-4a07-a695-7e7a226c7346",
        "cursor": {
          "ref": "f738b06a-043c-47a7-bb35-c0f175a4b87e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "940006e8-134d-4b58-90d0-7b7eb4e0a7d9"
        },
        "item": {
          "id": "a768a0a4-9ca7-4a07-a695-7e7a226c7346",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b7a80bcb-f826-4acb-bc02-13bc516140fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14eb29cc-186e-4f3c-9e5d-01940f101092",
        "cursor": {
          "ref": "e83e5006-4a22-45b5-aad1-d7a8d4e85f0e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1b3e095d-b865-4dbd-90e5-1f9ab9fbabd9"
        },
        "item": {
          "id": "14eb29cc-186e-4f3c-9e5d-01940f101092",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fe75a95f-9bbd-4f0a-b21e-979fd870e8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ef7062-ba44-433e-9c80-8794791d33be",
        "cursor": {
          "ref": "651c9ba0-2456-4256-8925-dba5b72607e5",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "66db9b81-1a39-4398-92d6-42f332227951"
        },
        "item": {
          "id": "00ef7062-ba44-433e-9c80-8794791d33be",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6e8b5ab9-cd7e-421b-ad8d-76b58f164b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e85427-4506-4f93-8f20-b96d7ef9a51e",
        "cursor": {
          "ref": "3e5ff36b-71c7-4845-8637-d1031fd88f61",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "74b68241-b59b-439d-b1e6-b5dcad467960"
        },
        "item": {
          "id": "98e85427-4506-4f93-8f20-b96d7ef9a51e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3960fec8-a5b7-42de-8b33-45fe6aa83007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b710983-827e-4930-819d-2b2def4fa289",
        "cursor": {
          "ref": "7271583f-33d4-4bef-979c-e2f456ae9b2c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "298bed3e-7997-479e-8b55-f566d36c3d65"
        },
        "item": {
          "id": "4b710983-827e-4930-819d-2b2def4fa289",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "87ffbe17-ccdb-4e0f-8e04-d6eb42a8248d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222d81fb-dd82-4e47-985c-be0f6f167ad2",
        "cursor": {
          "ref": "f5441850-c3f2-4a41-9aca-b7fb5fe12c65",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4b27f207-fcf7-432d-a845-2bfd0e18217f"
        },
        "item": {
          "id": "222d81fb-dd82-4e47-985c-be0f6f167ad2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5c03676e-d394-43f9-b562-27abcf316741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8242f077-732f-45c2-b38e-8e2dd318bdea",
        "cursor": {
          "ref": "7b2315b2-65e6-4d37-89ff-809961996264",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cb8a9a77-0614-4371-8a64-3e4ff3f8b45e"
        },
        "item": {
          "id": "8242f077-732f-45c2-b38e-8e2dd318bdea",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b4fe7bbe-964f-4b3d-9f54-31e573ded101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3e3edb-5335-43e4-b752-6045de2cca0d",
        "cursor": {
          "ref": "79ba38a0-c8df-47c1-a9d3-cb62d61ff6ec",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ef5363a1-975e-4ea6-8bde-66a14b2efad8"
        },
        "item": {
          "id": "cb3e3edb-5335-43e4-b752-6045de2cca0d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0ef786b9-ea88-484c-bead-6e17d6488eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0b49d3-4f98-4c47-b85b-d002b74d7e1b",
        "cursor": {
          "ref": "af5a9e48-c6d3-402d-b75e-906607005256",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bf7de281-a2a1-49ea-abf3-8973d04b8516"
        },
        "item": {
          "id": "5d0b49d3-4f98-4c47-b85b-d002b74d7e1b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8b9b8337-7d65-4000-93cf-659261105107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22899f51-fb46-4d36-9ff6-6afe3bf8cada",
        "cursor": {
          "ref": "aae7f891-6cfe-4f0c-a3f3-e906f5c0e17d",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "72a51152-40da-4185-b51e-b3eed54a7764"
        },
        "item": {
          "id": "22899f51-fb46-4d36-9ff6-6afe3bf8cada",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b3b5fbbc-2ccf-4b7a-8f34-604875e38aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf343985-ed7f-4725-90c4-4f74998254c6",
        "cursor": {
          "ref": "f04c8b1f-b60a-413b-a0e3-2707747e3e8b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "95ac32f4-0037-43a1-b616-ec1027073868"
        },
        "item": {
          "id": "bf343985-ed7f-4725-90c4-4f74998254c6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "30dbee27-48de-4471-84a4-6975b3b6ae97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff052131-7eb4-4b78-a991-09edb87ac6fd",
        "cursor": {
          "ref": "5d7fb5f4-b121-4307-8d40-ccca9f8a599c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3550eef7-0281-41c5-b2f1-7fe223ca6389"
        },
        "item": {
          "id": "ff052131-7eb4-4b78-a991-09edb87ac6fd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ca930f88-d324-477b-8820-6a2687ad4304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a55d57-ea66-47ef-bb62-5927825cabeb",
        "cursor": {
          "ref": "6ea599c1-0046-4b39-985a-b30b3c5691ae",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f1a5361b-0264-4bc7-9b10-f5b472576ba2"
        },
        "item": {
          "id": "a4a55d57-ea66-47ef-bb62-5927825cabeb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f1cde12e-3046-442c-8e24-457c9fd5474f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56983bda-92ca-495d-8eba-fa71a1cd3166",
        "cursor": {
          "ref": "32b96e6c-f966-4529-b3a8-b20ad8a2a8f3",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f1e818be-36bd-4b9c-87f7-dfe20c012f9f"
        },
        "item": {
          "id": "56983bda-92ca-495d-8eba-fa71a1cd3166",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6c6dae90-25f5-4a74-b89d-028be3529b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c373bd5-a2d4-4dfd-9fc4-a43263a344d9",
        "cursor": {
          "ref": "f77538a4-1f6a-4d03-9e4d-f42b9e0ec800",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cbbd522f-a185-40d7-9382-0a986cb6a096"
        },
        "item": {
          "id": "2c373bd5-a2d4-4dfd-9fc4-a43263a344d9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "eee1a219-0d28-4e47-ba43-797a474a1727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7e3903-ac4d-4fb0-bbca-ed8eacf0cf0c",
        "cursor": {
          "ref": "9d44ed97-8aad-4ef4-8ea7-c48514edbd97",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "414c0d90-0d01-4efe-a9bd-6a8f8a438005"
        },
        "item": {
          "id": "8e7e3903-ac4d-4fb0-bbca-ed8eacf0cf0c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1f36ae9a-c319-4a61-89f1-22d916bf1f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364cef23-e298-43c6-9b9a-58281cff1859",
        "cursor": {
          "ref": "dd725a51-92f0-43c6-8ebd-de8203795739",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "859ad2eb-eb79-4318-8a46-fa84b28ec34b"
        },
        "item": {
          "id": "364cef23-e298-43c6-9b9a-58281cff1859",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "885487fa-f3b1-4cea-a90a-baa6456178ac",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "18aaf56a-ee8e-4ee6-a317-dc878eedb0c9",
        "cursor": {
          "ref": "cf3bfa2d-36ce-48e8-b39f-4f50d3c58778",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a3bb27a9-afd0-407a-bb20-0c1052290cb3"
        },
        "item": {
          "id": "18aaf56a-ee8e-4ee6-a317-dc878eedb0c9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "403b4295-c95c-4890-b32e-83df00437bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72967e7-a7f4-4b46-b82c-d5f2250efab8",
        "cursor": {
          "ref": "2f29608d-b526-4521-8579-445f01e5be11",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "724cf383-ccb8-4a6a-abd9-77978bfaa7c8"
        },
        "item": {
          "id": "a72967e7-a7f4-4b46-b82c-d5f2250efab8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b1f921a1-b741-4a7d-8188-2336bc4a6dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb37b4b-4032-4c97-bcd2-e7610c65def8",
        "cursor": {
          "ref": "6d614673-ba0f-4f2a-bcd5-6ba98f71385f",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "678ef216-520e-4b6a-b5b1-cb881f50e43b"
        },
        "item": {
          "id": "abb37b4b-4032-4c97-bcd2-e7610c65def8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6a6ee84a-b41e-486b-bca3-6dbf20f80a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867b87c2-67d2-4f97-8a0d-f398d27c8b4b",
        "cursor": {
          "ref": "83151b09-e55c-43e1-861a-17e3519ff037",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8d35d124-05b6-4b09-8dda-feffb0ab7065"
        },
        "item": {
          "id": "867b87c2-67d2-4f97-8a0d-f398d27c8b4b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1464b938-ef29-461e-b907-5699896ced11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c54851-489b-430c-a9b7-0d8bd448720d",
        "cursor": {
          "ref": "6bbfc336-46a7-4cc0-8213-0d2a774348fc",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ce05333c-6a33-4f0d-b439-ddf809363ceb"
        },
        "item": {
          "id": "b8c54851-489b-430c-a9b7-0d8bd448720d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "92f58aa8-ec7c-43e4-a530-6284e9e83c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d82771-28d1-4680-bdae-895a94b14c9b",
        "cursor": {
          "ref": "d7329fb1-a944-4cad-a3c8-53e4e59428ae",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "aeb58089-27db-41d9-bd41-aeeabf16016b"
        },
        "item": {
          "id": "c0d82771-28d1-4680-bdae-895a94b14c9b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "75a6881e-925d-4807-b166-f48113f95353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219772af-8557-49fa-a718-ee8711f83249",
        "cursor": {
          "ref": "948daa3f-2975-43a5-8ef6-6fcf69dffe98",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c564bbe4-2567-4815-9867-bb4e99c4d62a"
        },
        "item": {
          "id": "219772af-8557-49fa-a718-ee8711f83249",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1e20a08c-be2d-4053-93ec-d7b4801e9830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4707be-825b-4fc6-b09e-2f36c3446176",
        "cursor": {
          "ref": "ddb1264e-e1a7-41f8-ad6c-c2b12f5b48d6",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "baae586f-5cc7-466c-bd39-6e07719abd05"
        },
        "item": {
          "id": "1e4707be-825b-4fc6-b09e-2f36c3446176",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7dfe0225-cc77-4295-bcef-76f64f0db5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0d9ca6-249b-454f-9a77-62fb4923a930",
        "cursor": {
          "ref": "37b5702b-f74b-4fdc-af51-7076acfb0f34",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a3d31089-ce9e-44c2-abe7-4fc422f96803"
        },
        "item": {
          "id": "6b0d9ca6-249b-454f-9a77-62fb4923a930",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "faa3ca9a-cf00-481f-8a54-3f7d985d1463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ea7a2e-e904-43c6-a4b3-d30a82acc4f0",
        "cursor": {
          "ref": "3991da49-c688-4a87-9bc3-febdca2db221",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fcdabfe9-0d61-4720-9288-66437824c944"
        },
        "item": {
          "id": "b1ea7a2e-e904-43c6-a4b3-d30a82acc4f0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "00f3ec12-17a6-41c2-95cd-a9159f3449b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde4a83f-1765-4456-8e28-011cafe0ed98",
        "cursor": {
          "ref": "25d76ee0-793b-426b-94d1-99cdceea4261",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "263140d5-a451-4785-a797-70e8a0562e19"
        },
        "item": {
          "id": "dde4a83f-1765-4456-8e28-011cafe0ed98",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6e00417a-fe11-4d63-8353-15121500a7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f5cd18-40e9-4939-8e11-ca165eedff68",
        "cursor": {
          "ref": "a6a3134d-6be8-49ad-ac96-dc433006116c",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e21bd6ab-dd72-4483-abb0-d93a208dfd98"
        },
        "item": {
          "id": "d6f5cd18-40e9-4939-8e11-ca165eedff68",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f16347c7-5348-49af-b105-79739f466a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03952ab7-af0e-4ee4-868a-16493a147c84",
        "cursor": {
          "ref": "bd231157-3048-4bd6-b840-aaa2c9b37126",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fb116dfa-bf0e-4cc0-8c83-5f1e21349ced"
        },
        "item": {
          "id": "03952ab7-af0e-4ee4-868a-16493a147c84",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6da1d2c7-5723-42cc-b9e9-ea53879dc812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e488586-dcea-4dd0-be14-6b3f00aeadae",
        "cursor": {
          "ref": "9076d884-d1cf-4dfb-a700-94d606ce3b35",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3525ac2b-73b9-4d37-8ac7-49c106501c6f"
        },
        "item": {
          "id": "9e488586-dcea-4dd0-be14-6b3f00aeadae",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bd9f8934-debf-467f-af18-42faac4c17ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f7ba78-cf9e-43f5-a8b0-290ebf00d005",
        "cursor": {
          "ref": "5b0177e6-7616-4f4a-994f-3df8f4bdde56",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3ee74d65-5d1d-4449-bb7c-b352c1c0d55d"
        },
        "item": {
          "id": "93f7ba78-cf9e-43f5-a8b0-290ebf00d005",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d56ea9fe-4777-43c6-a0bc-ffa6a5e127e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa6fa54-51d2-403f-b3ed-ff40854e4fb1",
        "cursor": {
          "ref": "3f3c00a3-2510-4a17-8a2c-68b84e49cf33",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0d9edeb7-1a3c-4e20-bab3-650a444b7e4b"
        },
        "item": {
          "id": "1aa6fa54-51d2-403f-b3ed-ff40854e4fb1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e02b55cd-10e1-482c-9d58-60d6827af599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3295de7d-3c83-4817-8403-a959f8df9543",
        "cursor": {
          "ref": "fb834dbe-259d-4502-b1ad-abca6de5eb40",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9364af5c-0a23-4f4a-81cb-c74ea821d460"
        },
        "item": {
          "id": "3295de7d-3c83-4817-8403-a959f8df9543",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e782d5f7-c8bd-4046-afa6-4933439f1f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a8e096-8520-4160-b9d1-a4f751d3bedf",
        "cursor": {
          "ref": "4a126626-0f8b-4e76-9c67-7ea26a46361b",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8d3a4ca1-98b7-405f-945b-d062c5074d59"
        },
        "item": {
          "id": "61a8e096-8520-4160-b9d1-a4f751d3bedf",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e73ca610-ba84-487f-8618-860c3795cbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7050b0-f8d2-4fa0-86b6-079bf6f12daf",
        "cursor": {
          "ref": "26f4ef44-9a0b-4b4f-b893-a1264ee4ae23",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6e20fe68-a6c9-4aac-ad55-ae0ad97fb6bb"
        },
        "item": {
          "id": "7f7050b0-f8d2-4fa0-86b6-079bf6f12daf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "54ac7413-2448-4382-838d-e6aa00b84e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd879c06-1379-4f45-bf63-03d02db3a45d",
        "cursor": {
          "ref": "f1e79898-e633-42af-86be-9aa20acb89d2",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f95ee480-4d5b-48d4-ba75-760b632d6e97"
        },
        "item": {
          "id": "fd879c06-1379-4f45-bf63-03d02db3a45d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2d08bac2-291e-401f-8d51-f4660381a9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab0e120-8fe7-4371-ba3b-98a0009f63ba",
        "cursor": {
          "ref": "db86328d-7e85-4a27-bb46-6d994ac0206c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b5b8f72d-30f2-4fa4-a332-a7bb517baeba"
        },
        "item": {
          "id": "5ab0e120-8fe7-4371-ba3b-98a0009f63ba",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "942ba71d-620d-4c15-8d92-6f181008f83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adeac1a2-4079-4d19-9b48-6f4181fde45e",
        "cursor": {
          "ref": "91a78a1a-157c-4458-9cf6-48e562c1491f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0b6b1765-2fde-4b20-833e-af91e0b33e16"
        },
        "item": {
          "id": "adeac1a2-4079-4d19-9b48-6f4181fde45e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "95669cfd-4eab-4ac3-9c8a-4daa6a16d8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c83e72b-ecd3-4790-a978-773c73b0646d",
        "cursor": {
          "ref": "bca563e3-dee2-449e-a86a-954868e8886b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "41fa5c22-a931-4c4c-acca-cd69e864ff40"
        },
        "item": {
          "id": "2c83e72b-ecd3-4790-a978-773c73b0646d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1604a9e7-ddbc-47c5-aa75-0575e48bf0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f525462-0148-43a1-a47d-9f61273a8242",
        "cursor": {
          "ref": "a332329c-a300-426e-9ecd-0e0916c832fc",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "91a66374-2392-452b-a9f9-9b0b8308b35c"
        },
        "item": {
          "id": "3f525462-0148-43a1-a47d-9f61273a8242",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "64bfaf5e-2a4b-4771-a05a-50146501599d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c65e7e-8e04-4725-b704-31f7319ba26a",
        "cursor": {
          "ref": "4d0c8f5f-d4b4-4801-b461-7c047d63f33a",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "51409bca-962c-4c8e-907d-2eb450440e61"
        },
        "item": {
          "id": "b5c65e7e-8e04-4725-b704-31f7319ba26a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "67ea7a88-2aea-41e4-8c50-8ace4e310c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4007b3-e9ce-4f7c-acdd-0d7b7cf1f0a0",
        "cursor": {
          "ref": "39e387c0-4f26-4d7f-bb38-fb6a7c73979b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ee76dd9c-8718-48f5-9b8f-cd8ac7bb6bd2"
        },
        "item": {
          "id": "ed4007b3-e9ce-4f7c-acdd-0d7b7cf1f0a0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f6cc4449-7c15-43c4-bef0-84f84a78a7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c225eb-b7e4-47b4-a357-e8c1b7ee4f01",
        "cursor": {
          "ref": "459125ef-7cb8-45b7-b32f-6258fbf6a3e2",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "227a8c5d-9f05-4302-8a67-08b979bdf0e9"
        },
        "item": {
          "id": "d1c225eb-b7e4-47b4-a357-e8c1b7ee4f01",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "77516b2d-d0ab-4d0d-a48c-23217f4a16ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21fb11e-0687-405e-b470-36723a11a856",
        "cursor": {
          "ref": "5f203d3e-10cd-4b95-9b0f-67f0d79fb602",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4f4f16ba-3969-47cb-b4ac-0bc8b5fa74a2"
        },
        "item": {
          "id": "b21fb11e-0687-405e-b470-36723a11a856",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5be7afca-95b9-4895-b99c-edcd75db4bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8718eb6f-f0c2-413f-90d3-d8bc8baad5e8",
        "cursor": {
          "ref": "13e1c5e9-3b0c-4823-8959-f10dfca8dd10",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1dc803e0-116d-4dcc-bccb-18bfac5b50f1"
        },
        "item": {
          "id": "8718eb6f-f0c2-413f-90d3-d8bc8baad5e8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a336933b-a50a-4fa5-aae5-ab552954014a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0454fd69-c185-4f36-9f3c-54efb6f84d18",
        "cursor": {
          "ref": "0aa87ec4-bd47-4c15-910a-a7d0d868e1ea",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "97508065-6264-4347-9690-4cec7363e67a"
        },
        "item": {
          "id": "0454fd69-c185-4f36-9f3c-54efb6f84d18",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "aa0f5022-c8fb-4dcc-88af-bad709ae393e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6715e55e-8554-4905-aeed-cacea8f70c40",
        "cursor": {
          "ref": "1194e39e-2633-4960-81db-8c6b78a54741",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "17d85a7d-4e45-4179-8568-97e1ba33101b"
        },
        "item": {
          "id": "6715e55e-8554-4905-aeed-cacea8f70c40",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "979c450f-ef07-40e7-81ab-406f74de5d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23617c7b-2795-4f9e-bc71-87b8bcd300bc",
        "cursor": {
          "ref": "4a5deafc-9ce7-474a-9036-5577b4d77c92",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "49ea85c1-75a1-4ddc-9359-620367f10ff0"
        },
        "item": {
          "id": "23617c7b-2795-4f9e-bc71-87b8bcd300bc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d67614bd-9963-4876-af26-c107cb5e0136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed99a12-98eb-4482-a24c-332ef4ec287f",
        "cursor": {
          "ref": "52685c41-cc1a-4873-b23e-d6780ecf4063",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "35e0c719-6800-484a-9958-a2f2e2a6ec08"
        },
        "item": {
          "id": "bed99a12-98eb-4482-a24c-332ef4ec287f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3158b8b3-232c-42f8-a858-db8904c978ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dcabf3-5421-414d-a570-0d0847bc74d0",
        "cursor": {
          "ref": "71dffb49-1f94-4bce-b29b-fcaf03907771",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "68255a1a-3ee9-49e6-b4d3-c2cb17a46409"
        },
        "item": {
          "id": "83dcabf3-5421-414d-a570-0d0847bc74d0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "663bfa50-677e-4b51-9fce-78665e7f85b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb06ae08-9eb7-4074-88fe-618de9b5e215",
        "cursor": {
          "ref": "f826e305-d978-4c5a-a907-686aa13011ba",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5321761b-d1a4-48c7-95c0-10050f27bfcc"
        },
        "item": {
          "id": "bb06ae08-9eb7-4074-88fe-618de9b5e215",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "53340929-9938-4bb0-988d-3352a3bfd4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4feb90-8785-4820-9ad0-b2e65f193a4c",
        "cursor": {
          "ref": "feeba4de-b07f-4c42-a380-9a03a0831ebb",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "166fd303-e62a-4fc8-9e7c-e26d53a88364"
        },
        "item": {
          "id": "0d4feb90-8785-4820-9ad0-b2e65f193a4c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c5c8edb1-be6c-43f9-9ec3-fcac8bf4df14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de040af9-eab4-4ff4-8e62-37cf4660dd1e",
        "cursor": {
          "ref": "1ef3d169-0161-451e-bfd0-7b4c941faaa9",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5d270f9d-3c0c-45c2-8d1b-d3f7523d9cf0"
        },
        "item": {
          "id": "de040af9-eab4-4ff4-8e62-37cf4660dd1e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "dd8d2893-ab69-4710-8bc1-e670d2abd4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0675fd6d-ad1b-4971-8238-9e7c43327c4a",
        "cursor": {
          "ref": "05e34fbf-b730-40a1-bfe6-82b56a6c82e8",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "374961aa-46c1-411f-a1db-d8d08cf81572"
        },
        "item": {
          "id": "0675fd6d-ad1b-4971-8238-9e7c43327c4a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5fd6a403-a4cf-4349-951a-5f138640270e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10c54b0-e3a9-421f-996e-f80ca497fe16",
        "cursor": {
          "ref": "e0059850-6bad-46e2-9fe1-e888e3086cd8",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a04df7b4-9631-4aca-b58e-37d7e71a599f"
        },
        "item": {
          "id": "c10c54b0-e3a9-421f-996e-f80ca497fe16",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "22636fdf-80f3-49e0-b225-84d975984ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190c4e93-cf95-4f23-b9c3-e1c0526053aa",
        "cursor": {
          "ref": "959d1e5c-b19e-4980-b6e2-97f8b55b2737",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "178ecd22-f325-4e75-bb51-92074bed1347"
        },
        "item": {
          "id": "190c4e93-cf95-4f23-b9c3-e1c0526053aa",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5c224567-a46e-4061-a0bd-1d96dd47a5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d9124f-5239-4058-b0dc-29664f8b4bad",
        "cursor": {
          "ref": "f420eb70-0168-4c07-9c03-dce0234c8f96",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "525a77b7-0f6e-48c5-9c03-02cf9cc61282"
        },
        "item": {
          "id": "d3d9124f-5239-4058-b0dc-29664f8b4bad",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "46c42cb2-31ab-43ce-89aa-20961445dc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8f910c-108f-42e9-bea0-653523ce468f",
        "cursor": {
          "ref": "e42f22c3-6a6f-409a-b53f-8c5949e43ecb",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2fa8365d-3b5c-4617-ae1a-2ad10a944c14"
        },
        "item": {
          "id": "4c8f910c-108f-42e9-bea0-653523ce468f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "55ab1161-58df-4a94-949a-0b2d2186605c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f1cb9b-d061-4467-804d-9a3a0eee5de4",
        "cursor": {
          "ref": "0daf0eeb-337a-4089-862b-75aedbc519a6",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "794d5eef-3ed3-4cd1-98e4-a86f7518c040"
        },
        "item": {
          "id": "37f1cb9b-d061-4467-804d-9a3a0eee5de4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7b7555de-2914-4f41-a184-b1b2be2f950e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51dec231-847e-4b37-a8b9-28162fd0063e",
        "cursor": {
          "ref": "693b4d53-5bdc-43ba-8d1c-48b9f20da91c",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dbc26cf7-a41d-4867-814a-49401b88487e"
        },
        "item": {
          "id": "51dec231-847e-4b37-a8b9-28162fd0063e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3150d674-7a0d-4819-a715-ba15f456f475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c501744-d495-4c92-9c07-9d24cfc87e50",
        "cursor": {
          "ref": "93404448-e52c-4f11-a8a8-8cf6965f3457",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "08dbddb7-2646-4eba-b595-639d5655f98e"
        },
        "item": {
          "id": "1c501744-d495-4c92-9c07-9d24cfc87e50",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f8578ad5-0730-4d4d-b4c8-102d5e5bbe56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d8145f-0660-407c-ab22-b96b27ccbd5a",
        "cursor": {
          "ref": "4b075bf6-744d-4671-998e-2e7181905ee9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "513bc090-0877-483f-9455-9c1049f06fd9"
        },
        "item": {
          "id": "d4d8145f-0660-407c-ab22-b96b27ccbd5a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "051dc6c3-81d9-4b43-9aef-38c0b312814b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b49387-e338-4bdd-b67f-9b731e6bfb2e",
        "cursor": {
          "ref": "d12c81a7-3574-43b2-86cb-76285e88c9b1",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bfbc930c-cadb-4346-9d5b-773a18edbfee"
        },
        "item": {
          "id": "60b49387-e338-4bdd-b67f-9b731e6bfb2e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7b4ebd3f-70f2-4f9a-9b04-b4fc84365635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37fa4a3-837c-4586-8eb4-4d4107212414",
        "cursor": {
          "ref": "c9384cf3-f3bc-48c0-974c-febbca6d4bfa",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5d8682d6-9223-457c-ae25-7982458c55c0"
        },
        "item": {
          "id": "f37fa4a3-837c-4586-8eb4-4d4107212414",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2a4dbd8d-34f5-4bf5-9047-d045bfc4b46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd39cef-29c6-44ab-8e08-a133788bf78c",
        "cursor": {
          "ref": "bb686a71-b183-460c-9625-c2cadb1ba6f4",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "270eb4e3-c6a9-4d3d-b3fc-d30eb9d81b16"
        },
        "item": {
          "id": "fcd39cef-29c6-44ab-8e08-a133788bf78c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ae37dbb1-8eec-4765-9e7f-e4538ffbab43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eceede86-aecd-4d00-876e-c2fac96e193a",
        "cursor": {
          "ref": "e7075a9f-74a3-43b0-be3a-ba760e8ec3c8",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d93e86fb-f26c-4380-9d33-63b76dde086c"
        },
        "item": {
          "id": "eceede86-aecd-4d00-876e-c2fac96e193a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "216550b1-5b7e-49d3-a199-ba2ccc089aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727c23f0-bcd2-4f7b-bf6f-f03fd25816bd",
        "cursor": {
          "ref": "dfba1533-38b7-4e1a-9f63-849239d07a20",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "553277e2-85d5-48e1-86cf-b378a823ae1b"
        },
        "item": {
          "id": "727c23f0-bcd2-4f7b-bf6f-f03fd25816bd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fdac8b77-261b-4545-84f3-b50bbe314936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe327f9-f0d3-44d7-992f-134a04a337d0",
        "cursor": {
          "ref": "22efc214-c107-4de1-83ad-d9eca99cc017",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c94be0cd-fb5f-477d-a21a-c3645859eb20"
        },
        "item": {
          "id": "ebe327f9-f0d3-44d7-992f-134a04a337d0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fc5a6edb-4700-44fa-851a-e80920355739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f79b6f6-dfd2-48bd-9427-5da56f3dbf0e",
        "cursor": {
          "ref": "998f52cc-eef3-4346-878e-b01d280e44e9",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c0fb2aac-9175-4a15-8041-17ff1aaf1e1e"
        },
        "item": {
          "id": "0f79b6f6-dfd2-48bd-9427-5da56f3dbf0e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "78b91337-cbba-4b47-884f-82e41982cdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a0df7d-cec5-43b7-aca1-5731ea95eb60",
        "cursor": {
          "ref": "d1f8eecd-c5b9-47d9-be71-4ff81eb239b5",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "eedeff58-a819-4c10-bae5-ac01a9b2c6a8"
        },
        "item": {
          "id": "98a0df7d-cec5-43b7-aca1-5731ea95eb60",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e1654b46-4117-4e34-948d-e928d66e3660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c26d167-d3df-4c6c-8124-9484300ef013",
        "cursor": {
          "ref": "0b97a031-cec8-4cb5-8482-561f5feb4729",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a2420f8e-2f6d-4e6e-8559-66e56d94bd21"
        },
        "item": {
          "id": "0c26d167-d3df-4c6c-8124-9484300ef013",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7b3d93fa-d4cf-4634-869a-968dd69f0029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b026329-4d08-49ce-8f17-12ad93090e07",
        "cursor": {
          "ref": "2ed2f68c-5a4b-44ff-97b3-a904fb3d76ce",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3de5b929-2843-423a-8526-5938d7843ae7"
        },
        "item": {
          "id": "3b026329-4d08-49ce-8f17-12ad93090e07",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a4495b69-bece-42b3-885f-bf4e3c8d2689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ab146f-8920-4789-85fd-4ea086805c46",
        "cursor": {
          "ref": "f0b892c3-5927-4e4e-a567-cfb094b04ed5",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "762c067a-184a-4d95-806b-14365ebaa20a"
        },
        "item": {
          "id": "d4ab146f-8920-4789-85fd-4ea086805c46",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "86dbe1f8-93d5-4422-94ad-1b2bd353b8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573205eb-99a8-447d-9647-c16fea867eb8",
        "cursor": {
          "ref": "2254003b-404e-4e83-80df-5e29602553a1",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5f417aa9-cd69-4bb9-bedc-a53f612dfe6d"
        },
        "item": {
          "id": "573205eb-99a8-447d-9647-c16fea867eb8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "520bffff-0a0f-4c8d-a217-524f0a00dc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76745e4b-219d-432e-b3fa-e3a8a4842a2a",
        "cursor": {
          "ref": "be69de92-1ba8-46f5-9721-740aba447374",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0a48b947-1169-4d48-9019-d05e190b520e"
        },
        "item": {
          "id": "76745e4b-219d-432e-b3fa-e3a8a4842a2a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c166b59a-9c97-4317-a258-aa2c857461c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f84cc3-0196-41e0-aeb3-b55b4f765a95",
        "cursor": {
          "ref": "553e2e23-6219-4034-b2e9-0516c3f34513",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "76da923c-305c-4b9e-84b7-65cb1c3bf402"
        },
        "item": {
          "id": "45f84cc3-0196-41e0-aeb3-b55b4f765a95",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "98784731-8538-4732-9059-132ef519f2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc97181-4362-48a0-b867-02d96cc60979",
        "cursor": {
          "ref": "943c0829-5756-4501-9e59-b83f151da72e",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d8164a97-eed4-46b4-8676-900fc457e1c6"
        },
        "item": {
          "id": "1cc97181-4362-48a0-b867-02d96cc60979",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3ca9949c-c017-4585-9424-b45417b57f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb74d91-4ee1-4082-b59e-d099822b52b0",
        "cursor": {
          "ref": "a7b8751c-c6cb-4641-8898-568389a7d4f2",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "72869308-d429-4b00-b378-7ff5d7204042"
        },
        "item": {
          "id": "ddb74d91-4ee1-4082-b59e-d099822b52b0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d6ed5239-0ecf-4e9c-a2f4-4f0951b6446d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846f94ec-6273-4a83-9f67-4b75976817fd",
        "cursor": {
          "ref": "13a5e00f-e696-4f32-bb3c-0b0193e291d8",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "54b05012-4eba-45fa-826f-cc7adfc8a420"
        },
        "item": {
          "id": "846f94ec-6273-4a83-9f67-4b75976817fd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0daf56fe-3a38-4b14-9b50-223ee5d110ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81e07f5-85e4-4b1c-8e45-14ae40b4a1d0",
        "cursor": {
          "ref": "1a231a09-2bc6-4a65-b986-e29a1c561b86",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cbbf6ea0-7bfd-4150-9c4e-65a2caddbdab"
        },
        "item": {
          "id": "f81e07f5-85e4-4b1c-8e45-14ae40b4a1d0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "06c3804d-7226-4036-9e92-ed1a53ed1a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c2a09d-2c8a-4d73-8acc-a832d7266175",
        "cursor": {
          "ref": "6decd268-08d4-4d9d-9f7e-483ec0749dbe",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "509469e5-65ba-4ccf-a8d9-632b028b015c"
        },
        "item": {
          "id": "f0c2a09d-2c8a-4d73-8acc-a832d7266175",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "069b73f1-908c-451f-a373-dcc971c15aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f56592c-1378-4d39-b1fc-2fc62fea5420",
        "cursor": {
          "ref": "a4605fee-2218-4611-b8ff-6aaa6ca21efd",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c7b70478-79a6-4fbb-b537-08a12c668a62"
        },
        "item": {
          "id": "1f56592c-1378-4d39-b1fc-2fc62fea5420",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cac0280d-2861-4c1b-b621-4ffeb8f12d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b837cb97-0fb8-484a-aadf-1a8bd8f2c012",
        "cursor": {
          "ref": "6e4d7efc-6e91-4f4c-b856-1105f2132732",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "feedd007-88e8-48d9-96e8-cd1f8310e26d"
        },
        "item": {
          "id": "b837cb97-0fb8-484a-aadf-1a8bd8f2c012",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0bc68f5a-f05c-4c25-a061-a22534b42fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53493588-c0f9-4c31-ab66-b65bae7960d7",
        "cursor": {
          "ref": "086283f7-af86-448f-b9a3-b4b3d41ba842",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f4f0bd2d-0674-4fd6-8499-6c069e74778c"
        },
        "item": {
          "id": "53493588-c0f9-4c31-ab66-b65bae7960d7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8cfbf3b8-74ce-44d4-8eed-43a522f503f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea31a1b-5825-4fcb-8d08-f796961704b2",
        "cursor": {
          "ref": "4ad5911a-c86a-48b1-a1ca-d1f073ec3bb6",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f5a20b3c-19ad-49f1-9558-ce7a4da6afa8"
        },
        "item": {
          "id": "7ea31a1b-5825-4fcb-8d08-f796961704b2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4a25567f-d38a-4833-80ce-17432b7b2bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f013f1-d74e-4c5f-9f2d-1de466697220",
        "cursor": {
          "ref": "3e2f4617-73e5-41eb-85d3-bdd97b615462",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9a042738-6361-42cf-8052-c2e43bf8139a"
        },
        "item": {
          "id": "52f013f1-d74e-4c5f-9f2d-1de466697220",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d141b369-0bb5-468a-a43a-2cca979662fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe6dd56-1008-4342-9b1e-be42d552f29f",
        "cursor": {
          "ref": "84f71231-c375-44fd-9637-532045de9d8f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c6e45af3-46f9-4b7d-8f6b-d1e5a625a3ec"
        },
        "item": {
          "id": "cfe6dd56-1008-4342-9b1e-be42d552f29f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b9d5a76c-f842-4b82-80e2-25e0122ecb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1abc892-0b99-47b2-8fce-021112dd6feb",
        "cursor": {
          "ref": "f68e8ad9-d146-485f-b817-e12467532668",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6719d4ff-b0e8-4cf1-88ba-72c307d41e22"
        },
        "item": {
          "id": "f1abc892-0b99-47b2-8fce-021112dd6feb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "efd8c323-d672-4747-8352-620dcb7efdb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f095bd9-3648-42b1-8fc8-0e2dc6250a72",
        "cursor": {
          "ref": "15b18dba-bb08-422c-bcb5-3c8ef1b38674",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "acb9db23-3b3a-466c-b34b-8f49d669bf91"
        },
        "item": {
          "id": "0f095bd9-3648-42b1-8fc8-0e2dc6250a72",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7633cada-cc50-4731-97f5-c4916ad25c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe45338-cbeb-4838-b9cc-5a1a7d97465d",
        "cursor": {
          "ref": "447bf966-e69b-4b8b-b116-43cab9eb8ff2",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d2b02637-6576-4ede-b681-1c6e268673c9"
        },
        "item": {
          "id": "cfe45338-cbeb-4838-b9cc-5a1a7d97465d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f8a95db4-962d-4f35-88fe-ba1b5f32540c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9014c3eb-6a33-466a-b54b-990fdf5137c2",
        "cursor": {
          "ref": "9e4e3893-518f-4487-abab-4728504e430e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bbae8ff9-cd45-4628-8884-5cdc6ec8d04e"
        },
        "item": {
          "id": "9014c3eb-6a33-466a-b54b-990fdf5137c2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c8ead9c6-acc5-45e0-ba90-4b16fb2ab32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7822bb2c-ea5a-4e9d-88db-36c6d675c9ce",
        "cursor": {
          "ref": "da2055a2-d75f-4b9f-be3a-31585fd004bf",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8b30b3fc-ac70-4e9e-921a-2ef9eafbd48d"
        },
        "item": {
          "id": "7822bb2c-ea5a-4e9d-88db-36c6d675c9ce",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c003e729-4617-4acf-818c-ab8a22d023a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bd8589-337b-4e5e-9714-ed6a73d92a09",
        "cursor": {
          "ref": "716c9532-1269-4411-b8ee-750b95673792",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b194b79c-7b26-44c7-8fea-aa995204d349"
        },
        "item": {
          "id": "90bd8589-337b-4e5e-9714-ed6a73d92a09",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0730f156-3dbc-4213-8ff9-c510795197e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bf659c-aeb8-471a-8d0d-dbef36f1a209",
        "cursor": {
          "ref": "a2d556e5-838c-4f5c-83a7-08469d5961da",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "78a53b89-8a3c-4e33-b0ab-80fdcfbed9de"
        },
        "item": {
          "id": "15bf659c-aeb8-471a-8d0d-dbef36f1a209",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b2793553-52ab-4805-ac52-b3fdd65a71b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58903bab-360e-40f8-b24c-760ce3675fe8",
        "cursor": {
          "ref": "a0a97a38-506c-4dd5-9977-12fee66db497",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4e0e0d89-22d4-423e-9ccc-6abd0a7eae39"
        },
        "item": {
          "id": "58903bab-360e-40f8-b24c-760ce3675fe8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "196306e5-bc73-4619-9dd6-d3cdcfa8157d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857ec194-d6db-4049-9be2-a573a46c19c0",
        "cursor": {
          "ref": "49e595bf-b5c4-4b4a-8a49-c30f683990e2",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4bff2338-b1fa-4013-9c2f-3f7169f322ed"
        },
        "item": {
          "id": "857ec194-d6db-4049-9be2-a573a46c19c0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "eee3b4bd-37de-4899-b94f-8ba34464812f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb2a658-5112-4187-ab91-0e07ccd016d8",
        "cursor": {
          "ref": "7547d858-0bb6-4961-93cd-f50eb7a24ce1",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d1981417-5c97-462e-8c89-f9ecb9dfd4af"
        },
        "item": {
          "id": "3cb2a658-5112-4187-ab91-0e07ccd016d8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8abf17c4-49d0-4a0d-9333-f47c8db6b138",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b67f878-1752-4f4f-bbef-be04399ea266",
        "cursor": {
          "ref": "8302abea-7524-49d7-9281-19707bfe3b62",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a527f397-56b8-4507-9829-977df700fd76"
        },
        "item": {
          "id": "4b67f878-1752-4f4f-bbef-be04399ea266",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "26715aee-9723-448d-bddc-cb1a1bd08be2",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f640f746-ff22-42e8-a53e-dbe11dcf110e",
        "cursor": {
          "ref": "af924fb0-a495-4851-99bc-25991ca0db6a",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b64c7585-1542-41b0-90b8-a9a5993f8e9f"
        },
        "item": {
          "id": "f640f746-ff22-42e8-a53e-dbe11dcf110e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0ea1fea2-1ad6-457b-a1cb-22646fb41f91",
          "status": "OK",
          "code": 200,
          "responseTime": 2367,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf02368-eda8-40ac-b2b8-82b62b79dc5d",
        "cursor": {
          "ref": "ecee139d-8197-4dfc-9ec7-c8a726061a82",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "42d53208-ebce-40d1-9053-c5923aa6f052"
        },
        "item": {
          "id": "8cf02368-eda8-40ac-b2b8-82b62b79dc5d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2d5ea4c8-d18c-4cc6-8d95-6aa8ae6fa20d",
          "status": "OK",
          "code": 200,
          "responseTime": 2242,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "276415bd-ec12-4563-a0d4-a884138786cf",
        "cursor": {
          "ref": "a0c53dfd-36d1-4f80-98b3-d1139f4afbdb",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2790f3c0-faf3-45ce-b3d3-93ca6b8043f0"
        },
        "item": {
          "id": "276415bd-ec12-4563-a0d4-a884138786cf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "889b689c-f6a1-4e19-956a-ffc266770174",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276415bd-ec12-4563-a0d4-a884138786cf",
        "cursor": {
          "ref": "a0c53dfd-36d1-4f80-98b3-d1139f4afbdb",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2790f3c0-faf3-45ce-b3d3-93ca6b8043f0"
        },
        "item": {
          "id": "276415bd-ec12-4563-a0d4-a884138786cf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "889b689c-f6a1-4e19-956a-ffc266770174",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ce7cc7-be31-4c41-acab-5518a1e79698",
        "cursor": {
          "ref": "e88be908-0370-42f1-a8f5-3f44c5f1ded9",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1c4f67cc-6b8d-43a8-b530-f8a7d8229ca0"
        },
        "item": {
          "id": "65ce7cc7-be31-4c41-acab-5518a1e79698",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "79e8fa8f-47ec-41f7-bbc1-3ab48256cc1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc6f0fd-d8b1-4052-a84a-ae92b5a60b2d",
        "cursor": {
          "ref": "b0dff59d-3348-4dc7-be27-d345c12a0bcc",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7acc9b72-8b30-48f5-908c-89d65ea475ed"
        },
        "item": {
          "id": "3dc6f0fd-d8b1-4052-a84a-ae92b5a60b2d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1800e911-04c1-4f27-b243-a7e4d518d827",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}