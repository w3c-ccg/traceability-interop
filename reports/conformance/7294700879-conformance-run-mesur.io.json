{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "afbce4fe-b752-462a-af16-878f045715ac",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b5324b17-df6b-4365-84bc-4f99a6e85edd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0cbe6be1-7bc7-4e19-a9ea-c702fe9ff0be",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "214b173c-32e6-480f-968e-583e69581a63"
                }
              }
            ]
          },
          {
            "id": "7d11aeeb-1892-4306-a899-657c02af9e47",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aa0bd2e7-79c1-4397-b025-c6e169efa1a5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "da8a4355-355d-4801-8e26-720680fe0ef1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f9be2a49-e4e0-4270-a038-25ced477b9d3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c94d4a82-9183-4775-9026-a2b84adc0f1c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b86f3124-69b1-47fd-b4bb-b1b1b6118ad1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c60599f-05cf-4dcc-ad3a-23ba416f51c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75a57164-b3f1-4af3-b49f-67d4aebfd228"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c28bb446-2b18-40fc-8c34-76644ffdb203",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13b506e5-fe02-4719-88a5-6d8e997aba58"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1e648c5c-7d0e-4ab6-ae4c-06b89f371259",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f170894-27a7-43d8-a39b-0b644a0a3400"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a558fbb-518c-4e66-880f-a08e0135ba2c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ca74439c-4b4d-483e-b61d-c4cdd77cc08d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6fff6f1-4656-4311-9c9e-6afc3bf90da0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff29d92a-712a-4a49-8a1e-c9ea3c6beb6f"
            }
          }
        ]
      },
      {
        "id": "09dfd93a-0142-4dbe-9e37-c6946e409806",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "804e4f7e-ca22-4a1f-9cc8-98644bd56a60",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbe57956-7152-48cd-adc3-b5d6959ef278",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b412218b-82e7-4f0a-b738-49af7b6deea2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6335c71-f2fb-4807-9d76-e26106dc8208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1eae1a0-c595-46ae-ae32-7be6176265f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8370ebeb-cdea-4048-9ca3-275e49a721a9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4b0a24-3572-4ff2-9e39-a886e9f4acc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edca8574-e634-41b3-84af-959217bf4dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c8f090-bdaa-4326-9dce-52febd0505d2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa85737-cf93-49e5-a925-aafe91198ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a42783b-de50-443d-a9fe-3f5fc238da85"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb7d89e9-fac2-41a7-9ad7-2effde2d9d45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb1e8528-27f6-4ede-aef8-92bc5386c2a7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc2ca43-3715-4cab-b1e7-0ddbed43d23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a322a49-5c83-44c4-a0a3-c2fbc1d057ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110c14f0-c060-41a1-be13-eb541de2d261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f5bc4e-d352-4467-b66b-48345431a34b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4ce42590-6eee-4d78-94d0-5965004c64bc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ba9ae51e-815d-4190-aaa9-876816bb9d01",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2e46a5c-82cf-4fcd-abd0-5c45db75a02e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "737d39f9-507d-43ea-80e1-32d4ba8d6516"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1059aad0-9548-4a52-8c8f-2c496b8ccc2b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4680c970-192b-42e6-9084-c4d45cd0b2f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "644b0b9f-0eae-461c-8b99-d7e3610971f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e506b0c3-3ca5-4e2f-925b-a6e1edc3da52"
            }
          }
        ]
      },
      {
        "id": "ab2e579f-4eb9-4341-aa0c-94f628311b13",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "77b0b8f2-7169-4e64-b79e-7acf347eb19c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64f4824b-89d4-4632-a539-9487c4304f85",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6f0b805b-4922-4098-9707-e16d68394aa9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6aa5c3-99b7-4d3a-8a4c-f010d95e2f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8393d3e2-b538-4d61-b2fe-0bfe3af3ae95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645b6c20-9a58-491b-a851-c784d5b1722d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbfb0ee8-c407-418c-bb5b-b549e4096736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986be1bb-4c9a-4375-ba5a-0f5ba6b7b520",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09c303c-1b2c-464a-93d0-2388df8fb41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0833c47d-df62-49da-99ec-c545b16e0a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6661a83-26a0-4c8d-b168-dc1bfbe9c487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d0fa9d4-d84e-4a17-ab9b-46926fb574ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a2b1a5-6677-45b5-aa45-a2c2d309eda3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e87a86-fc43-4e36-a758-6af54d0a9b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c827fc6-e6e5-412c-9fd5-155f9f1aba35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2304ce01-4739-47e6-a219-22ca1f2f7527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfb44c7a-78cf-46a3-9665-fd5407032b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4363a342-7417-4212-978a-50ccbe38c624",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed89270-4e6c-4bdb-b545-1f80cfe673af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e871e96-bdaf-4522-9acc-41abd5f3e397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f47eac9-ee23-42d2-99cd-0cfe5a076145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbf5369a-dcdc-4df2-ab5a-cbddfa28f786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573f4199-d81f-4810-af62-17e83b6e14dd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10d015f-9bd4-46af-bec8-aadaddc7c551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eeb230a-e6fb-4a7f-ab53-404ea70e649d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e410e4ef-61d1-4dfa-b92d-a82dce3a479d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e27976b4-e4fe-418c-b3cd-c259396824e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168acd9f-a69e-4326-ac2b-1b63e9f0e488",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c509a23b-10c0-47ac-9ca9-879c36ba5f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f08bf7b-d7c1-4661-b0e7-b78ecc299657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1faff260-bc67-44ea-afbc-e966ee8c2cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22aa3103-2b90-4c61-a8ab-de1881e2cb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e44d03-bf89-4379-8201-f1796d86dd87",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d6a7b0-9ec3-4970-a946-7a126a8f169e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c76ac7-223a-4700-91a8-172dd3847c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfc6c2f-dcdf-45d6-8818-16d84445ee9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4de3df10-a4b1-4087-9b55-0fe672b484cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0644f14c-092b-4d19-b626-6c04e530736b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2844c9b6-3eee-4e8b-820d-b32c5691a73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5dbf4f-18f7-43b0-8885-1d9cad0b1c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403693a5-cd7b-446d-99da-cf120a3451d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05a6b0a2-0b1e-45be-9012-20534ee2553c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5363fd6-1893-4956-920d-6a0cd3e90628",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f2c730-eef8-49d2-8077-52f371f3e143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2600c378-6980-4a4f-9da8-fdd2da17b522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25648242-df3b-4706-9a79-9706c855af72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a56fa4f7-b333-46c3-b96e-d17c48989665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4614f064-9435-482f-b3d2-346d9fe3c64f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd72acee-fffd-4cdc-ae92-5352931260d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274f05c5-64c2-430e-9876-e1f7e93db828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dd6256-0985-451b-bff9-9c3449cfbe3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53594d16-769a-4984-9197-dcf825553e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6213789d-c0b2-477c-928f-ffd52d954e9f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba59118-dddb-4f44-b1c5-bce7adf3c395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa79a89-f2a7-43d7-a57a-01fda45b38e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e5a286-bbc2-4cb7-bd17-08ec871dc2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0c37369-7f0d-4ae1-8c4b-e1873b25bb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edd44e4-d670-4e38-9645-633c1b7cece0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512d14b5-3086-42b4-a023-6bc5eeea6631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c4e46b-38d0-41e2-8c7e-ac7eb43940be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756be53d-dc5f-4b1b-85f3-bc16a1930294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5dfe0eb-dcd3-4c9b-bef9-0330b4d3a0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b81d63-5d7d-49eb-878f-93312b06143e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92946e5b-22e6-4c6a-80d0-ab8b15aa2202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9afb6b-2347-4603-ad1e-f0ed5b0b0917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7afa6d-128d-418f-bbdd-287232c4c481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16bf10c5-59af-44d2-b25c-553aef738850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba14d27-92af-45b7-a40c-7b3d8621d05f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf34ddd-967b-4214-8967-3f51208e3082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c89dd2c-46de-440c-bcb3-dcd5c3a504fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f11afa-2594-4c1e-9d4e-42b9ee7f5ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "727fc65f-3c36-4d63-b132-027d259d1d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5153c8b-e3e2-4950-be0a-33a44c454730",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee87637c-ac04-45fe-af15-8bf67a59db0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17d09f4-5806-4c89-a3d8-1bfaabb31a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f60a78-abbe-4a0e-aa41-622dba180927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daa6181b-0d25-49ec-978f-be86a4d59a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d57ae87-e749-469d-ae17-ce79c03a9563",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ae9b74-3224-4698-8134-c761480684a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1153aada-92e9-4dbd-8e7b-bb14cc3c7252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de10179e-2053-44fb-a5e4-469db9458f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b38aa44d-2b76-4c26-9907-aa273eb65579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dd235a-728a-4dd2-bf3a-77ada1977587",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96586d3b-bf2f-43a5-b335-09785b518e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9a7918-a5b0-46a6-bee9-a5ae9ba415e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94245391-1b12-4119-9fb7-f9e57a9a2d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ef2be64-3232-4b41-81e0-9ae43454069c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b54f66-98be-40d1-9bfd-d065b9b2c4ca",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9e2f7e-9419-4388-82eb-ffa5d3ea7924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0578122d-6be0-4f35-a54d-9674d35a9897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebb2380-deec-497b-87d6-3b0b50a949ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2c1213-ba7c-4be6-bc7f-d105b0987214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4376517e-8fa2-4813-924c-d1fcacc3c552",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a733578c-e92a-48c5-8815-7bc2cf8252f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "441c8fed-8f02-4959-ab1f-ed87a6107901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e061a04c-4f28-4a00-8c53-b98e65308ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c07b6a2e-a1b6-4b0e-8eb3-2639e823c226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d124f433-1970-4eac-9406-379c15cea729",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6047613-cb2e-4757-acc0-04b5ca1b394d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020d7361-38bd-48d9-8868-166bca744383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d18d83-3e92-40c6-8029-116ccacef882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8daecf0f-6058-484c-bae6-1d18ad717d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42873919-a1ef-4891-99a2-8191067948a5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccb7115-4983-4189-bdd5-3fb49f933c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef74049-76bb-4f4b-9186-c16a4d9716f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d4e8e7-c0c8-4f79-9dfe-c747c3b6b008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f043f64-e38f-4c55-acd1-c2cd10d067ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3333451-c901-44a0-bdd4-7626a3dee5a6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d976282-b008-4896-8f0e-83a3f69112a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a29534-0e97-43e8-9b88-2102751e38c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50930f08-5337-4b61-b8fc-64ea29cccbb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b63f1a5-3dc9-47c6-8f35-cf1890e9038f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ab7e0e-7a8f-4da8-b741-1b96f326767d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac48740-e76d-4333-8917-54feb8c1e1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d116db9-3ce1-40da-9302-d67b3dff6dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf5158f-5a3a-4426-a61a-7dcc6eccecb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3bb6838-8828-4bbc-9316-9fdbbe9f56dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d77cbd6-c73b-4768-acf2-b9b440d174a5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af769b39-6fb9-4879-9385-01e44b1247a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219861b4-bee8-4561-8f16-3d22a79a2b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0f8752-637f-4701-ac3c-5e4cede1f3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad832458-8ef3-438d-bc04-b7b348774836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75040b1a-317d-46c9-bfc5-4509c86ee1fc",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6808388f-5571-47ce-9a40-5514676d5dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebca1dc-ac7b-48e8-8f6b-2fbd179ffda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54856edb-9a5e-4091-85ac-07b04df39b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3628bf4-899d-480c-ae9b-9f7d820e43e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9723f909-924f-4568-9b4c-240a2bb0051f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ef3297-bfcd-45d6-afe1-d553135588f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4796731a-eb22-4e99-98e5-880faeec3858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1158420a-b995-4293-a5d6-de6870d31cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75caed51-7a28-4e8b-bd43-efd198f436ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5689a907-0563-491d-b1cb-5230ac1dfd13",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d4213e-d98f-4fac-b6f4-eff4ffd171d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4abd755a-3c10-4b72-8fe4-8ddee2dc97ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55a0ad7-ed8d-4ab4-8d48-7c34b37f97c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d757566-5a5c-4010-924a-1be932ee6d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ec70c9-c9d8-415f-be8a-ca72a02d2800",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5f183c-561d-4ed3-a2c9-b8c43200a4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17aa8d6-3625-412d-84d9-0ebed85c52d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa88f16-77bb-47a3-a231-87c746f43395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "806ffa9f-e32c-43ca-be1c-4ff1229c9a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca3a63e-a16c-4220-8b40-cb4859836d21",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a55722-d972-4c50-8600-e635d0e552aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0a607d-6097-47fc-ae71-381634cde294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be3de3d-ed35-447b-9597-2111100f72e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "efe9ed6e-aabd-428d-91ce-e79b091180e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a275a5b8-1718-4764-82b7-ea326c11d9dd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c073f7-767e-4035-935f-4267c88c869e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719b1ae8-fefe-4387-a5c3-0e4d9ddd5652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd605d1-6d50-4438-ae76-032f2ac30264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2df947a-4581-413d-9b84-83ba6d02983b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72b9a26-8453-4916-ab1d-1dabeb789328",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b8aff0-63b1-4aae-9a69-c9f83b25a055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1a071d-5d43-41a1-a4c0-e79e12b90786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2578bf-1ec3-478a-96e3-49a3e2722a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "287d981d-5596-42a5-a447-bd286a728519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110978aa-3908-435e-aa34-e954bb01cd26",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24683ad0-c3da-4aa6-a7d3-d2a76d7ca8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d71833-7afa-4205-9ea7-791d1d92f0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9a6fd3-e2d6-4482-8fff-24fa0ae9fee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19f28500-50dd-427b-8f39-0311e720b5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9750d3f-6b03-42d4-ba8b-7291ee210622",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75eee1a2-9e8d-440e-afb7-456865c20f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cd6da6-0949-46a3-9ce0-e11fe15982a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b823973e-067e-4f65-9498-fcf159b3b508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c48f01db-f5c5-42d9-9a49-d70eba6a4dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378e40cd-272b-41e8-bc96-477d9456464f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20d7208-5a9e-424e-a139-ffa6cf041dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5f2c7a-9ad4-41a3-a44d-01b7f8c24834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1913b67f-0b98-44b4-abc3-cd48c7bac560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93ed9ecf-cec1-4f58-8650-4d380dc31979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c88562c-f6b6-4ff8-9a00-8d095a970457",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d835c17b-7080-481e-bec5-578d6d796932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ae92cf-5265-4900-ac2b-7b942fe3af61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e4680a-cf8a-44f9-af93-e229ffc3c661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "73765f90-fa75-457e-b0da-6fd0dba66ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe1ac4f-fc7c-4343-9265-aae0b18e9bc4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1100014d-66aa-43cd-821c-a670bb9ee7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a27af5dc-589f-4f54-8b3a-5efefd875b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c123185-227a-4f72-99fc-71e2d4382e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1980b63-0899-4392-a967-8dad71c466d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edacc900-babb-4763-8ce1-23863d965bf1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d73736f-92c4-4dec-b706-1b1a843fa2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8ed548-061f-4d71-bb2f-5702210c8bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a8732b-c605-4cdb-a756-ef098df81259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b6a982-fdea-4a2b-ab24-a74591e829d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1876664-b21b-4e67-8471-2aa7cbdc0467",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c673d99-c6e0-448c-9a9b-7bb6b5621872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862917e6-b035-4f3b-b37c-3f419ac8d2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2543fd-f93a-44b9-a174-4a839671a963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6b7596-e1f0-4437-8356-8f944de9a833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fd90a7-3fe3-4da6-926e-78b450c914fd",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec713823-e6ef-4702-9ae4-6ea3dd265d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a3d736-1aca-4e0f-bfbb-f3a659fe46a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a26f39-3e8d-47a3-9951-4185c6fba84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a44180e0-ce9e-4dc1-bed2-cd5eac05f85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f52da7-6487-44a5-a08f-9755b45264b2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13d99a3-709c-4a1e-a3e4-87d70a6f3d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ac63c3-3082-43ee-aef1-a0b71fe0efbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f59baea-d7ac-4950-84af-95a4b7eef31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5b07af-cec3-4b99-b215-fd7d53b07fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10e324e-089a-42ca-a0cd-55c6cd3b9a80",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694b6854-72c4-4744-95c8-a23725f5faa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa805e76-302f-44ff-a3ed-194bf986500f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f2f881-0996-4c69-8779-18a12a8c6270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a02e939-6f8e-43e4-8a5e-d6ac5ca248f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259fb763-850c-497e-97b1-a28fcb19d804",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb30030-5a29-4f07-a2f3-b955edf46d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5efe0e1-497a-4025-90c7-469bcf62ee06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4b0cb9-f67a-40af-8ba9-c947660b2d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "46abd2d1-2242-4c6a-a399-0c19e7e7e601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2359d8f4-118c-404b-ae67-af6806d5d85d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ddec3a-4037-48ab-ab54-d94710c9f913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1254d3c8-3921-404e-9f00-4e4fc583741f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd87eb22-8156-447c-80e3-962a0731d96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b02ee8b5-1380-4c4a-a59f-472ee2e90da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1a1169-1622-4a31-95bd-3bf871b851d4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20fac44-e90c-4110-b0af-8c8f770aea38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91dbd73a-2d72-4a35-befe-0cab1eefd684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f6aea5-4ab8-47d3-b2ee-6d0929d94ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "81440905-245a-44bb-86db-5061544981aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e5040f-daf3-49e4-884e-cb09ae170c2a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a001634b-d10b-4f32-bf6b-8db90e64830e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0937459b-f325-4f62-a881-02e59d6526b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cf0387-26f1-4321-a3f3-23bf48aa193f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7dac12-b6f5-4b57-a8b0-b5c34be8d3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681f4bd0-1fcb-48af-9f1f-f01acfd60fbe",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012ddf53-1d90-4570-86e9-dc4057e40461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6a0d00-6265-4f7f-a843-322f75354087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ed1743-101e-4f1a-82f0-131d6613b4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2faf1b-6bc5-4b1b-9631-4e77e2f43d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3429baa-b0c8-4c51-b1ce-cf16b614c1c2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed0fc42-69e1-4070-a64d-8e4096b23dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df10bb8-b8c2-4d64-a656-d7d97094e7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212e6dbb-73a1-4e77-a927-db3e4d3ff917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b13de9b-6040-4202-a3bc-112460f7f5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47ac7d3-ed59-4a56-be10-7a9f71d43fb6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0498d78-867f-418c-8c6b-05a95dcad162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86361c2-4c55-4a10-a4b2-22b103823447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e69fa68-5a84-40d3-9cc7-c872fe72a9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f99ac169-4e44-4634-ba6d-e2780e003fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcae1a57-94e7-41f1-af5f-6ed5b175da9d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b12e01f-8f4c-494c-8f55-7eab321bb93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f8c10a-e7c7-4bbc-9f9f-c4d9a0413a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b57d84-e6a2-4342-a061-d7e7089089ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6958a6c-908e-4b30-9470-e4c555539a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f31bf37-b1d6-4441-a64f-5a0db2aad55b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b301f58-a1b8-4c18-9c64-3dc7f5be80ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e28e38-530d-4c0e-ad59-af4cdb910bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bce74c-f316-4d4d-8c6b-ece8b1b56f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b28ca1e-122a-49bd-8176-0ee7c51a7d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b5e211-7cde-4af8-860b-0ae640ff569b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2382c19a-edee-4758-bd1a-f6cc120e4dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e6449f-e34c-4162-8239-c1dceeccf614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd28215-bbce-42b1-b9a5-86b203cdfc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f31ca83-28a5-44b9-bede-41282e6c621d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e769cc-0e0a-4668-a64f-906c29b66a24",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347b0a60-5d8a-4b0b-a8bf-17cd9b48d73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858614d0-6a29-427d-9a64-a19d05b0576f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ba0426-7544-4699-98a4-7cf3fffedbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4ca3fc-4a3c-4dfc-8542-04b67d40b2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8cc432-4c61-4c3a-a886-67dfa8e81a97",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c69e807-dc63-478e-af6f-e6fbf905b042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5794278a-823a-4234-8611-375b7668f5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ab9e11-1079-436b-a184-efa45977741f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "271c4f4a-1001-4397-a4d9-ec925b2dcef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fe96d2-d9d5-426c-8257-85bb41d189c0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81bcdeb-75ec-4ba2-be8a-a922b7eb82ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4413fcb7-aa80-46cb-8898-ed67f7d4157f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4061d4e-348b-465a-93f6-816a97465c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e736087a-b604-4b61-a6e3-76cf9c4fd0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2a56fa-fe76-4cfa-9ef1-39973ad54f3c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1839e3a6-c4f8-4457-9fe9-3d57e5a62dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce479121-2209-47d7-9d65-bd5147d9e065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c52c8f-e081-47e3-8c87-d07372850a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "263a8b51-fc50-4502-a0ea-2f5cc4e59ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e4d71b-7c96-4076-a710-59e0b9bab415",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29443419-3faa-423a-8749-5389ed9e9c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca3dddb-16da-4ef2-9636-4d55e47ff1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7b99f2-bfab-4194-9e53-77270915016c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "862b1969-5d1f-46a0-8c95-cfc3d5a9e4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca20483-4964-4d80-8290-5646a57aebcb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b66375-adb6-4c67-b98b-a7a594da4177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f33c40-0bbd-485a-9286-0ed806136d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90973d5f-fe69-400d-889a-2ad073157fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a571f832-40e2-4fbf-895d-db3a5cb56280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2438d8-7853-47a9-add8-15ab81a72807",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846c253a-70b7-4cc0-8a10-9ae2063030da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849b24a1-8838-4388-a188-f74131d9ceac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c255bcc4-8b07-4cd8-8f56-1e8868ad48e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a879c6b1-b25a-413f-853e-bcb8caea64ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bf9c8d-6845-45c1-84d4-84a4f6907a5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b640b9-dbe9-4a4c-8c76-9822bb6200eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a953e3-f2cf-4cd3-b982-723b2c20b36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d428d16f-bc2b-4d9b-8f0d-1f6a9881feb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e28faf9-13a7-4eed-8260-856ef565a425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7b531a-0133-448e-8e9c-2d25720a7935",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec06d117-f37c-4b9e-b859-a920e95bdf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035bef54-410a-4171-b472-6ce76536d589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac91c5dc-0131-489f-9a31-3e4f4a03bb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cec37ff6-2c80-4318-844e-016e65b5b104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61fee37-ff90-450e-bccb-e136fc069d69",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11093be2-1b30-4d0c-9727-e59a590d309c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8660b4-d729-454f-a124-d5853e1f68cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636d91a7-e36c-4445-be23-d23ff9af84b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1daaf0da-eda5-4fe6-a2d7-e323da24f7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26efe6fc-3aeb-4706-846d-f6bfab904c0e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5f40b5-b8e0-4e6e-b648-6d17e8648f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af7f3099-d737-4d93-8070-21991344b18b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f82827b-b011-4968-b995-7380fef11a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "95afd343-5418-4a04-85b4-fdd6bfbf9e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f862c5a-aa96-48b6-80ff-9e5ac6de18c7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d886d5d-3a36-4817-8bd5-50f29a290d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddef3f5c-f980-44f6-ac6a-5926af744293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430451c7-ef17-46a2-b1ae-c55bea49b5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b04da3e7-974f-4b3a-9c49-2654f12ad056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f61859-cb0b-4266-b3ef-cdd7e9ff87b8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8e8838-a68a-4ac5-b674-ddff893e2740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e61d91d-86f5-4881-9465-eb7874145b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c468a84-7859-4c1d-ab75-4c3a07adccc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e105472-41e2-4175-ab37-044f30b989b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97af83f6-7bfb-4a5d-af66-fdba6652fd26",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de35e21e-f610-4c19-a5e1-85b3fda0aa12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71cf3449-4cad-4716-be26-b41e25ce7102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9732d3d4-5437-456b-b28f-9ab2706c85d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "455c5301-1337-4746-825e-5ba972829cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e3054c-9766-4d62-b9bd-d317f31356e3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39cba22-b8c3-4440-9ced-df3e3c178d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e310e38-a5ab-4802-b1bd-8ee6e8fc6e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7c1968-fe06-4e48-9ff4-a14670a3172b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e668afb-ebcc-4ff1-ba9c-890fd155fac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b875a13-0bf7-4956-b9c8-effed8b5dc80",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b05fc3-cde9-42d4-8c43-fe6b453f88cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748bed19-4c41-496c-a70d-15189a8ee232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a8824f-7667-4192-bfb8-467675014995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6e7c9e-1ba0-49f7-bd1d-416df065fb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd78ebb-fec7-4341-b0c5-0d137726c7b4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5573876d-b3ae-40a9-a6ae-ae8f9e51ade9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c3abe1-90e1-4319-9c7e-199a3ec81de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283ed7bc-f81d-4de9-ae7a-aea3d9083589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd02f86-5fa0-498c-8313-df6ea0417376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e18304d-47df-4b32-b60c-38ca132ebf44",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3af03ad-7bac-449d-b4fb-ef9c4295f0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b9f8dc-5cdc-43ab-8ce9-9561aa65cb06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7511c3d-bf57-44b6-a897-5cb3a77e36d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f466b24c-4c30-4bcc-b3b9-a2bd4644565a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75060f1c-aec3-4cab-95b2-fd690e6f171b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a29b37-1d22-442c-a305-31b0f7dece1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df98b2ff-a300-43ea-9fec-5c1753847eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90ebd5f-612c-4d8f-8816-18fc4c8c5a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b91b32-1469-4cfb-8b41-fbf2015244e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc142b1-3879-451b-8a50-eded74f8206f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955eff69-23cf-45cd-b702-869d5cb1446a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5d22ba-55bb-48ff-a880-9fbddf9e21f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbcc8859-cbe0-4e37-acaf-fcade49cef50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4807179-5a76-4f97-ba5f-1d5ac5568bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae92a2a-84ba-45ad-ac2a-7839b4ec763a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc6b5da-92a9-4ce0-81fe-1bf8b26dcb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a44aa40-6256-453e-a74d-2844ad1186d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d68d30-754c-4e4d-a366-e02c1ef9983d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49334b19-7114-4f30-9140-f6ea24cb52f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d511f2f-2266-422d-b8aa-5be63d061585",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3377ee6-77a9-423a-8c2b-261de7845d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3aeaa0-c6a3-44f4-a601-d2c36ac08643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea57b653-e5be-46d9-9970-f84042b238b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13348fca-a073-4c29-adcc-f5d865c86661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ad039c-5917-4899-9d29-42c9a4016aa7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2660c952-1e38-4de1-8789-9063c1ad4fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13eb82af-230c-4a81-9c5d-02554e5120bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0b5856-f951-4fd3-bd37-7865d452f97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9958d5d-95b7-4ab7-bcce-629233d345e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e2544c-9eac-4bc4-b5b0-8e0523ab1396",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda7fdb5-df18-4848-95bb-4195818b9256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61ab845-42ff-4bd2-80de-0cbbdab71c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993db109-75fd-4c67-bf2b-3dafcc7b1b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "157f4fe1-aceb-441a-ac73-4fc7f577c49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec66cf6-2364-44e9-8169-4f77849bad04",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03fd8b9-5a6b-48b8-8a7a-9305f0982547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22113b53-8d7b-43fc-b082-c790d6973be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d031eff0-06d5-4668-ad74-0ee39537f019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70792f00-196d-4f82-b3c0-1339ea7dc67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6325cf71-28ee-4bac-9cf4-4bfe49249dee",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa35ac1-a446-4ea2-84ae-cd23eef9f61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32aa1e16-b20e-45ee-a9f2-4072b2100197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14d81eb-834b-45ee-a85f-2dd5adf2be82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "784100c8-40b4-4b5d-baec-5628ceaebd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5ae50a-e915-4144-903e-6bb512231810",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c88705-e9d1-43d7-8ffb-dfe6d9fe640c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e497cf7c-9744-43cd-a5bb-a091f1b337ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61217584-7111-4c41-9b3f-83b653ec7647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3de95fd-0288-469c-a47d-ff69dd67d678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738599b1-119a-400d-a365-40da4998b529",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b4ebad-8ca5-448f-bd27-5aa9ba4ebafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c54c452-3b9b-491a-b509-78fafacc2183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352c61cd-df58-42a3-8b31-2e4275f93c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "673b6b75-a1a7-499c-9a27-eae944bae526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfc492b-1f73-43ee-8942-30696c420282",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a5ceb3-e52a-40da-b92f-afa86450c429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baff8e36-341b-46f3-a2ec-1df469bedaa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d3c280-8a17-4ba7-a9ed-229d7e1f966d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2ca3cd-b6a1-4f45-a312-a45c7606f1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b8eafa-e573-4e2e-a7ee-e054024efa3a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf297c3-3a60-4ccc-b9a3-0751c8e6688e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8337341c-d34e-4aa5-939f-3d1dd17af6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66476289-58c6-434f-bdd2-a931cc5c89b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc47a96-717d-43d2-b48b-991dc7cda5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6310f05e-35e1-48d9-84e6-04a626b95841",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9952d92e-be7c-4130-892b-a74d325ba52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "511464f9-a7fa-4ea0-ba20-d2fa24351ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ad90c9-c2a1-4eeb-8aa5-a09d2f6d1af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cce28e5e-65c2-48b5-a8b6-172384e7bf77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c125316-6bd6-4609-827a-db694b65b5b3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5a1876-65d7-46ed-a1ed-8269a3b02bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f66b65f-5c4b-4f58-b1c0-087e62227ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084f4a4c-64e8-4ca5-be62-45fc4c21f503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc1a005-8150-4aa7-9ab3-837764c6d40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86dfe598-34cf-4e3b-a26f-bc1739849f55",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9c1ce3-f983-41c3-94cc-b1091a0e742f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6b63ca-1252-4e43-b62c-6e62ffd472b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839a189e-df5e-4f26-9d74-e620d016a629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9134ba-f078-4532-94b3-eda14180c4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a9f4a1-6724-4a54-bbd6-647e0b19abd4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740b82a9-1114-42a1-9d02-bfb06c2e4cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e004fc-9dec-49f3-97ce-3dd104e5ee1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755715f0-3473-4dbd-b2bf-ead13c415b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8698f1-1368-4067-b45b-4fd0805b21f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a8037b-b29a-4d3f-9eb9-862142900077",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e824bb85-1087-4772-a24d-109af7434ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fb9d1f-a4a4-462a-9d04-04d24f7423dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a0cb89-a498-4a1f-a05c-a77f351553d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "781a1fe6-69d6-4ed5-bad9-7681fd2283ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef2a376-65de-431d-93c2-4e8fa43575cd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec02b2a-e5fd-4bb4-bc11-40742e38aa68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c11976-b841-42a1-afef-ff1ee367bc6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0415c26-e735-4670-92b9-4b6e4408f6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f051c19c-9f0d-4999-9527-8eca712aab21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3719e4bd-a010-4e08-9f7a-0f043317a601",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127649b0-f3ba-4b83-97af-0c9c9caa3284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82002c4f-9205-4cf1-a990-797e57130e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d264a0f9-b987-4051-8c28-b5684e263ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec73620e-3e3e-4603-a658-cd366ecb8d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c976397-2422-480c-97d2-25fb96e3eaed",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75394887-7631-4013-a262-e230a6f519b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba81c4e-979c-47df-bcd3-71a22e70921d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096210ff-cbc7-4be0-8bb5-15dcca902856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "145a5f32-d20f-4d64-a167-a62146510044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079d2081-06a7-4fb2-85fa-8e850aeab048",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ca206b-9908-4c01-876c-48e5faecf216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11df412b-eec0-4528-8021-2811f3cf9440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f77aa3a-78e6-46e9-9988-32f5d5af1c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "68ade78c-06ea-4518-a007-4091e4373a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39edbb1f-02d6-497e-a625-238b78e63c62",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf06284-116a-4a9f-bf03-b8c15b65eed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c5cf47-f492-4e40-bf7b-9be0bf5d6a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0177215c-915c-4529-bc03-84e159a45edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "de5f9760-a6ba-4471-96f6-43f182ab22e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e24427f-4028-432a-81b5-a58894bd055b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9ae74d-42bb-4cd3-a2df-a27a703960e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "746e3b33-9517-40ab-a410-37ea58223479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620c04df-13e0-4542-ba4f-feb137b78ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9987c734-9ccd-47b9-99ea-d99b694bd3de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ddd91ed8-97ef-4b30-a0a6-6abe7ee80676",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7ec85e6-9528-4088-bcc5-561361bfc56c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2559b704-d74a-4adc-bae2-6461322d09c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90dd4ef9-e4e8-46f5-bfc8-04799a08df51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a541a79-d0a9-47a9-94ba-f986f64f95b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b869f1a0-7f9b-4e5a-a288-abb44a4dd190"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "357d1bbc-8b21-47e2-b564-fddc357469cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46c977c6-cf17-44e0-a596-649b2b4a73bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0b61c4c-4363-43fe-8c90-e153439d5141",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0eccfb2d-33cd-4bf9-a5f1-04b42a029405"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a57f745a-89c0-41d8-b287-f42d135af687",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ec958a1-b7fa-47c8-815a-27585229a77f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "70bb5040-dd7c-49a6-a2ea-1f95f8724808",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "20243bf5-f246-46b3-8812-ef3ec35151a4"
                }
              }
            ]
          },
          {
            "id": "b8ea1d20-49c6-4260-8f30-1bdc6777bc24",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a3fbce7c-ac74-4b1a-adfb-de1654d2e22d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d0e23931-c93e-4ccd-b094-53a86e24e716",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d0e236-8643-4b37-b61c-07586b2db863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fa5f3b84-ed3f-44f2-a191-3432cfe45cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8cf5b4-d097-420b-aed0-d5058c2df4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c2e72f-ec51-4808-bd29-fff30a7c31e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "75461159-d034-4be5-8f2f-aa9aff2aa193",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3ecb04f-cfd9-4ad9-ad1b-aedfc6029f85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b1fa8e5-0097-4a1c-8b99-0a76a2e09c52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a81c79b9-cd5c-4d51-9e09-7ef35a929ce6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "756e6c1e-76cc-4e55-9d29-2ff77499b43b"
                    }
                  }
                ]
              },
              {
                "id": "6824d737-e306-4ff7-901a-0143646b72dc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e408fb8-09bf-4d6e-89fc-1e5085e7ed91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba384029-7b94-40ab-b786-c22b0339b45d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7d58585-199f-412e-a19c-f8afba724c19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "15368dec-ec39-45d1-86de-41d5254208da"
                    }
                  }
                ]
              },
              {
                "id": "625e4571-c87b-44bb-a788-d2d5567df87b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80a0792d-f5f1-424d-8a75-a644dc76faaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9dd9cdf-ef64-4c2e-ac93-5a2678650c89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97485c9d-a780-4b4b-86d4-7bd7ead1cbdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9ddcba2c-5449-4c05-b614-33cfb9a998ba"
                    }
                  }
                ]
              },
              {
                "id": "29312235-08cd-41bc-806f-76e420e07a6a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "089faef8-6faa-41c2-89cd-1adad85ffa7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16c60a99-0cba-4481-bdf3-521037cef015"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea665e92-e971-45c4-991d-6adad4681e5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2ec6eb5e-ab86-431a-a932-be7858ea3da3"
                    }
                  }
                ]
              },
              {
                "id": "396153a7-5ef0-4039-84a1-847d19195975",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2f48b82-6820-40e3-b181-b0762bf39183",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "502100b7-32a0-4f64-bd1c-7f7ee4ab5ee5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0de5c56-c7ae-4e5a-8e0f-a1376d83f46e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9ca92662-6d1d-47d0-b46e-849f40d67842"
                    }
                  }
                ]
              },
              {
                "id": "1ee91b7b-c9c0-4d38-96e7-840cf7f54fd2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "432145e7-2df9-44e8-8274-106b560a9bce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89b708a7-5f8d-4b97-9767-a4eba82e2d46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98e86a79-d4c8-4c1f-ad96-95b7e99cc453",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0861e587-3582-43ec-96dd-06f210cc8d84"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "72cd1310-e9af-4c10-ae69-7591d8cc37a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4adf9cc5-bad3-421f-b7ff-9714ccb49ccd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3dfdc0fd-25e9-4dee-8ac8-030ad1965acb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f740e133-a8c8-4de0-a161-960dbb54bc1a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1a7f984-f378-45f9-9aef-bba6050f7519",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c83bb1a4-4eec-4617-8b7a-5fce543b4384"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "472b41ab-c2ae-4013-a8e6-a9577459dbaf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "669901aa-1bde-4e87-b6b2-51ff8350de8d"
            }
          }
        ]
      },
      {
        "id": "f4a2d509-5140-44b7-941a-074c2a9636bf",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "619c354c-4d2d-4519-8509-96aebc6b32a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "291adc34-12bb-4451-8295-7e752e683c73",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8d21de6d-1038-4d35-8ef4-91d7ab0b0d43",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274fb834-46f8-4365-9c04-39b1d970d21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc54ce7e-30d6-4b9a-a626-f02df2933179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872a42cc-65bd-4ab1-9ec1-d553625f96a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c064e63e-9680-49ee-baa4-fb3e6bc4470b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf53c1a-f3b0-4aed-9de6-11cec792c09f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6f8743-829e-4c9c-bae1-90e858ef64e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd57b50-4e9c-4f58-b7a8-543ee17a5cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89fe23a-92af-409e-90c3-a6f2df03d124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdcbe794-64fd-4653-94e9-0ceb11265256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42caced2-3e51-4b21-95d4-ad3282dc1e5a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd579d4-509c-4acc-9633-83f292098ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9829ec7-0e5b-4caa-85c2-c7a2bd609f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26b35cb-a57b-4f73-90f2-c8b63d01d8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f52b0d95-6176-4e61-a4cd-9fec80c3a251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb40bbd8-1d6e-4c7e-9ffa-de576fe8a9ed",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3577d6d4-b7a5-46b4-b1be-438a599f0793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3ed3a3-2bd2-42fc-ba28-841a58cc0339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2a1463-2b7a-4087-8bd5-8cc57262a08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af5e8080-040a-4bb7-8eb5-065bcf45be63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096ba4f0-6d34-4d03-b4d6-86292fd703c0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d268b7-0671-415b-b3f2-d5bbd28062b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e401dbc0-d7e5-46da-90ce-1589aeb91c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6f43e8-bba1-4f0d-ba9a-5df7b6cdec0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3665663d-1673-446a-b362-edc529e94752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670e8018-58a0-416a-8ffe-cbbdef080538",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d75c52-e644-434b-9672-48e2982dd1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733f779c-c3f9-4822-b93d-cfa50d1925b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b6e933-874c-460b-a866-dc7ccc5cc731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd256e2-8e02-47fa-8883-d057a35a3aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb62913a-d881-41bf-b697-11b78990c8ee",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88ca9a7-4e29-4d7d-b376-995deff3b072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bb0414-58cd-4345-b79b-fc3c82140311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2cb9ff-1033-4f0a-b370-0339f979a1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cbeec45-6085-49b2-834c-98c30bd097c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11240a94-dad3-4f52-8b18-a1e0715e2659",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb23ee5-e72b-40db-9ae9-7f927c936608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02c12de-d96a-48c0-ac3d-26ea9adadf22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df780dc-7dbe-4852-80f5-c6a6f6b2a962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55d66f43-f339-4640-98b1-9678b5dbc281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e6d86e-a186-41a0-8790-19e811fea280",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2b764b-9ad7-41a9-ae27-e61bf9d21a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3419ba27-1f1f-4f4b-ac41-0b251fea74e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3b3fea-f7f4-44c5-ab49-d69e3bd8a10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19d24a91-753a-4f65-a93d-9ffd94bf7fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00543ff3-e4f4-4734-8cb7-3276440c1637",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ba1722-79bf-4523-a1c3-f84a5efdda9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ea9fa6-1847-486e-8de3-d733bac2dc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0cd6e1-c16b-41fb-9806-fd8b1bed9b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89723c38-72f6-4983-a8f9-f9bacc2ce887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec38f90d-a84e-48cf-b7f8-8ee905a6d6bb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb47892-b710-4c7f-a00b-96e4d69ec53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e27634-9cfe-4b8a-9209-65e994e4471d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd222b41-1df4-4274-95b8-0b3829b8e3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e03536cc-6baf-43ef-82ac-42c1bd23c7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87526a2-079d-467b-b347-3567d6cd9e3e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa81c1c-99a8-43d3-a9af-e77cd4e19109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8fe3f7-2be8-496e-b019-5726f12f4849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd30300-fc24-44ad-bd2c-5e7f03f6f769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff5a3d9-94e1-4ec6-8f59-858b6b78f512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760b3030-89fb-478b-8777-37628d44829f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bbd4c5-1665-4777-bab1-797acc46b94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942d09f2-4998-4d60-85f1-4f17af4d5df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17cc3d5-5610-4751-a2ff-43ae004fad3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3359b3c-2715-460c-9aa8-0ccc1dea8145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc1e191-7a13-433b-8589-65e25e8335b7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7d901a-d7f1-4eb9-810b-e7ad48e3cac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62e9f5d-f75b-44f1-bc2d-9f1846a0e6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc7a09a-4764-4648-99d0-289f62bfd281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1e9eb2-a0c1-4a2a-8181-8c4d9a1276be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b108fbfb-6417-4c3e-890e-4deeabbf3de4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e2606c-9716-4b1f-aac1-8315d18bc37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea06482-c560-40d6-958b-986561cf1466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6ba79b-dc6c-4bfd-8fc1-25fa532194f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9abaee7-a834-439e-b96b-32827d7785a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41664558-8039-4b87-b4cd-d48daa51a876",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7adc08-33c4-4eb4-a0b2-8c221124d06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45ce993-fee4-4f38-8f9b-3e347cbca1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f917259-ce25-4b33-bb55-d8813951c63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f0d3f4-5c31-4e0a-8146-6a9236d02119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e45635f-6844-46ed-ae9f-6a471565c803",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb90d90-78ed-424e-bd47-51c5d4307e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10eefcb7-df21-49dc-b425-d48848f9fe86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e346089c-8948-4904-873b-5a84af7b73bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e97ef4e5-2b37-4c08-a93f-a406ac4729f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e7dacb-5338-4a50-8407-12fbdd94f2d4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e8f3bd-f51a-416c-bcd6-b06ebf1834ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9acbbc7-43c5-445c-94c1-0d86bcc01062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0abae09-60ef-42a1-8d0e-c543d142834b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cdb53de-318c-4592-a153-66f61ca0e90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e74c48-5e35-49c2-a8ad-f80696ddb4d4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c636f6-a114-4d09-b074-4288aedc3a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86fe7160-05f1-4f07-a4b6-c47bbe6ce4b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fc0b86-3361-4778-a4de-6b8186c6505e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b64661-6533-40e4-baad-bc55caaadf41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734c2cf5-b5c1-401a-b191-8b95fd641fa6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ffca3d-82ca-41de-9077-d1d22f434d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6cab9f1-306c-49bf-a15c-7115f8ea4cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11bd31c-25bd-4972-bb1a-79f266981601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91f35acf-d4b2-46e2-b8c5-a898b6339841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4030c3e-c8f6-4326-82ca-37481580c3c6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010fe596-8597-4233-a9a7-63c0809341bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c770c0-c5e9-45f0-886d-7481fad76d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e8dfad-4abc-4513-8728-e7f9f5a261a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a64204-d5be-4b0c-b3dc-56a66f5ba1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06ec167-9dfa-494a-8849-6586bf028b17",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abda7e8-876b-480a-b722-50b525d3ebe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5c8021-6864-4a33-b815-5beaf15868ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b51c00e-653e-423a-b5fe-3fbdb21f3f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65b6f9a0-40e7-4969-b149-8c165bd01cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481e0f08-4f5a-4714-ac14-5345bd48f8bf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da44662-2ce9-47d6-9547-b024d21afa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6114bcb7-6362-422d-bfd3-fcf8a9fc66c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f1272e-91bb-4bb6-a577-4eca3bbae4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51867c6c-d3d5-4694-9659-d7f272422022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0345460c-2970-4786-a282-8479979e55aa",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffabcaf-939e-4b2d-9772-95a357d921fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f524f4-0f4e-4815-b4d0-faa16724ef57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cf1eb0-2c58-4d1e-9e90-789dab853624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b47b0c-8b14-4629-9412-4667d4143b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b4d3a0-6d91-4c41-a104-ccad2a321e18",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bbc1be-3976-4d1f-bbfc-2b956ec0ecc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3535a3ba-594c-4bfa-9de7-b80590f36af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c428daee-8ddc-4a91-83ce-16354b0a1df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9b294ed-9ab2-44d5-8442-7bd0c10f6dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5941032c-fcd3-4073-a837-b495c3010259",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c77223-b540-45e2-9cd1-cf4dc0ad784d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a858bf-abb3-4a8c-a372-420fb52026c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6180a02-df4d-4bde-a1b8-dc714e83b307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a065c9fa-215b-4e07-b8cd-0eb37312ebe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31088394-5261-4931-9d15-6444df4e3e96",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18027e1-c0bd-484e-97ee-60e292a598fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0781e65e-0da1-47b3-a5d1-36aa0abd6cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3307c73-6de0-4bc7-8ca3-abddb75e882f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2593118e-6f96-4bc5-8d07-091aae87e930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eac5475-8edc-4798-bec3-caf7d0d010a9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2725625-c1d0-4a28-8b6c-6de53230ffad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c898da1d-59d5-4862-ae11-57817957d033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104684c1-054e-40f5-acd4-d8e9f3872e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "caf150c5-07f6-487f-8a8b-fee614f205a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab828c75-594f-4e41-b88e-3c817f8b9d3f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb3ab0b-886e-4c20-ba8c-ece30a57f3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328752f0-4ee7-4d65-8a05-8352f193ce24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a60b181-4e47-4c33-8f5d-d68ec5f310b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2175d35-73cd-400d-96c4-15ed60a680dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7153b7-8824-459e-8596-cd959f1ab68e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce83951-d43b-4d6c-9762-9fbcbadf1796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f829f496-9f2f-4204-b31c-0f49dcebc94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb82526-1d0e-45b4-9790-92eb823ff363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f86bac-d0f7-4bc7-95b6-8d422707ead3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad8ccc2-7f32-41fa-9f92-d82785fa9180",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f367a5ad-7141-4781-b079-a8c561fe724b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8343608-7815-41ef-9f60-e853f493b363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3063b289-f48e-4587-b514-cb2d8404a995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89f7b5e8-27c4-4fef-9fa0-cbaf874ed2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fa8f4d-983b-46e9-bed0-55352dbc7d64",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0db7df-5235-459c-a9c7-cfe79687badb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b146ee-78ab-45c7-85c7-8db148d51168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59148585-3886-4467-af76-4f066ba3dc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba09fe0d-4971-4c14-b22c-c2c098b816b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e46fe26-ad2b-401e-a614-e1529fb406b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "992dc355-aadf-439b-904f-0bf9b066c436",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ce3b2a-d03a-44f6-97f8-707cae7d592d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "efdc010d-b5f0-48f9-9513-5bb434862359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1b3272-4d2b-40e3-ab65-669b0fba8bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5e70ceb-8cbc-4987-b97a-9de007b682be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9ab96f4-3d00-4791-9b9b-b28d79a813a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd33afd0-b249-4aae-a067-42a31ec18340"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58eb5459-45f3-4b68-94a1-bc913d027196",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c08c3f70-8c56-4063-b527-2b567aff9054"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc39f969-7cd7-41fc-b2db-5911f35582a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa63289a-f40f-44c9-8d01-963d18a6fa79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e3a2ff2-565b-4295-a193-aeabc311abfc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de8857ed-1391-4b8c-b15d-d64fab7bfb70"
            }
          }
        ]
      },
      {
        "id": "c31530f6-e2ad-4f04-8872-828ff231e097",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e4e8d335-67dd-41e3-8f25-d73305d160f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1765b570-77da-407f-8c3f-20e8c16ee744",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3e96c63e-4a4c-4773-af33-72bb5effa5b9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c943f79a-8853-4a11-ba2f-b73847bfe738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9a8aab-c949-4ab9-a41e-b20b552f97e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7741ef27-c69f-4647-8705-530a9cf98020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a410e114-61d7-4d6e-b261-897da891e4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47147fce-459f-431b-86c8-d04444e33156",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a16c07-cdc8-436d-8cfa-34eb3c0f55b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d96377-7928-47bf-b5c1-7f1350515f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6e2338-ae00-4546-82de-d37f80436d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fbfca5b-6aac-4335-82de-5f5e1fd74ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d0cd5a-37b5-4ef3-a5c2-b1b52ae7faa1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1028bb24-d505-4725-a00b-b866f27d19ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2d4f5f-6f79-4ed5-a75a-d994e4412b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fba2f6-5942-43f3-86e5-780b1afd33cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc66f0b-16df-4894-b382-ebe99f3a012d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dd761e-e262-40f2-a222-dab537cf1a73",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975c8d95-086b-4471-a576-c292525e30ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a42c085-b8e7-461f-a56a-120d40276d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6869e8-5711-4d7e-8e37-303e9630c7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8cb0940-f2a0-4038-a899-5cfcc558009a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86737a6-3cc1-45a3-98fc-239ad9ecd29d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51c33c1-7dd4-4876-ac6c-35d64dcbd4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266d5102-15fc-4389-a366-3c170aa913a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3590a09-58d8-401f-b140-80c40325fc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "317563d5-2aa9-4807-b405-eee27752d0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285b7518-e3f2-4016-8769-8a6e252c76d9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e90ab3-e633-4778-be5f-65ec32fba91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56890e91-eed0-4c65-b606-7aa610d696da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8defbfb1-b0a4-4f4e-aaf5-f10ade39a890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "befc2538-5358-47bf-9b38-3f9176fcff70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9395b59-f4a9-490a-8b36-f4301c481ca9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1352834-8a46-42f8-9eeb-449df18f8215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d3185f-e061-41aa-89ca-961ea10871b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c9dbaa-5ce9-4d25-b4ce-71d84eb5d43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "20408389-4311-4319-9d52-76c37eb8cfc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a52b9b-5b5f-4aad-8cae-cb49262ae45b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bde004-a811-4de6-96be-d5c38c6f5f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b2f060-1911-4c28-9db5-9bdf00d638f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b9abd4-f074-432e-b771-1159528e88c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5db637-9c1a-4cd5-bc11-01afb6b7d0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac121b3-ccf4-4f73-8f39-fa25d644dbf8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f34bde1-f03b-49cf-819a-86b4a0457851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e4d9b3-9014-46c4-b5fe-566a7e882711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c592f1d-7085-4261-82ef-02f855f7597e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6e98c9-046d-400e-a6ac-776d73510037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf3a9ba-8769-4ffd-b388-18c90d543ba3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e685ff7-4c0f-40ce-94fa-dea3ff900265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898aff8d-5d46-499c-8bcc-8ed601ca49fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d2c63c-db48-41c2-8daf-4d6b77ffa94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc6b012-9860-43be-9d5e-e5f48b2b8aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82b3250-1ef7-48b7-b725-fd9a3bd54b69",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebece0f1-3b5b-4b10-86d1-466a2f280175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724bef55-a649-45b5-95da-5dbf536fe94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e65790-6c9a-42ac-b915-7bf00505f6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab63ab9-92ae-48ee-bac4-f4b5300bfcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c59f09-c8c4-4d62-b9f5-733d38d2f4d1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41d2722-af4b-4840-9a0b-0aeca1dea916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b38681-46dc-496e-a5d0-67684e626c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07fbedb-e5c5-4fae-a510-4e12c3127db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2387b01-5b15-4c18-b86a-ec16e90ff646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c02195-1bfb-4079-a4d0-792e3150fb53",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20b47bf-3bc2-4c60-9844-b4e629eb3e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e2ec18-655f-48aa-9e30-91795e11a44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ea7f7d-6648-4f4b-a718-8053455cf2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29a1a09b-52b1-4569-9dcd-177db5bd94e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59746da6-488d-4745-af70-157f6a9b598d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbe2c6e-b7ed-47dc-bbb3-7e45de5dde12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3378450-014a-4a36-beb0-ba8bd865f876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd068b6-c59d-41c8-858a-7ca8a6508275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6f3e33-a301-4eed-9187-9ed7868d083c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1533cf-f65f-42cf-bc67-6957b4d0d431",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92300040-06f5-451e-bd96-2614b566e156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1c53b6-efa3-47f2-a29a-de65a58c338e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc1fd15-6ef7-4af7-80e4-0db13bb9b614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "31d18087-e67d-4354-b540-cdf9aa9391b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0205dc61-4410-43f1-8e30-00f4a51457b1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08340a56-6bbc-4640-a8dc-dcfea550cab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070ba850-f4da-475d-8a1d-6c36cade9019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c88d8ef-1096-48b0-82d7-7972d26ff8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a69d1939-e22e-47c9-9287-3497b4f2587c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2507dae9-d293-4045-ad84-46010f9d3576",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d499f3cc-3a00-4e41-90d7-ecb8d18da369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc843d0-6c23-41cd-94a9-377067515cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68eb747-9d8e-4539-a02c-3155627f85ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "916528e8-85a4-414d-a75d-615203bb4703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9161ba7f-c240-41e5-84de-a2df28657939",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88025572-887f-47ab-a3c4-b9eac1f423f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787585c3-17bb-4bbb-8f5e-19bef6247688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce02c6a8-3f48-4507-b274-74dc36666d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0ff27a-41db-433e-b6c3-257fba2fcbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d39d0e6-39d8-4117-8324-802e7e25bdc9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916118b9-ccb8-4c33-8ae9-193e744d788c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b6eba5-0bd8-4c5f-aa0f-21a4ec04de2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7818e6-8bbd-4e8b-8d08-b529ffd78cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b8b73b7-1062-4396-8fbc-a6b649430a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de709e3f-ab69-4f65-9d34-f4c7bcd381a7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50203e8-48d7-4243-97f9-f6bf1adefa11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61eecb9d-23f4-407b-a686-353d8b68110f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2845ff58-79a2-4055-82df-663d4029bffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5f2491-9a1b-4f36-9673-21fabe88f87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e99750-a2a5-4d2d-91f9-4fd2cb6bbc8f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf34be6-a5e0-4962-9c85-4609048ef795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b662bb22-0506-474e-b248-3166e16fcc13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae48e6ca-7a96-4532-b9c7-ee89cdd8146b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "affca3f3-7080-416e-8cc5-794f8b932d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ed5612-6d48-4ac0-a878-62273cd05bc5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2f5db6-e88e-47c4-99ea-df70b30d9b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2d02c4-820c-4838-90de-82a3e23f2ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20f9a07-084b-40c0-bac8-b4756b8e6c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adc3b39f-42b2-41d1-9fad-b859c6319911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bedce34-e857-418b-a670-00176b3e0adf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f2cfc4-43ff-46fa-9f62-53c0af07a204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9b5d18-17ef-4e5f-ad3b-fcff1249b4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba2ddbe-1773-417e-af16-ac607ca20b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a23b36b1-bc68-4c99-aedc-7bc54c0926e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f79d0b5-81d5-4136-9f1c-82e7e4859f40",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65854fe-33c7-4bd2-92fe-6c75f2d7d333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24cbbdc5-7abc-4906-a0d8-36abc52c0c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d40fe5-e401-4084-822e-95fb4b551dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea75482b-cbd2-4b60-bd8c-c0a13c5373e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe86aee-e0d4-494a-b3e8-d55d8e0f9b71",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd03eec3-a355-43e6-b645-e3b9900ed2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6dda0e2-7921-4450-945e-9a6d6d4cbebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e4a92e-cd64-4c06-91b1-9f9a1bbc8cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b15e4dd-40fd-4fab-9f42-5fc82eb52e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fca440-aa75-4ee4-8c5b-a0b5328c921a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37face03-c25d-4557-9cf2-d9d350c5078a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb4ae1f-4015-442d-b6cf-6c105f6194ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d0cefa-2a4f-43a5-8772-488dbb3b5921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f9f980-5f0e-4b97-ad2a-f555743d35d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7669d6e-0906-47c6-9633-8bb2355b7fe8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a0c216-dff5-4f40-9add-34cb9131a290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ced637a-e665-4ad4-b19d-035c4992782b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444dca1d-9c5e-4d63-a764-99206e68ba91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "352b80fb-4e27-4d98-a59f-590a69a8e855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6e9ccf-617e-4ea2-b65c-6e7d2d8517fc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b236114-7648-4b2f-86fe-c74ebd82137e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25392ea5-7e2d-4637-9df0-7db3d0b1b8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3ff094-1927-4942-87d1-118ca4107a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5565be3d-6aeb-4cc7-9fbe-132178436be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee02551-47e7-4a88-b110-e8739efbb1b0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92691ed5-436b-4f3c-83e9-509265a0d891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726a1454-2cfd-4c32-b640-399832c03384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24161014-5893-4593-a53f-d294d8c405a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f664684-860f-49d5-987f-ea13b2d433bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c907394-f0f2-475f-b86d-4f0000a3c86b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faef6e36-0157-44f7-8daa-b5bda608899f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865328d2-cfb9-4a9b-abf6-ebe9914bf049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a6c9e0-00bf-4685-8edd-d4b18fd07a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94c145e0-7497-4bd3-bcec-1d0b9d05cf2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c68471-601c-4be2-8488-d7696f7c8e76",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9800674-b5f1-44d1-991a-320c3473e019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c04ac2c-9b4c-4c33-aba9-88a3de5da9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b57fbb-0afe-4f8e-aaa5-ec84406e19d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47d25666-2c12-48a9-a49e-119cd3de801a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea83f52-e798-42c4-bb0a-76e412473f75",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e57d24-af08-4a6a-ba71-fcc77cbf8d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c88494a9-935e-46bf-9a6e-65b2a6be3b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526573c8-763e-44a9-acf9-e612435006f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36187af2-b822-41c9-83df-eb33d65315f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17afcee-6fa5-4af9-99a8-12db789cdef2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf672775-e663-4b61-a658-af08ec5d2e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29982fa-0580-41ba-b1dc-e8b0882f91a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e19884-f48c-415e-9ae2-7c5e1ddcadb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6005ccb7-4e7f-4eee-b784-7af6572e85de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35433800-e4e9-4b11-a58d-304c042790e7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2aabc9-6221-4e1d-8217-4b4167d6c636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b295334c-efbf-4c15-baf2-79218b9bb71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233434a9-889d-47a7-9c3a-5080c545fe52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca25bcc6-aa2f-4aae-934c-1fec65cc9c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43df71c8-1fa8-4f0e-90a3-8f76884d4735",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc813aea-1ead-4485-8c76-50541ab710fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c4c242-f4f8-4c7e-a631-79078c1b811d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fab7792-7981-419a-a8b3-0da07201552e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "530a945d-a35f-4214-bf94-cee63d7f0b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d53e45-edb5-4ecc-935c-0ca2d6844442",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bafdb9-a759-408b-8855-79ffaebc28ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6985de-cc17-4c05-8e11-c820971e7bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c8a0f4-e4b9-48bd-86cd-a3445d2a1728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36ca2a3b-1001-43b9-bcd2-e7759e6b2531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e706a79-1514-4653-9a81-03b161a8a4a4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab8463c-711f-4b84-9bd8-0d7682859a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0e1d08-2663-4374-a6b9-612a55a3b01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275073e8-f09a-425b-948d-eff0c004d048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5be8da5-79df-4a95-b2ee-fdb1c80eb565"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3cc0cfff-0672-4a3b-8ec3-f12152ca84e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab09fe4b-81d3-4cf6-a228-3ee5a827c26e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec9c1ef-44d7-4e64-9895-4111220249ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "35cc9c59-9c34-4e95-9c9f-595d4d5a3e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1c3359-5c8a-45e8-9c4f-a27b5799e0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a60ef143-a30f-4110-b6bb-f1476b8cf49b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb593142-dac4-4d76-8210-3cfd07ce00e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8618d531-5df6-4b78-af15-7b0c2adf6711"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77525716-374c-4158-94b4-ba66a63cec0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b27aec8d-7a18-4220-b982-9aa75a089959"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c244dda-3b8d-4e6e-a368-e0d4488c69de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "00ee46fa-1906-404b-b0aa-7bea2f796401"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dee8a878-5a13-4e71-b730-84ede73605c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1772b799-9e2c-4009-80d2-765cddc3fc3c"
            }
          }
        ]
      },
      {
        "id": "fbf9c807-e225-49c1-a759-287c45ff6004",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "136a2876-2368-4746-9616-2803cf53e55d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6db5d666-9c84-473a-9385-73ee35151698",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "62058efb-242a-4204-a220-42e25c9b5c28",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f890271d-02f1-44f8-99d6-242941d13bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7791fead-2cd2-431b-8a0d-724f3617ed6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf1337c-f1fe-470d-a9ff-8a6334ae0967",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d26945-0afa-411c-a649-5f5f79f54d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abfa2011-952f-46b6-aae1-6308ee84dc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57a83e5-5edf-4329-a549-4e3beeaa3ea7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370a0181-3591-4f95-ad81-93a0b8a18d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1268db7-484e-4893-be54-87da0eb498d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf89c11-7420-4320-a577-0f4c80f35ee8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6346e8a-1bfb-44a6-94c4-049e93064439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a793ed56-e674-4431-8299-3578f60c289f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4314336-0642-4e5b-af0d-4bd1bde1280a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c443dae-e56b-42e5-bfc9-0700af521938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f6c9d3-8922-4b4a-a5fa-1397201b90b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224be0e7-bfd9-423a-840b-3560b3dcfc2b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06896b9a-778f-4542-b495-660b24228588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd021894-8b0e-4259-aec3-ed373b0ebff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801d54e1-20f6-44fa-8cf1-f1325191da36",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f81003-0b95-432f-931c-8bd798c60981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888b592d-da8c-4cb3-b947-4c803b77a6f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8f1c96-bac2-4f4d-bbab-609faa38e83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3539262-9523-442f-b681-8ecfae10eb03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f75254-980f-446b-b740-edb4f0f9a21c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff9562a-0b52-4e25-9e07-b6c477fa62a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca445815-7a1c-4009-b76d-811b8dcb2d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f691cdc-d3da-4c13-84a7-09fff18fc37e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3981a6-87d6-4308-8c66-7d203b90e64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411783e7-a1b2-4d96-8438-94697930a37e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86e1ee0-e5cd-491b-80a0-41d226012691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "944ea4c2-fbe7-4fba-a28a-c77d8191062c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995a1aef-e9c4-4c6b-892b-24d688a95616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9d2069-77de-4eed-9097-657a0402c10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5f606c-db19-406d-8631-a5975830f01f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bfcb15-f1e0-4c87-9af3-198b47f2b172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "841ac3fb-d868-4af2-b584-91cdd9343694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80ef570-e799-4466-aad8-cb0ff896ff5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0864804-6aac-456c-910e-116d95985803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d18471a-1441-41ac-8e16-abdd74f07570",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57013dc-d323-435c-bfc3-79ce5cfe983d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c176bc93-e3ba-45c9-a358-df2da8224e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b969e5f-90da-4b3a-bb48-0f6365e29099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5096022-ded3-46b4-8c2d-ec7cb01a3ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ef70d7-1723-44f3-a81c-0fe80e48bccf",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8f96ea-72b9-486c-8da3-af4b208ef28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070bb00e-29ba-4da7-aafa-544f81d23973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7168d743-947e-4e47-9369-59423431cb9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1579690-de75-4c74-9d04-abd6596cba4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f1eeb1-4b7c-4449-9f3f-cbaeeb3e0f16",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016390d4-25d4-4a1f-a84a-4806578c8e81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96350813-ac2b-4d03-9435-6fd2ed73ba16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35888eb2-f452-428c-b10b-937018d7dc21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded13c24-d581-4dfb-9ebd-9ad1cdd656ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba30288f-6ebb-49e5-bef8-d034576983e1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f44ad6d-74bb-4384-abaa-95680d9340ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7959338e-45cd-4a60-a4d4-54b7db288922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75738a6b-f14c-412f-a1a1-6a37efa429b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0971dc3-b91b-4488-b625-b1a7b1222a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b5a9e5-2177-4fa3-a607-d98bc5869c61",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8475ea2-885f-4db9-826c-7569dc8134b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dd64ebc-5b74-48bc-a575-071ba6124fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5627f1eb-f617-4038-a19e-4f10cfb3022f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46b50b8-ef1d-42c2-99ba-2332c43e1247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d43d42b-e313-45f2-ab1d-1a421d70949f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccb4e59-8c67-430d-b964-2e6306b62a45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a32cab76-31e3-4c36-a6b8-3f4931dd0983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dfd565-782c-4282-a8c5-377db8eeb240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635da914-4b86-48d9-be40-0d7d5c103cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef029f5e-011d-45fd-96c1-559e10a49702",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c15d6c-9797-436c-a706-b26a3d268b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0057a5e3-41aa-45ac-9717-680d64309728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e699f2a8-a4db-4cdc-a9e3-845548179d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360cfda1-a83c-43dd-b195-3721fe0754e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f7a76d-4a5d-4df3-a1f8-d42a45cfc1fa",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6e5a2e-cec0-414f-a78c-eadc1b54c2b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338f65ae-14e9-4b15-bbc3-d2af45a0dcfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430d2360-572f-48fc-b0da-19339579f77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9386c23-cb49-4e7c-b57a-4b4a3fbfd22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f760143-0fe7-4dd3-87ae-e19bdc66220f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46893878-3768-4d6f-a740-59d0674d1561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d5f4af-6e1f-4bb7-b04c-d0404a681f20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec7d656-1279-41e4-b0b3-9fab1138761e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59cbfd5b-532d-4715-ace5-44e18c2357eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31510f21-8b2e-4e48-9933-dd85f78cffc2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de166b98-2071-48f5-9feb-d0d6761fd8a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ee1c6d-d390-4261-98df-6d2b9b41588c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "556b21a3-5539-4830-9e9f-023289870cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff959bb-b920-4eb1-94dd-759ade362cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56bd5c4-8909-4ac7-b417-e479ec9dd66f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8c449e-de0d-47c1-8a2f-5fd0bfd4db0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213f981e-812e-42c6-8455-de41607358fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5dfa5d0-ee9a-4e98-ae8e-6b9b5fec0464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50aad393-0b5e-4d8d-8697-9acfdfa65bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6810487a-95fb-4d3e-9a64-780fb24039df",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565449a0-90f7-4197-a529-9b822be8664d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6678a1-c000-4a0f-bd0d-1f40c27612ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2800dc-d2d3-4858-8ae5-22c7ec857019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5867a23-6907-4c86-abcc-79a85c89959a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5380d527-84b0-48d2-a77e-deb073aed3d1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424c9bb2-d496-4406-89f1-e6baa9a2ce0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d09116-cbbc-48e8-bc93-8496f214ea25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529e33b7-9dc7-415f-aecf-f801c733333a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5927c611-6306-45e2-94ba-24e4954b5f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f6c5e8-4b04-4cb1-b06b-f5f96bf08ca1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6724e93-1714-434b-b082-a0003d376ac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "887fee19-4a9b-4d6a-8ca7-e5e3fbb3e143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12c24e2-5954-4441-a8a5-f074d5396f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c07107-16bb-401a-abd7-310354649748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7e2d56-8cc3-4d96-b429-3b37926bac60",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6394134a-f090-4fef-9a3b-7fd3a1ce48aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc906b7-dac5-431a-8d8a-c0d6eccb2d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d934b3f-80ca-4844-b4f8-62d2dae03052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d2ad1d-abea-4e35-8adf-1806135a476e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5749dfe7-1cc4-4206-af5b-541730bfc0b5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757b8196-b92c-41aa-a9e6-3d5999dd77ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46afd9ae-2802-40c0-a008-70b09ccef55e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff2e05f-d945-428c-ac52-b291bd1d8d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf8686e-1c1e-4d23-897a-bfb1e3889ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f8523d-35ea-4a1d-bbc4-cb9dc1a7f5d6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1c0ac5-f194-4924-8e20-ebc8e4ee6400",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa99c7d9-58d6-441e-b293-72593d634604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d406b67-db87-43d1-9601-82878a3f3adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21dc7426-2384-48de-ac25-afb66ea93d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27d196e-43e8-425d-af5d-8a89f6719a2e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d812128b-f68b-4ed9-930a-d770cd6a473f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc09d4e5-0813-4f00-95c1-46ed016bfa16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b35109b-0430-4e38-b512-891f6ce3614b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7bb0170-c2b5-45a8-8590-fedb42128f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3d9d51-01a1-4285-9ca7-067947b4cdfb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a98bae2-9e6b-429f-a145-479453508d96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2429dfc-12cd-4f5c-ab7b-cdc35b9a8392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "503d64be-7e99-4330-a8aa-a2db49b9270f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f5a0c1-4a31-4c29-a3e1-5b8dbbc5b2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8245484-df3f-4d35-8d46-291d5f5724e5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbd47d8-7392-40a2-9a2d-648d501a8fdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae9308a8-68db-40a6-97a6-7b590377500b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78647969-420d-406a-8e27-741fda86400b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6baeac8a-fd58-47ed-93ba-449966dd65ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067ff871-6b36-4ffd-b159-5367e644903f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ec5774-0232-4e0b-b4de-9084eb3de314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12e83b5f-aa59-4f73-8889-002a6aefc745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eceee635-98fb-496b-b24d-282d7a3a84f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996862f5-50a2-4cfc-a263-4c863fe9723e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3357e10e-4f7d-4573-bcba-080a4658aab2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9f9bf0-cb5d-4120-8ae5-002def2cf613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc61d8b4-1cad-4a1b-bf7a-0e617d8b0014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f846728-53a7-400a-b6a4-156b2c14be3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f4eb60-e8b3-434a-be83-57d272a66830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14afe80-8784-48ad-91fb-e7a16a2fbdbe",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e814db-c0e2-4eef-ad1d-4ac2f54fe980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c69d44ef-1155-457f-9cd3-3e39838d22c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bc0784-c012-4210-bf97-db39d5c8e5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21827349-9601-4e53-925e-70fbd08ea0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9337faee-e1c9-4b72-b7ed-edf2347de41d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33b1ed0-2d6e-4605-9b9a-78d9f609fa2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ac31ab8-8426-4394-babe-7048d664c9fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac57c67-9cf6-4cc1-bb96-e11047548dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4aecd58-57ff-46a2-9f66-f6d0b0f7517c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8fa4b6-b6d9-483b-8939-d20d2efb8610",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bb6d68-1469-4bab-a41b-fe88f34f7be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a959f1e-c231-4f59-9d0b-6dbb703ce902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635f38d6-441a-4eb1-a65a-6c0365fa63c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8b972e-0290-4e4b-a0a4-a299d78be112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86111885-e15f-41ea-a9d3-5ff4b5a4668f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6f312e-b067-47a9-bbd1-2ad354817d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215f99e7-b8c8-47d9-b65b-71e6c2cdb9cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5e5bab-ed14-4c30-bb7a-2d91b849e2fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10010025-46f0-48c6-8d8d-5a8aeec79407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5171459a-f7bd-47f5-90fa-4ef5164495d5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043cf51c-d626-4eeb-a1ac-660913a991e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bace92a-bd38-4f7c-a33c-4b72e985369c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "658edf19-315a-4eb6-be45-aaa0cae41acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d44f05-1056-4330-89da-0c9bdf2c51a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98940bf6-a38f-4919-b56d-d3cbe6e70299",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19928c6d-7bef-4e40-b97b-5baf5a227d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a94471-d57f-4214-8621-8161f96abf77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d4049f-44b6-439f-8939-fd745b0be695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86197351-e9fb-4c57-aa2b-c91edbf33530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1049af8e-0489-4359-b00d-af608579c958",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837423ca-8df7-40ae-af1c-70d97dde3c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82dc31a-d20a-4e93-a198-733533400748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdb3ec4-d1f9-45c2-8c67-020293838ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2877603a-45ba-4cbd-a862-2f9d2944f44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c850c0-4885-43cb-9422-069443eea19a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4d327d-19e0-445c-ac5d-808305784368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238ba34d-d63b-4b85-84bf-881959dec313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb66ac5-f643-44c6-bc41-f33ec5b4568a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c6a788-87a8-414f-96bb-a38ec3f14253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c333e6b-35fc-47a2-83bf-3e578a6ff65d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495ed6ef-908a-4b65-8433-54084c33fd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4c5351-2101-4991-9707-1ece2133aa33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ca0f71-43a4-4f45-9925-5063fcd0e2d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a1f5f2-fcd4-4fa8-96bc-cd16d7468a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b2fc4f-de57-4baf-91bd-39f4efc02db2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c1caad-a7f3-41b8-be7a-7953274279a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ade4766-fd9d-4fad-bac0-8ef3f4b09ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b05362-f474-460b-97f8-f64fd7f9705e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b17911b-b6ad-482d-a47d-865a05f042ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead5114a-767d-4f42-a3d6-10dbb8f24597",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101c3e46-4867-4792-97dc-7b66fd5cf152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5147f88a-1123-4921-98c2-f9f11b13f953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed2dba9-ab4d-4b25-b365-00408b7c3d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da79a938-75c1-4c2f-a960-04f855775351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d071c89f-cc3f-41ce-a61b-016bef192acb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faab3a1d-f666-443c-a216-f58aa57c8950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9a04bd-63e5-4c72-b4a3-132b1d95ba0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79b9d1d-98f7-4947-a35c-5c0bf525bea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02315a21-ffcf-4f19-a755-8ebea824b261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9e7f2f-af5d-4ea2-be41-1dc111dff5f9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3762a77a-4fb0-43f5-89af-c52a5cd3f9cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6cc879d-61fe-42b3-94b5-b8ff9c93e5c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ea88d2-4221-4208-82b5-23b6d0e8de86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c4f1b4-6aaa-4d9a-817a-ac0dc0b2e4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b129161c-5682-4220-8d76-74072f8c0ad2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994c04d4-b64e-42a5-b5ea-e94e202e797f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e69838-24ae-4b07-b610-f1c1edcf6324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffabfa16-a60c-41f1-8116-4981312ebfc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071519a1-be72-446c-96b0-34faa4b354d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9ea6fb-0221-408d-b501-cacdc048edf4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21589eae-7833-4660-ae72-1e4e5769166e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03bd44da-7fbc-4ae9-98d2-98aae3310422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3e2497-75ed-4666-9456-4919dfa110f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86bc567d-db8d-4c97-913b-1816951dad3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc95e5cd-d7fc-44f0-86b1-79be7d1b58c2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4c7040-a40c-4d23-b5ac-3a69726e2ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede35d7b-6c33-438a-beaf-fbafb716f059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b930ef83-abc2-4ffa-a2e0-b22bf24a3c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c6e43b-1637-47dc-8b3c-cb35705d4768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ea86fa-65d7-490c-9992-206ec26475d7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ac259c-9195-4946-96e0-95cdc00ec1c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd56fd6-39d8-4ca2-843b-73a207e01719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28c475e-4860-4244-84a0-8fa133ac3664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74dff5d7-aa41-45de-81d7-257e273f3372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b51752-cba5-4cc1-9bc4-d7ce0bbd4880",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f3bd48-ec2c-4f2d-8df5-73584e66f708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7dde31-ee31-4476-aa12-8ab537d0f8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdcfd03-b2d7-4413-9e8a-fcd224bed145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23600b45-d616-4450-b3a2-2e35eb8c2c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb01228e-fe3d-4a88-8ffc-1f8a43d06b9d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d62391f-1698-4960-b986-6e06de571dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f88b185-17c4-42b3-969d-1ebe0ed703a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22891f82-5af6-4797-9f4f-b1f6e199f9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c64f0df-23f6-4b63-b196-e908912c46bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a92adb-2971-4aa0-843c-742af2140d23",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5097a98-e999-4a1c-91f8-3ab27bfa70c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f5327a-6359-4217-8f75-e472318275d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "953bc5b3-121d-4e81-b888-332bea48ee95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b47637-ed5a-47ba-ba2f-350714e2a5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874a9f94-ed9d-49a0-a587-57e6e01df575",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d67e7f5-3e73-43a9-8b58-2ab5ec485429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5b343b-54ac-4b68-970a-a77469fa913b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b923e1-fad4-4a11-9ab4-bde08c07b9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22947330-e408-4c96-a42b-98a548e9c040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407528de-5a55-4aee-84c1-5084d867f596",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93531c1-5b64-48ff-adaa-124a495a47a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d03773-9d65-46f0-b56f-4843259de522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29767be2-6807-42f4-9783-c78f0aaa631e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1bb7abc-4481-42c2-a9bf-5d9e8b4650e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f29e97-825d-45d6-ba5a-b8db76b60336",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddad5bb1-2ca6-440d-ae57-6bcae8050ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d101ad9-2705-4ef8-83be-eb7be4c36b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e7f156-17cb-444b-85db-c7e9f7d272fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cddc06a-6508-49aa-996f-7676fddf8ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8de9222-cc59-4f15-a19a-c3dad22ff04a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ce8339-00eb-4fb3-8396-61995107163a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f9477f-5aa8-4898-afd3-d1a90bc4078e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bbba22-bd3a-40af-a1cc-08c900949790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f8d504-9e6c-42b2-a27f-de3857845043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3093013f-4252-4aa6-a27e-f616ff9923ee",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1f06d9-90c8-4ec5-905f-adbf02503530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc92fabb-b0ad-47cf-9fcc-9e0799d074a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cdfdae-a860-41be-aca4-b7cfa30d21cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cb2ef3-0cf7-4c66-83f2-9a731e6ffe0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1debeb83-11da-49a3-9779-7ce4d7fbbd7f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8a015f-1283-4ace-ad0d-abb5f73d16c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0c4174-3bf2-49c4-b756-af7a1c327353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1170b2-bcde-456c-ad3f-704f36755de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ef77f5-b038-47de-b8e6-d535f7ca2ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7584d419-a386-46e9-b7b5-1039e846ab2a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50790e39-ea15-4fa4-9968-12d17660407f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c6b032-20c8-4010-840f-61bbb50ed4ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cf0585-3a89-4a74-a293-048456bc9f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1489a521-10b4-49ff-b59a-630c50956f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0dee82-b8c7-410d-94f1-dd12369ac2d8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441f6997-8d5d-456c-9277-d0edee5b9849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2c3d2a-a0c5-437c-a1ae-1ab985213a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0be0ac-91ae-4eb4-bf4d-a39ef29f05d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb25c67-4f3c-4c4a-83ca-c795af0227f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9b5c37-b822-4953-b9a3-39467e3facf8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7983ec9-93c3-4386-bee4-34500ece7bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf5ae91-2621-4c49-9fe9-4cbbe4141cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1809cf61-eee0-4d1d-ae1f-2ea1bd0d4521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd412cc-0427-4f43-a0c3-3f95585fbf0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e521da1-4651-4bae-9587-0105a0e7109a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2832106-e945-46ea-bea8-64abb408a1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079be6bf-fc19-4206-a01d-bd36ce91e621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955f5edc-4075-49fa-a7cf-5fc832e8f350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9febc8-e974-4655-b1b0-097216c70c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6756effc-5482-449f-afd3-2a90f99bb3f3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df725bfb-11ba-4b05-b8c9-f1f3a021ab83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df486914-ca30-45ef-84c0-efc0a7df26c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b77a3b-0975-4f20-b426-1dfe6f30ed34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f6bbb3-9f91-4773-b8fe-d9e6e3f60608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c508d6d0-77db-4f36-afb0-922813935373",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0708f93-950c-42e6-a057-375dd8aa3938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33df27f6-88ca-426c-aa17-4c3dbe0cf164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32ced83-2cb7-491f-b441-de2f695d9619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e05738-c304-4b3c-8f5c-ac2074ae548f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1510dc-554a-4712-bf0c-ced02fa0855a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1067aa0-72e9-4220-b801-6a3b38e95a88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4ff24ef-162e-42bf-ac4d-df5a307e208e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb39c83b-7147-4342-993e-b567c74d757b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192e619e-3494-4ff4-b394-bd2a7833dbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e448b5-5840-4846-86ed-4fe0cee08f75",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee00bc6e-29e2-4669-9b57-4b7f3c8c7eda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "939165fe-7021-4ec2-9f05-5337a6864f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98291bd5-ad84-444e-ba01-5b193e771183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52418c7-2a3e-42d9-8cc5-ef55039ecc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc70719-c54f-468d-87b2-b5dc5149aa07",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921e34bf-8820-46fa-b92e-6d6df891a1cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98287ff4-2fa1-4452-8db4-c465a9c0765c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae21acd4-7b20-4628-9e29-06acefb5fcd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e000270-747f-4ee5-a035-89b9947efe33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a23086-81e5-45c3-a5f4-ff127ecf1f92",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d40f387-1dc8-46eb-b508-0c64375e7902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba62018-334a-437b-b5d2-017c5ff9ca75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4e20c1-7eb6-4731-b2c6-6780cd78d995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0db566-e34e-40a9-853f-154161b27e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036c8a5a-634b-4ae6-8fe3-6a388395362d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba47810d-0d72-4c39-82b5-c090f76826d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b6364c4-725b-4183-a707-59a52e16abff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51cb122-cb38-48bd-be3a-15bd150d99b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d49cc1-cfee-4a2a-be8e-617550c8dbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed62adeb-0774-4d8a-a83a-1d072a27768c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f93f4e0-2451-441e-b7f2-a004dc37c13b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b546e013-5af3-437a-b5cd-daa73dd076d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5346214a-8b1f-4ad7-8ad3-3e03e105bb6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1209b9f4-c94b-4fb0-b5aa-cdd259be9358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20764bb-12f8-4f64-8d5a-416ac51e9637",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84a9627-6eff-40ff-a582-d0cb683b4c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e21b5415-a331-4d33-9720-e7e4db8e5a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3eb6ac2-f485-4396-b9eb-40f0d9194a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58394dd6-7f9d-4cab-8c56-48fd21453083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366b7ecd-8d8b-4898-8133-b0607ec3761f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f53898f-85c1-4601-bef1-0c74ddbe74f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da740c34-2f06-4f5d-948a-fca8c991c61b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f7288b-b948-4713-97bb-edc901bfc52a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2205b9e9-6c51-497a-b9d3-c3c5fe34d93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7f9b2a-c3db-42d3-b993-2a443e5cc18c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d84912-e69b-4301-9d91-84eaf151af9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "923a4b18-c98f-4ace-a891-002d2a9c4ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae34b7b1-3b82-4cbb-94c4-a2e6e4ea4b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c44e940-a56f-4dcc-83a7-c8cf8bdd7b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8419d82-3444-48f0-a66d-7c00a02c9823",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a54b7b-c281-4eae-bdaf-b54ac82229d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2a689ed-06ea-4a03-9ed0-06a433432458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ff429d-f5ce-4cd6-bf12-7b9457450ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb68362-b97b-4f3d-b223-a6e628b9f2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec013509-505c-41e8-9f9a-115f6ee6bea3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c56d7de-2250-4090-ba13-8edd9a4b0f2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf85835-d174-487a-9755-72339f59a2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460febdb-543d-48a0-8feb-87300e21f3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f6892d-c610-4ab2-8475-c9bfca6794da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a4c601-bced-497a-9003-39cd48c54e97",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518f6284-5584-4fc6-a861-9b2aad4b604e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1de0bd37-5585-40cb-bcc1-d80d0018c6cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26e8b64-9adc-40ec-84a1-d0ee43965686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56a84f7-073b-46fc-9cc1-d20e0be1c775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23df7f90-56e2-4d2e-be17-801ab7f35dc6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9c5140-fb8f-4cca-8fbe-807e3fa0e1d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f398409d-dcfb-439b-b731-3b622245301c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "022a9c98-3895-469e-83cd-7d3688fe0ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65760d7-1453-47d0-828e-4033f68a1f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78bdf1a-612b-49ed-a7b7-f5858802fa0d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a0f677-5961-449d-b1c5-1bbf26fb915d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "573c8bf5-e3a1-4be1-8e5b-d0266fae6985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d24bab2-e0b3-4e88-8dde-e38b9d48e94d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469b9a55-7dd6-4518-9c09-6f71473e51e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70486cb-089d-462f-a0a8-2f44dce9f544",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c4de43-9f3a-4b10-aeed-7725465d0a90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6091ffa-4b67-46ab-9bab-38a986deb696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc8e8e7-9acb-4c44-8fb2-a8c4c0ec290c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b2e161-6249-4fb7-934d-1f4bd05d9530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860181f3-41d1-4a23-9df2-32a0524c8235",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e541b9b-327a-4d8e-9294-ae6ee6ab79d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e885173-d671-46fc-bafb-736e2af3f048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a76090a-60f2-4d54-b167-23be09a7ccfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52bda721-7c8e-406c-9364-2aa6c1a37409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f17bc1-f422-4224-a993-9bb8962322cf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632f102f-e115-4c70-a066-3216c545f58c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26002342-1c9f-48e4-801a-5198a68159bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df6f7f2-d220-4b90-b008-46477f61b928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e558853b-c996-4bfe-9046-3567e98ff2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f554a0-a149-421c-95cc-de9601c1fd3e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26dc909f-6e0b-4560-aa28-47208d6458bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35aeb2d7-8a89-4271-8a6b-7d9100aab928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58977268-4f1d-456e-b44f-f3ef910310e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903072cc-c68c-4853-8c38-e7e3b05b5bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87821373-ed53-4a84-8a2c-19db07a7781e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dae5398-d392-4a04-950d-9bb7499840ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c79528bf-2633-4aca-a9d4-9ca7375d4c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e570680-4d03-4803-897b-2bd169a40661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5335aa99-33ec-4300-97ca-10a2423f5bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2dae320-a510-48f0-ab9f-400c52cc222e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722ab214-d746-4ddd-9f55-34fb22487cb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2da51384-6342-4b33-a176-04cd4e8179d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebaaed04-ee44-4c7a-99f6-f584ab56e79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86d9ce0-c9c7-480f-b971-b557e497980c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d98da09-28b5-48fc-b5a7-40b8d8674287",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7caa27-b51a-4c43-9dd8-656577f39258",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4b7fb75-b27f-449a-b3b1-bdec338a4b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf62dfb1-d338-48cf-95d1-a2859154e6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6167ddb7-8bd9-4832-ab7b-cf2c4fed6603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f7dfb2-c3b7-42b3-8ac1-549bfe9fa12a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40be6f25-e9c5-43ed-9379-1a89826a8d97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9853f6f2-eeed-4515-bfd9-bb7cd7ea09d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24485a8d-0fdc-4d16-b63c-b7e22fc2aab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2fdaf9-4058-4cf0-94b5-cac7d6f72181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8650b2d-b413-4a56-b57f-c2988459f556",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a979012-bf9d-4e29-b3ec-7429f35d9049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f191228-c19d-4dad-84b7-20c1851c391c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6b2030-922b-424e-b5b4-58d6c749c5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6baf8392-f97e-462f-8261-a34f2cf485ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b7415e-6dc9-428a-bca8-f606236d513d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed82b5d-fab7-44b9-916c-175258b33a7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df70be59-f782-467a-ba1e-a2ce82441a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6045827b-24b9-4ee5-a9d1-9996a71af9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6635615b-e60d-45ec-bdc4-ded0e28b75c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82182b24-3afb-48d8-b847-4a726a91d85a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f60e22c-7a18-4cea-a028-367017789499",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53354eea-755f-4acc-9d48-082bf24f501b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82ff45d-a882-4616-b4a3-ef8fe215622f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d8d12e-88c5-48be-a082-5f8e6de9703e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20f0be0-0123-48f7-ae62-228819781faf",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be8f513-fd85-4fda-8606-8ac49811ec82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c69e79fb-b3c2-4c63-856a-8a29b37a9870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c87872-1b82-4c13-b516-2e3b85c1f708",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd772dd-9f09-45b5-b528-f91c65f01eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a9c824-3808-493b-b8c2-0c3020978300",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f61c5fc-263c-40f9-b933-a8b3358363a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c01367e-6c27-4d4c-927a-3ecc81a8710e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d203f5c-de9f-4baf-9c59-5df9566b4209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366114f2-8df0-4db3-bb67-6db0808ec50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c976b7-4936-48c7-9918-fffcf5977155",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a4e3ad-557b-4678-a683-fb4edbb13aa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5986a44e-171f-4197-8ce9-c402f7c2a737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7433edd-5b6d-4699-828b-099c95474919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370e4bfc-227b-4dc6-acf5-973e7f1de5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1079085-6380-48d9-bc4d-831884f549d4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5bed6d-930f-4ab8-9904-be1aa915f1b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45a2b9b2-a0f6-48a3-9b94-11b7b01e95be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158c5398-1bb1-497c-b5a1-8e486c25006d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ea6e1e-2b49-41e2-b280-cd888d9d05a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eeacf16-0986-4480-a150-bf67c31718cd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7369a4-3b2a-4bb1-9ba9-8c0f2c2b9bbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37e7e910-0a78-469e-947e-69d2df07860d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b901a11-4fbe-44e4-a41f-db8483d35146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d962bee1-4fa1-4287-be8f-51964e7cb90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc12c261-16d0-4c80-83ee-1ad154477501",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828b617e-7c42-4c2b-9b79-e378fee810ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9892d8b4-bcf0-4123-9295-d10648895c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a7e615-96d4-493d-bfb5-c6d8ccb3dde7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf3b645-19f9-4354-a53d-5619098875ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aab4092-6fd3-4eb2-9fbc-76da94972b9a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828a6bed-2a8b-4fd2-900c-be0c7b560450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6ce44ed-96fc-493c-bb3f-35eb879db1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8be24c-fa8d-4b15-abcc-55ee3488277b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463c505e-14d8-4a92-93d3-aa77e3f0a07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d9aed0-1edc-4998-bb9c-d593b4115d9d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd5152c-ef97-4ba5-ae9c-1d2659d72e0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95f55534-c4df-40e7-9cab-dc90a1e8a87a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577dc19f-f5f5-4545-8a56-a74948b196b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48201ef-f75e-4b76-a4d2-97017af96518"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b589c72-4678-4510-8b74-6b9e21ee865d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee2876c4-0af9-451c-8d73-456dea25d43d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df74f6da-e236-45eb-a8a3-1c1b4aa1800e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "559c8973-2bae-47ff-80ab-ac49707dd28b"
                    }
                  }
                ]
              },
              {
                "id": "a7b70f16-7511-4a91-9ca5-b48e7435b46c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f401dc24-5f7f-4cf3-8a40-63735d3021e5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f11847-5b4a-4828-90d5-dcb2c6d7fa23",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "58df12ea-b1ff-4695-a331-6d989274f239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a735fac-0fa0-48c1-9d11-6f7ee9021e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7bfe7174-0dca-40ff-81ae-142d7b2bc479"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c77b00db-62f2-49a2-9d98-da3c3eb1c5c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04dfd5ac-1e23-4cc8-b629-4043b467fbfe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8bc69fd-6087-429a-812d-d994ce401719",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba2d638a-678c-4b01-b70b-3a3d3817d0e3"
                    }
                  }
                ]
              },
              {
                "id": "5ee69116-168a-404a-a7bc-86ee9b5410c1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "17b73f1d-700f-4f29-a079-78eb5f65b903",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785f3ba9-989c-4e5f-8970-6a9e0f8858b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ea804433-313f-438b-b057-30b8ed6204bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdbf60f-7b26-4be2-a84c-2ad050d58d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009be423-18b1-4874-a4fd-3ee75f1103f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d10b70a7-84ce-49b5-9147-6b648dda2468",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd641b0b-0c3e-4a77-b4ea-e3e0f30dcb2c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59b1fc67-5e92-4e38-af55-d29259b04bf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a484fc1c-6e2d-449a-8ee2-a07016d511c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1baac752-8d5b-40bb-98bb-a665feffe22d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c92fec83-3912-4abd-9264-9208f8803a8b"
                    }
                  }
                ]
              },
              {
                "id": "3152543c-c212-4f74-9b2a-61669d678d20",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb81ed5e-53b9-44bc-8fb5-58625b9fa9ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7bbe365a-8e6c-4e7e-8d70-d14b44e63c15"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39f9448a-604d-469a-b551-efbe7ecaf9e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33888db2-1208-4b19-9fad-a54a65682a0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c4df9ce-70d1-4f38-91c9-397f033438ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a89fbdff-da5d-4c7c-9d25-a898980bdbdd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71ab6ce6-1c42-499e-b975-28348e60d3c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77310240-9df4-4aab-85a0-47205bfe77eb"
            }
          }
        ]
      },
      {
        "id": "e0936c12-620a-4323-99b7-4cfb348cc2e0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f4504cf3-8961-45c3-9b76-0de0ad9c4cff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "66154817-574a-4928-9e8c-949f1cc98a35",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96ffdeb8-0f06-44fd-92e4-1c21225df3ac",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370101a5-5f75-4c57-bb54-247a5baa320d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "70b84367-9347-48b2-b83b-65c38b28bc4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e02b01-f960-4f67-818f-f707dc2e359b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f762e49d-b967-452b-890b-eac09b5a1c93"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2aaf3511-2b36-4e8e-afae-5dd2b5a014b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a13b6fa8-d0b5-446b-a74b-3c58a4aef717"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "664db477-bd25-4469-85f8-6e6a89bc5db8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c989c617-39e0-468f-89b3-0d23949e3718"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8eea45bd-321d-4454-b3a7-797ffab6c320",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4a9513fc-00fa-4147-95e5-63357998665d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d0cb4f2-09a1-43d5-a0ad-2f3130e4c130",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0abfbe82-7fc7-4e5d-9348-b588a04a8b95"
            }
          }
        ]
      },
      {
        "id": "b319a979-dcd7-408c-9466-678609452203",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d414a815-bd13-45d4-85cb-875f4d18fd25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3672d53-a6af-4e2b-b1e3-8655134e2bef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a899838b-eab0-45de-a6b0-9f1b250f9384",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ea9301-b5f6-4597-b0f7-223ac690d714",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a88341ac-6d32-4f63-b8b6-d11f42f2e67b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd0cde6-fed5-430a-ad9c-d21957ecc8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f5c495e-c2fb-43b2-8af8-01bb4085b5a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbdedc67-ed8b-4640-898d-48214b128b33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ca9c30a-5d6f-41a0-8242-2466e996953d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5611b7f5-02cb-4c6d-bdbc-c47712735c5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9af6591-3ef5-421f-9477-dd8a29a62715"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00cfad7a-8c99-4ab1-8f83-c67160206ffe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3e2b7952-5a3e-4105-b5b5-03fb62cce48a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d777d634-c65f-4fec-94ed-e77a93865fee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "430aa78f-90d8-4876-b6ea-ad4375f68685"
            }
          }
        ]
      },
      {
        "id": "fb041362-e28d-4a0e-b8b9-dc666dedc90b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9ef86ab3-389d-454d-a391-50050c6a661f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7a9fe45-707e-4961-87ab-05c8a5fca628",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78065a8c-e6f0-4457-ab79-de42832f963b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd842d79-a52d-4e79-acd9-c13e6dd44491",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "250acc75-ffb1-401f-b354-6462aa154909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc06d814-b7a5-4978-a7dd-2155056cb75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e3eb708-6cda-41f2-a038-894100d6aedb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fde84e64-4b50-4e3e-b5fb-0d068f73c5ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4269c075-5c72-415c-8d2f-894b3e945e8b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a99253ba-665b-48f0-8b00-6da5e2ea0520",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fe00d1c-54a2-466b-8dc3-1a068a00a976"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8825b153-07d6-4910-81cb-fb9759e57a7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "50a2d4f8-9daa-4270-bd53-65bb090fe060"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cbf5e48-318c-479d-8cb4-a6b44246e054",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d437f545-371f-48cd-9ae8-d85ff46db128"
            }
          }
        ]
      },
      {
        "id": "9ff3d5b7-982b-4f3e-8487-7565ea45d6ce",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1510600f-64d1-4a05-b3e0-5141498774dc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f45d9f5-0318-4d1f-933d-f57442853854",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "71cac10c-0b34-4042-b658-57800099bad0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "172c45af-1f7b-4ad6-a734-f8cf01280a43",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6eb5861-faa4-41b5-99ea-be9200a283b4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 5.656140350877193,
      "responseMin": 2,
      "responseMax": 251,
      "responseSd": 17.518942305090032,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703205314510,
      "completed": 1703205325054
    },
    "executions": [
      {
        "id": "b5324b17-df6b-4365-84bc-4f99a6e85edd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "82100096-8e12-4b2a-b6c3-30631f6a4a8b",
          "httpRequestId": "d0b8038e-71ac-419b-89a7-bf3a7c7748fd"
        },
        "item": {
          "id": "b5324b17-df6b-4365-84bc-4f99a6e85edd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d0bd9d9c-193f-4f20-950b-4bfc98fa846d",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "7d11aeeb-1892-4306-a899-657c02af9e47",
        "cursor": {
          "ref": "874efa74-5e7b-4040-88ac-d5318d6edb6c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d6166545-2c3d-4b2c-8885-9c308758dae8"
        },
        "item": {
          "id": "7d11aeeb-1892-4306-a899-657c02af9e47",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e6ec7862-ce1c-4536-ae52-d1e0e1cce47c",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "b86f3124-69b1-47fd-b4bb-b1b1b6118ad1",
        "cursor": {
          "ref": "187713d7-44e8-4c51-9f40-2351a3751758",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c001c813-f536-4c9f-912f-1515e11aa811"
        },
        "item": {
          "id": "b86f3124-69b1-47fd-b4bb-b1b1b6118ad1",
          "name": "did_json"
        },
        "response": {
          "id": "abac8670-cdd0-4405-8ed8-7a066727a99c",
          "status": "OK",
          "code": 200,
          "responseTime": 143,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b412218b-82e7-4f0a-b738-49af7b6deea2",
        "cursor": {
          "ref": "94a44f65-5f2f-46fe-ac1a-30ec92719abc",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d17286dc-abba-4fe1-8cc6-1845326dfb6b"
        },
        "item": {
          "id": "b412218b-82e7-4f0a-b738-49af7b6deea2",
          "name": "did:invalid"
        },
        "response": {
          "id": "18cc9602-fb74-41f4-8e1e-f5c485e34f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b412218b-82e7-4f0a-b738-49af7b6deea2",
        "cursor": {
          "ref": "94a44f65-5f2f-46fe-ac1a-30ec92719abc",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d17286dc-abba-4fe1-8cc6-1845326dfb6b"
        },
        "item": {
          "id": "b412218b-82e7-4f0a-b738-49af7b6deea2",
          "name": "did:invalid"
        },
        "response": {
          "id": "18cc9602-fb74-41f4-8e1e-f5c485e34f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8370ebeb-cdea-4048-9ca3-275e49a721a9",
        "cursor": {
          "ref": "ab256212-c2de-40a0-b1ae-bfce6aeecd2a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c4a1f5a1-4665-490a-83f8-6542f336bb97"
        },
        "item": {
          "id": "8370ebeb-cdea-4048-9ca3-275e49a721a9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "445e350f-6c95-457e-ab5a-647c786c900e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c8f090-bdaa-4326-9dce-52febd0505d2",
        "cursor": {
          "ref": "4b9845b4-ec8c-41fb-8441-9fde6b3145b3",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f0ef6f4d-03ca-4d43-91e6-dc82b4cadc78"
        },
        "item": {
          "id": "09c8f090-bdaa-4326-9dce-52febd0505d2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "603756b1-4076-4828-be09-9677ab628efc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1e8528-27f6-4ede-aef8-92bc5386c2a7",
        "cursor": {
          "ref": "a02b45bf-17eb-42e4-82e4-b03c743b0641",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "10fc0db2-6815-47f6-84a3-d071846e8c60"
        },
        "item": {
          "id": "fb1e8528-27f6-4ede-aef8-92bc5386c2a7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "38267d75-91b0-45a4-9a32-b29d874f8df2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9ae51e-815d-4190-aaa9-876816bb9d01",
        "cursor": {
          "ref": "83b586f3-be07-42ee-81fa-b5b3e348ac15",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bb579ba2-ad84-40e4-a87c-1e0a22d5e3cc"
        },
        "item": {
          "id": "ba9ae51e-815d-4190-aaa9-876816bb9d01",
          "name": "identifiers"
        },
        "response": {
          "id": "7fc33d14-7f63-4533-9664-14ee1ff29aa0",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0b805b-4922-4098-9707-e16d68394aa9",
        "cursor": {
          "ref": "48d2e5e3-9347-4a81-8ca7-5d63909e48c8",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4d7595d1-72c7-48cd-9351-89c43a6f0f92"
        },
        "item": {
          "id": "6f0b805b-4922-4098-9707-e16d68394aa9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7127b167-547d-4622-b4ba-840fe17efecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986be1bb-4c9a-4375-ba5a-0f5ba6b7b520",
        "cursor": {
          "ref": "24bd4548-4eb8-4109-98d6-fbf5b937c0a2",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5b25c11f-a256-4e49-a7f7-54025fea6273"
        },
        "item": {
          "id": "986be1bb-4c9a-4375-ba5a-0f5ba6b7b520",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b2fdb93a-5bc4-47f9-b99c-51084683feec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a2b1a5-6677-45b5-aa45-a2c2d309eda3",
        "cursor": {
          "ref": "5290cafc-012f-4231-af37-f8c286523cd1",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "64bb96f9-61a0-4ac0-b493-3c71c99ece0c"
        },
        "item": {
          "id": "e6a2b1a5-6677-45b5-aa45-a2c2d309eda3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e2361a1c-cf2d-4006-81c0-e5ea428ecbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4363a342-7417-4212-978a-50ccbe38c624",
        "cursor": {
          "ref": "f7d88b12-470f-47c9-9a32-210b7512e731",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1643c06f-356a-4dea-a879-19eba8642e75"
        },
        "item": {
          "id": "4363a342-7417-4212-978a-50ccbe38c624",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "865cc2bf-174f-46ee-8f45-d164d63f69fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573f4199-d81f-4810-af62-17e83b6e14dd",
        "cursor": {
          "ref": "deac0b90-5fe6-4592-9fb3-03cd85131ad4",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b6a216fd-d8bf-423f-a884-6c02d06bf736"
        },
        "item": {
          "id": "573f4199-d81f-4810-af62-17e83b6e14dd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ec1eb5fc-ac8a-4df7-88a1-87f5134fb092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168acd9f-a69e-4326-ac2b-1b63e9f0e488",
        "cursor": {
          "ref": "3d52214f-b71f-4a79-8f92-13313e64239e",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "908307a1-d592-431d-b3b5-3cd91d7b1c80"
        },
        "item": {
          "id": "168acd9f-a69e-4326-ac2b-1b63e9f0e488",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fed282dd-7502-4517-8984-e12ea48de223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e44d03-bf89-4379-8201-f1796d86dd87",
        "cursor": {
          "ref": "f68369f8-645b-450d-9f04-a6ca493f4c29",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fdbbb9e8-3198-41b1-a2c8-288e458145ed"
        },
        "item": {
          "id": "99e44d03-bf89-4379-8201-f1796d86dd87",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1b91557e-c4ad-4ef9-ae7e-fd565f103b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0644f14c-092b-4d19-b626-6c04e530736b",
        "cursor": {
          "ref": "75dbefda-222b-404a-9107-d930404d7a40",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5371e1bf-9bfd-4680-a360-f3c8d85bd6f6"
        },
        "item": {
          "id": "0644f14c-092b-4d19-b626-6c04e530736b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "11a4a384-a54c-43e3-8ec0-110119fef9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5363fd6-1893-4956-920d-6a0cd3e90628",
        "cursor": {
          "ref": "e18909aa-578e-4f17-a03f-9b52d6f2ef46",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "05f02742-82d6-4846-a778-e6b37dc23ac5"
        },
        "item": {
          "id": "c5363fd6-1893-4956-920d-6a0cd3e90628",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "210f4cf2-f09b-47d2-b397-c18055580616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4614f064-9435-482f-b3d2-346d9fe3c64f",
        "cursor": {
          "ref": "81930297-8ea0-42a4-9a64-659a5beb85bb",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9bedd93e-56f8-4e4c-9b6c-284a611951b4"
        },
        "item": {
          "id": "4614f064-9435-482f-b3d2-346d9fe3c64f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c804cbbf-8067-48ca-a842-d15ff8b04c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6213789d-c0b2-477c-928f-ffd52d954e9f",
        "cursor": {
          "ref": "015c9ca1-1928-43a4-b4f6-16ad9965ec37",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9850dec4-bd9b-48c7-9d78-76b3e41b2e6d"
        },
        "item": {
          "id": "6213789d-c0b2-477c-928f-ffd52d954e9f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fa193b56-d05d-4f33-b6c6-a2c1ae02f05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edd44e4-d670-4e38-9645-633c1b7cece0",
        "cursor": {
          "ref": "76b290b8-e66d-4a5a-a25c-5a74a3ef8853",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fd3f3336-c72b-478b-bfce-0bdcc0f26465"
        },
        "item": {
          "id": "2edd44e4-d670-4e38-9645-633c1b7cece0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "86afba60-9be2-42d2-9f53-095e2bedc310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b81d63-5d7d-49eb-878f-93312b06143e",
        "cursor": {
          "ref": "049e3e4b-7b97-4c69-9b8d-dc707cfc133f",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b636a812-be2b-44b2-8533-fcb41623d8ff"
        },
        "item": {
          "id": "d2b81d63-5d7d-49eb-878f-93312b06143e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1798537c-36c4-469f-b4c3-e7adbc9d2616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba14d27-92af-45b7-a40c-7b3d8621d05f",
        "cursor": {
          "ref": "b1fe9c99-368b-4d1c-971c-86d0da9c932f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6c37c12a-3371-4227-93e0-706fe34c5274"
        },
        "item": {
          "id": "4ba14d27-92af-45b7-a40c-7b3d8621d05f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "78485aa6-6dc5-4385-afaa-72e372eaa503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5153c8b-e3e2-4950-be0a-33a44c454730",
        "cursor": {
          "ref": "b8999bbc-a6ce-4b34-a41c-2ccd08a3054e",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "06cc35aa-a432-4a69-a1f3-37e278bfb2a6"
        },
        "item": {
          "id": "e5153c8b-e3e2-4950-be0a-33a44c454730",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2b4b8a2b-398a-4330-83c9-c24d05e3e9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d57ae87-e749-469d-ae17-ce79c03a9563",
        "cursor": {
          "ref": "74070f10-a150-4c4c-96b3-4820a229d646",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "47d5c912-1e47-4536-a697-2e6a0dd1b345"
        },
        "item": {
          "id": "1d57ae87-e749-469d-ae17-ce79c03a9563",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "034596b5-e871-4b7a-ba58-553eacc4ac35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dd235a-728a-4dd2-bf3a-77ada1977587",
        "cursor": {
          "ref": "bdd3c304-7a47-4e6e-afd2-94c82fdffcec",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3af6629d-6cac-49af-a0f9-52eb9e8b2906"
        },
        "item": {
          "id": "33dd235a-728a-4dd2-bf3a-77ada1977587",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8190f721-5a28-455d-912e-d41062cd8624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b54f66-98be-40d1-9bfd-d065b9b2c4ca",
        "cursor": {
          "ref": "873c2663-59d8-4cca-89af-9dc3f07d9f5e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a5132485-cd11-4c8f-a6da-f46397732a8f"
        },
        "item": {
          "id": "25b54f66-98be-40d1-9bfd-d065b9b2c4ca",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a7ff3f0a-b7df-459a-8911-09bc9acc80e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4376517e-8fa2-4813-924c-d1fcacc3c552",
        "cursor": {
          "ref": "b10f6669-cc38-4866-b5be-e8359a1cc70e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ddac87b3-3aa8-45f0-8e6e-f09433267556"
        },
        "item": {
          "id": "4376517e-8fa2-4813-924c-d1fcacc3c552",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "62484f5c-cfd1-49ce-a609-c25b56b8e15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d124f433-1970-4eac-9406-379c15cea729",
        "cursor": {
          "ref": "f89c1bec-c231-404e-a7bb-51d07d4e54b3",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a31343c8-08f6-42d8-a452-ff3ff5148bc5"
        },
        "item": {
          "id": "d124f433-1970-4eac-9406-379c15cea729",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0952adae-a34f-47aa-a7a0-742deb171ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42873919-a1ef-4891-99a2-8191067948a5",
        "cursor": {
          "ref": "b620f787-c3f5-431f-9ab5-49ad1c059ab7",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c45fae08-2868-4304-8a8d-c593321585e0"
        },
        "item": {
          "id": "42873919-a1ef-4891-99a2-8191067948a5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b1283fc2-0cb3-444d-ae49-1b91353df468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3333451-c901-44a0-bdd4-7626a3dee5a6",
        "cursor": {
          "ref": "5eeec55c-9ebc-43c3-b93b-1ac5aac045dd",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a11fa5ba-299c-4035-a940-01bb42d40a21"
        },
        "item": {
          "id": "d3333451-c901-44a0-bdd4-7626a3dee5a6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5ab2e76a-4c74-4881-9bf0-b51a3bdd9f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ab7e0e-7a8f-4da8-b741-1b96f326767d",
        "cursor": {
          "ref": "06089a1a-74cd-4ddd-a652-3c41d0c6c278",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "450306ae-1220-4471-89cd-8792d0cd6c83"
        },
        "item": {
          "id": "a1ab7e0e-7a8f-4da8-b741-1b96f326767d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e2b7f537-5cd0-4842-8771-679018b76446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d77cbd6-c73b-4768-acf2-b9b440d174a5",
        "cursor": {
          "ref": "2481ed5e-d804-4ee0-9107-dc91950b43fd",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "56ae1b26-f5a2-49b2-b108-13f3fc2a7b9d"
        },
        "item": {
          "id": "0d77cbd6-c73b-4768-acf2-b9b440d174a5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3cab87fe-7cf2-4caa-8e82-45af272e9ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75040b1a-317d-46c9-bfc5-4509c86ee1fc",
        "cursor": {
          "ref": "5b52bb49-5f98-4694-83a1-00dd5cceff0a",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3eb6b717-a9c0-4090-97e8-458a7f6e2ae6"
        },
        "item": {
          "id": "75040b1a-317d-46c9-bfc5-4509c86ee1fc",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9bed8c58-d8dd-4887-a2d6-1386e31622c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9723f909-924f-4568-9b4c-240a2bb0051f",
        "cursor": {
          "ref": "26fc83db-b112-4002-b656-a317d7cbaa17",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f06557ae-480f-4683-8bda-9e0937055aa1"
        },
        "item": {
          "id": "9723f909-924f-4568-9b4c-240a2bb0051f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ec099b6f-8f3c-4669-8dc2-5da7f03abace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5689a907-0563-491d-b1cb-5230ac1dfd13",
        "cursor": {
          "ref": "360db0ab-3eb2-432d-9f95-546cb116d68b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "dde1b97c-0175-4c63-8c98-553aca73ba13"
        },
        "item": {
          "id": "5689a907-0563-491d-b1cb-5230ac1dfd13",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a3f8e6cb-ac43-4eee-a60e-e5e7e41e8a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ec70c9-c9d8-415f-be8a-ca72a02d2800",
        "cursor": {
          "ref": "82947e02-e445-430e-9df1-c706ebed6e2f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "34429991-f8d8-46e6-b082-76680ebe4cf9"
        },
        "item": {
          "id": "c3ec70c9-c9d8-415f-be8a-ca72a02d2800",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "50c3e13f-0f01-4737-aaac-bdceecf0c579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca3a63e-a16c-4220-8b40-cb4859836d21",
        "cursor": {
          "ref": "f70bfd28-762c-42bc-92f0-fcb59bd5328b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "27e51110-b0d4-4195-a27e-2cef7fa0fa82"
        },
        "item": {
          "id": "5ca3a63e-a16c-4220-8b40-cb4859836d21",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2cf9cddc-b951-41d7-821a-a60f481d8518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a275a5b8-1718-4764-82b7-ea326c11d9dd",
        "cursor": {
          "ref": "b16b43cc-15b6-4a20-ac17-3b5de3a8168f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "29ed795b-7ba0-4d1f-a8b2-cf43469d90bb"
        },
        "item": {
          "id": "a275a5b8-1718-4764-82b7-ea326c11d9dd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6270a920-0e36-40ce-a718-5e036eaa98e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72b9a26-8453-4916-ab1d-1dabeb789328",
        "cursor": {
          "ref": "37400cd5-2608-4bb6-88c1-ca204d28c9f2",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4ce607ca-d605-44b7-826c-bb9e0c905ecb"
        },
        "item": {
          "id": "e72b9a26-8453-4916-ab1d-1dabeb789328",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ff041d11-480c-42c1-87c8-dd20aabdaee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110978aa-3908-435e-aa34-e954bb01cd26",
        "cursor": {
          "ref": "829b7206-b79b-4c16-9f0f-2c7c8178f1f0",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "365de65a-ad2d-4251-a2e3-2257f6363cdd"
        },
        "item": {
          "id": "110978aa-3908-435e-aa34-e954bb01cd26",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "600da7c1-fef9-4c55-a584-689b57b977e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9750d3f-6b03-42d4-ba8b-7291ee210622",
        "cursor": {
          "ref": "145f1e99-f3d5-4c4b-8da4-8970e41f7f9f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7a5e2241-c63e-46b9-82ae-2ffd80cf7eb5"
        },
        "item": {
          "id": "f9750d3f-6b03-42d4-ba8b-7291ee210622",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5ec8def7-1052-4e64-b647-e66b89026679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378e40cd-272b-41e8-bc96-477d9456464f",
        "cursor": {
          "ref": "d7a338eb-8f12-4ada-bf0a-892cd9ef08c8",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7ffe5633-a634-4b81-b169-661bbf02d8bc"
        },
        "item": {
          "id": "378e40cd-272b-41e8-bc96-477d9456464f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c290ed81-cf22-49ba-8892-45f4c4a94084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c88562c-f6b6-4ff8-9a00-8d095a970457",
        "cursor": {
          "ref": "0243a6d5-d61f-4ec9-b8df-4db68d323613",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fe0a9879-021a-4765-b781-bd9714c3314f"
        },
        "item": {
          "id": "5c88562c-f6b6-4ff8-9a00-8d095a970457",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b3ab3796-df25-46bb-91f8-9cf29541b216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe1ac4f-fc7c-4343-9265-aae0b18e9bc4",
        "cursor": {
          "ref": "b1548f30-4e9b-49e2-ac59-bee0302382f6",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a6d60076-2b65-4811-b6dc-a8b30f3e57a4"
        },
        "item": {
          "id": "afe1ac4f-fc7c-4343-9265-aae0b18e9bc4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fcaf62c3-69dc-4488-8259-3a4fd94ff855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edacc900-babb-4763-8ce1-23863d965bf1",
        "cursor": {
          "ref": "5102e741-fb83-4106-8133-9e94daf8a37c",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "91e206d2-2046-4513-b029-e9f7dda29a81"
        },
        "item": {
          "id": "edacc900-babb-4763-8ce1-23863d965bf1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "78174dee-8b9e-44fd-90b8-abf03bd82b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1876664-b21b-4e67-8471-2aa7cbdc0467",
        "cursor": {
          "ref": "494f659d-bf37-4800-b607-4df5b0eca74c",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1b76b915-5028-42cf-8d3f-07b014e64b90"
        },
        "item": {
          "id": "e1876664-b21b-4e67-8471-2aa7cbdc0467",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d33b2ec5-dc2c-422d-bb6b-68487d1cef12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fd90a7-3fe3-4da6-926e-78b450c914fd",
        "cursor": {
          "ref": "b492cb34-4444-486e-91ad-c541573636a3",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3f5816d6-65bf-47d4-8bf0-1a6ba1fa6441"
        },
        "item": {
          "id": "95fd90a7-3fe3-4da6-926e-78b450c914fd",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3351617a-7e16-426e-992a-27efa5d1ae20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f52da7-6487-44a5-a08f-9755b45264b2",
        "cursor": {
          "ref": "4578b043-3136-4b16-8544-aeae6757b028",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "be2f826b-2e63-4629-9c59-0da219d19687"
        },
        "item": {
          "id": "10f52da7-6487-44a5-a08f-9755b45264b2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "51c50cd8-ca96-483c-bcce-8e1f798e4ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10e324e-089a-42ca-a0cd-55c6cd3b9a80",
        "cursor": {
          "ref": "8c532347-b255-4efd-a0a5-7c974a3aa874",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "97f8e6d2-cf3f-40c5-9eb9-afa281f268f0"
        },
        "item": {
          "id": "e10e324e-089a-42ca-a0cd-55c6cd3b9a80",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e23a6b11-9132-4a65-ad8f-1a65e734b41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259fb763-850c-497e-97b1-a28fcb19d804",
        "cursor": {
          "ref": "58796fe6-f8da-4092-89f1-46fe0f3dd496",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "40b5a128-9f3a-4ec9-9cd2-1ad7c243b8e4"
        },
        "item": {
          "id": "259fb763-850c-497e-97b1-a28fcb19d804",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "45bc96fc-ca79-48ec-b286-b8e5d291f5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2359d8f4-118c-404b-ae67-af6806d5d85d",
        "cursor": {
          "ref": "e19ece2d-462f-4349-a462-907b84c60630",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "01a9c309-8bbc-4115-8ad0-25e4ea3df974"
        },
        "item": {
          "id": "2359d8f4-118c-404b-ae67-af6806d5d85d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ba936b09-4a56-407c-8807-4fbc8c5dda41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1a1169-1622-4a31-95bd-3bf871b851d4",
        "cursor": {
          "ref": "5f801d38-9aca-4561-8c09-587afdcb1ffd",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c0218b6d-64e3-4638-af8a-417b632bf635"
        },
        "item": {
          "id": "cd1a1169-1622-4a31-95bd-3bf871b851d4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f1cb5df8-c868-4643-bd61-145011129fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e5040f-daf3-49e4-884e-cb09ae170c2a",
        "cursor": {
          "ref": "4856d664-836e-4500-a85c-9dc92d10d62b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6c389a18-181b-407b-ab52-b812ed71890a"
        },
        "item": {
          "id": "25e5040f-daf3-49e4-884e-cb09ae170c2a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "184a024d-53ef-44fc-9589-de47e81dc0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681f4bd0-1fcb-48af-9f1f-f01acfd60fbe",
        "cursor": {
          "ref": "032ad059-106b-4e12-9dbd-36687c6b96cf",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "16a47f01-2043-4c68-b69b-6687ea632f2c"
        },
        "item": {
          "id": "681f4bd0-1fcb-48af-9f1f-f01acfd60fbe",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d44bfa38-55e5-492f-9277-822da429f7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3429baa-b0c8-4c51-b1ce-cf16b614c1c2",
        "cursor": {
          "ref": "4c74b0ac-67b0-4fba-b5f8-b5c72df897da",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "eebc7caf-ff12-46b0-a2b3-1fc835d23dc8"
        },
        "item": {
          "id": "c3429baa-b0c8-4c51-b1ce-cf16b614c1c2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a9454645-c623-4192-b100-62a739755f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47ac7d3-ed59-4a56-be10-7a9f71d43fb6",
        "cursor": {
          "ref": "4aea507e-6b94-42d9-b36c-e90ad1115805",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b8896a8e-ccf3-4388-b494-284f9dc0fbd1"
        },
        "item": {
          "id": "e47ac7d3-ed59-4a56-be10-7a9f71d43fb6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5aed1fb2-37f2-44d2-add3-e76a7860808d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcae1a57-94e7-41f1-af5f-6ed5b175da9d",
        "cursor": {
          "ref": "624be04a-92e6-4177-96d9-652df916a03c",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1665f5d2-3b7b-4c3a-9d92-3a13692fd13d"
        },
        "item": {
          "id": "dcae1a57-94e7-41f1-af5f-6ed5b175da9d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e0f2bb2e-6bb3-45e4-8378-e6bba2d193a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f31bf37-b1d6-4441-a64f-5a0db2aad55b",
        "cursor": {
          "ref": "acc98810-e593-44ad-9053-c144b7335633",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2335d53c-c4c3-4ba8-8db7-a4ad07bece69"
        },
        "item": {
          "id": "6f31bf37-b1d6-4441-a64f-5a0db2aad55b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2e66331e-8ddd-44d6-a44c-3255f1ba0b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b5e211-7cde-4af8-860b-0ae640ff569b",
        "cursor": {
          "ref": "2a17134d-361f-4603-8ce8-ee660f021c8f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0ecacd90-af9a-4e57-804d-6e23bbb8ee9f"
        },
        "item": {
          "id": "c4b5e211-7cde-4af8-860b-0ae640ff569b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cbfb6b5e-dfd0-41dc-ade0-4efbfb23c0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e769cc-0e0a-4668-a64f-906c29b66a24",
        "cursor": {
          "ref": "71ddd4b1-4fb0-4e38-ad6f-239280d23f01",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "de4fcd8b-eebf-4426-b612-c83c59186973"
        },
        "item": {
          "id": "76e769cc-0e0a-4668-a64f-906c29b66a24",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3be99794-fe8f-4a59-aeef-f3f1af8022a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8cc432-4c61-4c3a-a886-67dfa8e81a97",
        "cursor": {
          "ref": "049f849a-8124-465a-bc90-669412869caf",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "10b8a034-aed4-4733-8c85-b45e278a9fb1"
        },
        "item": {
          "id": "db8cc432-4c61-4c3a-a886-67dfa8e81a97",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0fcf5f1c-9c10-4b4b-b8e7-216ee57acae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fe96d2-d9d5-426c-8257-85bb41d189c0",
        "cursor": {
          "ref": "f1d8371c-c493-4751-939f-7767646008ca",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6d5abecd-59e9-4158-bdff-5963b79bdc24"
        },
        "item": {
          "id": "71fe96d2-d9d5-426c-8257-85bb41d189c0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9084f901-f2e2-434c-8e9e-e31312112bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2a56fa-fe76-4cfa-9ef1-39973ad54f3c",
        "cursor": {
          "ref": "505e176a-16f9-40e0-b638-4ff9be395d9c",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "244755d1-5eac-4624-9df9-95f731f3079f"
        },
        "item": {
          "id": "6b2a56fa-fe76-4cfa-9ef1-39973ad54f3c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9e1509c4-4ca8-4f51-8dc0-c87e8b65df6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e4d71b-7c96-4076-a710-59e0b9bab415",
        "cursor": {
          "ref": "e6065be7-7df1-433a-ace3-f2d15d143179",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "69b52745-341c-4b96-8ce0-2a06b48c4085"
        },
        "item": {
          "id": "46e4d71b-7c96-4076-a710-59e0b9bab415",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b66111d2-3bda-4f79-a1fb-7189c243a45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca20483-4964-4d80-8290-5646a57aebcb",
        "cursor": {
          "ref": "ffa4a669-a357-4188-94b4-429310e792cd",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "01061e85-1aed-4e28-9699-c230f3f6ca6d"
        },
        "item": {
          "id": "cca20483-4964-4d80-8290-5646a57aebcb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b6e69a79-0048-4cd7-b94b-2283266d5aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2438d8-7853-47a9-add8-15ab81a72807",
        "cursor": {
          "ref": "3dd341e5-119f-4377-8a8c-578fe0415378",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3c7012b0-4365-4995-8bdd-9cbcb5667a82"
        },
        "item": {
          "id": "da2438d8-7853-47a9-add8-15ab81a72807",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7ca97229-5c7b-4034-be32-92e903489246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bf9c8d-6845-45c1-84d4-84a4f6907a5d",
        "cursor": {
          "ref": "ac3e4ed1-02aa-43bc-ba34-145d6b976ecd",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "162eb7f1-1a0e-4ce5-8833-759d78c3c1a0"
        },
        "item": {
          "id": "31bf9c8d-6845-45c1-84d4-84a4f6907a5d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "aadff98f-8121-4cc9-9007-7fb722fc761c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7b531a-0133-448e-8e9c-2d25720a7935",
        "cursor": {
          "ref": "b8c1195f-a1ed-4349-85a8-87ef115e45a0",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "521f6447-900b-4fdd-8eed-f9e38a72ee34"
        },
        "item": {
          "id": "dc7b531a-0133-448e-8e9c-2d25720a7935",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a88fb267-a974-4474-ab44-d96e32d0f855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61fee37-ff90-450e-bccb-e136fc069d69",
        "cursor": {
          "ref": "99d1c90c-4314-43a2-89b0-30ece8dc00f6",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3ffefca9-71a9-4e78-8eb7-d36ca31fcac3"
        },
        "item": {
          "id": "c61fee37-ff90-450e-bccb-e136fc069d69",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "696e25b4-d22c-49cd-96f7-5afb8cdb7747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26efe6fc-3aeb-4706-846d-f6bfab904c0e",
        "cursor": {
          "ref": "505368d4-7510-44cb-adf0-16c8e88ca53e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "63da2446-df2d-47ee-9e95-e6a93f8cb673"
        },
        "item": {
          "id": "26efe6fc-3aeb-4706-846d-f6bfab904c0e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4f508a36-cc10-491d-8c5b-4e10785359dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f862c5a-aa96-48b6-80ff-9e5ac6de18c7",
        "cursor": {
          "ref": "35923534-8986-4eda-b7ef-455a504e01a4",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "29c3701f-e3e2-4a11-8b82-848926c3306c"
        },
        "item": {
          "id": "8f862c5a-aa96-48b6-80ff-9e5ac6de18c7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "61c3d092-f1c8-4a3a-a892-9d38b68e4583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f61859-cb0b-4266-b3ef-cdd7e9ff87b8",
        "cursor": {
          "ref": "045280a9-8b1b-42d9-8ec6-41545d99d9ee",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "79ece53b-411e-41b1-82c2-cd2601c25532"
        },
        "item": {
          "id": "31f61859-cb0b-4266-b3ef-cdd7e9ff87b8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "599b3c6f-a933-4a03-8285-fb2b8f937f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97af83f6-7bfb-4a5d-af66-fdba6652fd26",
        "cursor": {
          "ref": "645c1b5f-e4be-4f8d-a712-55501bf33200",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "24b0b522-4719-47e1-847e-3eee1dc2823c"
        },
        "item": {
          "id": "97af83f6-7bfb-4a5d-af66-fdba6652fd26",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "204f6901-c384-46bd-9fd5-b08dd6bc944b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e3054c-9766-4d62-b9bd-d317f31356e3",
        "cursor": {
          "ref": "2d7a9467-7ada-4d82-b66b-1fb279294f9b",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3794e1e1-697d-4b8f-b3b3-c722a61e47ce"
        },
        "item": {
          "id": "63e3054c-9766-4d62-b9bd-d317f31356e3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "98c7dca1-5f7b-4140-9c87-9193c7da4c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b875a13-0bf7-4956-b9c8-effed8b5dc80",
        "cursor": {
          "ref": "6eb08aad-1f78-48da-b8ab-dd0a6c6b44af",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0ff01db0-8333-4643-80f9-66bf69600438"
        },
        "item": {
          "id": "9b875a13-0bf7-4956-b9c8-effed8b5dc80",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "dbd67dbd-fa25-410d-a6b3-bdf24e50a9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd78ebb-fec7-4341-b0c5-0d137726c7b4",
        "cursor": {
          "ref": "a8b7e1e8-1a7c-4c08-bd83-b2ed7a496191",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3e479ca5-00c0-4931-aafe-f88a504899e6"
        },
        "item": {
          "id": "6cd78ebb-fec7-4341-b0c5-0d137726c7b4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0646fa6f-3a2a-4647-9846-d073976fd0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e18304d-47df-4b32-b60c-38ca132ebf44",
        "cursor": {
          "ref": "588e7d64-b981-4d5f-b8ce-1b315eb088e8",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "df9b4aff-b273-45de-943f-870ec58bf99c"
        },
        "item": {
          "id": "1e18304d-47df-4b32-b60c-38ca132ebf44",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "dd358239-cbe2-48f4-b557-11e6bc70f6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75060f1c-aec3-4cab-95b2-fd690e6f171b",
        "cursor": {
          "ref": "b0ef747a-3ef6-4329-8e38-3394cfce9abe",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "565b0df3-7f6c-4c0e-85f4-11705feb56cb"
        },
        "item": {
          "id": "75060f1c-aec3-4cab-95b2-fd690e6f171b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0d97e53f-2e01-43b0-9f0f-99c013fc9ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc142b1-3879-451b-8a50-eded74f8206f",
        "cursor": {
          "ref": "a875e935-9d1d-4510-9f1f-d0af81432f9e",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "98cc747e-36fa-4463-a576-501f9cd3f0cf"
        },
        "item": {
          "id": "cbc142b1-3879-451b-8a50-eded74f8206f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c989d73a-a4cc-4feb-b88d-fa9a48951f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae92a2a-84ba-45ad-ac2a-7839b4ec763a",
        "cursor": {
          "ref": "6521363f-b108-4d0d-982f-adbd9e9d3026",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9ed08443-4ab7-4ce0-973f-febe27224661"
        },
        "item": {
          "id": "3ae92a2a-84ba-45ad-ac2a-7839b4ec763a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "891d28ef-51d7-4ee7-acdd-9cfbcb833f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d511f2f-2266-422d-b8aa-5be63d061585",
        "cursor": {
          "ref": "995cb97c-1811-4479-9c3c-a822f3344534",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6ecec856-b27e-4b3a-a719-4229a1bc4c55"
        },
        "item": {
          "id": "3d511f2f-2266-422d-b8aa-5be63d061585",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "352f1177-43da-42d4-844c-f71e5ac8c224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ad039c-5917-4899-9d29-42c9a4016aa7",
        "cursor": {
          "ref": "fdd91706-ef88-4770-97d2-07dd4b5aaded",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "57f237f2-9303-4f81-9408-799c0b3d9445"
        },
        "item": {
          "id": "d1ad039c-5917-4899-9d29-42c9a4016aa7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0b189bed-c7a4-4b49-b070-f61881fa8e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e2544c-9eac-4bc4-b5b0-8e0523ab1396",
        "cursor": {
          "ref": "e70eb458-85b4-4b12-b2e5-4bacc35ab656",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "41ef459e-89d6-4ce0-9a95-a1a39ea3d537"
        },
        "item": {
          "id": "17e2544c-9eac-4bc4-b5b0-8e0523ab1396",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "63a75135-a71b-4ee0-aefa-6e68097d6802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec66cf6-2364-44e9-8169-4f77849bad04",
        "cursor": {
          "ref": "c0816704-ca2a-4502-b4ea-4caa15025606",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c9c023d6-9621-4fc1-a5c4-69e428f7184d"
        },
        "item": {
          "id": "bec66cf6-2364-44e9-8169-4f77849bad04",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b6f8693a-a070-4ced-8bee-007c948baece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6325cf71-28ee-4bac-9cf4-4bfe49249dee",
        "cursor": {
          "ref": "2202275d-d7d7-4c6b-99fc-57616597697a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4f85fbf8-8142-4106-9acf-55285ca68897"
        },
        "item": {
          "id": "6325cf71-28ee-4bac-9cf4-4bfe49249dee",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f093a3a3-fe0b-4c1d-9644-1b8fde379821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5ae50a-e915-4144-903e-6bb512231810",
        "cursor": {
          "ref": "f9b0a3e6-ca3c-4bf6-9499-76cfefc8bd83",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5b661158-315c-4444-9ba7-f9fab7894674"
        },
        "item": {
          "id": "ed5ae50a-e915-4144-903e-6bb512231810",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6c67647a-803a-4fb6-ad5f-8f747a8f24cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738599b1-119a-400d-a365-40da4998b529",
        "cursor": {
          "ref": "542af2a8-faa4-4381-978c-11bc5feddbad",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bd28d297-3541-45b7-8773-62e8909a34d5"
        },
        "item": {
          "id": "738599b1-119a-400d-a365-40da4998b529",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a0a8b6d8-5c77-497a-8fed-ffaa1d7e6ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfc492b-1f73-43ee-8942-30696c420282",
        "cursor": {
          "ref": "e511b725-b2ea-4b64-b476-afbe7d15181a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ab282b6a-841e-48a2-83b6-c23716f913c2"
        },
        "item": {
          "id": "7cfc492b-1f73-43ee-8942-30696c420282",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "54f66837-f28e-484a-b324-008bed412d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b8eafa-e573-4e2e-a7ee-e054024efa3a",
        "cursor": {
          "ref": "5f983b1a-696c-4828-8ad2-47f2388d1ac9",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "19336cfb-62b5-4dd5-89ca-f4e7518c0da4"
        },
        "item": {
          "id": "b4b8eafa-e573-4e2e-a7ee-e054024efa3a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8313ce70-97ab-46cc-badf-385473d87153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6310f05e-35e1-48d9-84e6-04a626b95841",
        "cursor": {
          "ref": "18e871fc-97a5-46b9-9c6a-38166ea5327a",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fb4c927b-2a7d-4a8c-8f66-6e1d6ce90264"
        },
        "item": {
          "id": "6310f05e-35e1-48d9-84e6-04a626b95841",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ba6f345c-deed-42e4-aba5-b9ef7f24e2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c125316-6bd6-4609-827a-db694b65b5b3",
        "cursor": {
          "ref": "fd6e5c56-8f0a-4272-8421-7a0369d75589",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a5cfee26-34f9-4586-bc3f-5875bb7118ca"
        },
        "item": {
          "id": "5c125316-6bd6-4609-827a-db694b65b5b3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "85d61c60-a175-40a3-9276-ac920af6adb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dfe598-34cf-4e3b-a26f-bc1739849f55",
        "cursor": {
          "ref": "4934ccb8-9406-49c3-881b-5e3aa7fd5449",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8c31b0ae-5b1e-4105-b4e2-f8bc59d5480a"
        },
        "item": {
          "id": "86dfe598-34cf-4e3b-a26f-bc1739849f55",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b1a6b81d-7ab7-4752-b663-8a5bbfe7d927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a9f4a1-6724-4a54-bbd6-647e0b19abd4",
        "cursor": {
          "ref": "6a3d8c43-4c53-4e62-8946-21436ff4960b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "647077e5-522f-4070-a375-684e6db4f909"
        },
        "item": {
          "id": "23a9f4a1-6724-4a54-bbd6-647e0b19abd4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cfc07f4f-b04c-4189-b0b5-72b40fddaddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a8037b-b29a-4d3f-9eb9-862142900077",
        "cursor": {
          "ref": "0187af62-2edc-43d9-a588-1208aca24ebf",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ee1f4cd3-d9ab-4fe7-8956-5ea5d129b0a7"
        },
        "item": {
          "id": "e1a8037b-b29a-4d3f-9eb9-862142900077",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ed8d4e78-aa99-4b12-abcc-cc53fcc3bb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef2a376-65de-431d-93c2-4e8fa43575cd",
        "cursor": {
          "ref": "0a6832a8-3a17-43ae-906c-01cc28d33f82",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "66212f77-f26c-482b-834e-a4b688b78876"
        },
        "item": {
          "id": "2ef2a376-65de-431d-93c2-4e8fa43575cd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b305a837-6e8f-4393-bd26-2624c779c37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3719e4bd-a010-4e08-9f7a-0f043317a601",
        "cursor": {
          "ref": "2a7a8fe5-43fa-43db-b389-8bca19253fac",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "aac43e1b-ef2d-4a9c-b09f-39e37f948989"
        },
        "item": {
          "id": "3719e4bd-a010-4e08-9f7a-0f043317a601",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "aff45a44-afff-4650-8df4-e66194830d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c976397-2422-480c-97d2-25fb96e3eaed",
        "cursor": {
          "ref": "572485fe-a94d-453a-8cf5-90dba4fd8284",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2358640a-92e9-4008-9c78-83f7a6461040"
        },
        "item": {
          "id": "6c976397-2422-480c-97d2-25fb96e3eaed",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e7e0211b-1282-4754-93cf-ac1d7c8c432b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079d2081-06a7-4fb2-85fa-8e850aeab048",
        "cursor": {
          "ref": "c1ac170c-cb5f-4ade-830b-33a96df638ce",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3bd09a08-427c-4883-a550-1d03dc233369"
        },
        "item": {
          "id": "079d2081-06a7-4fb2-85fa-8e850aeab048",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2bec6d43-0d34-49df-877a-352f4d6e4985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39edbb1f-02d6-497e-a625-238b78e63c62",
        "cursor": {
          "ref": "97e23c07-677c-4492-9cea-2974b0c3b7d9",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dda2974d-699e-4614-a7a8-84e0f31c3cf1"
        },
        "item": {
          "id": "39edbb1f-02d6-497e-a625-238b78e63c62",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c743c345-4e9a-41e4-bfbe-b5de12fb0a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e24427f-4028-432a-81b5-a58894bd055b",
        "cursor": {
          "ref": "12308f79-562a-4a32-ac63-696d833d4878",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3a3ad311-5029-4d8f-8a52-b66e38fbceb3"
        },
        "item": {
          "id": "0e24427f-4028-432a-81b5-a58894bd055b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b6062083-2ab4-4e0b-a53f-9b622f22b03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ec85e6-9528-4088-bcc5-561361bfc56c",
        "cursor": {
          "ref": "246ff34f-cd8e-4d96-bcde-3ccd4ea1f095",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0ffae5e8-d6e5-4366-97b2-6493e9041970"
        },
        "item": {
          "id": "b7ec85e6-9528-4088-bcc5-561361bfc56c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4f232749-7634-4ce9-8a89-4c6e0229313b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e23931-c93e-4ccd-b094-53a86e24e716",
        "cursor": {
          "ref": "86cad120-794d-43de-bb77-34cf5927d2cb",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0d263c28-ada2-44a5-a0db-f46542a48f06"
        },
        "item": {
          "id": "d0e23931-c93e-4ccd-b094-53a86e24e716",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a67b09a2-18b6-4798-9422-ff51123c3ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "75461159-d034-4be5-8f2f-aa9aff2aa193",
        "cursor": {
          "ref": "95350d75-9eaa-4a9a-a7b5-c56414aaf18f",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9c030d2f-fc21-4f2a-b171-de42e3523ce5"
        },
        "item": {
          "id": "75461159-d034-4be5-8f2f-aa9aff2aa193",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f4b12d65-e154-4895-96f3-47f79b4872ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "6824d737-e306-4ff7-901a-0143646b72dc",
        "cursor": {
          "ref": "7b7cf6f8-4f79-434a-bf9e-fe02042fcf28",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3a5c69b5-de8a-4740-9030-65b17df4c02d"
        },
        "item": {
          "id": "6824d737-e306-4ff7-901a-0143646b72dc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fb3819e7-145d-4a94-9ebf-f853ead27486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "625e4571-c87b-44bb-a788-d2d5567df87b",
        "cursor": {
          "ref": "7a66c7f6-30f0-4cd5-8fc1-45cb0c95e801",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5fd351d6-31ee-472e-a401-f9fa2b9dd4ac"
        },
        "item": {
          "id": "625e4571-c87b-44bb-a788-d2d5567df87b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e783ebca-b37a-4fa9-b5c9-da6a3bfb12a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "29312235-08cd-41bc-806f-76e420e07a6a",
        "cursor": {
          "ref": "ff1169f6-fdb7-43c4-b8a4-eb654a0c9bfe",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "26edb555-8cf0-48f9-b121-83eca96ea063"
        },
        "item": {
          "id": "29312235-08cd-41bc-806f-76e420e07a6a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "10659d60-1346-42bc-b7c2-582ba53bc592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "396153a7-5ef0-4039-84a1-847d19195975",
        "cursor": {
          "ref": "cf97b039-00f5-4ceb-a016-2118591c430b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "933cb547-56ef-4981-b6eb-922a6b13f57b"
        },
        "item": {
          "id": "396153a7-5ef0-4039-84a1-847d19195975",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "63777da5-530a-41c2-9022-3aa61afaba28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "1ee91b7b-c9c0-4d38-96e7-840cf7f54fd2",
        "cursor": {
          "ref": "b3d0542b-4ee5-48af-ba3f-80447816fa34",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "894f8ebd-56c5-412a-906c-07df43be3542"
        },
        "item": {
          "id": "1ee91b7b-c9c0-4d38-96e7-840cf7f54fd2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e67e941f-64b6-4d1c-996a-d482eb5dcf04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8d21de6d-1038-4d35-8ef4-91d7ab0b0d43",
        "cursor": {
          "ref": "ddd47bfa-df6f-4382-a9b3-dade6e73d128",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "85953111-6f21-4436-8ff9-3fd9ddce6885"
        },
        "item": {
          "id": "8d21de6d-1038-4d35-8ef4-91d7ab0b0d43",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5e2a96cd-a19b-44a1-a666-559533610129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf53c1a-f3b0-4aed-9de6-11cec792c09f",
        "cursor": {
          "ref": "99da2214-9369-43d8-a06e-ac5385c01ea2",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "16b4d85f-c02b-4e9c-a0cc-10f9189b5339"
        },
        "item": {
          "id": "cdf53c1a-f3b0-4aed-9de6-11cec792c09f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9a7398c7-85cb-4b83-8093-40b2f3d56d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42caced2-3e51-4b21-95d4-ad3282dc1e5a",
        "cursor": {
          "ref": "783b8e20-4e83-492c-9b78-a00314e1aba6",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d6b4b134-b850-4d3d-957f-08d925a7d2f3"
        },
        "item": {
          "id": "42caced2-3e51-4b21-95d4-ad3282dc1e5a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f8b7c1cf-7512-4102-8876-448a00a70675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb40bbd8-1d6e-4c7e-9ffa-de576fe8a9ed",
        "cursor": {
          "ref": "8b383c68-8496-4732-9fa6-056b18d4138d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "53e0e240-74c9-4e0f-9fd9-b2b89f8db4a4"
        },
        "item": {
          "id": "fb40bbd8-1d6e-4c7e-9ffa-de576fe8a9ed",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f2f7c807-8e4b-4034-9cec-47815ebb716f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096ba4f0-6d34-4d03-b4d6-86292fd703c0",
        "cursor": {
          "ref": "f106753c-e43e-4d90-b004-2a05f2110ccd",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6f1a5afb-52c0-439f-8496-cd7d3bf0c096"
        },
        "item": {
          "id": "096ba4f0-6d34-4d03-b4d6-86292fd703c0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2cd0af41-d74a-4af7-bdea-2cfd046f612f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670e8018-58a0-416a-8ffe-cbbdef080538",
        "cursor": {
          "ref": "1b3ec4a1-cbc8-4e7d-99d6-38bfd3c586a2",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3f211c87-e426-4451-834e-eb23c2d08022"
        },
        "item": {
          "id": "670e8018-58a0-416a-8ffe-cbbdef080538",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fcc85aa6-0299-4104-92f5-eac63222c3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb62913a-d881-41bf-b697-11b78990c8ee",
        "cursor": {
          "ref": "b82a2ae5-d9c7-4354-8bb3-fa9bc0a6a928",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "61ad801b-9755-4ab1-9fee-d270ca171157"
        },
        "item": {
          "id": "cb62913a-d881-41bf-b697-11b78990c8ee",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b2073887-5562-413e-b2dc-71fd479213a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11240a94-dad3-4f52-8b18-a1e0715e2659",
        "cursor": {
          "ref": "c82c891e-1ed0-4f24-840c-225eca00ecfa",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c8e3c3b4-b518-4b14-9658-b5a8844b3a30"
        },
        "item": {
          "id": "11240a94-dad3-4f52-8b18-a1e0715e2659",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ca5f85eb-1599-4e8c-9991-cef8950856dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e6d86e-a186-41a0-8790-19e811fea280",
        "cursor": {
          "ref": "8198bdc8-db19-40b7-a5ad-f8f81b227946",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4d9f90f1-6283-4848-90cd-ca3ff682fdad"
        },
        "item": {
          "id": "87e6d86e-a186-41a0-8790-19e811fea280",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6684a395-4a2f-40c3-9501-da31239c025b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00543ff3-e4f4-4734-8cb7-3276440c1637",
        "cursor": {
          "ref": "b95966bb-84b2-4fda-a4ee-2d3ba208fac8",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "40121234-012c-47ce-a21d-8d88f22c1c44"
        },
        "item": {
          "id": "00543ff3-e4f4-4734-8cb7-3276440c1637",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "58d19450-e463-49e2-8942-6fb343644678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec38f90d-a84e-48cf-b7f8-8ee905a6d6bb",
        "cursor": {
          "ref": "308f543f-9a2b-482d-9261-23c665d8d44e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "05e5e42b-2df9-48a4-8555-efb2b9a79a07"
        },
        "item": {
          "id": "ec38f90d-a84e-48cf-b7f8-8ee905a6d6bb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0f7fb540-330f-425e-89fb-215a708ed1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87526a2-079d-467b-b347-3567d6cd9e3e",
        "cursor": {
          "ref": "db927e50-eec7-485c-990e-77f7049e405c",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bcdb2df9-2ebf-4243-8c6b-c4ce102baa5b"
        },
        "item": {
          "id": "f87526a2-079d-467b-b347-3567d6cd9e3e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8545e851-d33c-4c4d-a630-e1b71115fcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760b3030-89fb-478b-8777-37628d44829f",
        "cursor": {
          "ref": "63d77323-05c7-41b5-97e4-72ad7654b0e5",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2c9127aa-d102-4df9-8044-4bc3c34a5079"
        },
        "item": {
          "id": "760b3030-89fb-478b-8777-37628d44829f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "38932093-0057-4ed1-b9c1-46eeed02652d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc1e191-7a13-433b-8589-65e25e8335b7",
        "cursor": {
          "ref": "583add50-b2ea-452f-8fca-c557fefe9c00",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9273c8bb-d2de-4ffd-b990-33c4f3263128"
        },
        "item": {
          "id": "2dc1e191-7a13-433b-8589-65e25e8335b7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "05257181-f4d6-45fc-ac8d-5e8a03868d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b108fbfb-6417-4c3e-890e-4deeabbf3de4",
        "cursor": {
          "ref": "f2ee1c1f-4684-4d11-bbb0-d8fb446ecd78",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0f7b6065-2a0e-4dd0-a4e2-1ef9857b3f02"
        },
        "item": {
          "id": "b108fbfb-6417-4c3e-890e-4deeabbf3de4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d3e23f0a-35a1-4237-906b-3b1523c785a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41664558-8039-4b87-b4cd-d48daa51a876",
        "cursor": {
          "ref": "84aabf86-9a6e-42bc-a326-4a050a1ec73b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e2d85fb1-58d3-4441-a3d5-a1adf6945ba2"
        },
        "item": {
          "id": "41664558-8039-4b87-b4cd-d48daa51a876",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "655a6f25-71b5-46d6-9c1a-015c5fe0de04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e45635f-6844-46ed-ae9f-6a471565c803",
        "cursor": {
          "ref": "3b125323-913d-425b-b2fe-35948da69005",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "147bab37-31fc-4fa6-acb1-bef6a3c27867"
        },
        "item": {
          "id": "8e45635f-6844-46ed-ae9f-6a471565c803",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9ff778c4-c600-42ec-bf49-e875065a42a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e7dacb-5338-4a50-8407-12fbdd94f2d4",
        "cursor": {
          "ref": "34eaffb9-8db4-4c28-b692-5d0ae28bbc76",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0f10887b-9c36-4f91-b750-6a815bcbbdf2"
        },
        "item": {
          "id": "53e7dacb-5338-4a50-8407-12fbdd94f2d4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "60dd7732-ead5-40e8-b216-0de8a6865b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e74c48-5e35-49c2-a8ad-f80696ddb4d4",
        "cursor": {
          "ref": "dbcbfa33-8e10-42f2-bc3d-7dd23fff7db6",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "786e7e41-7c61-4de7-8905-f7103c95dd93"
        },
        "item": {
          "id": "49e74c48-5e35-49c2-a8ad-f80696ddb4d4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ca4cc1cd-cd36-4c55-b822-dd600ec6e397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734c2cf5-b5c1-401a-b191-8b95fd641fa6",
        "cursor": {
          "ref": "b7790f21-2a6e-42ad-8e29-7ac615c5f686",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "02aac1c4-405a-454f-b744-1ca44a744636"
        },
        "item": {
          "id": "734c2cf5-b5c1-401a-b191-8b95fd641fa6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "79901bdf-e1e7-4bd4-a2c3-a9be8371720e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4030c3e-c8f6-4326-82ca-37481580c3c6",
        "cursor": {
          "ref": "a593f9cb-6f61-4df2-99a0-d71a42c9ffa1",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "875ad2b0-c380-42e2-8b3f-757ba1617cae"
        },
        "item": {
          "id": "b4030c3e-c8f6-4326-82ca-37481580c3c6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "31cbf1bc-059b-49f9-aedb-d742abebce8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06ec167-9dfa-494a-8849-6586bf028b17",
        "cursor": {
          "ref": "4ff28ea9-468b-42a6-9c0c-85f643ae2584",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "820aa299-0bdd-42bd-a2db-6bd8a474cc61"
        },
        "item": {
          "id": "a06ec167-9dfa-494a-8849-6586bf028b17",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "059d9a84-a841-4f4d-a37e-344c26212e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481e0f08-4f5a-4714-ac14-5345bd48f8bf",
        "cursor": {
          "ref": "923ad1bf-1924-440e-a71d-7d2acf6a9db2",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8aa2e02d-8a16-4b48-81c5-b8b76f578f0e"
        },
        "item": {
          "id": "481e0f08-4f5a-4714-ac14-5345bd48f8bf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b319370a-48db-4853-ae8c-cc3dca2074e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0345460c-2970-4786-a282-8479979e55aa",
        "cursor": {
          "ref": "f784e061-c663-4d56-ac66-a207f068fea3",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ea32c1db-da64-41db-8961-ffb3c5a53dd0"
        },
        "item": {
          "id": "0345460c-2970-4786-a282-8479979e55aa",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1267242a-938d-4728-95b4-efc63c405362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b4d3a0-6d91-4c41-a104-ccad2a321e18",
        "cursor": {
          "ref": "45c4ae4b-1399-40cd-a4ed-f0e70fa37bb9",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1184ed6f-132c-4402-980c-9e4cef5440c4"
        },
        "item": {
          "id": "b7b4d3a0-6d91-4c41-a104-ccad2a321e18",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cf9d4c2c-6193-44ec-8ec4-33cc47ca60f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5941032c-fcd3-4073-a837-b495c3010259",
        "cursor": {
          "ref": "81445505-4232-49cb-8554-25db172a44e5",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "52da5273-9147-446d-8082-2e45a8a83930"
        },
        "item": {
          "id": "5941032c-fcd3-4073-a837-b495c3010259",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "07129a5b-6fbd-412d-ab02-fa83160ba066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31088394-5261-4931-9d15-6444df4e3e96",
        "cursor": {
          "ref": "6fff7ab5-0356-4bd6-b7bf-75595eabd27f",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "16ce6400-655b-456e-adff-10fcafa63d4b"
        },
        "item": {
          "id": "31088394-5261-4931-9d15-6444df4e3e96",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0aed6c76-728b-4dff-9394-5b0b15f70874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eac5475-8edc-4798-bec3-caf7d0d010a9",
        "cursor": {
          "ref": "68947615-c09a-47cf-9988-6dd425f51fdb",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "63c00e97-9372-42df-946b-2c9a6d7a8a5c"
        },
        "item": {
          "id": "9eac5475-8edc-4798-bec3-caf7d0d010a9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d1f75832-e79c-45b6-8727-8f77854d2647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab828c75-594f-4e41-b88e-3c817f8b9d3f",
        "cursor": {
          "ref": "7fbb3285-d911-4a57-aa44-2f6936efec34",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "30a041dd-aa44-4c0b-a7c2-e5c4d6a9937a"
        },
        "item": {
          "id": "ab828c75-594f-4e41-b88e-3c817f8b9d3f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4e19cee5-8d5a-4b06-af70-d3b3fcf52b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7153b7-8824-459e-8596-cd959f1ab68e",
        "cursor": {
          "ref": "f7d42fe5-142f-4312-a0be-f81305edd7e5",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e4e22539-835f-4f72-b762-ddd4429e7057"
        },
        "item": {
          "id": "1f7153b7-8824-459e-8596-cd959f1ab68e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e4678566-af1c-47bb-a2f2-81dac7bf2c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad8ccc2-7f32-41fa-9f92-d82785fa9180",
        "cursor": {
          "ref": "b20a7054-4365-4c42-a078-6e63cc3f869a",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "abdbf1e4-b581-4f78-aae3-039793cdab97"
        },
        "item": {
          "id": "aad8ccc2-7f32-41fa-9f92-d82785fa9180",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5c4c5caa-4a29-4afc-be30-391e81e0ff13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fa8f4d-983b-46e9-bed0-55352dbc7d64",
        "cursor": {
          "ref": "e6435685-6df2-45f1-bf29-603285274ffc",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a636518e-1660-4cc1-bf4c-e175b0ad1e72"
        },
        "item": {
          "id": "02fa8f4d-983b-46e9-bed0-55352dbc7d64",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0f6b1b66-7cda-4d95-a45a-7c64beb27777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992dc355-aadf-439b-904f-0bf9b066c436",
        "cursor": {
          "ref": "29c189a2-1599-48e4-a19d-98c7f6889543",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c0ddde61-0d67-49ec-98e5-f510ea2f0977"
        },
        "item": {
          "id": "992dc355-aadf-439b-904f-0bf9b066c436",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "663226ae-8316-471c-b2b8-52caa3d4ece6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e96c63e-4a4c-4773-af33-72bb5effa5b9",
        "cursor": {
          "ref": "0e0071d6-b1de-476e-84aa-cbe537b35625",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cda278ef-d6b9-42ec-8625-9f3224af1d88"
        },
        "item": {
          "id": "3e96c63e-4a4c-4773-af33-72bb5effa5b9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "382302ca-5f66-4352-939a-5c926cb350c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47147fce-459f-431b-86c8-d04444e33156",
        "cursor": {
          "ref": "a5e6c8d7-42de-4362-8cf1-0d5afdad67a3",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1bdf8afe-2c96-4494-8b99-e15a35bc09cf"
        },
        "item": {
          "id": "47147fce-459f-431b-86c8-d04444e33156",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fe2dce50-a5a4-4e80-8e51-60ddc3733ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d0cd5a-37b5-4ef3-a5c2-b1b52ae7faa1",
        "cursor": {
          "ref": "1df08d50-91a1-483b-9b32-6e1ca38790c5",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "be6aafca-8d54-45f1-92fe-a6ceb408c70e"
        },
        "item": {
          "id": "b9d0cd5a-37b5-4ef3-a5c2-b1b52ae7faa1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "341c73b6-249d-4a01-863a-2562f0e65a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dd761e-e262-40f2-a222-dab537cf1a73",
        "cursor": {
          "ref": "d1f135a9-968c-4ed5-b457-8bc57c99b7ef",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8155fa72-7bec-4f53-883c-890a46ea8e65"
        },
        "item": {
          "id": "16dd761e-e262-40f2-a222-dab537cf1a73",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "26e50246-32e5-4a1e-98ca-47444646e5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86737a6-3cc1-45a3-98fc-239ad9ecd29d",
        "cursor": {
          "ref": "54964c5f-522e-42b7-91a2-eaeccdba3bce",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1f8d9c0a-c628-46c5-867d-832280731914"
        },
        "item": {
          "id": "a86737a6-3cc1-45a3-98fc-239ad9ecd29d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6445ff10-64bc-40c6-8981-ae5343ad959c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285b7518-e3f2-4016-8769-8a6e252c76d9",
        "cursor": {
          "ref": "5724da61-3ac8-4196-a9bc-75519883039d",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3d460a94-69d1-4596-a717-181f2cec73fe"
        },
        "item": {
          "id": "285b7518-e3f2-4016-8769-8a6e252c76d9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "204ad288-75e6-46b7-8be6-21bafa3d03a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9395b59-f4a9-490a-8b36-f4301c481ca9",
        "cursor": {
          "ref": "b77256bc-1505-483c-9a13-8362e0b71074",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a0fc0485-a637-43da-ac5f-47f23e393a25"
        },
        "item": {
          "id": "e9395b59-f4a9-490a-8b36-f4301c481ca9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d2764cdc-ea92-40cf-953a-61aa049179ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a52b9b-5b5f-4aad-8cae-cb49262ae45b",
        "cursor": {
          "ref": "be300cbe-df00-4570-852f-cc8b03d974a0",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8e58b6d0-46c1-40e8-9a81-fe2fc4b0398e"
        },
        "item": {
          "id": "c4a52b9b-5b5f-4aad-8cae-cb49262ae45b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c24d70fb-8ef1-43da-a26d-394040deb412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac121b3-ccf4-4f73-8f39-fa25d644dbf8",
        "cursor": {
          "ref": "36852e79-fbbc-4680-8952-7af84a56fcbb",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8856522b-84a5-465b-b769-d4f89a228812"
        },
        "item": {
          "id": "4ac121b3-ccf4-4f73-8f39-fa25d644dbf8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fb05e6d5-eff9-4d43-a4d0-0dae7a5c84ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf3a9ba-8769-4ffd-b388-18c90d543ba3",
        "cursor": {
          "ref": "52dc30be-d9e3-4982-8ceb-71ddb9effb6d",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "73a31e25-7d4a-4518-b319-cb4eb4520196"
        },
        "item": {
          "id": "aaf3a9ba-8769-4ffd-b388-18c90d543ba3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "99f1aa0f-7b30-4146-bb6c-760ecd86cd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82b3250-1ef7-48b7-b725-fd9a3bd54b69",
        "cursor": {
          "ref": "ba5cd4cf-2573-4b3d-b3ac-0c1e45988d4b",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fd1df3fa-e469-433f-aa1b-4ba5f689fd66"
        },
        "item": {
          "id": "a82b3250-1ef7-48b7-b725-fd9a3bd54b69",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "125a7316-cada-40bd-a26b-55b711938e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c59f09-c8c4-4d62-b9f5-733d38d2f4d1",
        "cursor": {
          "ref": "974709b3-1a90-4275-89f7-d157d68658a2",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e49eb052-09c3-4511-86eb-b91e0efc68ea"
        },
        "item": {
          "id": "97c59f09-c8c4-4d62-b9f5-733d38d2f4d1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "839185bc-2c43-4a28-9e43-63ddc5f1b8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c02195-1bfb-4079-a4d0-792e3150fb53",
        "cursor": {
          "ref": "936f9a08-d50d-4f44-acd0-bf3a2a5480d9",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6c826c7e-317c-4333-bb42-c679080094f7"
        },
        "item": {
          "id": "b2c02195-1bfb-4079-a4d0-792e3150fb53",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b1bb8608-1c39-4fa2-9f8d-5684ca74bed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59746da6-488d-4745-af70-157f6a9b598d",
        "cursor": {
          "ref": "a41ef31b-1045-4661-ae0a-872ffe852afc",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "984c8a52-1d75-44ef-9204-e3b382b949b5"
        },
        "item": {
          "id": "59746da6-488d-4745-af70-157f6a9b598d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6cec8f57-90fa-4fd6-976d-744ba1371a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1533cf-f65f-42cf-bc67-6957b4d0d431",
        "cursor": {
          "ref": "8cbe350a-e035-49ac-908a-37aaa26f426f",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a98212fa-9b33-4c9e-b2cb-d915e5f46f8b"
        },
        "item": {
          "id": "7c1533cf-f65f-42cf-bc67-6957b4d0d431",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "037b3172-eb66-4c3a-9f1e-6cda34cc61a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0205dc61-4410-43f1-8e30-00f4a51457b1",
        "cursor": {
          "ref": "ff1e4095-12a3-41fd-89f8-768d27fcd785",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "28ee7e3b-2a38-4e0f-8877-5c30c71a8e4d"
        },
        "item": {
          "id": "0205dc61-4410-43f1-8e30-00f4a51457b1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7722fbf9-a13b-4b00-a07c-d881759dd285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2507dae9-d293-4045-ad84-46010f9d3576",
        "cursor": {
          "ref": "29729317-db0e-4b75-91d0-44d77d930d54",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f41f37ef-ef19-4a09-874f-b56fcbe60704"
        },
        "item": {
          "id": "2507dae9-d293-4045-ad84-46010f9d3576",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5704da2c-7198-43eb-b0c1-d29fd75edccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9161ba7f-c240-41e5-84de-a2df28657939",
        "cursor": {
          "ref": "ec47a7d9-bdb4-4c69-8f01-5712d44731e9",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "eeb1eee3-afcb-4742-a629-a4ef1b706e53"
        },
        "item": {
          "id": "9161ba7f-c240-41e5-84de-a2df28657939",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e6137688-e0b0-407b-890f-10c2e27befd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d39d0e6-39d8-4117-8324-802e7e25bdc9",
        "cursor": {
          "ref": "2e5d3729-04fc-4f03-8dd0-086c9b530810",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0ea01c84-1314-4af3-8783-7300794a03ca"
        },
        "item": {
          "id": "8d39d0e6-39d8-4117-8324-802e7e25bdc9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ce394e5d-35de-4505-abfc-5f75d094a679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de709e3f-ab69-4f65-9d34-f4c7bcd381a7",
        "cursor": {
          "ref": "79ccc7f8-e543-4e4b-a2cd-e7a6c8c51e7c",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "77a8e7a7-10fd-4743-bbd9-c2cba981d4cd"
        },
        "item": {
          "id": "de709e3f-ab69-4f65-9d34-f4c7bcd381a7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2fb8150a-c81a-449c-8b9f-824f1ae54f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e99750-a2a5-4d2d-91f9-4fd2cb6bbc8f",
        "cursor": {
          "ref": "1afbd215-c845-4afc-beb7-98c8ae99eccb",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d8515cc9-71cd-414d-ad0f-4d2820999389"
        },
        "item": {
          "id": "f9e99750-a2a5-4d2d-91f9-4fd2cb6bbc8f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b69c82ec-0811-4b94-8da0-9148c78c943c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ed5612-6d48-4ac0-a878-62273cd05bc5",
        "cursor": {
          "ref": "751f115b-e384-4a71-916b-2229f2de7b99",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "129c32b4-e7d7-4fad-bf98-4866396e0333"
        },
        "item": {
          "id": "d5ed5612-6d48-4ac0-a878-62273cd05bc5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "949f494c-0947-4c8d-93bd-2aa7153ed635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bedce34-e857-418b-a670-00176b3e0adf",
        "cursor": {
          "ref": "b9050f39-a9a1-4685-9eff-0fc0076bf337",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "205a4f74-ea45-4288-b393-b15c5c29f90b"
        },
        "item": {
          "id": "2bedce34-e857-418b-a670-00176b3e0adf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4e47eba2-a941-4636-854b-0c13e56a6f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f79d0b5-81d5-4136-9f1c-82e7e4859f40",
        "cursor": {
          "ref": "2e67ebd9-dd28-467c-9ab8-dad1e53114ce",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ccf19b7f-7b76-46dd-b553-814089334637"
        },
        "item": {
          "id": "3f79d0b5-81d5-4136-9f1c-82e7e4859f40",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "23e8000a-42e3-43d7-b4cd-d05e6ba36d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe86aee-e0d4-494a-b3e8-d55d8e0f9b71",
        "cursor": {
          "ref": "8f0c2c5f-64c8-46fc-bece-252abae3f99f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a886f8a8-c60d-4aab-b737-be24e5fd7dc1"
        },
        "item": {
          "id": "ffe86aee-e0d4-494a-b3e8-d55d8e0f9b71",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0ec8d856-55a9-497c-80f7-b5e94f85ec58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fca440-aa75-4ee4-8c5b-a0b5328c921a",
        "cursor": {
          "ref": "d1dd9465-1dfb-4e2f-8e8c-524df07df965",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e70bde6f-64fd-43f8-91fd-919f8a6e458f"
        },
        "item": {
          "id": "d7fca440-aa75-4ee4-8c5b-a0b5328c921a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0900a1c1-f051-4e03-974c-fa45df953615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7669d6e-0906-47c6-9633-8bb2355b7fe8",
        "cursor": {
          "ref": "1a783df7-0f12-461a-812a-194589704606",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "872367b9-69d8-4876-9974-beb3e6b74246"
        },
        "item": {
          "id": "b7669d6e-0906-47c6-9633-8bb2355b7fe8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3f20b9eb-5824-48b2-8950-ba3503d07da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6e9ccf-617e-4ea2-b65c-6e7d2d8517fc",
        "cursor": {
          "ref": "96166e5a-1afb-4838-a38c-37980239d757",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "80f056c0-0b66-4195-bf05-1b412b107d09"
        },
        "item": {
          "id": "6c6e9ccf-617e-4ea2-b65c-6e7d2d8517fc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "48e3347f-3aa5-47a2-ac77-e4c9e831e922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee02551-47e7-4a88-b110-e8739efbb1b0",
        "cursor": {
          "ref": "2686ca7d-3f38-46a5-8b21-7f626d2b9aa4",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cb0c5f63-cad0-45cf-94e1-3497098b7b73"
        },
        "item": {
          "id": "9ee02551-47e7-4a88-b110-e8739efbb1b0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2c44b2d2-66fe-4217-8021-7a7b31eb51cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c907394-f0f2-475f-b86d-4f0000a3c86b",
        "cursor": {
          "ref": "9779ebac-a370-4679-b12c-ec7fcd685abe",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "509e1c7c-b91c-4e90-b345-2ca2bc2b0c8e"
        },
        "item": {
          "id": "9c907394-f0f2-475f-b86d-4f0000a3c86b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b4328547-8224-4f74-8a98-8ada3ae92872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c68471-601c-4be2-8488-d7696f7c8e76",
        "cursor": {
          "ref": "7f882239-5356-4ad9-9e42-6a55951e083e",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ae92fcef-4715-4c84-b04f-1c2b196b2461"
        },
        "item": {
          "id": "11c68471-601c-4be2-8488-d7696f7c8e76",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6b446742-92a2-4911-9bab-81f68a982119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea83f52-e798-42c4-bb0a-76e412473f75",
        "cursor": {
          "ref": "113c141f-6465-479b-b684-195cfb333868",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "04bf3322-59ec-42ab-9af3-3b38c52f8d16"
        },
        "item": {
          "id": "9ea83f52-e798-42c4-bb0a-76e412473f75",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "535ab6aa-c8f7-47ce-b037-9db0d0cb884a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17afcee-6fa5-4af9-99a8-12db789cdef2",
        "cursor": {
          "ref": "56857d1c-f21f-4fec-81d8-c8d77e9c182b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9e12c710-3ba3-4a63-84f1-f54c056c047d"
        },
        "item": {
          "id": "d17afcee-6fa5-4af9-99a8-12db789cdef2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a1ffdb8a-8d6b-482d-ba75-22960bd8361e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35433800-e4e9-4b11-a58d-304c042790e7",
        "cursor": {
          "ref": "defea1d4-ac16-4a28-a4b1-cae3bc48f892",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9b9a7cfc-7421-4769-90bc-c4f349fe138c"
        },
        "item": {
          "id": "35433800-e4e9-4b11-a58d-304c042790e7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "747228e3-9505-4fca-88d8-447ae116a0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43df71c8-1fa8-4f0e-90a3-8f76884d4735",
        "cursor": {
          "ref": "2b4b2c05-25af-403c-9a2b-6260aa90591a",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9a005d58-3c79-4b9f-8f22-f7127d12c14f"
        },
        "item": {
          "id": "43df71c8-1fa8-4f0e-90a3-8f76884d4735",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fae94ec5-9de0-44e6-bdec-f2811dd91e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d53e45-edb5-4ecc-935c-0ca2d6844442",
        "cursor": {
          "ref": "05b837ee-296b-49bb-8a92-6ab0e9805a2e",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6620bdca-9e76-4ed7-8c4a-275b2b4bb1c7"
        },
        "item": {
          "id": "e6d53e45-edb5-4ecc-935c-0ca2d6844442",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0494ce2f-6a12-4537-83f9-f1eeaf90d703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e706a79-1514-4653-9a81-03b161a8a4a4",
        "cursor": {
          "ref": "4f08395f-1492-47e6-9aab-25905eec73e8",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3b571fe4-7f5c-4f4a-b226-4a81d508ccd2"
        },
        "item": {
          "id": "3e706a79-1514-4653-9a81-03b161a8a4a4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1bae6f61-9d94-4a14-8876-beb82bec9439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab09fe4b-81d3-4cf6-a228-3ee5a827c26e",
        "cursor": {
          "ref": "1f1b69d4-c1ff-4eff-9eb4-ca0c802e2f7b",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ca0633b2-01e1-404c-b82d-416963b5b6ba"
        },
        "item": {
          "id": "ab09fe4b-81d3-4cf6-a228-3ee5a827c26e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c199daea-06bf-4e6f-ad22-f3118ff6e63f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62058efb-242a-4204-a220-42e25c9b5c28",
        "cursor": {
          "ref": "6a64604e-1587-4073-aa7e-ad07d68bb4c7",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b112a41e-b8ff-408f-a8a1-1bf83baddedc"
        },
        "item": {
          "id": "62058efb-242a-4204-a220-42e25c9b5c28",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e77d070d-7c39-4b79-b25d-208c9a88831c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf1337c-f1fe-470d-a9ff-8a6334ae0967",
        "cursor": {
          "ref": "a421e837-4a19-4723-a2a9-bbc47b0b1930",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b1de0fc0-6f5a-4239-aa75-8636e1029680"
        },
        "item": {
          "id": "5cf1337c-f1fe-470d-a9ff-8a6334ae0967",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "640de707-36ea-48db-ba95-7c7cc87b28df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57a83e5-5edf-4329-a549-4e3beeaa3ea7",
        "cursor": {
          "ref": "93917182-63ce-436a-ac75-b990852d709b",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1ac402b5-db6e-4371-b23f-7e81411f79e6"
        },
        "item": {
          "id": "f57a83e5-5edf-4329-a549-4e3beeaa3ea7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4dde9935-e0f9-4d15-a43b-f390badef32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf89c11-7420-4320-a577-0f4c80f35ee8",
        "cursor": {
          "ref": "3f4a059a-e1e1-47c6-9f95-aefd107f32a6",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b6602e0d-0273-431f-b1c7-ab8fc3e51035"
        },
        "item": {
          "id": "4bf89c11-7420-4320-a577-0f4c80f35ee8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4a8b7bf2-d502-4df8-832f-ffc0e667d4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4314336-0642-4e5b-af0d-4bd1bde1280a",
        "cursor": {
          "ref": "6dfd4096-169b-41e1-ae51-6560155d491d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "77566beb-b389-4b84-8490-fbfd767432ea"
        },
        "item": {
          "id": "a4314336-0642-4e5b-af0d-4bd1bde1280a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ecbc667b-ea47-4ad7-8fa0-2092ab2721fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224be0e7-bfd9-423a-840b-3560b3dcfc2b",
        "cursor": {
          "ref": "6e4025b8-e1f6-41db-99a1-25dd49f228ac",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c49d495f-be52-4715-88cf-0081c51af048"
        },
        "item": {
          "id": "224be0e7-bfd9-423a-840b-3560b3dcfc2b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e5e8a496-03c3-4647-ad44-85fa0f5c7d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801d54e1-20f6-44fa-8cf1-f1325191da36",
        "cursor": {
          "ref": "e4e068fd-f333-4721-9d5c-3b4235845072",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cf1b53fe-7538-443f-8e38-7b59b851b0ea"
        },
        "item": {
          "id": "801d54e1-20f6-44fa-8cf1-f1325191da36",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "82c44f5a-8087-4896-b5dc-c1d21be9aadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f75254-980f-446b-b740-edb4f0f9a21c",
        "cursor": {
          "ref": "011faf34-87ae-411d-8847-567339d860e5",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cb769b20-e180-4554-927b-63db0e62e703"
        },
        "item": {
          "id": "e0f75254-980f-446b-b740-edb4f0f9a21c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bb688361-1122-4c27-90d1-40e590e7c5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411783e7-a1b2-4d96-8438-94697930a37e",
        "cursor": {
          "ref": "9140c9de-cbec-4b0c-871d-5cc012d2d4cd",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2802eec7-cbc3-4219-8875-9ae48333dd15"
        },
        "item": {
          "id": "411783e7-a1b2-4d96-8438-94697930a37e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bcfef1f9-d484-4c5d-8d66-937780eedb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5f606c-db19-406d-8631-a5975830f01f",
        "cursor": {
          "ref": "5fe1ba52-2c90-490d-9dee-988e3c362019",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ce35e3ed-3e72-4c47-b09f-59b0082c0f91"
        },
        "item": {
          "id": "ae5f606c-db19-406d-8631-a5975830f01f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "005c6c18-70d7-4d5c-aeeb-d1a7b65a5093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d18471a-1441-41ac-8e16-abdd74f07570",
        "cursor": {
          "ref": "2a26c7e2-39b9-4ab3-96b8-587eba01b564",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c5bf2663-53ab-4300-b5ba-859963495ccb"
        },
        "item": {
          "id": "1d18471a-1441-41ac-8e16-abdd74f07570",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f4aa7f92-cebc-4c6c-9261-7fab42e40937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ef70d7-1723-44f3-a81c-0fe80e48bccf",
        "cursor": {
          "ref": "e2b5dcb7-e65c-4e22-a7fe-f09a20a4ebd7",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "366afda9-e0a3-4d5e-aa13-545af2a0dd80"
        },
        "item": {
          "id": "84ef70d7-1723-44f3-a81c-0fe80e48bccf",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "de061d9d-9cd9-48d9-9934-78e5f27b7847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f1eeb1-4b7c-4449-9f3f-cbaeeb3e0f16",
        "cursor": {
          "ref": "16468ebf-0920-4c68-9451-56226738e578",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8da0c64b-38b9-4309-80b0-884fad451453"
        },
        "item": {
          "id": "31f1eeb1-4b7c-4449-9f3f-cbaeeb3e0f16",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "27be4b45-e195-41a9-a83e-0f5a9d9c8504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba30288f-6ebb-49e5-bef8-d034576983e1",
        "cursor": {
          "ref": "af4d033c-cfe9-4f96-9321-53b6ebc3a726",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6ba1bfad-6b08-41b6-b0ac-27bfe5c8a655"
        },
        "item": {
          "id": "ba30288f-6ebb-49e5-bef8-d034576983e1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f5a7a1a7-536e-4ce7-91e7-a0f812ddfcfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b5a9e5-2177-4fa3-a607-d98bc5869c61",
        "cursor": {
          "ref": "984267ed-ee35-4222-97c5-fd37715ba118",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "13ad1f2e-d8e7-4ff0-baa4-f3937d4774c1"
        },
        "item": {
          "id": "c1b5a9e5-2177-4fa3-a607-d98bc5869c61",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9266a068-6d1b-4b2c-b597-3e81013accbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d43d42b-e313-45f2-ab1d-1a421d70949f",
        "cursor": {
          "ref": "4df56c19-b568-449c-a198-fc4c4c25c24d",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2007d5ef-aa40-4637-93bf-3e270db21a1d"
        },
        "item": {
          "id": "4d43d42b-e313-45f2-ab1d-1a421d70949f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bdb6e306-148e-4087-a095-0cfb8e855b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef029f5e-011d-45fd-96c1-559e10a49702",
        "cursor": {
          "ref": "1be689f6-be1a-4f29-8786-5c2b2c21142a",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8a46df68-d29b-4e92-b550-b693b7287d07"
        },
        "item": {
          "id": "ef029f5e-011d-45fd-96c1-559e10a49702",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8807dfb6-6e3a-486d-b8f0-f7af6f4030b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f7a76d-4a5d-4df3-a1f8-d42a45cfc1fa",
        "cursor": {
          "ref": "d49e906e-bd3a-46f1-aa57-3b59b3c1bc2a",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a59aef6a-12f1-413d-9661-768ae5d564bf"
        },
        "item": {
          "id": "85f7a76d-4a5d-4df3-a1f8-d42a45cfc1fa",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0902412d-702b-41ae-acfe-ced3e863357a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f760143-0fe7-4dd3-87ae-e19bdc66220f",
        "cursor": {
          "ref": "38d14ca8-6219-4e69-9d5a-8951d51b24d3",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9c5aef55-73b5-4202-b5db-583d1562db84"
        },
        "item": {
          "id": "6f760143-0fe7-4dd3-87ae-e19bdc66220f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "44e12c17-9ab0-45ed-b60c-c1a9fcffc754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31510f21-8b2e-4e48-9933-dd85f78cffc2",
        "cursor": {
          "ref": "f394ae2c-ce59-4b81-8547-720a27c8c807",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "114f0456-b8c5-4afa-9158-492d364f9d0e"
        },
        "item": {
          "id": "31510f21-8b2e-4e48-9933-dd85f78cffc2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "81ec51f0-91a9-4edd-a8f7-e892c844b731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56bd5c4-8909-4ac7-b417-e479ec9dd66f",
        "cursor": {
          "ref": "5a73d949-80d1-49f1-bc2a-f180fb625055",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "825890fe-d360-4ae4-8d72-34e19bd68c6e"
        },
        "item": {
          "id": "b56bd5c4-8909-4ac7-b417-e479ec9dd66f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0d2c1fc5-0ae4-4587-b190-ad14e0a41e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6810487a-95fb-4d3e-9a64-780fb24039df",
        "cursor": {
          "ref": "cbdbc033-855f-41e9-a796-9b872dedb61e",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "38155525-1bb1-4d82-a4aa-beea4dea01c5"
        },
        "item": {
          "id": "6810487a-95fb-4d3e-9a64-780fb24039df",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bd5b1bae-1a7b-4f30-a991-eea9bdef1dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5380d527-84b0-48d2-a77e-deb073aed3d1",
        "cursor": {
          "ref": "48da50c2-2904-41d7-9fc5-06fe8b946863",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "aaf9d0f0-5833-4345-98f7-23fa6d7f4821"
        },
        "item": {
          "id": "5380d527-84b0-48d2-a77e-deb073aed3d1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cb4e5365-fac5-4b61-88a6-8c7447db7bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f6c5e8-4b04-4cb1-b06b-f5f96bf08ca1",
        "cursor": {
          "ref": "7aa5c372-4211-4ed4-8984-26d1d9bc4d8d",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "633031fc-58ca-4814-8683-cfd595434a78"
        },
        "item": {
          "id": "f2f6c5e8-4b04-4cb1-b06b-f5f96bf08ca1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e9581ccd-7b84-4759-94f2-be83cdacf9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7e2d56-8cc3-4d96-b429-3b37926bac60",
        "cursor": {
          "ref": "6fab2d58-8fc3-487b-910f-b60026eb4469",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bcac50f6-d7f5-4d68-ba25-ca1382357644"
        },
        "item": {
          "id": "ee7e2d56-8cc3-4d96-b429-3b37926bac60",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d8b759ee-b575-4889-b942-18b6764cb2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5749dfe7-1cc4-4206-af5b-541730bfc0b5",
        "cursor": {
          "ref": "acc0143d-8eb5-4238-a57b-0b220c1a45e2",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b0e1aa17-4a0a-4f04-a7d7-9b9dcfa3cbf1"
        },
        "item": {
          "id": "5749dfe7-1cc4-4206-af5b-541730bfc0b5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "742a9e9f-6595-4c60-9aac-1d1c3a7e330d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f8523d-35ea-4a1d-bbc4-cb9dc1a7f5d6",
        "cursor": {
          "ref": "e1bac58d-cc14-40f9-abc1-48ede743da14",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b7d864e5-7af8-4f62-9446-d66d78f27d21"
        },
        "item": {
          "id": "e9f8523d-35ea-4a1d-bbc4-cb9dc1a7f5d6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b21fad87-24bd-4380-9aa4-a5c911bc4ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27d196e-43e8-425d-af5d-8a89f6719a2e",
        "cursor": {
          "ref": "483f6206-b5e3-4273-a772-8cf11250da89",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "35254cb4-4141-4fc7-a4de-94b706439888"
        },
        "item": {
          "id": "a27d196e-43e8-425d-af5d-8a89f6719a2e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e6353447-938f-4564-b78c-b66be217547c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3d9d51-01a1-4285-9ca7-067947b4cdfb",
        "cursor": {
          "ref": "bf0bcbe9-db75-4392-a388-de632bc6eb5e",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a463fd6b-1e20-41be-832d-86c3183b01b8"
        },
        "item": {
          "id": "2d3d9d51-01a1-4285-9ca7-067947b4cdfb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b9ae2a51-c02a-4212-b073-4dcb7b60452a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8245484-df3f-4d35-8d46-291d5f5724e5",
        "cursor": {
          "ref": "ba04bd3b-42c5-462d-9380-fcb14be5bfe9",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "54afa2df-f4c6-4c79-9821-163582e85cce"
        },
        "item": {
          "id": "f8245484-df3f-4d35-8d46-291d5f5724e5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f32cd3fb-3e56-4cf8-b467-d4cc65ab005f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067ff871-6b36-4ffd-b159-5367e644903f",
        "cursor": {
          "ref": "e3a28185-79e0-4b71-b578-66ef32018dca",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a4ae02cb-37bc-44bc-8eac-74e8e5887acd"
        },
        "item": {
          "id": "067ff871-6b36-4ffd-b159-5367e644903f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d70cfa9e-6d02-430f-a37d-a9bb8ef0c7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3357e10e-4f7d-4573-bcba-080a4658aab2",
        "cursor": {
          "ref": "bb408892-91ef-4e8e-a275-1b610c12344b",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fa22bf7c-f23e-406a-b823-b0920f8d341d"
        },
        "item": {
          "id": "3357e10e-4f7d-4573-bcba-080a4658aab2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5254f36d-331f-4d35-904d-5c379ded79fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14afe80-8784-48ad-91fb-e7a16a2fbdbe",
        "cursor": {
          "ref": "7b8d9857-8ed5-4906-a0a2-e023f55b9b6e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a66ec939-9c4f-42e9-b9be-1a6af862d475"
        },
        "item": {
          "id": "e14afe80-8784-48ad-91fb-e7a16a2fbdbe",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a8fdcb16-b5af-4542-8b7d-61c85792b238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9337faee-e1c9-4b72-b7ed-edf2347de41d",
        "cursor": {
          "ref": "2a4a785e-ac06-499b-8b4e-f8a11c7d5ec3",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c0dcb2e0-dd3a-4904-b166-cb0501ce7cde"
        },
        "item": {
          "id": "9337faee-e1c9-4b72-b7ed-edf2347de41d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cb49af0e-3528-48dc-a331-11ac036cc3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8fa4b6-b6d9-483b-8939-d20d2efb8610",
        "cursor": {
          "ref": "01f31c55-76fd-4a36-8308-cd590563d201",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b49f2638-5630-4683-ad82-28c2ed74b4c8"
        },
        "item": {
          "id": "9d8fa4b6-b6d9-483b-8939-d20d2efb8610",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "831956ec-cdce-425d-ab52-3323d55272e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86111885-e15f-41ea-a9d3-5ff4b5a4668f",
        "cursor": {
          "ref": "1f6270a5-172b-4ae2-be57-939e7660de89",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f9f83bb2-bbfe-4ba8-b0f6-cd893436e665"
        },
        "item": {
          "id": "86111885-e15f-41ea-a9d3-5ff4b5a4668f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5523a923-88aa-4e7d-9855-c6fd048f360a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5171459a-f7bd-47f5-90fa-4ef5164495d5",
        "cursor": {
          "ref": "a3ca045e-0530-43fa-94f3-13973dd8415c",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "dabd4ed2-c9cf-4f66-8cfe-75d61684655a"
        },
        "item": {
          "id": "5171459a-f7bd-47f5-90fa-4ef5164495d5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0de46037-bc23-422a-8c7c-a467d7c73181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98940bf6-a38f-4919-b56d-d3cbe6e70299",
        "cursor": {
          "ref": "7f9431da-c622-48c9-a098-701e9c8346ef",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "75f751ad-f07b-4de7-a8f7-1e9b8d8688bb"
        },
        "item": {
          "id": "98940bf6-a38f-4919-b56d-d3cbe6e70299",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e60d1f5a-8909-4460-ac3b-b5d26961b59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1049af8e-0489-4359-b00d-af608579c958",
        "cursor": {
          "ref": "fe7847ef-3a61-4dcd-add6-5b2435a900fb",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e1529cee-7a24-456c-9c28-932e228ab7a0"
        },
        "item": {
          "id": "1049af8e-0489-4359-b00d-af608579c958",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d3737761-99e5-475f-bdf9-ad6a10f00308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c850c0-4885-43cb-9422-069443eea19a",
        "cursor": {
          "ref": "7212f67d-32b2-43af-85ed-a324f151aef0",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9ec78080-cea9-47a1-a4b0-8b2ac56b7a1b"
        },
        "item": {
          "id": "42c850c0-4885-43cb-9422-069443eea19a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3c72e557-e6f7-4445-a0d3-7ec27bc9a6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c333e6b-35fc-47a2-83bf-3e578a6ff65d",
        "cursor": {
          "ref": "ddad341b-3174-4bea-b8bc-4345c57e8c0e",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1a911310-5465-42ac-8312-5ceec60a55c2"
        },
        "item": {
          "id": "8c333e6b-35fc-47a2-83bf-3e578a6ff65d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "93469a4d-97c0-4c8f-9418-ad1f5db674a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b2fc4f-de57-4baf-91bd-39f4efc02db2",
        "cursor": {
          "ref": "4d67ac87-d518-4862-ab1b-c233ffb838f8",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9bd61be5-4415-4e28-9bc5-78746238d3a9"
        },
        "item": {
          "id": "99b2fc4f-de57-4baf-91bd-39f4efc02db2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ac6005bf-b30b-4e60-82f8-fffeb38c4794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead5114a-767d-4f42-a3d6-10dbb8f24597",
        "cursor": {
          "ref": "bcd3f9ea-da3c-447f-9da6-cca018944d48",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "973c1316-7606-4502-8dc7-80a84d4130f5"
        },
        "item": {
          "id": "ead5114a-767d-4f42-a3d6-10dbb8f24597",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4ea50335-2953-4dd6-85d6-bec5824e0b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d071c89f-cc3f-41ce-a61b-016bef192acb",
        "cursor": {
          "ref": "d0db1eab-badb-42a0-b5fc-aedf41f08489",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8cbd8e9e-8dc7-4d3e-bd06-6e685fa64868"
        },
        "item": {
          "id": "d071c89f-cc3f-41ce-a61b-016bef192acb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "06a7b394-88a0-4893-8c57-6cc6f1ee48e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9e7f2f-af5d-4ea2-be41-1dc111dff5f9",
        "cursor": {
          "ref": "f4d443df-7863-4e6e-9307-81e622193823",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ac099ae6-51e1-4f22-acaf-fc5b7393aaa9"
        },
        "item": {
          "id": "be9e7f2f-af5d-4ea2-be41-1dc111dff5f9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "278e4bbd-3549-47a4-bac6-5811afef38d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b129161c-5682-4220-8d76-74072f8c0ad2",
        "cursor": {
          "ref": "52164ed7-28d3-4086-94cc-49ac1917f2ac",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "caca0f1f-7a08-459b-b260-cdcec12c40c9"
        },
        "item": {
          "id": "b129161c-5682-4220-8d76-74072f8c0ad2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8d84983c-db16-4722-be43-b7560feb2ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9ea6fb-0221-408d-b501-cacdc048edf4",
        "cursor": {
          "ref": "4547b125-1c94-4d6b-96c5-89a8da8b241f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "abfaf6ae-8f27-4196-8c54-4e31e5ad0576"
        },
        "item": {
          "id": "5b9ea6fb-0221-408d-b501-cacdc048edf4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e56e467b-2f90-416e-b7d0-0390340d482f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc95e5cd-d7fc-44f0-86b1-79be7d1b58c2",
        "cursor": {
          "ref": "28388713-9b77-4a59-9909-c671ae17e65a",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4f847193-f993-410e-aeb9-7992db7f925d"
        },
        "item": {
          "id": "dc95e5cd-d7fc-44f0-86b1-79be7d1b58c2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fe2a55de-e57c-4fa9-a3b2-3ec0de32dc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ea86fa-65d7-490c-9992-206ec26475d7",
        "cursor": {
          "ref": "2425b557-78c9-49a8-8674-953fade4bf99",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8891acac-12fe-4d2c-a66b-a8f523145bcf"
        },
        "item": {
          "id": "c9ea86fa-65d7-490c-9992-206ec26475d7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1f926624-4a08-4fa1-a830-d76bf9d97b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b51752-cba5-4cc1-9bc4-d7ce0bbd4880",
        "cursor": {
          "ref": "fd3ee2df-9a00-4286-b137-b3b98c8e45ba",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d5b8cecd-79d5-4e5b-8ec0-95d5b55ddf1e"
        },
        "item": {
          "id": "92b51752-cba5-4cc1-9bc4-d7ce0bbd4880",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4c3129ab-f183-43f8-8fd3-f17864a8cfc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb01228e-fe3d-4a88-8ffc-1f8a43d06b9d",
        "cursor": {
          "ref": "67f5ef11-ad11-4022-b271-0a80abbd215f",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b2467c6a-6bde-42f3-bce8-13a09ea75881"
        },
        "item": {
          "id": "fb01228e-fe3d-4a88-8ffc-1f8a43d06b9d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0c65b89e-ea1b-48e7-b868-39140f8f8d20",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "83a92adb-2971-4aa0-843c-742af2140d23",
        "cursor": {
          "ref": "e27cec34-bd49-4915-bf4b-aab027e66616",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a1371681-60aa-42a0-a67d-53511fa50be6"
        },
        "item": {
          "id": "83a92adb-2971-4aa0-843c-742af2140d23",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d85dd05e-fd0d-42e0-89d5-4d00cc1b0dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874a9f94-ed9d-49a0-a587-57e6e01df575",
        "cursor": {
          "ref": "df6fda1e-2a54-4c80-9a52-b11a6eb2257f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0be85f45-ce85-4452-b7c7-9bfb2b685338"
        },
        "item": {
          "id": "874a9f94-ed9d-49a0-a587-57e6e01df575",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "71561312-f66f-458c-908e-ca7878f265fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407528de-5a55-4aee-84c1-5084d867f596",
        "cursor": {
          "ref": "471db8e3-c5e4-4827-87bc-46fa43c667f9",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5eb3a44f-34a7-4fbd-b1f3-94cc61c9fab3"
        },
        "item": {
          "id": "407528de-5a55-4aee-84c1-5084d867f596",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "784ef536-3837-4b55-ad4b-bc2d6f126959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f29e97-825d-45d6-ba5a-b8db76b60336",
        "cursor": {
          "ref": "62b2503b-9d81-4664-8279-84bd1f6138fa",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "501f1af7-56f9-4f67-9479-eb7070455886"
        },
        "item": {
          "id": "50f29e97-825d-45d6-ba5a-b8db76b60336",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fd13d757-f35f-47ce-bcbf-37f7015f20ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8de9222-cc59-4f15-a19a-c3dad22ff04a",
        "cursor": {
          "ref": "c96b7ac9-8715-4592-90bb-e50e2f728b70",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "574c30d8-efdc-433a-acd0-faa852fe6c4d"
        },
        "item": {
          "id": "d8de9222-cc59-4f15-a19a-c3dad22ff04a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d910db52-4fe9-48c8-b09e-82c07da8938a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3093013f-4252-4aa6-a27e-f616ff9923ee",
        "cursor": {
          "ref": "0b738671-bac9-4fcb-9295-21ed0a9d1d82",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "eb08f1cb-5db4-4cee-abce-e71bdea184b4"
        },
        "item": {
          "id": "3093013f-4252-4aa6-a27e-f616ff9923ee",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6179be40-980c-48fc-9a85-698763e14dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1debeb83-11da-49a3-9779-7ce4d7fbbd7f",
        "cursor": {
          "ref": "1ddb5f76-3deb-4a26-b3b7-abab9f14605e",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1d826279-9540-4d4f-8baf-d608cb74191d"
        },
        "item": {
          "id": "1debeb83-11da-49a3-9779-7ce4d7fbbd7f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e2eaa6d8-4f58-47cf-9c22-107602baf263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7584d419-a386-46e9-b7b5-1039e846ab2a",
        "cursor": {
          "ref": "207425e3-4d72-443a-9c7b-b3ccb3dcb1c8",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3bfc9ce6-b67c-44f1-9a49-aa1685c01c0f"
        },
        "item": {
          "id": "7584d419-a386-46e9-b7b5-1039e846ab2a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "97653543-8632-4fbb-b8cf-28f92b52ac10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0dee82-b8c7-410d-94f1-dd12369ac2d8",
        "cursor": {
          "ref": "0c6bf6c1-43c0-4c46-ad97-33e2726b7aba",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b3ebe606-f9b5-4176-838b-a6d217834ba7"
        },
        "item": {
          "id": "9f0dee82-b8c7-410d-94f1-dd12369ac2d8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "07ff7bbf-efe1-4209-b93f-bd5001aa9864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9b5c37-b822-4953-b9a3-39467e3facf8",
        "cursor": {
          "ref": "0156e3f9-9e55-4e5e-832c-8187f135f1c3",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "73cf454a-6252-46a9-bc8e-66d4217924da"
        },
        "item": {
          "id": "0e9b5c37-b822-4953-b9a3-39467e3facf8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e5054a91-fcb9-4d0b-a817-0f05e3080766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e521da1-4651-4bae-9587-0105a0e7109a",
        "cursor": {
          "ref": "c3e7bf73-f739-4522-82db-3fa47b47bcc2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fdf1075c-2861-457c-a572-212d7efe15cb"
        },
        "item": {
          "id": "2e521da1-4651-4bae-9587-0105a0e7109a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5e716817-35b8-4017-a3d6-c3efe1f13736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6756effc-5482-449f-afd3-2a90f99bb3f3",
        "cursor": {
          "ref": "bc4a7d02-7ef9-4a10-bc47-e6fb3afb53ae",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8e62e0a0-0b5b-4c80-b98f-db755cc2c17b"
        },
        "item": {
          "id": "6756effc-5482-449f-afd3-2a90f99bb3f3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8ee76fc3-0fcd-435a-807e-eb17de724932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c508d6d0-77db-4f36-afb0-922813935373",
        "cursor": {
          "ref": "6f7c4719-5eda-44a6-9dbb-b9c62c65fc0a",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "69cc23e7-90f9-42a3-908e-f56b270b05f7"
        },
        "item": {
          "id": "c508d6d0-77db-4f36-afb0-922813935373",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d1ee5512-2cb5-4552-9dad-690aac06a7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1510dc-554a-4712-bf0c-ced02fa0855a",
        "cursor": {
          "ref": "26acfc0f-57ce-43dd-ae00-52c11a44f049",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "24674d27-6d14-410c-8871-a6a859f4faa9"
        },
        "item": {
          "id": "7a1510dc-554a-4712-bf0c-ced02fa0855a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a94903f3-30e5-4a53-ab18-8a8b9bf2ee14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e448b5-5840-4846-86ed-4fe0cee08f75",
        "cursor": {
          "ref": "b27707ef-6832-4765-b753-5aad3bcf6fde",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7a3eff43-91f4-4a45-b894-286e74cfda8d"
        },
        "item": {
          "id": "94e448b5-5840-4846-86ed-4fe0cee08f75",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6f83dd38-46ba-4b8d-b481-353f096afef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc70719-c54f-468d-87b2-b5dc5149aa07",
        "cursor": {
          "ref": "4709b082-c05b-49a9-87a2-1d06cdc0898d",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9215f626-fe77-435b-bc2c-b2f66e4d1220"
        },
        "item": {
          "id": "ebc70719-c54f-468d-87b2-b5dc5149aa07",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "dee900bf-9a91-40a1-a344-9846a301513b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a23086-81e5-45c3-a5f4-ff127ecf1f92",
        "cursor": {
          "ref": "26c19ff2-fc04-4b73-9738-35eb66d8e10f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4e3de1df-bdb1-4c41-9af6-fe4a4169e9a8"
        },
        "item": {
          "id": "73a23086-81e5-45c3-a5f4-ff127ecf1f92",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d82e8f29-4e35-4bee-99fa-ba6b6deeb20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036c8a5a-634b-4ae6-8fe3-6a388395362d",
        "cursor": {
          "ref": "344e6eb5-4de7-4b8b-871d-f09942d0827f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "802635f3-d269-4dbb-a471-e60837265b5d"
        },
        "item": {
          "id": "036c8a5a-634b-4ae6-8fe3-6a388395362d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1eeac282-d5fb-45b8-8ce3-8ae5c4b1b863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed62adeb-0774-4d8a-a83a-1d072a27768c",
        "cursor": {
          "ref": "2bb74afa-6ffd-494f-928e-0888804bada8",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ed702a0d-1b7a-43df-ac3e-7157ccfe45f3"
        },
        "item": {
          "id": "ed62adeb-0774-4d8a-a83a-1d072a27768c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b6fa9bde-baa2-461f-aee8-b4018a59445d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20764bb-12f8-4f64-8d5a-416ac51e9637",
        "cursor": {
          "ref": "2c7110e1-1c62-4bce-86d4-3ea52245a98b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "deb290ee-4cb1-4989-8513-2ffbbadbb19c"
        },
        "item": {
          "id": "a20764bb-12f8-4f64-8d5a-416ac51e9637",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "afbbd7ce-7586-4136-9223-369d7e5d49b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366b7ecd-8d8b-4898-8133-b0607ec3761f",
        "cursor": {
          "ref": "5eb2bfe8-7647-4657-b574-dce3d47e889f",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "66d7f433-18f2-433b-a402-2b98126bd49c"
        },
        "item": {
          "id": "366b7ecd-8d8b-4898-8133-b0607ec3761f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "372147a9-6065-45b4-825f-cd59f78c3ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7f9b2a-c3db-42d3-b993-2a443e5cc18c",
        "cursor": {
          "ref": "a6d4e8f8-92da-4f93-a22c-9112ee27af20",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8b5b69c3-c9e7-411d-b155-31e4ddb9db28"
        },
        "item": {
          "id": "1e7f9b2a-c3db-42d3-b993-2a443e5cc18c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "594a44bb-f67f-4a9f-b5d8-e8c7640e36f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8419d82-3444-48f0-a66d-7c00a02c9823",
        "cursor": {
          "ref": "937679e7-9d8c-452e-8a21-28784aab1600",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6817cfba-0655-4816-ad2b-83bfaa670ad4"
        },
        "item": {
          "id": "f8419d82-3444-48f0-a66d-7c00a02c9823",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0aaf812a-875b-4885-acb4-43935ee133cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec013509-505c-41e8-9f9a-115f6ee6bea3",
        "cursor": {
          "ref": "e78dbbaa-44a1-45e8-bcc2-42339e2c1130",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "aae99378-9d4c-443d-8630-114e8fa72e9f"
        },
        "item": {
          "id": "ec013509-505c-41e8-9f9a-115f6ee6bea3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cd35e2a0-7b0a-468e-bf03-c97e508e1dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a4c601-bced-497a-9003-39cd48c54e97",
        "cursor": {
          "ref": "8d039880-154c-4a88-b550-e232736eae30",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bcbf3ab4-7eef-4fb3-8391-1e0f7d11a414"
        },
        "item": {
          "id": "f8a4c601-bced-497a-9003-39cd48c54e97",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a876be5f-750b-44dd-852f-626d56add8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23df7f90-56e2-4d2e-be17-801ab7f35dc6",
        "cursor": {
          "ref": "71d9e005-c223-4652-bda7-db8cb61cc4e2",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "74df401c-829b-49d7-879a-7ad55eb79791"
        },
        "item": {
          "id": "23df7f90-56e2-4d2e-be17-801ab7f35dc6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f8052b85-d8a0-4c50-b24b-70b5aa0c3d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78bdf1a-612b-49ed-a7b7-f5858802fa0d",
        "cursor": {
          "ref": "f0b4650c-ec1b-4333-b984-34b809b60f58",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f3a4692d-5c69-4113-b3da-4eef73c335b5"
        },
        "item": {
          "id": "b78bdf1a-612b-49ed-a7b7-f5858802fa0d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "778adae5-076c-4856-88fc-94b179aaa2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70486cb-089d-462f-a0a8-2f44dce9f544",
        "cursor": {
          "ref": "3dcf81d7-ca40-4332-8794-dfeba0386a93",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "54b56368-36f4-485a-b7d9-f6bb164f4ae6"
        },
        "item": {
          "id": "e70486cb-089d-462f-a0a8-2f44dce9f544",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "db43927d-2af4-4411-9f25-7d21bbcb269a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860181f3-41d1-4a23-9df2-32a0524c8235",
        "cursor": {
          "ref": "d421ba41-53d6-48df-8261-b247119b3f8f",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6371050a-5414-4d43-aadc-8f9f625d6161"
        },
        "item": {
          "id": "860181f3-41d1-4a23-9df2-32a0524c8235",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "40c87663-e3ff-46a1-8031-10a14532b2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f17bc1-f422-4224-a993-9bb8962322cf",
        "cursor": {
          "ref": "6822c3e2-40e5-4dd6-b58d-66a30eacc358",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9380002c-45b5-43ce-a813-e47ddfe79c0b"
        },
        "item": {
          "id": "d7f17bc1-f422-4224-a993-9bb8962322cf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "26fd7350-f881-4abe-a228-bc9826d47d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f554a0-a149-421c-95cc-de9601c1fd3e",
        "cursor": {
          "ref": "37e3979e-e071-4558-b20d-5489c91ef573",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9b4657a6-5fa7-4a90-83a9-a9390272b1d1"
        },
        "item": {
          "id": "f6f554a0-a149-421c-95cc-de9601c1fd3e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "220163e9-9d0d-4e1c-a21d-e91db592cdb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87821373-ed53-4a84-8a2c-19db07a7781e",
        "cursor": {
          "ref": "730e8993-864b-49cd-9158-2ff22e602355",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4ddb04fc-295f-41a8-b42a-09bc1eb4cc41"
        },
        "item": {
          "id": "87821373-ed53-4a84-8a2c-19db07a7781e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0e59b39f-ce37-4005-8334-2743c2c5f185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2dae320-a510-48f0-ab9f-400c52cc222e",
        "cursor": {
          "ref": "46d78911-1a40-49d2-8f82-aed6f14e6364",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "43f6ee3a-7afa-4159-87f7-617390c0e9a7"
        },
        "item": {
          "id": "a2dae320-a510-48f0-ab9f-400c52cc222e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "384db142-2480-43f0-9fbd-534ecc4fec7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d98da09-28b5-48fc-b5a7-40b8d8674287",
        "cursor": {
          "ref": "11d37db2-81be-4a25-ac38-2fa02c333d7b",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f903f48e-78df-4a5d-ac9b-997afd8d4391"
        },
        "item": {
          "id": "2d98da09-28b5-48fc-b5a7-40b8d8674287",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6893f8e9-18f6-4d86-a1dc-17e25edc244d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f7dfb2-c3b7-42b3-8ac1-549bfe9fa12a",
        "cursor": {
          "ref": "2bccca3b-5338-42d6-8a3c-7198196669b6",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e8cd3ba2-a91f-404b-b821-190a338d96db"
        },
        "item": {
          "id": "68f7dfb2-c3b7-42b3-8ac1-549bfe9fa12a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ebedf90b-a17c-4e15-80c8-a4c895ebba32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8650b2d-b413-4a56-b57f-c2988459f556",
        "cursor": {
          "ref": "91c087b6-a4d2-4c55-9b75-13de772184d2",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6d2e8326-2742-4067-b54e-afed48cc563d"
        },
        "item": {
          "id": "d8650b2d-b413-4a56-b57f-c2988459f556",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5e4394fd-eaec-4df7-8b11-cce75857c183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b7415e-6dc9-428a-bca8-f606236d513d",
        "cursor": {
          "ref": "fb5dabc9-d934-4018-9394-cb0c9219122b",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "18d07ac5-ec0a-4e14-9475-ec5274a71464"
        },
        "item": {
          "id": "17b7415e-6dc9-428a-bca8-f606236d513d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "eb76e1a9-d2ca-4961-9b5c-ea4df01d31e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82182b24-3afb-48d8-b847-4a726a91d85a",
        "cursor": {
          "ref": "1e403733-0640-4ee2-a370-83145651ecbb",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fbaef7d0-285c-4ce7-b4f8-b888ddffd780"
        },
        "item": {
          "id": "82182b24-3afb-48d8-b847-4a726a91d85a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9b5f5d5c-ed8b-4e11-8547-24dbbb0f6593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20f0be0-0123-48f7-ae62-228819781faf",
        "cursor": {
          "ref": "0a76b5c8-9d61-4085-99f0-9f2e92dff869",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4bfe438f-524b-466f-8266-27d5ebfe080f"
        },
        "item": {
          "id": "b20f0be0-0123-48f7-ae62-228819781faf",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1b0b1119-dd58-49c7-bedc-995c3e30cfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a9c824-3808-493b-b8c2-0c3020978300",
        "cursor": {
          "ref": "392172a2-5179-4666-a845-c051cf45b56e",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b24046a6-5f5f-469d-af78-39993d293a97"
        },
        "item": {
          "id": "f0a9c824-3808-493b-b8c2-0c3020978300",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3d26f8a2-71aa-41e7-916a-e4df87127b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c976b7-4936-48c7-9918-fffcf5977155",
        "cursor": {
          "ref": "fcd5752c-8e56-4dbc-a570-63cdda382d05",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c20c02db-824a-40e9-b59d-daf3b11a94ed"
        },
        "item": {
          "id": "73c976b7-4936-48c7-9918-fffcf5977155",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fead6eea-d92f-4da3-b6ce-5e06c2c2f6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1079085-6380-48d9-bc4d-831884f549d4",
        "cursor": {
          "ref": "22382a18-947c-47a8-9547-46115124e28e",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "08cf74fb-d971-4a6c-a837-ea1d4b1816d4"
        },
        "item": {
          "id": "c1079085-6380-48d9-bc4d-831884f549d4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9ed373c4-a0f1-49a2-8649-957ae709d709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eeacf16-0986-4480-a150-bf67c31718cd",
        "cursor": {
          "ref": "f3dd3023-092d-482b-af83-231765e84586",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c766c94e-76e5-47f8-b60a-7420b6d793c4"
        },
        "item": {
          "id": "3eeacf16-0986-4480-a150-bf67c31718cd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f3aa1aa8-88a9-4a95-bea7-d1b6c89e5801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc12c261-16d0-4c80-83ee-1ad154477501",
        "cursor": {
          "ref": "9df3e774-b42e-41e6-a2e7-471d0b46a6a2",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "55ecf9bd-db11-4d6a-a17e-973a22e4b163"
        },
        "item": {
          "id": "fc12c261-16d0-4c80-83ee-1ad154477501",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3233cc81-a483-48d9-9e4d-bbec43191c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aab4092-6fd3-4eb2-9fbc-76da94972b9a",
        "cursor": {
          "ref": "c14da4fb-0521-4cc1-9e24-22999a711535",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d6845fcf-0421-48ac-a9d8-30c2902c8f7e"
        },
        "item": {
          "id": "0aab4092-6fd3-4eb2-9fbc-76da94972b9a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "58e66ea7-632d-4459-a0c7-919aad357f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d9aed0-1edc-4998-bb9c-d593b4115d9d",
        "cursor": {
          "ref": "e097290f-a71c-4391-8e82-96ba74ddefed",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3b90e122-e41d-4985-ac2f-c901fc28eeeb"
        },
        "item": {
          "id": "d0d9aed0-1edc-4998-bb9c-d593b4115d9d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4803ef0d-c1e5-4b0f-b039-b6cf023d1596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f401dc24-5f7f-4cf3-8a40-63735d3021e5",
        "cursor": {
          "ref": "4c4d7853-e0e2-4f68-9c1e-e8aded2daba1",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1b0ad88a-5f83-4321-a7fd-8f1a742ce796"
        },
        "item": {
          "id": "f401dc24-5f7f-4cf3-8a40-63735d3021e5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ff5961e6-43c5-4d29-8af9-ffeace59d527",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b73f1d-700f-4f29-a079-78eb5f65b903",
        "cursor": {
          "ref": "a1980e23-e707-453e-9dd8-132acbf14ffd",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c37e8ca1-bec4-4286-8375-08ac65d28a7b"
        },
        "item": {
          "id": "17b73f1d-700f-4f29-a079-78eb5f65b903",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9910af1e-c819-42d0-98b7-a6feddcd2375",
          "status": "OK",
          "code": 200,
          "responseTime": 4,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd641b0b-0c3e-4a77-b4ea-e3e0f30dcb2c",
        "cursor": {
          "ref": "971822c7-ada5-480c-ba99-06e6feabedf4",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3eb8bd4c-3020-4ee8-aed7-c7dccb77fe86"
        },
        "item": {
          "id": "cd641b0b-0c3e-4a77-b4ea-e3e0f30dcb2c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ed678229-68b3-4a56-8c74-3e809e28c730",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3152543c-c212-4f74-9b2a-61669d678d20",
        "cursor": {
          "ref": "c6b060b3-ee07-4387-b0d9-e0607cac8d62",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f96afeb6-9332-4762-a9e5-4d263f93cdc9"
        },
        "item": {
          "id": "3152543c-c212-4f74-9b2a-61669d678d20",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0f41c725-b095-47a5-9057-2d7d1284ba2b",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ffdeb8-0f06-44fd-92e4-1c21225df3ac",
        "cursor": {
          "ref": "d0366031-c152-4f11-b517-7f90d5d2ece9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b8ccc30d-2c2e-4409-9dd5-b59531d71bcb"
        },
        "item": {
          "id": "96ffdeb8-0f06-44fd-92e4-1c21225df3ac",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9194427c-716f-4636-b7cd-a6ca749db2d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ffdeb8-0f06-44fd-92e4-1c21225df3ac",
        "cursor": {
          "ref": "d0366031-c152-4f11-b517-7f90d5d2ece9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b8ccc30d-2c2e-4409-9dd5-b59531d71bcb"
        },
        "item": {
          "id": "96ffdeb8-0f06-44fd-92e4-1c21225df3ac",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9194427c-716f-4636-b7cd-a6ca749db2d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a899838b-eab0-45de-a6b0-9f1b250f9384",
        "cursor": {
          "ref": "a0bd25bf-6973-4e1d-9894-2f3651cbf0fa",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5f2b9dbd-7203-40fa-b8b2-98acf0ae1c72"
        },
        "item": {
          "id": "a899838b-eab0-45de-a6b0-9f1b250f9384",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c58eaf28-3384-4f27-90d1-1ffca1eebe3e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78065a8c-e6f0-4457-ab79-de42832f963b",
        "cursor": {
          "ref": "eb868849-2289-4899-9290-ed465953f570",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "28fdeb58-b286-41a4-9bac-23fe2f0eeed8"
        },
        "item": {
          "id": "78065a8c-e6f0-4457-ab79-de42832f963b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1042f1db-abc7-43f9-8beb-ce51eda614d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}